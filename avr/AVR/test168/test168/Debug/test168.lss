
test168.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000052  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .debug_aranges 00000020  00000000  00000000  000000a6  2**0
                  CONTENTS, READONLY, DEBUGGING
  2 .debug_pubnames 0000001b  00000000  00000000  000000c6  2**0
                  CONTENTS, READONLY, DEBUGGING
  3 .debug_info   0000007a  00000000  00000000  000000e1  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_abbrev 00000043  00000000  00000000  0000015b  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_line   00000062  00000000  00000000  0000019e  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_frame  00000020  00000000  00000000  00000200  2**2
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_str    00000091  00000000  00000000  00000220  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_ranges 00000018  00000000  00000000  000002b1  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 1a 00 	jmp	0x34	; 0x34 <__ctors_end>
   4:	0c 94 24 00 	jmp	0x48	; 0x48 <__bad_interrupt>
   8:	0c 94 24 00 	jmp	0x48	; 0x48 <__bad_interrupt>
   c:	0c 94 24 00 	jmp	0x48	; 0x48 <__bad_interrupt>
  10:	0c 94 24 00 	jmp	0x48	; 0x48 <__bad_interrupt>
  14:	0c 94 24 00 	jmp	0x48	; 0x48 <__bad_interrupt>
  18:	0c 94 24 00 	jmp	0x48	; 0x48 <__bad_interrupt>
  1c:	0c 94 24 00 	jmp	0x48	; 0x48 <__bad_interrupt>
  20:	0c 94 24 00 	jmp	0x48	; 0x48 <__bad_interrupt>
  24:	0c 94 24 00 	jmp	0x48	; 0x48 <__bad_interrupt>
  28:	0c 94 24 00 	jmp	0x48	; 0x48 <__bad_interrupt>
  2c:	0c 94 24 00 	jmp	0x48	; 0x48 <__bad_interrupt>
  30:	0c 94 24 00 	jmp	0x48	; 0x48 <__bad_interrupt>

00000034 <__ctors_end>:
  34:	11 24       	eor	r1, r1
  36:	1f be       	out	0x3f, r1	; 63
  38:	cf ef       	ldi	r28, 0xFF	; 255
  3a:	d4 e0       	ldi	r29, 0x04	; 4
  3c:	de bf       	out	0x3e, r29	; 62
  3e:	cd bf       	out	0x3d, r28	; 61
  40:	0e 94 26 00 	call	0x4c	; 0x4c <main>
  44:	0c 94 27 00 	jmp	0x4e	; 0x4e <_exit>

00000048 <__bad_interrupt>:
  48:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000004c <main>:


#include <avr/io.h>

int main(void)
{
  4c:	ff cf       	rjmp	.-2      	; 0x4c <main>

0000004e <_exit>:
  4e:	f8 94       	cli

00000050 <__stop_program>:
  50:	ff cf       	rjmp	.-2      	; 0x50 <__stop_program>
