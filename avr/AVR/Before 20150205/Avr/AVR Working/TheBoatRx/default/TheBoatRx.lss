
TheBoatRx.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         000000a4  00800100  00003b48  00003bdc  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00003b48  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          000002dc  008001a4  008001a4  00003c80  2**0
                  ALLOC
  3 .debug_aranges 000002a0  00000000  00000000  00003c80  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_pubnames 00000f43  00000000  00000000  00003f20  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   0000bf2f  00000000  00000000  00004e63  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000027b2  00000000  00000000  00010d92  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00004489  00000000  00000000  00013544  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000990  00000000  00000000  000179d0  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00001e3f  00000000  00000000  00018360  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000057e3  00000000  00000000  0001a19f  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 000001a0  00000000  00000000  0001f982  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 2c 01 	jmp	0x258	; 0x258 <__ctors_end>
       4:	0c 94 49 01 	jmp	0x292	; 0x292 <__bad_interrupt>
       8:	0c 94 49 01 	jmp	0x292	; 0x292 <__bad_interrupt>
       c:	0c 94 49 01 	jmp	0x292	; 0x292 <__bad_interrupt>
      10:	0c 94 49 01 	jmp	0x292	; 0x292 <__bad_interrupt>
      14:	0c 94 49 01 	jmp	0x292	; 0x292 <__bad_interrupt>
      18:	0c 94 49 01 	jmp	0x292	; 0x292 <__bad_interrupt>
      1c:	0c 94 2e 03 	jmp	0x65c	; 0x65c <__vector_7>
      20:	0c 94 08 03 	jmp	0x610	; 0x610 <__vector_8>
      24:	0c 94 ec 03 	jmp	0x7d8	; 0x7d8 <__vector_9>
      28:	0c 94 5e 04 	jmp	0x8bc	; 0x8bc <__vector_10>
      2c:	0c 94 7a 03 	jmp	0x6f4	; 0x6f4 <__vector_11>
      30:	0c 94 54 03 	jmp	0x6a8	; 0x6a8 <__vector_12>
      34:	0c 94 12 04 	jmp	0x824	; 0x824 <__vector_13>
      38:	0c 94 c6 03 	jmp	0x78c	; 0x78c <__vector_14>
      3c:	0c 94 a0 03 	jmp	0x740	; 0x740 <__vector_15>
      40:	0c 94 38 04 	jmp	0x870	; 0x870 <__vector_16>
      44:	0c 94 49 01 	jmp	0x292	; 0x292 <__bad_interrupt>
      48:	0c 94 b1 02 	jmp	0x562	; 0x562 <__vector_18>
      4c:	0c 94 49 01 	jmp	0x292	; 0x292 <__bad_interrupt>
      50:	0c 94 dc 02 	jmp	0x5b8	; 0x5b8 <__vector_20>
      54:	0c 94 49 01 	jmp	0x292	; 0x292 <__bad_interrupt>
      58:	0c 94 49 01 	jmp	0x292	; 0x292 <__bad_interrupt>
      5c:	0c 94 49 01 	jmp	0x292	; 0x292 <__bad_interrupt>
      60:	0c 94 49 01 	jmp	0x292	; 0x292 <__bad_interrupt>
      64:	0c 94 49 01 	jmp	0x292	; 0x292 <__bad_interrupt>

00000068 <AVcc_MV>:
      68:	88 13                                               ..

0000006a <_PORTB>:
      6a:	25 00 24 00 23 00                                   %.$.#.

00000070 <_B0>:
      70:	6a 00 01                                            j..

00000073 <_B1>:
      73:	6a 00 02                                            j..

00000076 <_B2>:
      76:	6a 00 04                                            j..

00000079 <_B3>:
      79:	6a 00 08                                            j..

0000007c <_B4>:
      7c:	6a 00 10                                            j..

0000007f <_B5>:
      7f:	6a 00 20                                            j. 

00000082 <_B6>:
      82:	6a 00 40                                            j.@

00000085 <_B7>:
      85:	6a 00 80                                            j..

00000088 <_PORTC>:
      88:	28 00 27 00 26 00                                   (.'.&.

0000008e <_C0>:
      8e:	88 00 01                                            ...

00000091 <_C1>:
      91:	88 00 02                                            ...

00000094 <_C2>:
      94:	88 00 04                                            ...

00000097 <_C3>:
      97:	88 00 08                                            ...

0000009a <_C4>:
      9a:	88 00 10                                            ...

0000009d <_C5>:
      9d:	88 00 20                                            .. 

000000a0 <_C6>:
      a0:	88 00 40                                            ..@

000000a3 <_PORTD>:
      a3:	2b 00 2a 00 29 00                                   +.*.).

000000a9 <_D0>:
      a9:	a3 00 01                                            ...

000000ac <_D1>:
      ac:	a3 00 02                                            ...

000000af <_D2>:
      af:	a3 00 04                                            ...

000000b2 <_D3>:
      b2:	a3 00 08                                            ...

000000b5 <_D4>:
      b5:	a3 00 10                                            ...

000000b8 <_D5>:
      b8:	a3 00 20                                            .. 

000000bb <_D6>:
      bb:	a3 00 40                                            ..@

000000be <_D7>:
      be:	a3 00 80                                            ...

000000c1 <__timer0Compare>:
      c1:	af 01 00 6e 00 02 47 00 35 00 02 44 00 06 bb 00     ...n..G.5..D....
      d1:	b3 01 00 6e 00 04 48 00 35 00 04 44 00 04 b8 00     ...n..H.5..D....

000000e1 <__timer1Compare>:
      e1:	c2 01 01 6f 00 02 88 00 36 00 02 80 00 06 73 00     ...o....6.....s.
      f1:	c6 01 01 6f 00 04 8a 00 36 00 04 80 00 04 76 00     ...o....6.....v.

00000101 <__timer2Compare>:
     101:	d5 01 02 70 00 02 b3 00 37 00 02 b0 00 06 79 00     ...p....7.....y.
     111:	d9 01 02 70 00 04 b4 00 37 00 04 b0 00 04 b2 00     ...p....7.......

00000121 <pgm_Timers>:
     121:	a4 01 46 00 45 00 00 00 02 33 88 44 00 01 44 00     ..F.E....3.D..D.
     131:	02 45 00 08 00 00 01 c1 00 6e 00 01 35 00 01 00     .E.......n..5...
     141:	00 00 00 01 00 00 01 00 00 01 00 00 b7 01 84 00     ................
     151:	81 00 ff 00 02 ff df 80 00 01 80 00 02 81 00 08     ................
     161:	81 00 10 e1 00 6f 00 01 36 00 01 86 00 6f 00 20     .....o..6....o. 
     171:	36 00 20 81 00 40 70 00 ca 01 b2 00 b1 00 00 ff     6. ..@p.........
     181:	02 33 88 b0 00 01 b0 00 02 b1 00 08 00 00 01 01     .3..............
     191:	01 70 00 01 37 00 01 00 00 00 00 01 00 00 01 00     .p..7...........
     1a1:	00 01 00 00                                         ....

000001a5 <PCINT_PINS>:
     1a5:	70 00 73 00 76 00 79 00 7c 00 7f 00 82 00 85 00     p.s.v.y.|.......
     1b5:	8e 00 91 00 94 00 97 00 9a 00 9d 00 a0 00 00 00     ................
     1c5:	a9 00 ac 00 af 00 b2 00 b5 00 b8 00 bb 00 be 00     ................

000001d5 <onboard_motors>:
     1d5:	42 01                                               B.

000001d7 <Servo_bank1_list>:
     1d7:	4d 01 61 01 75 01                                   M.a.u.

000001dd <c_motors>:
     1dd:	84 04 f8 04                                         ....

000001e1 <HexChars>:
     1e1:	30 31 32 33 34 35 36 37 38 39 41 42 43 44 45 46     0123456789ABCDEF
	...

000001f2 <c_Servos>:
     1f2:	11 0c 00 00                                         ....

000001f6 <TimerPrescaleFactor>:
     1f6:	00 00 01 00 08 00 40 00 00 01 00 04                 ......@.....

00000202 <TimerRTCPrescaleFactor>:
     202:	00 00 01 00 08 00 20 00 40 00 80 00 00 01 00 04     ...... .@.......

00000212 <__3bit_modes>:
     212:	00 01 ff ff 02 03 ff ff ff ff ff 05 ff ff ff 07     ................

00000222 <__2bit_modes>:
     222:	00 01 ff ff 02 03                                   ......

00000228 <__c.2501>:
     228:	55 73 65 72 20 45 72 72 6f 72 3a 25 64 0a 00        User Error:%d..

00000237 <__c.2499>:
     237:	57 65 62 62 6f 74 4c 69 62 20 45 72 72 6f 72 3a     WebbotLib Error:
     247:	25 64 0a 00                                         %d..

0000024b <c_hw_uart>:
     24b:	bd 19 73 1a b1 1a 48 1a 7a 1a 5e 1a 00              ..s...H.z.^..

00000258 <__ctors_end>:
     258:	11 24       	eor	r1, r1
     25a:	1f be       	out	0x3f, r1	; 63
     25c:	cf ef       	ldi	r28, 0xFF	; 255
     25e:	d4 e0       	ldi	r29, 0x04	; 4
     260:	de bf       	out	0x3e, r29	; 62
     262:	cd bf       	out	0x3d, r28	; 61

00000264 <__do_copy_data>:
     264:	11 e0       	ldi	r17, 0x01	; 1
     266:	a0 e0       	ldi	r26, 0x00	; 0
     268:	b1 e0       	ldi	r27, 0x01	; 1
     26a:	e8 e4       	ldi	r30, 0x48	; 72
     26c:	fb e3       	ldi	r31, 0x3B	; 59
     26e:	02 c0       	rjmp	.+4      	; 0x274 <.do_copy_data_start>

00000270 <.do_copy_data_loop>:
     270:	05 90       	lpm	r0, Z+
     272:	0d 92       	st	X+, r0

00000274 <.do_copy_data_start>:
     274:	a4 3a       	cpi	r26, 0xA4	; 164
     276:	b1 07       	cpc	r27, r17
     278:	d9 f7       	brne	.-10     	; 0x270 <.do_copy_data_loop>

0000027a <__do_clear_bss>:
     27a:	14 e0       	ldi	r17, 0x04	; 4
     27c:	a4 ea       	ldi	r26, 0xA4	; 164
     27e:	b1 e0       	ldi	r27, 0x01	; 1
     280:	01 c0       	rjmp	.+2      	; 0x284 <.do_clear_bss_start>

00000282 <.do_clear_bss_loop>:
     282:	1d 92       	st	X+, r1

00000284 <.do_clear_bss_start>:
     284:	a0 38       	cpi	r26, 0x80	; 128
     286:	b1 07       	cpc	r27, r17
     288:	e1 f7       	brne	.-8      	; 0x282 <.do_clear_bss_loop>
     28a:	0e 94 e2 08 	call	0x11c4	; 0x11c4 <main>
     28e:	0c 94 2f 1d 	jmp	0x3a5e	; 0x3a5e <exit>

00000292 <__bad_interrupt>:
     292:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000296 <configure_ports>:

	Set up the I/O ports with their standard settings

*/
void configure_ports(void){
};
     296:	08 95       	ret

00000298 <registerLED>:




void registerLED(void){
}
     298:	08 95       	ret

0000029a <sysInitHardware>:

// Initialise any other hardware, like motor drivers etc, built onto the board
void sysInitHardware(void){
}
     29a:	08 95       	ret

0000029c <uart0GetByte>:
// ------------------ UART 0 --------------------------------
MAKE_WRITER(uart0SendByte){
	return _uartSendByte(&Uarts[0]._uart_,byte);
}
MAKE_READER(uart0GetByte){
	return __uartGetByte(&Uarts[0]._uart_);
     29c:	8a e1       	ldi	r24, 0x1A	; 26
     29e:	91 e0       	ldi	r25, 0x01	; 1
     2a0:	0e 94 66 07 	call	0xecc	; 0xecc <__uartGetByte>
}
     2a4:	08 95       	ret

000002a6 <appControl>:

return 0; // dont pause after
}
/***********************************************************************************/
// This routine is called repeatedly - its your main loop
TICK_COUNT appControl(LOOP_COUNT loopCount, TICK_COUNT loopStart){
     2a6:	ef 92       	push	r14
     2a8:	ff 92       	push	r15
     2aa:	0f 93       	push	r16
     2ac:	1f 93       	push	r17
     2ae:	df 93       	push	r29
     2b0:	cf 93       	push	r28
     2b2:	cd b7       	in	r28, 0x3d	; 61
     2b4:	de b7       	in	r29, 0x3e	; 62
     2b6:	64 97       	sbiw	r28, 0x14	; 20
     2b8:	0f b6       	in	r0, 0x3f	; 63
     2ba:	f8 94       	cli
     2bc:	de bf       	out	0x3e, r29	; 62
     2be:	0f be       	out	0x3f, r0	; 63
     2c0:	cd bf       	out	0x3d, r28	; 61
    
int Data_In = uartGetByte(UART0);
     2c2:	8a e1       	ldi	r24, 0x1A	; 26
     2c4:	91 e0       	ldi	r25, 0x01	; 1
     2c6:	0e 94 66 07 	call	0xecc	; 0xecc <__uartGetByte>
     2ca:	10 e0       	ldi	r17, 0x00	; 0
uint8_t index = 0;
//uint16_t battery_voltage = a2dReadMv(ADC_CH_ADC0);

while(Data_In!=-1)
	{
		inData[index] = Data_In;
     2cc:	7e 01       	movw	r14, r28
     2ce:	08 94       	sec
     2d0:	e1 1c       	adc	r14, r1
     2d2:	f1 1c       	adc	r15, r1
     2d4:	09 c0       	rjmp	.+18     	; 0x2e8 <appControl+0x42>
     2d6:	f7 01       	movw	r30, r14
     2d8:	e1 0f       	add	r30, r17
     2da:	f1 1d       	adc	r31, r1
     2dc:	80 83       	st	Z, r24
		index++;
     2de:	1f 5f       	subi	r17, 0xFF	; 255
		Data_In = uartGetByte(UART0);
     2e0:	8a e1       	ldi	r24, 0x1A	; 26
     2e2:	91 e0       	ldi	r25, 0x01	; 1
     2e4:	0e 94 66 07 	call	0xecc	; 0xecc <__uartGetByte>
int Data_In = uartGetByte(UART0);
uint8_t inData[20]; 
uint8_t index = 0;
//uint16_t battery_voltage = a2dReadMv(ADC_CH_ADC0);

while(Data_In!=-1)
     2e8:	2f ef       	ldi	r18, 0xFF	; 255
     2ea:	8f 3f       	cpi	r24, 0xFF	; 255
     2ec:	92 07       	cpc	r25, r18
     2ee:	99 f7       	brne	.-26     	; 0x2d6 <appControl+0x30>
		inData[index] = Data_In;
		index++;
		Data_In = uartGetByte(UART0);
	}

left_x = 0;
     2f0:	10 92 e0 01 	sts	0x01E0, r1
left_y = 0;
     2f4:	10 92 e1 01 	sts	0x01E1, r1
right_x = 0;
     2f8:	10 92 e2 01 	sts	0x01E2, r1
right_y = 0;
     2fc:	10 92 e3 01 	sts	0x01E3, r1
xButton_pressure = 0;
     300:	10 92 e4 01 	sts	0x01E4, r1
SqButton_pressure = 0;
     304:	10 92 e5 01 	sts	0x01E5, r1
DL_Button_pressure = 0;
     308:	10 92 e6 01 	sts	0x01E6, r1
DR_Button_pressure = 0;
     30c:	10 92 e7 01 	sts	0x01E7, r1

if(inData[TX_SYNC] == SYNC_PACKET && inData[index-1] == END_PACKET )
     310:	89 81       	ldd	r24, Y+1	; 0x01
     312:	83 35       	cpi	r24, 0x53	; 83
     314:	09 f0       	breq	.+2      	; 0x318 <appControl+0x72>
     316:	e4 c0       	rjmp	.+456    	; 0x4e0 <appControl+0x23a>
     318:	fe 01       	movw	r30, r28
     31a:	e1 0f       	add	r30, r17
     31c:	f1 1d       	adc	r31, r1
     31e:	80 81       	ld	r24, Z
     320:	84 35       	cpi	r24, 0x54	; 84
     322:	09 f0       	breq	.+2      	; 0x326 <appControl+0x80>
     324:	dd c0       	rjmp	.+442    	; 0x4e0 <appControl+0x23a>
{
	left_x = inData[TX_PS2_LX];
     326:	8a 81       	ldd	r24, Y+2	; 0x02
     328:	80 93 e0 01 	sts	0x01E0, r24
	left_y = inData[TX_PS2_LY];
     32c:	9b 81       	ldd	r25, Y+3	; 0x03
     32e:	90 93 e1 01 	sts	0x01E1, r25
	right_x = inData[TX_PS2_RX];
     332:	9c 81       	ldd	r25, Y+4	; 0x04
     334:	90 93 e2 01 	sts	0x01E2, r25
	right_y = inData[TX_PS2_RY];
     338:	9d 81       	ldd	r25, Y+5	; 0x05
     33a:	90 93 e3 01 	sts	0x01E3, r25
	xButton_pressure = inData[TX_PS2_X_Pressure];
     33e:	9e 81       	ldd	r25, Y+6	; 0x06
     340:	90 93 e4 01 	sts	0x01E4, r25
	SqButton_pressure = inData[TX_PS2_SQ_Pressure];
     344:	9f 81       	ldd	r25, Y+7	; 0x07
     346:	90 93 e5 01 	sts	0x01E5, r25
	DL_Button_pressure = inData[TX_PS2_DL_Pressure];
     34a:	99 85       	ldd	r25, Y+9	; 0x09
     34c:	90 93 e6 01 	sts	0x01E6, r25
	DR_Button_pressure = inData[TX_PS2_DR_Pressure];
     350:	98 85       	ldd	r25, Y+8	; 0x08
     352:	90 93 e7 01 	sts	0x01E7, r25

	DRIVE_SPEED Left_Pan_Pos = interpolate(left_x, -128, 128, DRIVE_SPEED_MIN, DRIVE_SPEED_MAX);
     356:	90 e0       	ldi	r25, 0x00	; 0
     358:	60 e8       	ldi	r22, 0x80	; 128
     35a:	7f ef       	ldi	r23, 0xFF	; 255
     35c:	40 e8       	ldi	r20, 0x80	; 128
     35e:	50 e0       	ldi	r21, 0x00	; 0
     360:	21 e8       	ldi	r18, 0x81	; 129
     362:	3f ef       	ldi	r19, 0xFF	; 255
     364:	0f e7       	ldi	r16, 0x7F	; 127
     366:	10 e0       	ldi	r17, 0x00	; 0
     368:	0e 94 29 09 	call	0x1252	; 0x1252 <interpolate>
     36c:	f8 2e       	mov	r15, r24
//	DRIVE_SPEED Right_Pan_Pos = interpolate(right_x, 0, 255, DRIVE_SPEED_MIN, DRIVE_SPEED_MAX);
	DRIVE_SPEED Left_Tilt_Pos = interpolate(left_y, -128, 128, DRIVE_SPEED_MIN, DRIVE_SPEED_MAX);
     36e:	80 91 e1 01 	lds	r24, 0x01E1
     372:	90 e0       	ldi	r25, 0x00	; 0
     374:	60 e8       	ldi	r22, 0x80	; 128
     376:	7f ef       	ldi	r23, 0xFF	; 255
     378:	40 e8       	ldi	r20, 0x80	; 128
     37a:	50 e0       	ldi	r21, 0x00	; 0
     37c:	21 e8       	ldi	r18, 0x81	; 129
     37e:	3f ef       	ldi	r19, 0xFF	; 255
     380:	0e 94 29 09 	call	0x1252	; 0x1252 <interpolate>
     384:	18 2f       	mov	r17, r24
//	DRIVE_SPEED Right_Tilt_Pos = interpolate(right_y, 0, 255, DRIVE_SPEED_MIN, DRIVE_SPEED_MAX);


    
	act_setSpeed(&Pan, Left_Pan_Pos);
     386:	81 e6       	ldi	r24, 0x61	; 97
     388:	91 e0       	ldi	r25, 0x01	; 1
     38a:	6f 2d       	mov	r22, r15
     38c:	0e 94 e7 07 	call	0xfce	; 0xfce <__act_setSpeed>
	act_setSpeed(&Tilt, Left_Tilt_Pos);
     390:	85 e7       	ldi	r24, 0x75	; 117
     392:	91 e0       	ldi	r25, 0x01	; 1
     394:	61 2f       	mov	r22, r17
     396:	0e 94 e7 07 	call	0xfce	; 0xfce <__act_setSpeed>
    		LED_on(&SpotLightWhite); 
    		LED_on(&PowerGreen);
		}
	}
	*/
	if(inData[TX_PS2_1] == PS2_B_BTN_R1)
     39a:	fa 84       	ldd	r15, Y+10	; 0x0a
     39c:	8b e0       	ldi	r24, 0x0B	; 11
     39e:	f8 16       	cp	r15, r24
     3a0:	49 f4       	brne	.+18     	; 0x3b4 <appControl+0x10e>


void LED_set(LED* led,	boolean value);

static __inline__ void LED_on(LED* led){
	LED_set(led,TRUE);
     3a2:	85 e9       	ldi	r24, 0x95	; 149
     3a4:	91 e0       	ldi	r25, 0x01	; 1
     3a6:	6f ef       	ldi	r22, 0xFF	; 255
     3a8:	0e 94 9e 0a 	call	0x153c	; 0x153c <LED_set>
    {
        LED_on(&RightRed);
		act_setSpeed(&Rudder, DRIVE_SPEED_MIN);
     3ac:	8d e4       	ldi	r24, 0x4D	; 77
     3ae:	91 e0       	ldi	r25, 0x01	; 1
     3b0:	61 e8       	ldi	r22, 0x81	; 129
     3b2:	1d c0       	rjmp	.+58     	; 0x3ee <appControl+0x148>
    }
	else if(inData[TX_PS2_1] == PS2_B_DPAD_RIGHT)
     3b4:	25 e0       	ldi	r18, 0x05	; 5
     3b6:	f2 16       	cp	r15, r18
     3b8:	e9 f4       	brne	.+58     	; 0x3f4 <appControl+0x14e>
     3ba:	85 e9       	ldi	r24, 0x95	; 149
     3bc:	91 e0       	ldi	r25, 0x01	; 1
     3be:	6f ef       	ldi	r22, 0xFF	; 255
     3c0:	0e 94 9e 0a 	call	0x153c	; 0x153c <LED_set>
	{
		LED_on(&RightRed);
		if(DR_Button_pressure == 255)
     3c4:	80 91 e7 01 	lds	r24, 0x01E7
     3c8:	8f 3f       	cpi	r24, 0xFF	; 255
     3ca:	19 f4       	brne	.+6      	; 0x3d2 <appControl+0x12c>
        {
        	DRIVE_SPEED Right_Rudder_Pos = interpolate(DR_Button_pressure, 0, 255, 0, DRIVE_SPEED_MIN);
     3cc:	8f ef       	ldi	r24, 0xFF	; 255
     3ce:	90 e0       	ldi	r25, 0x00	; 0
     3d0:	01 c0       	rjmp	.+2      	; 0x3d4 <appControl+0x12e>
			act_setSpeed(&Rudder, Right_Rudder_Pos);
        }
        else
        {
            DRIVE_SPEED Right_Rudder_Pos = interpolate(DR_Button_pressure, 0, 255, 0, DRIVE_SPEED_MIN);
     3d2:	90 e0       	ldi	r25, 0x00	; 0
     3d4:	60 e0       	ldi	r22, 0x00	; 0
     3d6:	70 e0       	ldi	r23, 0x00	; 0
     3d8:	4f ef       	ldi	r20, 0xFF	; 255
     3da:	50 e0       	ldi	r21, 0x00	; 0
     3dc:	20 e0       	ldi	r18, 0x00	; 0
     3de:	30 e0       	ldi	r19, 0x00	; 0
     3e0:	01 e8       	ldi	r16, 0x81	; 129
     3e2:	1f ef       	ldi	r17, 0xFF	; 255
     3e4:	0e 94 29 09 	call	0x1252	; 0x1252 <interpolate>
     3e8:	68 2f       	mov	r22, r24
			act_setSpeed(&Rudder, Right_Rudder_Pos);
     3ea:	8d e4       	ldi	r24, 0x4D	; 77
     3ec:	91 e0       	ldi	r25, 0x01	; 1
     3ee:	0e 94 e7 07 	call	0xfce	; 0xfce <__act_setSpeed>
     3f2:	2f c0       	rjmp	.+94     	; 0x452 <appControl+0x1ac>
}

static __inline__ void LED_off(LED* led){
	LED_set(led,FALSE);
     3f4:	85 e9       	ldi	r24, 0x95	; 149
     3f6:	91 e0       	ldi	r25, 0x01	; 1
     3f8:	60 e0       	ldi	r22, 0x00	; 0
     3fa:	0e 94 9e 0a 	call	0x153c	; 0x153c <LED_set>
    else
    {
        LED_off(&RightRed);
    }

    if(inData[TX_PS2_1] == PS2_B_BTN_L1)
     3fe:	8a e0       	ldi	r24, 0x0A	; 10
     400:	f8 16       	cp	r15, r24
     402:	49 f4       	brne	.+18     	; 0x416 <appControl+0x170>


void LED_set(LED* led,	boolean value);

static __inline__ void LED_on(LED* led){
	LED_set(led,TRUE);
     404:	88 e9       	ldi	r24, 0x98	; 152
     406:	91 e0       	ldi	r25, 0x01	; 1
     408:	6f ef       	ldi	r22, 0xFF	; 255
     40a:	0e 94 9e 0a 	call	0x153c	; 0x153c <LED_set>
    {
        LED_on(&LeftRed);
		act_setSpeed(&Rudder, DRIVE_SPEED_MAX);
     40e:	8d e4       	ldi	r24, 0x4D	; 77
     410:	91 e0       	ldi	r25, 0x01	; 1
     412:	6f e7       	ldi	r22, 0x7F	; 127
     414:	63 c0       	rjmp	.+198    	; 0x4dc <appControl+0x236>
    }
	else if(inData[TX_PS2_1] == PS2_B_DPAD_LEFT)
     416:	27 e0       	ldi	r18, 0x07	; 7
     418:	f2 16       	cp	r15, r18
     41a:	d9 f4       	brne	.+54     	; 0x452 <appControl+0x1ac>
     41c:	88 e9       	ldi	r24, 0x98	; 152
     41e:	91 e0       	ldi	r25, 0x01	; 1
     420:	6f ef       	ldi	r22, 0xFF	; 255
     422:	0e 94 9e 0a 	call	0x153c	; 0x153c <LED_set>
	{
		LED_on(&LeftRed);
		if(DL_Button_pressure == 255)
     426:	80 91 e6 01 	lds	r24, 0x01E6
     42a:	8f 3f       	cpi	r24, 0xFF	; 255
     42c:	19 f4       	brne	.+6      	; 0x434 <appControl+0x18e>
        {
        	DRIVE_SPEED Left_Rudder_Pos = interpolate(DL_Button_pressure, 0, 255, 0, DRIVE_SPEED_MAX);
     42e:	8f ef       	ldi	r24, 0xFF	; 255
     430:	90 e0       	ldi	r25, 0x00	; 0
     432:	01 c0       	rjmp	.+2      	; 0x436 <appControl+0x190>
			act_setSpeed(&Rudder, Left_Rudder_Pos);
        }
        else
        {
            DRIVE_SPEED Left_Rudder_Pos = interpolate(DL_Button_pressure, 0, 255, 0, DRIVE_SPEED_MAX);
     434:	90 e0       	ldi	r25, 0x00	; 0
     436:	60 e0       	ldi	r22, 0x00	; 0
     438:	70 e0       	ldi	r23, 0x00	; 0
     43a:	4f ef       	ldi	r20, 0xFF	; 255
     43c:	50 e0       	ldi	r21, 0x00	; 0
     43e:	20 e0       	ldi	r18, 0x00	; 0
     440:	30 e0       	ldi	r19, 0x00	; 0
     442:	0f e7       	ldi	r16, 0x7F	; 127
     444:	10 e0       	ldi	r17, 0x00	; 0
     446:	0e 94 29 09 	call	0x1252	; 0x1252 <interpolate>
     44a:	68 2f       	mov	r22, r24
			act_setSpeed(&Rudder, Left_Rudder_Pos);
     44c:	8d e4       	ldi	r24, 0x4D	; 77
     44e:	91 e0       	ldi	r25, 0x01	; 1
     450:	45 c0       	rjmp	.+138    	; 0x4dc <appControl+0x236>
}

static __inline__ void LED_off(LED* led){
	LED_set(led,FALSE);
     452:	88 e9       	ldi	r24, 0x98	; 152
     454:	91 e0       	ldi	r25, 0x01	; 1
     456:	60 e0       	ldi	r22, 0x00	; 0
     458:	0e 94 9e 0a 	call	0x153c	; 0x153c <LED_set>
    else
    {
        
    }

    if(inData[TX_PS2_1] == PS2_B_BTN_TRIANGLE)
     45c:	8c e0       	ldi	r24, 0x0C	; 12
     45e:	f8 16       	cp	r15, r24
     460:	89 f4       	brne	.+34     	; 0x484 <appControl+0x1de>
    {
		SpotLightState++;
     462:	80 91 de 01 	lds	r24, 0x01DE
     466:	8f 5f       	subi	r24, 0xFF	; 255
     468:	80 93 de 01 	sts	0x01DE, r24
		if(SpotLightState % 2 == 0)
     46c:	80 fd       	sbrc	r24, 0
     46e:	04 c0       	rjmp	.+8      	; 0x478 <appControl+0x1d2>
     470:	8b e9       	ldi	r24, 0x9B	; 155
     472:	91 e0       	ldi	r25, 0x01	; 1
     474:	60 e0       	ldi	r22, 0x00	; 0
     476:	03 c0       	rjmp	.+6      	; 0x47e <appControl+0x1d8>


void LED_set(LED* led,	boolean value);

static __inline__ void LED_on(LED* led){
	LED_set(led,TRUE);
     478:	8b e9       	ldi	r24, 0x9B	; 155
     47a:	91 e0       	ldi	r25, 0x01	; 1
     47c:	6f ef       	ldi	r22, 0xFF	; 255
     47e:	0e 94 9e 0a 	call	0x153c	; 0x153c <LED_set>
     482:	2e c0       	rjmp	.+92     	; 0x4e0 <appControl+0x23a>
    {
    
    }

  
    if(inData[TX_PS2_1] == PS2_B_BTN_SQUARE)
     484:	2f e0       	ldi	r18, 0x0F	; 15
     486:	f2 16       	cp	r15, r18
     488:	89 f4       	brne	.+34     	; 0x4ac <appControl+0x206>
    {
	
		if(SqButton_pressure == 255)
     48a:	80 91 e5 01 	lds	r24, 0x01E5
     48e:	8f 3f       	cpi	r24, 0xFF	; 255
     490:	19 f4       	brne	.+6      	; 0x498 <appControl+0x1f2>
        {
        	DRIVE_SPEED Backward_Motor_Speed = interpolate(SqButton_pressure, 0, 255, 0, DRIVE_SPEED_MIN);
     492:	8f ef       	ldi	r24, 0xFF	; 255
     494:	90 e0       	ldi	r25, 0x00	; 0
     496:	01 c0       	rjmp	.+2      	; 0x49a <appControl+0x1f4>
			act_setSpeed(&Motor, Backward_Motor_Speed);
        }
        else
        {
            DRIVE_SPEED Backward_Motor_Speed = interpolate(SqButton_pressure, 0, 255, 0, DRIVE_SPEED_MIN);
     498:	90 e0       	ldi	r25, 0x00	; 0
     49a:	60 e0       	ldi	r22, 0x00	; 0
     49c:	70 e0       	ldi	r23, 0x00	; 0
     49e:	4f ef       	ldi	r20, 0xFF	; 255
     4a0:	50 e0       	ldi	r21, 0x00	; 0
     4a2:	20 e0       	ldi	r18, 0x00	; 0
     4a4:	30 e0       	ldi	r19, 0x00	; 0
     4a6:	01 e8       	ldi	r16, 0x81	; 129
     4a8:	1f ef       	ldi	r17, 0xFF	; 255
     4aa:	13 c0       	rjmp	.+38     	; 0x4d2 <appControl+0x22c>
			act_setSpeed(&Motor, Backward_Motor_Speed);
        }
    }
    else if(inData[TX_PS2_1] == PS2_B_BTN_X)
     4ac:	8e e0       	ldi	r24, 0x0E	; 14
     4ae:	f8 16       	cp	r15, r24
     4b0:	b9 f4       	brne	.+46     	; 0x4e0 <appControl+0x23a>
    {

		if(xButton_pressure == 255)
     4b2:	80 91 e4 01 	lds	r24, 0x01E4
     4b6:	8f 3f       	cpi	r24, 0xFF	; 255
     4b8:	19 f4       	brne	.+6      	; 0x4c0 <appControl+0x21a>
        {
        	DRIVE_SPEED Forward_Motor_Speed = interpolate(xButton_pressure, 0, 255, 0, DRIVE_SPEED_MAX);
     4ba:	8f ef       	ldi	r24, 0xFF	; 255
     4bc:	90 e0       	ldi	r25, 0x00	; 0
     4be:	01 c0       	rjmp	.+2      	; 0x4c2 <appControl+0x21c>
			act_setSpeed(&Motor, Forward_Motor_Speed);
        }
        else
        {
        	DRIVE_SPEED Forward_Motor_Speed = interpolate(xButton_pressure, 0, 255, 0, DRIVE_SPEED_MAX);
     4c0:	90 e0       	ldi	r25, 0x00	; 0
     4c2:	60 e0       	ldi	r22, 0x00	; 0
     4c4:	70 e0       	ldi	r23, 0x00	; 0
     4c6:	4f ef       	ldi	r20, 0xFF	; 255
     4c8:	50 e0       	ldi	r21, 0x00	; 0
     4ca:	20 e0       	ldi	r18, 0x00	; 0
     4cc:	30 e0       	ldi	r19, 0x00	; 0
     4ce:	0f e7       	ldi	r16, 0x7F	; 127
     4d0:	10 e0       	ldi	r17, 0x00	; 0
     4d2:	0e 94 29 09 	call	0x1252	; 0x1252 <interpolate>
     4d6:	68 2f       	mov	r22, r24
			act_setSpeed(&Motor, Forward_Motor_Speed);
     4d8:	82 e4       	ldi	r24, 0x42	; 66
     4da:	91 e0       	ldi	r25, 0x01	; 1
     4dc:	0e 94 e7 07 	call	0xfce	; 0xfce <__act_setSpeed>
//	act_setSpeed(&Pan_Motor,speed);
	// -------- End   Actuators -------
    
return 200000; // wait for 1 second before calling me again. 1000000us = 1
//second
}
     4e0:	60 e4       	ldi	r22, 0x40	; 64
     4e2:	7d e0       	ldi	r23, 0x0D	; 13
     4e4:	83 e0       	ldi	r24, 0x03	; 3
     4e6:	90 e0       	ldi	r25, 0x00	; 0
     4e8:	64 96       	adiw	r28, 0x14	; 20
     4ea:	0f b6       	in	r0, 0x3f	; 63
     4ec:	f8 94       	cli
     4ee:	de bf       	out	0x3e, r29	; 62
     4f0:	0f be       	out	0x3f, r0	; 63
     4f2:	cd bf       	out	0x3d, r28	; 61
     4f4:	cf 91       	pop	r28
     4f6:	df 91       	pop	r29
     4f8:	1f 91       	pop	r17
     4fa:	0f 91       	pop	r16
     4fc:	ff 90       	pop	r15
     4fe:	ef 90       	pop	r14
     500:	08 95       	ret

00000502 <appInitSoftware>:
}

static __inline__ void LED_off(LED* led){
	LED_set(led,FALSE);
     502:	85 e9       	ldi	r24, 0x95	; 149
     504:	91 e0       	ldi	r25, 0x01	; 1
     506:	60 e0       	ldi	r22, 0x00	; 0
     508:	0e 94 9e 0a 	call	0x153c	; 0x153c <LED_set>


void LED_set(LED* led,	boolean value);

static __inline__ void LED_on(LED* led){
	LED_set(led,TRUE);
     50c:	88 e9       	ldi	r24, 0x98	; 152
     50e:	91 e0       	ldi	r25, 0x01	; 1
     510:	60 e0       	ldi	r22, 0x00	; 0
     512:	0e 94 9e 0a 	call	0x153c	; 0x153c <LED_set>
     516:	8b e9       	ldi	r24, 0x9B	; 155
     518:	91 e0       	ldi	r25, 0x01	; 1
     51a:	60 e0       	ldi	r22, 0x00	; 0
     51c:	0e 94 9e 0a 	call	0x153c	; 0x153c <LED_set>
     520:	8e e9       	ldi	r24, 0x9E	; 158
     522:	91 e0       	ldi	r25, 0x01	; 1
     524:	6f ef       	ldi	r22, 0xFF	; 255
     526:	0e 94 9e 0a 	call	0x153c	; 0x153c <LED_set>
    LED_off(&LeftRed); 
    LED_off(&SpotLightWhite); 
    LED_on(&PowerGreen);

return 0; // dont pause after
}
     52a:	60 e0       	ldi	r22, 0x00	; 0
     52c:	70 e0       	ldi	r23, 0x00	; 0
     52e:	80 e0       	ldi	r24, 0x00	; 0
     530:	90 e0       	ldi	r25, 0x00	; 0
     532:	08 95       	ret

00000534 <appInitHardware>:
// Dont use any 'clock' functions here - use 'delay' functions instead

void appInitHardware(void){
// Initialise the servo controller

servosInit(&Servo_bank1,TIMER1);
     534:	89 e8       	ldi	r24, 0x89	; 137
     536:	91 e0       	ldi	r25, 0x01	; 1
     538:	6d e4       	ldi	r22, 0x4D	; 77
     53a:	71 e0       	ldi	r23, 0x01	; 1
     53c:	0e 94 1b 0b 	call	0x1636	; 0x1636 <servosInit>

sanyoLB1836M_Init(&onboard_driver);
     540:	8a e4       	ldi	r24, 0x4A	; 74
     542:	91 e0       	ldi	r25, 0x01	; 1
     544:	0e 94 fc 05 	call	0xbf8	; 0xbf8 <sanyoLB1836M_Init>
// Initialise the servo controller
//motorPWMInit(&Motor_bank1);

//servosInit(&bank1, TIMER1);
// Set UART0 to 9600 baud
uartInit(UART0, 9600);
     548:	8a e1       	ldi	r24, 0x1A	; 26
     54a:	91 e0       	ldi	r25, 0x01	; 1
     54c:	40 e8       	ldi	r20, 0x80	; 128
     54e:	55 e2       	ldi	r21, 0x25	; 37
     550:	60 e0       	ldi	r22, 0x00	; 0
     552:	70 e0       	ldi	r23, 0x00	; 0
     554:	0e 94 dc 06 	call	0xdb8	; 0xdb8 <_uartInit>
// Tell rprintf to output to UART0
rprintfInit(&uart0SendByte);
     558:	82 e0       	ldi	r24, 0x02	; 2
     55a:	93 e0       	ldi	r25, 0x03	; 3
     55c:	0e 94 c1 0a 	call	0x1582	; 0x1582 <rprintfInit>

}
     560:	08 95       	ret

00000562 <__vector_18>:
{
	uartTransmitService(&Uarts[0]);
}

UART_INTERRUPT_HANDLER(USART0_RX_vect)
{
     562:	1f 92       	push	r1
     564:	0f 92       	push	r0
     566:	0f b6       	in	r0, 0x3f	; 63
     568:	0f 92       	push	r0
     56a:	11 24       	eor	r1, r1
     56c:	2f 93       	push	r18
     56e:	3f 93       	push	r19
     570:	4f 93       	push	r20
     572:	5f 93       	push	r21
     574:	6f 93       	push	r22
     576:	7f 93       	push	r23
     578:	8f 93       	push	r24
     57a:	9f 93       	push	r25
     57c:	af 93       	push	r26
     57e:	bf 93       	push	r27
     580:	ef 93       	push	r30
     582:	ff 93       	push	r31
	uartReceiveService(&Uarts[0]);
     584:	e0 91 3a 01 	lds	r30, 0x013A
     588:	f0 91 3b 01 	lds	r31, 0x013B
     58c:	60 81       	ld	r22, Z
     58e:	8a e1       	ldi	r24, 0x1A	; 26
     590:	91 e0       	ldi	r25, 0x01	; 1
     592:	0e 94 bf 07 	call	0xf7e	; 0xf7e <__uartReceiveService>
}
     596:	ff 91       	pop	r31
     598:	ef 91       	pop	r30
     59a:	bf 91       	pop	r27
     59c:	af 91       	pop	r26
     59e:	9f 91       	pop	r25
     5a0:	8f 91       	pop	r24
     5a2:	7f 91       	pop	r23
     5a4:	6f 91       	pop	r22
     5a6:	5f 91       	pop	r21
     5a8:	4f 91       	pop	r20
     5aa:	3f 91       	pop	r19
     5ac:	2f 91       	pop	r18
     5ae:	0f 90       	pop	r0
     5b0:	0f be       	out	0x3f, r0	; 63
     5b2:	0f 90       	pop	r0
     5b4:	1f 90       	pop	r1
     5b6:	18 95       	reti

000005b8 <__vector_20>:
#endif
#ifndef USART0_RX_vect
# error Uart0 Rx complete vector undefined
#endif
UART_INTERRUPT_HANDLER(USART0_TX_vect)
{
     5b8:	1f 92       	push	r1
     5ba:	0f 92       	push	r0
     5bc:	0f b6       	in	r0, 0x3f	; 63
     5be:	0f 92       	push	r0
     5c0:	11 24       	eor	r1, r1
     5c2:	2f 93       	push	r18
     5c4:	3f 93       	push	r19
     5c6:	4f 93       	push	r20
     5c8:	5f 93       	push	r21
     5ca:	6f 93       	push	r22
     5cc:	7f 93       	push	r23
     5ce:	8f 93       	push	r24
     5d0:	9f 93       	push	r25
     5d2:	af 93       	push	r26
     5d4:	bf 93       	push	r27
     5d6:	ef 93       	push	r30
     5d8:	ff 93       	push	r31
	uartTransmitService(&Uarts[0]);
     5da:	8a e1       	ldi	r24, 0x1A	; 26
     5dc:	91 e0       	ldi	r25, 0x01	; 1
     5de:	0e 94 8c 07 	call	0xf18	; 0xf18 <__uartTransmitService>
}
     5e2:	ff 91       	pop	r31
     5e4:	ef 91       	pop	r30
     5e6:	bf 91       	pop	r27
     5e8:	af 91       	pop	r26
     5ea:	9f 91       	pop	r25
     5ec:	8f 91       	pop	r24
     5ee:	7f 91       	pop	r23
     5f0:	6f 91       	pop	r22
     5f2:	5f 91       	pop	r21
     5f4:	4f 91       	pop	r20
     5f6:	3f 91       	pop	r19
     5f8:	2f 91       	pop	r18
     5fa:	0f 90       	pop	r0
     5fc:	0f be       	out	0x3f, r0	; 63
     5fe:	0f 90       	pop	r0
     600:	1f 90       	pop	r1
     602:	18 95       	reti

00000604 <uart0SendByte>:
#endif


#if defined(UBRR0) || defined(UBRRL)|| defined(UBRR0L)
// ------------------ UART 0 --------------------------------
MAKE_WRITER(uart0SendByte){
     604:	68 2f       	mov	r22, r24
	return _uartSendByte(&Uarts[0]._uart_,byte);
     606:	8a e1       	ldi	r24, 0x1A	; 26
     608:	91 e0       	ldi	r25, 0x01	; 1
     60a:	0e 94 15 07 	call	0xe2a	; 0xe2a <_uartSendByte>
}
     60e:	08 95       	ret

00000610 <__vector_8>:
	}
	#endif

	#ifdef TIMER2_COMPB_vect
	//! Interrupt handler for tcnt2 compare interrupt
	TIMER_INTERRUPT_HANDLER(TIMER2_COMPB_vect){
     610:	1f 92       	push	r1
     612:	0f 92       	push	r0
     614:	0f b6       	in	r0, 0x3f	; 63
     616:	0f 92       	push	r0
     618:	11 24       	eor	r1, r1
     61a:	2f 93       	push	r18
     61c:	3f 93       	push	r19
     61e:	4f 93       	push	r20
     620:	5f 93       	push	r21
     622:	6f 93       	push	r22
     624:	7f 93       	push	r23
     626:	8f 93       	push	r24
     628:	9f 93       	push	r25
     62a:	af 93       	push	r26
     62c:	bf 93       	push	r27
     62e:	ef 93       	push	r30
     630:	ff 93       	push	r31
		__timer_compareService(TIMER2_COMPAREB);
     632:	81 e1       	ldi	r24, 0x11	; 17
     634:	91 e0       	ldi	r25, 0x01	; 1
     636:	0e 94 a1 0e 	call	0x1d42	; 0x1d42 <__timer_compareService>
	}
     63a:	ff 91       	pop	r31
     63c:	ef 91       	pop	r30
     63e:	bf 91       	pop	r27
     640:	af 91       	pop	r26
     642:	9f 91       	pop	r25
     644:	8f 91       	pop	r24
     646:	7f 91       	pop	r23
     648:	6f 91       	pop	r22
     64a:	5f 91       	pop	r21
     64c:	4f 91       	pop	r20
     64e:	3f 91       	pop	r19
     650:	2f 91       	pop	r18
     652:	0f 90       	pop	r0
     654:	0f be       	out	0x3f, r0	; 63
     656:	0f 90       	pop	r0
     658:	1f 90       	pop	r1
     65a:	18 95       	reti

0000065c <__vector_7>:
	}
	#endif

	#ifdef TIMER2_COMPA_vect
	//! Interrupt handler for tcnt2 compare interrupt
	TIMER_INTERRUPT_HANDLER(TIMER2_COMPA_vect){
     65c:	1f 92       	push	r1
     65e:	0f 92       	push	r0
     660:	0f b6       	in	r0, 0x3f	; 63
     662:	0f 92       	push	r0
     664:	11 24       	eor	r1, r1
     666:	2f 93       	push	r18
     668:	3f 93       	push	r19
     66a:	4f 93       	push	r20
     66c:	5f 93       	push	r21
     66e:	6f 93       	push	r22
     670:	7f 93       	push	r23
     672:	8f 93       	push	r24
     674:	9f 93       	push	r25
     676:	af 93       	push	r26
     678:	bf 93       	push	r27
     67a:	ef 93       	push	r30
     67c:	ff 93       	push	r31
		__timer_compareService(TIMER2_COMPAREA);
     67e:	81 e0       	ldi	r24, 0x01	; 1
     680:	91 e0       	ldi	r25, 0x01	; 1
     682:	0e 94 a1 0e 	call	0x1d42	; 0x1d42 <__timer_compareService>
	}
     686:	ff 91       	pop	r31
     688:	ef 91       	pop	r30
     68a:	bf 91       	pop	r27
     68c:	af 91       	pop	r26
     68e:	9f 91       	pop	r25
     690:	8f 91       	pop	r24
     692:	7f 91       	pop	r23
     694:	6f 91       	pop	r22
     696:	5f 91       	pop	r21
     698:	4f 91       	pop	r20
     69a:	3f 91       	pop	r19
     69c:	2f 91       	pop	r18
     69e:	0f 90       	pop	r0
     6a0:	0f be       	out	0x3f, r0	; 63
     6a2:	0f 90       	pop	r0
     6a4:	1f 90       	pop	r1
     6a6:	18 95       	reti

000006a8 <__vector_12>:
	}
	#endif // TIMER1_COMPA_vect

	#ifdef TIMER1_COMPB_vect
	//! Interrupt handler for tcnt0 compare interrupt
	TIMER_INTERRUPT_HANDLER(TIMER1_COMPB_vect){
     6a8:	1f 92       	push	r1
     6aa:	0f 92       	push	r0
     6ac:	0f b6       	in	r0, 0x3f	; 63
     6ae:	0f 92       	push	r0
     6b0:	11 24       	eor	r1, r1
     6b2:	2f 93       	push	r18
     6b4:	3f 93       	push	r19
     6b6:	4f 93       	push	r20
     6b8:	5f 93       	push	r21
     6ba:	6f 93       	push	r22
     6bc:	7f 93       	push	r23
     6be:	8f 93       	push	r24
     6c0:	9f 93       	push	r25
     6c2:	af 93       	push	r26
     6c4:	bf 93       	push	r27
     6c6:	ef 93       	push	r30
     6c8:	ff 93       	push	r31
		__timer_compareService(TIMER1_COMPAREB);
     6ca:	81 ef       	ldi	r24, 0xF1	; 241
     6cc:	90 e0       	ldi	r25, 0x00	; 0
     6ce:	0e 94 a1 0e 	call	0x1d42	; 0x1d42 <__timer_compareService>
	}
     6d2:	ff 91       	pop	r31
     6d4:	ef 91       	pop	r30
     6d6:	bf 91       	pop	r27
     6d8:	af 91       	pop	r26
     6da:	9f 91       	pop	r25
     6dc:	8f 91       	pop	r24
     6de:	7f 91       	pop	r23
     6e0:	6f 91       	pop	r22
     6e2:	5f 91       	pop	r21
     6e4:	4f 91       	pop	r20
     6e6:	3f 91       	pop	r19
     6e8:	2f 91       	pop	r18
     6ea:	0f 90       	pop	r0
     6ec:	0f be       	out	0x3f, r0	; 63
     6ee:	0f 90       	pop	r0
     6f0:	1f 90       	pop	r1
     6f2:	18 95       	reti

000006f4 <__vector_11>:
	}
	#endif

	#ifdef TIMER1_COMPA_vect
	//! Interrupt handler for tcnt0 compare interrupt
	TIMER_INTERRUPT_HANDLER(TIMER1_COMPA_vect){
     6f4:	1f 92       	push	r1
     6f6:	0f 92       	push	r0
     6f8:	0f b6       	in	r0, 0x3f	; 63
     6fa:	0f 92       	push	r0
     6fc:	11 24       	eor	r1, r1
     6fe:	2f 93       	push	r18
     700:	3f 93       	push	r19
     702:	4f 93       	push	r20
     704:	5f 93       	push	r21
     706:	6f 93       	push	r22
     708:	7f 93       	push	r23
     70a:	8f 93       	push	r24
     70c:	9f 93       	push	r25
     70e:	af 93       	push	r26
     710:	bf 93       	push	r27
     712:	ef 93       	push	r30
     714:	ff 93       	push	r31
		__timer_compareService(TIMER1_COMPAREA);
     716:	81 ee       	ldi	r24, 0xE1	; 225
     718:	90 e0       	ldi	r25, 0x00	; 0
     71a:	0e 94 a1 0e 	call	0x1d42	; 0x1d42 <__timer_compareService>
	}
     71e:	ff 91       	pop	r31
     720:	ef 91       	pop	r30
     722:	bf 91       	pop	r27
     724:	af 91       	pop	r26
     726:	9f 91       	pop	r25
     728:	8f 91       	pop	r24
     72a:	7f 91       	pop	r23
     72c:	6f 91       	pop	r22
     72e:	5f 91       	pop	r21
     730:	4f 91       	pop	r20
     732:	3f 91       	pop	r19
     734:	2f 91       	pop	r18
     736:	0f 90       	pop	r0
     738:	0f be       	out	0x3f, r0	; 63
     73a:	0f 90       	pop	r0
     73c:	1f 90       	pop	r1
     73e:	18 95       	reti

00000740 <__vector_15>:
	}
	#endif

	#ifdef TIMER0_COMPB_vect
	// Interrupt handler for tcnt0 compare interrupt
	TIMER_INTERRUPT_HANDLER(TIMER0_COMPB_vect){
     740:	1f 92       	push	r1
     742:	0f 92       	push	r0
     744:	0f b6       	in	r0, 0x3f	; 63
     746:	0f 92       	push	r0
     748:	11 24       	eor	r1, r1
     74a:	2f 93       	push	r18
     74c:	3f 93       	push	r19
     74e:	4f 93       	push	r20
     750:	5f 93       	push	r21
     752:	6f 93       	push	r22
     754:	7f 93       	push	r23
     756:	8f 93       	push	r24
     758:	9f 93       	push	r25
     75a:	af 93       	push	r26
     75c:	bf 93       	push	r27
     75e:	ef 93       	push	r30
     760:	ff 93       	push	r31
		__timer_compareService(TIMER0_COMPAREB);
     762:	81 ed       	ldi	r24, 0xD1	; 209
     764:	90 e0       	ldi	r25, 0x00	; 0
     766:	0e 94 a1 0e 	call	0x1d42	; 0x1d42 <__timer_compareService>
	}
     76a:	ff 91       	pop	r31
     76c:	ef 91       	pop	r30
     76e:	bf 91       	pop	r27
     770:	af 91       	pop	r26
     772:	9f 91       	pop	r25
     774:	8f 91       	pop	r24
     776:	7f 91       	pop	r23
     778:	6f 91       	pop	r22
     77a:	5f 91       	pop	r21
     77c:	4f 91       	pop	r20
     77e:	3f 91       	pop	r19
     780:	2f 91       	pop	r18
     782:	0f 90       	pop	r0
     784:	0f be       	out	0x3f, r0	; 63
     786:	0f 90       	pop	r0
     788:	1f 90       	pop	r1
     78a:	18 95       	reti

0000078c <__vector_14>:
	}
	#endif

	#ifdef TIMER0_COMPA_vect
	// Interrupt handler for tcnt0 compare interrupt
	TIMER_INTERRUPT_HANDLER(TIMER0_COMPA_vect){
     78c:	1f 92       	push	r1
     78e:	0f 92       	push	r0
     790:	0f b6       	in	r0, 0x3f	; 63
     792:	0f 92       	push	r0
     794:	11 24       	eor	r1, r1
     796:	2f 93       	push	r18
     798:	3f 93       	push	r19
     79a:	4f 93       	push	r20
     79c:	5f 93       	push	r21
     79e:	6f 93       	push	r22
     7a0:	7f 93       	push	r23
     7a2:	8f 93       	push	r24
     7a4:	9f 93       	push	r25
     7a6:	af 93       	push	r26
     7a8:	bf 93       	push	r27
     7aa:	ef 93       	push	r30
     7ac:	ff 93       	push	r31
		__timer_compareService(TIMER0_COMPAREA);
     7ae:	81 ec       	ldi	r24, 0xC1	; 193
     7b0:	90 e0       	ldi	r25, 0x00	; 0
     7b2:	0e 94 a1 0e 	call	0x1d42	; 0x1d42 <__timer_compareService>
	}
     7b6:	ff 91       	pop	r31
     7b8:	ef 91       	pop	r30
     7ba:	bf 91       	pop	r27
     7bc:	af 91       	pop	r26
     7be:	9f 91       	pop	r25
     7c0:	8f 91       	pop	r24
     7c2:	7f 91       	pop	r23
     7c4:	6f 91       	pop	r22
     7c6:	5f 91       	pop	r21
     7c8:	4f 91       	pop	r20
     7ca:	3f 91       	pop	r19
     7cc:	2f 91       	pop	r18
     7ce:	0f 90       	pop	r0
     7d0:	0f be       	out	0x3f, r0	; 63
     7d2:	0f 90       	pop	r0
     7d4:	1f 90       	pop	r1
     7d6:	18 95       	reti

000007d8 <__vector_9>:

	// -------------- Timer2 vectors --------------------------------------------

	#ifdef TIMER2_OVF_vect
	//! Interrupt handler for tcnt2 overflow interrupt
	TIMER_INTERRUPT_HANDLER(TIMER2_OVF_vect){
     7d8:	1f 92       	push	r1
     7da:	0f 92       	push	r0
     7dc:	0f b6       	in	r0, 0x3f	; 63
     7de:	0f 92       	push	r0
     7e0:	11 24       	eor	r1, r1
     7e2:	2f 93       	push	r18
     7e4:	3f 93       	push	r19
     7e6:	4f 93       	push	r20
     7e8:	5f 93       	push	r21
     7ea:	6f 93       	push	r22
     7ec:	7f 93       	push	r23
     7ee:	8f 93       	push	r24
     7f0:	9f 93       	push	r25
     7f2:	af 93       	push	r26
     7f4:	bf 93       	push	r27
     7f6:	ef 93       	push	r30
     7f8:	ff 93       	push	r31
		__timer_overflowService(TIMER2);
     7fa:	89 e7       	ldi	r24, 0x79	; 121
     7fc:	91 e0       	ldi	r25, 0x01	; 1
     7fe:	0e 94 83 0e 	call	0x1d06	; 0x1d06 <__timer_overflowService>
	}
     802:	ff 91       	pop	r31
     804:	ef 91       	pop	r30
     806:	bf 91       	pop	r27
     808:	af 91       	pop	r26
     80a:	9f 91       	pop	r25
     80c:	8f 91       	pop	r24
     80e:	7f 91       	pop	r23
     810:	6f 91       	pop	r22
     812:	5f 91       	pop	r21
     814:	4f 91       	pop	r20
     816:	3f 91       	pop	r19
     818:	2f 91       	pop	r18
     81a:	0f 90       	pop	r0
     81c:	0f be       	out	0x3f, r0	; 63
     81e:	0f 90       	pop	r0
     820:	1f 90       	pop	r1
     822:	18 95       	reti

00000824 <__vector_13>:

	// -------------- Timer1 vectors --------------------------------------------

	#ifdef TIMER1_OVF_vect
	//! Interrupt handler for tcnt1 overflow interrupt
	TIMER_INTERRUPT_HANDLER(TIMER1_OVF_vect){
     824:	1f 92       	push	r1
     826:	0f 92       	push	r0
     828:	0f b6       	in	r0, 0x3f	; 63
     82a:	0f 92       	push	r0
     82c:	11 24       	eor	r1, r1
     82e:	2f 93       	push	r18
     830:	3f 93       	push	r19
     832:	4f 93       	push	r20
     834:	5f 93       	push	r21
     836:	6f 93       	push	r22
     838:	7f 93       	push	r23
     83a:	8f 93       	push	r24
     83c:	9f 93       	push	r25
     83e:	af 93       	push	r26
     840:	bf 93       	push	r27
     842:	ef 93       	push	r30
     844:	ff 93       	push	r31
		__timer_overflowService(TIMER1);
     846:	8d e4       	ldi	r24, 0x4D	; 77
     848:	91 e0       	ldi	r25, 0x01	; 1
     84a:	0e 94 83 0e 	call	0x1d06	; 0x1d06 <__timer_overflowService>
	}
     84e:	ff 91       	pop	r31
     850:	ef 91       	pop	r30
     852:	bf 91       	pop	r27
     854:	af 91       	pop	r26
     856:	9f 91       	pop	r25
     858:	8f 91       	pop	r24
     85a:	7f 91       	pop	r23
     85c:	6f 91       	pop	r22
     85e:	5f 91       	pop	r21
     860:	4f 91       	pop	r20
     862:	3f 91       	pop	r19
     864:	2f 91       	pop	r18
     866:	0f 90       	pop	r0
     868:	0f be       	out	0x3f, r0	; 63
     86a:	0f 90       	pop	r0
     86c:	1f 90       	pop	r1
     86e:	18 95       	reti

00000870 <__vector_16>:
	#define TIMER_INTERRUPT_HANDLER		ISR
	#endif
	// -------------- Timer0 vectors --------------------------------------------
	#ifdef TIMER0_OVF_vect
	// Interrupt handler for tcnt0 overflow interrupt
	TIMER_INTERRUPT_HANDLER(TIMER0_OVF_vect){
     870:	1f 92       	push	r1
     872:	0f 92       	push	r0
     874:	0f b6       	in	r0, 0x3f	; 63
     876:	0f 92       	push	r0
     878:	11 24       	eor	r1, r1
     87a:	2f 93       	push	r18
     87c:	3f 93       	push	r19
     87e:	4f 93       	push	r20
     880:	5f 93       	push	r21
     882:	6f 93       	push	r22
     884:	7f 93       	push	r23
     886:	8f 93       	push	r24
     888:	9f 93       	push	r25
     88a:	af 93       	push	r26
     88c:	bf 93       	push	r27
     88e:	ef 93       	push	r30
     890:	ff 93       	push	r31
		__timer_overflowService(TIMER0);
     892:	81 e2       	ldi	r24, 0x21	; 33
     894:	91 e0       	ldi	r25, 0x01	; 1
     896:	0e 94 83 0e 	call	0x1d06	; 0x1d06 <__timer_overflowService>
	}
     89a:	ff 91       	pop	r31
     89c:	ef 91       	pop	r30
     89e:	bf 91       	pop	r27
     8a0:	af 91       	pop	r26
     8a2:	9f 91       	pop	r25
     8a4:	8f 91       	pop	r24
     8a6:	7f 91       	pop	r23
     8a8:	6f 91       	pop	r22
     8aa:	5f 91       	pop	r21
     8ac:	4f 91       	pop	r20
     8ae:	3f 91       	pop	r19
     8b0:	2f 91       	pop	r18
     8b2:	0f 90       	pop	r0
     8b4:	0f be       	out	0x3f, r0	; 63
     8b6:	0f 90       	pop	r0
     8b8:	1f 90       	pop	r1
     8ba:	18 95       	reti

000008bc <__vector_10>:
	}
	#endif // TIMER1_COMP_vect

	#ifdef TIMER1_CAPT_vect
	// Interrupt handler for tcnt1 capture interrupt
	TIMER_INTERRUPT_HANDLER(TIMER1_CAPT_vect){
     8bc:	1f 92       	push	r1
     8be:	0f 92       	push	r0
     8c0:	0f b6       	in	r0, 0x3f	; 63
     8c2:	0f 92       	push	r0
     8c4:	11 24       	eor	r1, r1
     8c6:	2f 93       	push	r18
     8c8:	3f 93       	push	r19
     8ca:	4f 93       	push	r20
     8cc:	5f 93       	push	r21
     8ce:	6f 93       	push	r22
     8d0:	7f 93       	push	r23
     8d2:	8f 93       	push	r24
     8d4:	9f 93       	push	r25
     8d6:	af 93       	push	r26
     8d8:	bf 93       	push	r27
     8da:	ef 93       	push	r30
     8dc:	ff 93       	push	r31
		__timer_captureService(TIMER1);
     8de:	8d e4       	ldi	r24, 0x4D	; 77
     8e0:	91 e0       	ldi	r25, 0x01	; 1
     8e2:	0e 94 92 0e 	call	0x1d24	; 0x1d24 <__timer_captureService>
	}
     8e6:	ff 91       	pop	r31
     8e8:	ef 91       	pop	r30
     8ea:	bf 91       	pop	r27
     8ec:	af 91       	pop	r26
     8ee:	9f 91       	pop	r25
     8f0:	8f 91       	pop	r24
     8f2:	7f 91       	pop	r23
     8f4:	6f 91       	pop	r22
     8f6:	5f 91       	pop	r21
     8f8:	4f 91       	pop	r20
     8fa:	3f 91       	pop	r19
     8fc:	2f 91       	pop	r18
     8fe:	0f 90       	pop	r0
     900:	0f be       	out	0x3f, r0	; 63
     902:	0f 90       	pop	r0
     904:	1f 90       	pop	r1
     906:	18 95       	reti

00000908 <setSpeed>:
     908:	df 92       	push	r13
     90a:	ef 92       	push	r14
     90c:	ff 92       	push	r15
     90e:	0f 93       	push	r16
     910:	1f 93       	push	r17
     912:	cf 93       	push	r28
     914:	df 93       	push	r29
     916:	d6 2e       	mov	r13, r22
     918:	8c 01       	movw	r16, r24
     91a:	fc 01       	movw	r30, r24
     91c:	84 81       	ldd	r24, Z+4	; 0x04
     91e:	95 81       	ldd	r25, Z+5	; 0x05
     920:	0e 94 6f 16 	call	0x2cde	; 0x2cde <compareFromIOPin>
     924:	7c 01       	movw	r14, r24
     926:	f8 01       	movw	r30, r16
     928:	86 81       	ldd	r24, Z+6	; 0x06
     92a:	97 81       	ldd	r25, Z+7	; 0x07
     92c:	0e 94 6f 16 	call	0x2cde	; 0x2cde <compareFromIOPin>
     930:	ec 01       	movw	r28, r24
     932:	1d 14       	cp	r1, r13
     934:	0c f5       	brge	.+66     	; 0x978 <setSpeed+0x70>
     936:	22 96       	adiw	r28, 0x02	; 2
     938:	fe 01       	movw	r30, r28
     93a:	84 91       	lpm	r24, Z+
     93c:	22 97       	sbiw	r28, 0x02	; 2
     93e:	2c e2       	ldi	r18, 0x2C	; 44
     940:	82 9f       	mul	r24, r18
     942:	c0 01       	movw	r24, r0
     944:	11 24       	eor	r1, r1
     946:	8f 5d       	subi	r24, 0xDF	; 223
     948:	9e 4f       	sbci	r25, 0xFE	; 254
     94a:	0e 94 1f 11 	call	0x223e	; 0x223e <timerGetTOP>
     94e:	8c 01       	movw	r16, r24
     950:	8d 2d       	mov	r24, r13
     952:	99 27       	eor	r25, r25
     954:	87 fd       	sbrc	r24, 7
     956:	90 95       	com	r25
     958:	60 e0       	ldi	r22, 0x00	; 0
     95a:	70 e0       	ldi	r23, 0x00	; 0
     95c:	4f e7       	ldi	r20, 0x7F	; 127
     95e:	50 e0       	ldi	r21, 0x00	; 0
     960:	20 e0       	ldi	r18, 0x00	; 0
     962:	30 e0       	ldi	r19, 0x00	; 0
     964:	0e 94 70 09 	call	0x12e0	; 0x12e0 <interpolateU>
     968:	8c 01       	movw	r16, r24
     96a:	c7 01       	movw	r24, r14
     96c:	60 e0       	ldi	r22, 0x00	; 0
     96e:	70 e0       	ldi	r23, 0x00	; 0
     970:	0e 94 bd 10 	call	0x217a	; 0x217a <compareSetThreshold>
     974:	ce 01       	movw	r24, r28
     976:	28 c0       	rjmp	.+80     	; 0x9c8 <setSpeed+0xc0>
     978:	dd 20       	and	r13, r13
     97a:	41 f1       	breq	.+80     	; 0x9cc <setSpeed+0xc4>
     97c:	22 e0       	ldi	r18, 0x02	; 2
     97e:	30 e0       	ldi	r19, 0x00	; 0
     980:	e2 0e       	add	r14, r18
     982:	f3 1e       	adc	r15, r19
     984:	f7 01       	movw	r30, r14
     986:	84 91       	lpm	r24, Z+
     988:	2e ef       	ldi	r18, 0xFE	; 254
     98a:	3f ef       	ldi	r19, 0xFF	; 255
     98c:	e2 0e       	add	r14, r18
     98e:	f3 1e       	adc	r15, r19
     990:	2c e2       	ldi	r18, 0x2C	; 44
     992:	82 9f       	mul	r24, r18
     994:	c0 01       	movw	r24, r0
     996:	11 24       	eor	r1, r1
     998:	8f 5d       	subi	r24, 0xDF	; 223
     99a:	9e 4f       	sbci	r25, 0xFE	; 254
     99c:	0e 94 1f 11 	call	0x223e	; 0x223e <timerGetTOP>
     9a0:	8c 01       	movw	r16, r24
     9a2:	8d 2d       	mov	r24, r13
     9a4:	99 27       	eor	r25, r25
     9a6:	87 fd       	sbrc	r24, 7
     9a8:	90 95       	com	r25
     9aa:	60 e0       	ldi	r22, 0x00	; 0
     9ac:	70 e0       	ldi	r23, 0x00	; 0
     9ae:	41 e8       	ldi	r20, 0x81	; 129
     9b0:	5f ef       	ldi	r21, 0xFF	; 255
     9b2:	20 e0       	ldi	r18, 0x00	; 0
     9b4:	30 e0       	ldi	r19, 0x00	; 0
     9b6:	0e 94 70 09 	call	0x12e0	; 0x12e0 <interpolateU>
     9ba:	8c 01       	movw	r16, r24
     9bc:	ce 01       	movw	r24, r28
     9be:	60 e0       	ldi	r22, 0x00	; 0
     9c0:	70 e0       	ldi	r23, 0x00	; 0
     9c2:	0e 94 bd 10 	call	0x217a	; 0x217a <compareSetThreshold>
     9c6:	c7 01       	movw	r24, r14
     9c8:	b8 01       	movw	r22, r16
     9ca:	08 c0       	rjmp	.+16     	; 0x9dc <setSpeed+0xd4>
     9cc:	c7 01       	movw	r24, r14
     9ce:	60 e0       	ldi	r22, 0x00	; 0
     9d0:	70 e0       	ldi	r23, 0x00	; 0
     9d2:	0e 94 bd 10 	call	0x217a	; 0x217a <compareSetThreshold>
     9d6:	ce 01       	movw	r24, r28
     9d8:	60 e0       	ldi	r22, 0x00	; 0
     9da:	70 e0       	ldi	r23, 0x00	; 0
     9dc:	0e 94 bd 10 	call	0x217a	; 0x217a <compareSetThreshold>
     9e0:	df 91       	pop	r29
     9e2:	cf 91       	pop	r28
     9e4:	1f 91       	pop	r17
     9e6:	0f 91       	pop	r16
     9e8:	ff 90       	pop	r15
     9ea:	ef 90       	pop	r14
     9ec:	df 90       	pop	r13
     9ee:	08 95       	ret

000009f0 <setConnected>:
     9f0:	bf 92       	push	r11
     9f2:	cf 92       	push	r12
     9f4:	df 92       	push	r13
     9f6:	ef 92       	push	r14
     9f8:	ff 92       	push	r15
     9fa:	0f 93       	push	r16
     9fc:	1f 93       	push	r17
     9fe:	cf 93       	push	r28
     a00:	df 93       	push	r29
     a02:	08 2f       	mov	r16, r24
     a04:	b9 2e       	mov	r11, r25
     a06:	16 2f       	mov	r17, r22
     a08:	c8 2f       	mov	r28, r24
     a0a:	d9 2f       	mov	r29, r25
     a0c:	8c 81       	ldd	r24, Y+4	; 0x04
     a0e:	9d 81       	ldd	r25, Y+5	; 0x05
     a10:	0e 94 6f 16 	call	0x2cde	; 0x2cde <compareFromIOPin>
     a14:	7c 01       	movw	r14, r24
     a16:	8e 81       	ldd	r24, Y+6	; 0x06
     a18:	9f 81       	ldd	r25, Y+7	; 0x07
     a1a:	0e 94 6f 16 	call	0x2cde	; 0x2cde <compareFromIOPin>
     a1e:	6c 01       	movw	r12, r24
     a20:	11 23       	and	r17, r17
     a22:	31 f0       	breq	.+12     	; 0xa30 <setConnected+0x40>
     a24:	80 2f       	mov	r24, r16
     a26:	9b 2d       	mov	r25, r11
     a28:	6a 81       	ldd	r22, Y+2	; 0x02
     a2a:	0e 94 84 04 	call	0x908	; 0x908 <setSpeed>
     a2e:	2b c0       	rjmp	.+86     	; 0xa86 <setConnected+0x96>
     a30:	22 e0       	ldi	r18, 0x02	; 2
     a32:	30 e0       	ldi	r19, 0x00	; 0
     a34:	e2 0e       	add	r14, r18
     a36:	f3 1e       	adc	r15, r19
     a38:	f7 01       	movw	r30, r14
     a3a:	84 91       	lpm	r24, Z+
     a3c:	2e ef       	ldi	r18, 0xFE	; 254
     a3e:	3f ef       	ldi	r19, 0xFF	; 255
     a40:	e2 0e       	add	r14, r18
     a42:	f3 1e       	adc	r15, r19
     a44:	1c e2       	ldi	r17, 0x2C	; 44
     a46:	81 9f       	mul	r24, r17
     a48:	c0 01       	movw	r24, r0
     a4a:	11 24       	eor	r1, r1
     a4c:	8f 5d       	subi	r24, 0xDF	; 223
     a4e:	9e 4f       	sbci	r25, 0xFE	; 254
     a50:	0e 94 1f 11 	call	0x223e	; 0x223e <timerGetTOP>
     a54:	bc 01       	movw	r22, r24
     a56:	c7 01       	movw	r24, r14
     a58:	0e 94 bd 10 	call	0x217a	; 0x217a <compareSetThreshold>
     a5c:	82 e0       	ldi	r24, 0x02	; 2
     a5e:	90 e0       	ldi	r25, 0x00	; 0
     a60:	c8 0e       	add	r12, r24
     a62:	d9 1e       	adc	r13, r25
     a64:	f6 01       	movw	r30, r12
     a66:	84 91       	lpm	r24, Z+
     a68:	2e ef       	ldi	r18, 0xFE	; 254
     a6a:	3f ef       	ldi	r19, 0xFF	; 255
     a6c:	c2 0e       	add	r12, r18
     a6e:	d3 1e       	adc	r13, r19
     a70:	81 9f       	mul	r24, r17
     a72:	c0 01       	movw	r24, r0
     a74:	11 24       	eor	r1, r1
     a76:	8f 5d       	subi	r24, 0xDF	; 223
     a78:	9e 4f       	sbci	r25, 0xFE	; 254
     a7a:	0e 94 1f 11 	call	0x223e	; 0x223e <timerGetTOP>
     a7e:	bc 01       	movw	r22, r24
     a80:	c6 01       	movw	r24, r12
     a82:	0e 94 bd 10 	call	0x217a	; 0x217a <compareSetThreshold>
     a86:	df 91       	pop	r29
     a88:	cf 91       	pop	r28
     a8a:	1f 91       	pop	r17
     a8c:	0f 91       	pop	r16
     a8e:	ff 90       	pop	r15
     a90:	ef 90       	pop	r14
     a92:	df 90       	pop	r13
     a94:	cf 90       	pop	r12
     a96:	bf 90       	pop	r11
     a98:	08 95       	ret

00000a9a <initPWM>:
     a9a:	6f 92       	push	r6
     a9c:	7f 92       	push	r7
     a9e:	8f 92       	push	r8
     aa0:	9f 92       	push	r9
     aa2:	af 92       	push	r10
     aa4:	bf 92       	push	r11
     aa6:	cf 92       	push	r12
     aa8:	df 92       	push	r13
     aaa:	ef 92       	push	r14
     aac:	ff 92       	push	r15
     aae:	0f 93       	push	r16
     ab0:	1f 93       	push	r17
     ab2:	df 93       	push	r29
     ab4:	cf 93       	push	r28
     ab6:	00 d0       	rcall	.+0      	; 0xab8 <initPWM+0x1e>
     ab8:	00 d0       	rcall	.+0      	; 0xaba <initPWM+0x20>
     aba:	0f 92       	push	r0
     abc:	cd b7       	in	r28, 0x3d	; 61
     abe:	de b7       	in	r29, 0x3e	; 62
     ac0:	3c 01       	movw	r6, r24
     ac2:	0e 94 6f 16 	call	0x2cde	; 0x2cde <compareFromIOPin>
     ac6:	5c 01       	movw	r10, r24
     ac8:	00 97       	sbiw	r24, 0x00	; 0
     aca:	11 f4       	brne	.+4      	; 0xad0 <initPWM+0x36>
     acc:	84 ef       	ldi	r24, 0xF4	; 244
     ace:	05 c0       	rjmp	.+10     	; 0xada <initPWM+0x40>
     ad0:	0e 94 41 16 	call	0x2c82	; 0x2c82 <compareIsInUse>
     ad4:	88 23       	and	r24, r24
     ad6:	29 f0       	breq	.+10     	; 0xae2 <initPWM+0x48>
     ad8:	83 ef       	ldi	r24, 0xF3	; 243
     ada:	0e 94 2d 10 	call	0x205a	; 0x205a <setError>
     ade:	10 e0       	ldi	r17, 0x00	; 0
     ae0:	64 c0       	rjmp	.+200    	; 0xbaa <initPWM+0x110>
     ae2:	22 e0       	ldi	r18, 0x02	; 2
     ae4:	30 e0       	ldi	r19, 0x00	; 0
     ae6:	a2 0e       	add	r10, r18
     ae8:	b3 1e       	adc	r11, r19
     aea:	f5 01       	movw	r30, r10
     aec:	94 91       	lpm	r25, Z+
     aee:	2e ef       	ldi	r18, 0xFE	; 254
     af0:	3f ef       	ldi	r19, 0xFF	; 255
     af2:	a2 0e       	add	r10, r18
     af4:	b3 1e       	adc	r11, r19
     af6:	8c e2       	ldi	r24, 0x2C	; 44
     af8:	98 9f       	mul	r25, r24
     afa:	40 01       	movw	r8, r0
     afc:	11 24       	eor	r1, r1
     afe:	81 e2       	ldi	r24, 0x21	; 33
     b00:	91 e0       	ldi	r25, 0x01	; 1
     b02:	88 0e       	add	r8, r24
     b04:	99 1e       	adc	r9, r25
     b06:	c4 01       	movw	r24, r8
     b08:	40 ea       	ldi	r20, 0xA0	; 160
     b0a:	56 e8       	ldi	r21, 0x86	; 134
     b0c:	61 e0       	ldi	r22, 0x01	; 1
     b0e:	70 e0       	ldi	r23, 0x00	; 0
     b10:	20 e8       	ldi	r18, 0x80	; 128
     b12:	30 e0       	ldi	r19, 0x00	; 0
     b14:	8e 01       	movw	r16, r28
     b16:	0f 5f       	subi	r16, 0xFF	; 255
     b18:	1f 4f       	sbci	r17, 0xFF	; 255
     b1a:	f2 e0       	ldi	r31, 0x02	; 2
     b1c:	ef 2e       	mov	r14, r31
     b1e:	f1 2c       	mov	r15, r1
     b20:	ec 0e       	add	r14, r28
     b22:	fd 1e       	adc	r15, r29
     b24:	e4 e0       	ldi	r30, 0x04	; 4
     b26:	ce 2e       	mov	r12, r30
     b28:	d1 2c       	mov	r13, r1
     b2a:	cc 0e       	add	r12, r28
     b2c:	dd 1e       	adc	r13, r29
     b2e:	0e 94 b1 17 	call	0x2f62	; 0x2f62 <timerCalcPwm>
     b32:	18 2f       	mov	r17, r24
     b34:	f4 01       	movw	r30, r8
     b36:	34 96       	adiw	r30, 0x04	; 4
     b38:	88 23       	and	r24, r24
     b3a:	71 f4       	brne	.+28     	; 0xb58 <initPWM+0xbe>
     b3c:	a5 91       	lpm	r26, Z+
     b3e:	b4 91       	lpm	r27, Z+
     b40:	8c 91       	ld	r24, X
     b42:	90 e0       	ldi	r25, 0x00	; 0
     b44:	87 70       	andi	r24, 0x07	; 7
     b46:	90 70       	andi	r25, 0x00	; 0
     b48:	89 2b       	or	r24, r25
     b4a:	11 f4       	brne	.+4      	; 0xb50 <initPWM+0xb6>
     b4c:	83 ee       	ldi	r24, 0xE3	; 227
     b4e:	01 c0       	rjmp	.+2      	; 0xb52 <initPWM+0xb8>
     b50:	82 ef       	ldi	r24, 0xF2	; 242
     b52:	0e 94 2d 10 	call	0x205a	; 0x205a <setError>
     b56:	29 c0       	rjmp	.+82     	; 0xbaa <initPWM+0x110>
     b58:	a5 91       	lpm	r26, Z+
     b5a:	b4 91       	lpm	r27, Z+
     b5c:	8c 91       	ld	r24, X
     b5e:	90 e0       	ldi	r25, 0x00	; 0
     b60:	87 70       	andi	r24, 0x07	; 7
     b62:	90 70       	andi	r25, 0x00	; 0
     b64:	89 2b       	or	r24, r25
     b66:	59 f4       	brne	.+22     	; 0xb7e <initPWM+0xe4>
     b68:	35 c0       	rjmp	.+106    	; 0xbd4 <initPWM+0x13a>
     b6a:	c4 01       	movw	r24, r8
     b6c:	4f 96       	adiw	r24, 0x1f	; 31
     b6e:	fc 01       	movw	r30, r24
     b70:	a5 91       	lpm	r26, Z+
     b72:	b4 91       	lpm	r27, Z+
     b74:	8a 81       	ldd	r24, Y+2	; 0x02
     b76:	9b 81       	ldd	r25, Y+3	; 0x03
     b78:	11 96       	adiw	r26, 0x01	; 1
     b7a:	9c 93       	st	X, r25
     b7c:	8e 93       	st	-X, r24
     b7e:	c3 01       	movw	r24, r6
     b80:	6f ef       	ldi	r22, 0xFF	; 255
     b82:	0e 94 ed 09 	call	0x13da	; 0x13da <pin_make_output>
     b86:	c5 01       	movw	r24, r10
     b88:	63 e0       	ldi	r22, 0x03	; 3
     b8a:	0e 94 44 0e 	call	0x1c88	; 0x1c88 <compareSetOutputMode>
     b8e:	c5 01       	movw	r24, r10
     b90:	61 ed       	ldi	r22, 0xD1	; 209
     b92:	7d e0       	ldi	r23, 0x0D	; 13
     b94:	40 e0       	ldi	r20, 0x00	; 0
     b96:	50 e0       	ldi	r21, 0x00	; 0
     b98:	20 e0       	ldi	r18, 0x00	; 0
     b9a:	30 e0       	ldi	r19, 0x00	; 0
     b9c:	0e 94 9a 13 	call	0x2734	; 0x2734 <compareAttach>
     ba0:	6c 81       	ldd	r22, Y+4	; 0x04
     ba2:	7d 81       	ldd	r23, Y+5	; 0x05
     ba4:	c4 01       	movw	r24, r8
     ba6:	0e 94 46 12 	call	0x248c	; 0x248c <timerSetPrescaler>
     baa:	81 2f       	mov	r24, r17
     bac:	0f 90       	pop	r0
     bae:	0f 90       	pop	r0
     bb0:	0f 90       	pop	r0
     bb2:	0f 90       	pop	r0
     bb4:	0f 90       	pop	r0
     bb6:	cf 91       	pop	r28
     bb8:	df 91       	pop	r29
     bba:	1f 91       	pop	r17
     bbc:	0f 91       	pop	r16
     bbe:	ff 90       	pop	r15
     bc0:	ef 90       	pop	r14
     bc2:	df 90       	pop	r13
     bc4:	cf 90       	pop	r12
     bc6:	bf 90       	pop	r11
     bc8:	af 90       	pop	r10
     bca:	9f 90       	pop	r9
     bcc:	8f 90       	pop	r8
     bce:	7f 90       	pop	r7
     bd0:	6f 90       	pop	r6
     bd2:	08 95       	ret
     bd4:	c4 01       	movw	r24, r8
     bd6:	69 81       	ldd	r22, Y+1	; 0x01
     bd8:	0e 94 d5 12 	call	0x25aa	; 0x25aa <timerSetMode>
     bdc:	81 e0       	ldi	r24, 0x01	; 1
     bde:	90 e0       	ldi	r25, 0x00	; 0
     be0:	09 80       	ldd	r0, Y+1	; 0x01
     be2:	02 c0       	rjmp	.+4      	; 0xbe8 <initPWM+0x14e>
     be4:	88 0f       	add	r24, r24
     be6:	99 1f       	adc	r25, r25
     be8:	0a 94       	dec	r0
     bea:	e2 f7       	brpl	.-8      	; 0xbe4 <initPWM+0x14a>
     bec:	80 70       	andi	r24, 0x00	; 0
     bee:	95 75       	andi	r25, 0x55	; 85
     bf0:	89 2b       	or	r24, r25
     bf2:	09 f0       	breq	.+2      	; 0xbf6 <initPWM+0x15c>
     bf4:	ba cf       	rjmp	.-140    	; 0xb6a <initPWM+0xd0>
     bf6:	c3 cf       	rjmp	.-122    	; 0xb7e <initPWM+0xe4>

00000bf8 <sanyoLB1836M_Init>:
     bf8:	af 92       	push	r10
     bfa:	bf 92       	push	r11
     bfc:	cf 92       	push	r12
     bfe:	df 92       	push	r13
     c00:	ef 92       	push	r14
     c02:	ff 92       	push	r15
     c04:	0f 93       	push	r16
     c06:	1f 93       	push	r17
     c08:	cf 93       	push	r28
     c0a:	df 93       	push	r29
     c0c:	6c 01       	movw	r12, r24
     c0e:	dc 01       	movw	r26, r24
     c10:	12 96       	adiw	r26, 0x02	; 2
     c12:	8c 91       	ld	r24, X
     c14:	08 2f       	mov	r16, r24
     c16:	10 e0       	ldi	r17, 0x00	; 0
     c18:	01 50       	subi	r16, 0x01	; 1
     c1a:	10 40       	sbci	r17, 0x00	; 0
     c1c:	78 01       	movw	r14, r16
     c1e:	ee 0c       	add	r14, r14
     c20:	ff 1c       	adc	r15, r15
     c22:	ad ed       	ldi	r26, 0xDD	; 221
     c24:	aa 2e       	mov	r10, r26
     c26:	a1 e0       	ldi	r26, 0x01	; 1
     c28:	ba 2e       	mov	r11, r26
     c2a:	23 c0       	rjmp	.+70     	; 0xc72 <sanyoLB1836M_Init+0x7a>
     c2c:	d6 01       	movw	r26, r12
     c2e:	ed 91       	ld	r30, X+
     c30:	fc 91       	ld	r31, X
     c32:	ee 0d       	add	r30, r14
     c34:	ff 1d       	adc	r31, r15
     c36:	c5 91       	lpm	r28, Z+
     c38:	d4 91       	lpm	r29, Z+
     c3a:	8c 81       	ldd	r24, Y+4	; 0x04
     c3c:	9d 81       	ldd	r25, Y+5	; 0x05
     c3e:	0e 94 4d 05 	call	0xa9a	; 0xa9a <initPWM>
     c42:	88 23       	and	r24, r24
     c44:	41 f0       	breq	.+16     	; 0xc56 <sanyoLB1836M_Init+0x5e>
     c46:	8e 81       	ldd	r24, Y+6	; 0x06
     c48:	9f 81       	ldd	r25, Y+7	; 0x07
     c4a:	0e 94 4d 05 	call	0xa9a	; 0xa9a <initPWM>
     c4e:	88 23       	and	r24, r24
     c50:	11 f0       	breq	.+4      	; 0xc56 <sanyoLB1836M_Init+0x5e>
     c52:	b9 82       	std	Y+1, r11	; 0x01
     c54:	a8 82       	st	Y, r10
     c56:	ce 01       	movw	r24, r28
     c58:	60 e0       	ldi	r22, 0x00	; 0
     c5a:	0e 94 e7 07 	call	0xfce	; 0xfce <__act_setSpeed>
     c5e:	ce 01       	movw	r24, r28
     c60:	6f ef       	ldi	r22, 0xFF	; 255
     c62:	0e 94 07 08 	call	0x100e	; 0x100e <__act_setConnected>
     c66:	01 50       	subi	r16, 0x01	; 1
     c68:	10 40       	sbci	r17, 0x00	; 0
     c6a:	ee ef       	ldi	r30, 0xFE	; 254
     c6c:	ff ef       	ldi	r31, 0xFF	; 255
     c6e:	ee 0e       	add	r14, r30
     c70:	ff 1e       	adc	r15, r31
     c72:	ff ef       	ldi	r31, 0xFF	; 255
     c74:	0f 3f       	cpi	r16, 0xFF	; 255
     c76:	1f 07       	cpc	r17, r31
     c78:	c9 f6       	brne	.-78     	; 0xc2c <sanyoLB1836M_Init+0x34>
     c7a:	df 91       	pop	r29
     c7c:	cf 91       	pop	r28
     c7e:	1f 91       	pop	r17
     c80:	0f 91       	pop	r16
     c82:	ff 90       	pop	r15
     c84:	ef 90       	pop	r14
     c86:	df 90       	pop	r13
     c88:	cf 90       	pop	r12
     c8a:	bf 90       	pop	r11
     c8c:	af 90       	pop	r10
     c8e:	08 95       	ret

00000c90 <_uartStartXmit>:
     c90:	dc 01       	movw	r26, r24
     c92:	17 96       	adiw	r26, 0x07	; 7
     c94:	8d 91       	ld	r24, X+
     c96:	9c 91       	ld	r25, X
     c98:	18 97       	sbiw	r26, 0x08	; 8
     c9a:	02 96       	adiw	r24, 0x02	; 2
     c9c:	fc 01       	movw	r30, r24
     c9e:	25 91       	lpm	r18, Z+
     ca0:	34 91       	lpm	r19, Z+
     ca2:	cd 01       	movw	r24, r26
     ca4:	f9 01       	movw	r30, r18
     ca6:	09 95       	icall
     ca8:	08 95       	ret

00000caa <_uartTransmitBlockStart>:
     caa:	cf 93       	push	r28
     cac:	df 93       	push	r29
     cae:	ec 01       	movw	r28, r24
     cb0:	8e 81       	ldd	r24, Y+6	; 0x06
     cb2:	8e 7f       	andi	r24, 0xFE	; 254
     cb4:	8e 83       	std	Y+6, r24	; 0x06
     cb6:	ec 89       	ldd	r30, Y+20	; 0x14
     cb8:	fd 89       	ldd	r31, Y+21	; 0x15
     cba:	30 97       	sbiw	r30, 0x00	; 0
     cbc:	21 f0       	breq	.+8      	; 0xcc6 <_uartTransmitBlockStart+0x1c>
     cbe:	8e 89       	ldd	r24, Y+22	; 0x16
     cc0:	9f 89       	ldd	r25, Y+23	; 0x17
     cc2:	6f ef       	ldi	r22, 0xFF	; 255
     cc4:	09 95       	icall
     cc6:	ef 81       	ldd	r30, Y+7	; 0x07
     cc8:	f8 85       	ldd	r31, Y+8	; 0x08
     cca:	38 96       	adiw	r30, 0x08	; 8
     ccc:	25 91       	lpm	r18, Z+
     cce:	34 91       	lpm	r19, Z+
     cd0:	21 15       	cp	r18, r1
     cd2:	31 05       	cpc	r19, r1
     cd4:	19 f0       	breq	.+6      	; 0xcdc <_uartTransmitBlockStart+0x32>
     cd6:	ce 01       	movw	r24, r28
     cd8:	f9 01       	movw	r30, r18
     cda:	09 95       	icall
     cdc:	df 91       	pop	r29
     cde:	cf 91       	pop	r28
     ce0:	08 95       	ret

00000ce2 <_uartTransmitBlockEnd>:
     ce2:	cf 93       	push	r28
     ce4:	df 93       	push	r29
     ce6:	ec 01       	movw	r28, r24
     ce8:	8e 81       	ldd	r24, Y+6	; 0x06
     cea:	81 60       	ori	r24, 0x01	; 1
     cec:	8e 83       	std	Y+6, r24	; 0x06
     cee:	ef 81       	ldd	r30, Y+7	; 0x07
     cf0:	f8 85       	ldd	r31, Y+8	; 0x08
     cf2:	3a 96       	adiw	r30, 0x0a	; 10
     cf4:	25 91       	lpm	r18, Z+
     cf6:	34 91       	lpm	r19, Z+
     cf8:	21 15       	cp	r18, r1
     cfa:	31 05       	cpc	r19, r1
     cfc:	19 f0       	breq	.+6      	; 0xd04 <_uartTransmitBlockEnd+0x22>
     cfe:	ce 01       	movw	r24, r28
     d00:	f9 01       	movw	r30, r18
     d02:	09 95       	icall
     d04:	ec 89       	ldd	r30, Y+20	; 0x14
     d06:	fd 89       	ldd	r31, Y+21	; 0x15
     d08:	30 97       	sbiw	r30, 0x00	; 0
     d0a:	21 f0       	breq	.+8      	; 0xd14 <_uartTransmitBlockEnd+0x32>
     d0c:	8e 89       	ldd	r24, Y+22	; 0x16
     d0e:	9f 89       	ldd	r25, Y+23	; 0x17
     d10:	60 e0       	ldi	r22, 0x00	; 0
     d12:	09 95       	icall
     d14:	df 91       	pop	r29
     d16:	cf 91       	pop	r28
     d18:	08 95       	ret

00000d1a <_uartSetBaudRate>:
     d1a:	dc 01       	movw	r26, r24
     d1c:	17 96       	adiw	r26, 0x07	; 7
     d1e:	8d 91       	ld	r24, X+
     d20:	9c 91       	ld	r25, X
     d22:	18 97       	sbiw	r26, 0x08	; 8
     d24:	fc 01       	movw	r30, r24
     d26:	25 91       	lpm	r18, Z+
     d28:	34 91       	lpm	r19, Z+
     d2a:	cd 01       	movw	r24, r26
     d2c:	f9 01       	movw	r30, r18
     d2e:	09 95       	icall
     d30:	08 95       	ret

00000d32 <_uartOff>:
     d32:	dc 01       	movw	r26, r24
     d34:	17 96       	adiw	r26, 0x07	; 7
     d36:	ed 91       	ld	r30, X+
     d38:	fc 91       	ld	r31, X
     d3a:	18 97       	sbiw	r26, 0x08	; 8
     d3c:	36 96       	adiw	r30, 0x06	; 6
     d3e:	25 91       	lpm	r18, Z+
     d40:	34 91       	lpm	r19, Z+
     d42:	9f b7       	in	r25, 0x3f	; 63
     d44:	78 94       	sei
     d46:	16 96       	adiw	r26, 0x06	; 6
     d48:	8c 91       	ld	r24, X
     d4a:	16 97       	sbiw	r26, 0x06	; 6
     d4c:	80 ff       	sbrs	r24, 0
     d4e:	fb cf       	rjmp	.-10     	; 0xd46 <_uartOff+0x14>
     d50:	9f bf       	out	0x3f, r25	; 63
     d52:	cd 01       	movw	r24, r26
     d54:	f9 01       	movw	r30, r18
     d56:	09 95       	icall
     d58:	08 95       	ret

00000d5a <__uartReceiveBufferIsEmpty>:
     d5a:	dc 01       	movw	r26, r24
     d5c:	ed 91       	ld	r30, X+
     d5e:	fc 91       	ld	r31, X
     d60:	11 97       	sbiw	r26, 0x01	; 1
     d62:	30 97       	sbiw	r30, 0x00	; 0
     d64:	59 f0       	breq	.+22     	; 0xd7c <__uartReceiveBufferIsEmpty+0x22>
     d66:	2f b7       	in	r18, 0x3f	; 63
     d68:	f8 94       	cli
     d6a:	84 81       	ldd	r24, Z+4	; 0x04
     d6c:	95 81       	ldd	r25, Z+5	; 0x05
     d6e:	89 2b       	or	r24, r25
     d70:	11 f0       	breq	.+4      	; 0xd76 <__uartReceiveBufferIsEmpty+0x1c>
     d72:	80 e0       	ldi	r24, 0x00	; 0
     d74:	01 c0       	rjmp	.+2      	; 0xd78 <__uartReceiveBufferIsEmpty+0x1e>
     d76:	8f ef       	ldi	r24, 0xFF	; 255
     d78:	2f bf       	out	0x3f, r18	; 63
     d7a:	08 95       	ret
     d7c:	2f b7       	in	r18, 0x3f	; 63
     d7e:	f8 94       	cli
     d80:	19 96       	adiw	r26, 0x09	; 9
     d82:	8d 91       	ld	r24, X+
     d84:	9c 91       	ld	r25, X
     d86:	1a 97       	sbiw	r26, 0x0a	; 10
     d88:	8f 5f       	subi	r24, 0xFF	; 255
     d8a:	9f 4f       	sbci	r25, 0xFF	; 255
     d8c:	11 f0       	breq	.+4      	; 0xd92 <__uartReceiveBufferIsEmpty+0x38>
     d8e:	80 e0       	ldi	r24, 0x00	; 0
     d90:	01 c0       	rjmp	.+2      	; 0xd94 <__uartReceiveBufferIsEmpty+0x3a>
     d92:	8f ef       	ldi	r24, 0xFF	; 255
     d94:	2f bf       	out	0x3f, r18	; 63
     d96:	08 95       	ret

00000d98 <__uartFlushReceiveBuffer>:
     d98:	fc 01       	movw	r30, r24
     d9a:	80 81       	ld	r24, Z
     d9c:	91 81       	ldd	r25, Z+1	; 0x01
     d9e:	00 97       	sbiw	r24, 0x00	; 0
     da0:	19 f0       	breq	.+6      	; 0xda8 <__uartFlushReceiveBuffer+0x10>
     da2:	0e 94 a8 08 	call	0x1150	; 0x1150 <bufferFlush>
     da6:	08 95       	ret
     da8:	2f b7       	in	r18, 0x3f	; 63
     daa:	f8 94       	cli
     dac:	8f ef       	ldi	r24, 0xFF	; 255
     dae:	9f ef       	ldi	r25, 0xFF	; 255
     db0:	92 87       	std	Z+10, r25	; 0x0a
     db2:	81 87       	std	Z+9, r24	; 0x09
     db4:	2f bf       	out	0x3f, r18	; 63
     db6:	08 95       	ret

00000db8 <_uartInit>:
     db8:	ef 92       	push	r14
     dba:	ff 92       	push	r15
     dbc:	0f 93       	push	r16
     dbe:	1f 93       	push	r17
     dc0:	cf 93       	push	r28
     dc2:	df 93       	push	r29
     dc4:	ec 01       	movw	r28, r24
     dc6:	7a 01       	movw	r14, r20
     dc8:	8b 01       	movw	r16, r22
     dca:	f8 94       	cli
     dcc:	8b 89       	ldd	r24, Y+19	; 0x13
     dce:	88 23       	and	r24, r24
     dd0:	81 f0       	breq	.+32     	; 0xdf2 <_uartInit+0x3a>
     dd2:	2b 85       	ldd	r18, Y+11	; 0x0b
     dd4:	3c 85       	ldd	r19, Y+12	; 0x0c
     dd6:	8d 85       	ldd	r24, Y+13	; 0x0d
     dd8:	9e 85       	ldd	r25, Y+14	; 0x0e
     dda:	28 17       	cp	r18, r24
     ddc:	39 07       	cpc	r19, r25
     dde:	21 f0       	breq	.+8      	; 0xde8 <_uartInit+0x30>
     de0:	c9 01       	movw	r24, r18
     de2:	60 e0       	ldi	r22, 0x00	; 0
     de4:	0e 94 c6 09 	call	0x138c	; 0x138c <pin_make_input>
     de8:	8d 85       	ldd	r24, Y+13	; 0x0d
     dea:	9e 85       	ldd	r25, Y+14	; 0x0e
     dec:	6f ef       	ldi	r22, 0xFF	; 255
     dee:	0e 94 c6 09 	call	0x138c	; 0x138c <pin_make_input>
     df2:	8e 81       	ldd	r24, Y+6	; 0x06
     df4:	81 60       	ori	r24, 0x01	; 1
     df6:	8e 83       	std	Y+6, r24	; 0x06
     df8:	8e 81       	ldd	r24, Y+6	; 0x06
     dfa:	8b 7f       	andi	r24, 0xFB	; 251
     dfc:	8e 83       	std	Y+6, r24	; 0x06
     dfe:	8e 81       	ldd	r24, Y+6	; 0x06
     e00:	8d 7f       	andi	r24, 0xFD	; 253
     e02:	8e 83       	std	Y+6, r24	; 0x06
     e04:	8f 81       	ldd	r24, Y+7	; 0x07
     e06:	98 85       	ldd	r25, Y+8	; 0x08
     e08:	04 96       	adiw	r24, 0x04	; 4
     e0a:	fc 01       	movw	r30, r24
     e0c:	25 91       	lpm	r18, Z+
     e0e:	34 91       	lpm	r19, Z+
     e10:	ce 01       	movw	r24, r28
     e12:	b8 01       	movw	r22, r16
     e14:	a7 01       	movw	r20, r14
     e16:	f9 01       	movw	r30, r18
     e18:	09 95       	icall
     e1a:	78 94       	sei
     e1c:	df 91       	pop	r29
     e1e:	cf 91       	pop	r28
     e20:	1f 91       	pop	r17
     e22:	0f 91       	pop	r16
     e24:	ff 90       	pop	r15
     e26:	ef 90       	pop	r14
     e28:	08 95       	ret

00000e2a <_uartSendByte>:
     e2a:	0f 93       	push	r16
     e2c:	1f 93       	push	r17
     e2e:	cf 93       	push	r28
     e30:	df 93       	push	r29
     e32:	ec 01       	movw	r28, r24
     e34:	06 2f       	mov	r16, r22
     e36:	8a 81       	ldd	r24, Y+2	; 0x02
     e38:	9b 81       	ldd	r25, Y+3	; 0x03
     e3a:	89 2b       	or	r24, r25
     e3c:	19 f4       	brne	.+6      	; 0xe44 <_uartSendByte+0x1a>
     e3e:	19 c0       	rjmp	.+50     	; 0xe72 <_uartSendByte+0x48>
     e40:	0e 94 b1 08 	call	0x1162	; 0x1162 <breathe>
     e44:	8a 81       	ldd	r24, Y+2	; 0x02
     e46:	9b 81       	ldd	r25, Y+3	; 0x03
     e48:	0e 94 a0 08 	call	0x1140	; 0x1140 <bufferIsFull>
     e4c:	88 23       	and	r24, r24
     e4e:	c1 f7       	brne	.-16     	; 0xe40 <_uartSendByte+0x16>
     e50:	1f b7       	in	r17, 0x3f	; 63
     e52:	f8 94       	cli
     e54:	8e 81       	ldd	r24, Y+6	; 0x06
     e56:	81 fd       	sbrc	r24, 1
     e58:	04 c0       	rjmp	.+8      	; 0xe62 <_uartSendByte+0x38>
     e5a:	8e 81       	ldd	r24, Y+6	; 0x06
     e5c:	82 60       	ori	r24, 0x02	; 2
     e5e:	8e 83       	std	Y+6, r24	; 0x06
     e60:	0d c0       	rjmp	.+26     	; 0xe7c <_uartSendByte+0x52>
     e62:	8a 81       	ldd	r24, Y+2	; 0x02
     e64:	9b 81       	ldd	r25, Y+3	; 0x03
     e66:	60 2f       	mov	r22, r16
     e68:	0e 94 5c 08 	call	0x10b8	; 0x10b8 <bufferPut>
     e6c:	0e c0       	rjmp	.+28     	; 0xe8a <_uartSendByte+0x60>
     e6e:	0e 94 b1 08 	call	0x1162	; 0x1162 <breathe>
     e72:	8e 81       	ldd	r24, Y+6	; 0x06
     e74:	80 ff       	sbrs	r24, 0
     e76:	fb cf       	rjmp	.-10     	; 0xe6e <_uartSendByte+0x44>
     e78:	1f b7       	in	r17, 0x3f	; 63
     e7a:	f8 94       	cli
     e7c:	ce 01       	movw	r24, r28
     e7e:	0e 94 55 06 	call	0xcaa	; 0xcaa <_uartTransmitBlockStart>
     e82:	ce 01       	movw	r24, r28
     e84:	60 2f       	mov	r22, r16
     e86:	0e 94 48 06 	call	0xc90	; 0xc90 <_uartStartXmit>
     e8a:	1f bf       	out	0x3f, r17	; 63
     e8c:	80 2f       	mov	r24, r16
     e8e:	df 91       	pop	r29
     e90:	cf 91       	pop	r28
     e92:	1f 91       	pop	r17
     e94:	0f 91       	pop	r16
     e96:	08 95       	ret

00000e98 <_uartSendBuffer>:
     e98:	ef 92       	push	r14
     e9a:	ff 92       	push	r15
     e9c:	0f 93       	push	r16
     e9e:	1f 93       	push	r17
     ea0:	cf 93       	push	r28
     ea2:	df 93       	push	r29
     ea4:	7c 01       	movw	r14, r24
     ea6:	8b 01       	movw	r16, r22
     ea8:	ea 01       	movw	r28, r20
     eaa:	07 c0       	rjmp	.+14     	; 0xeba <_uartSendBuffer+0x22>
     eac:	f8 01       	movw	r30, r16
     eae:	61 91       	ld	r22, Z+
     eb0:	8f 01       	movw	r16, r30
     eb2:	c7 01       	movw	r24, r14
     eb4:	0e 94 15 07 	call	0xe2a	; 0xe2a <_uartSendByte>
     eb8:	21 97       	sbiw	r28, 0x01	; 1
     eba:	20 97       	sbiw	r28, 0x00	; 0
     ebc:	b9 f7       	brne	.-18     	; 0xeac <_uartSendBuffer+0x14>
     ebe:	df 91       	pop	r29
     ec0:	cf 91       	pop	r28
     ec2:	1f 91       	pop	r17
     ec4:	0f 91       	pop	r16
     ec6:	ff 90       	pop	r15
     ec8:	ef 90       	pop	r14
     eca:	08 95       	ret

00000ecc <__uartGetByte>:
     ecc:	df 93       	push	r29
     ece:	cf 93       	push	r28
     ed0:	0f 92       	push	r0
     ed2:	cd b7       	in	r28, 0x3d	; 61
     ed4:	de b7       	in	r29, 0x3e	; 62
     ed6:	fc 01       	movw	r30, r24
     ed8:	80 81       	ld	r24, Z
     eda:	91 81       	ldd	r25, Z+1	; 0x01
     edc:	00 97       	sbiw	r24, 0x00	; 0
     ede:	71 f0       	breq	.+28     	; 0xefc <__uartGetByte+0x30>
     ee0:	be 01       	movw	r22, r28
     ee2:	6f 5f       	subi	r22, 0xFF	; 255
     ee4:	7f 4f       	sbci	r23, 0xFF	; 255
     ee6:	0e 94 2f 08 	call	0x105e	; 0x105e <bufferGet>
     eea:	88 23       	and	r24, r24
     eec:	19 f4       	brne	.+6      	; 0xef4 <__uartGetByte+0x28>
     eee:	4f ef       	ldi	r20, 0xFF	; 255
     ef0:	5f ef       	ldi	r21, 0xFF	; 255
     ef2:	0d c0       	rjmp	.+26     	; 0xf0e <__uartGetByte+0x42>
     ef4:	89 81       	ldd	r24, Y+1	; 0x01
     ef6:	48 2f       	mov	r20, r24
     ef8:	50 e0       	ldi	r21, 0x00	; 0
     efa:	09 c0       	rjmp	.+18     	; 0xf0e <__uartGetByte+0x42>
     efc:	2f b7       	in	r18, 0x3f	; 63
     efe:	f8 94       	cli
     f00:	41 85       	ldd	r20, Z+9	; 0x09
     f02:	52 85       	ldd	r21, Z+10	; 0x0a
     f04:	8f ef       	ldi	r24, 0xFF	; 255
     f06:	9f ef       	ldi	r25, 0xFF	; 255
     f08:	92 87       	std	Z+10, r25	; 0x0a
     f0a:	81 87       	std	Z+9, r24	; 0x09
     f0c:	2f bf       	out	0x3f, r18	; 63
     f0e:	ca 01       	movw	r24, r20
     f10:	0f 90       	pop	r0
     f12:	cf 91       	pop	r28
     f14:	df 91       	pop	r29
     f16:	08 95       	ret

00000f18 <__uartTransmitService>:
     f18:	ef 92       	push	r14
     f1a:	ff 92       	push	r15
     f1c:	1f 93       	push	r17
     f1e:	df 93       	push	r29
     f20:	cf 93       	push	r28
     f22:	0f 92       	push	r0
     f24:	cd b7       	in	r28, 0x3d	; 61
     f26:	de b7       	in	r29, 0x3e	; 62
     f28:	7c 01       	movw	r14, r24
     f2a:	fc 01       	movw	r30, r24
     f2c:	86 81       	ldd	r24, Z+6	; 0x06
     f2e:	81 ff       	sbrs	r24, 1
     f30:	19 c0       	rjmp	.+50     	; 0xf64 <__uartTransmitService+0x4c>
     f32:	1f b7       	in	r17, 0x3f	; 63
     f34:	f8 94       	cli
     f36:	f7 01       	movw	r30, r14
     f38:	82 81       	ldd	r24, Z+2	; 0x02
     f3a:	93 81       	ldd	r25, Z+3	; 0x03
     f3c:	be 01       	movw	r22, r28
     f3e:	6f 5f       	subi	r22, 0xFF	; 255
     f40:	7f 4f       	sbci	r23, 0xFF	; 255
     f42:	0e 94 2f 08 	call	0x105e	; 0x105e <bufferGet>
     f46:	88 23       	and	r24, r24
     f48:	29 f0       	breq	.+10     	; 0xf54 <__uartTransmitService+0x3c>
     f4a:	c7 01       	movw	r24, r14
     f4c:	69 81       	ldd	r22, Y+1	; 0x01
     f4e:	0e 94 48 06 	call	0xc90	; 0xc90 <_uartStartXmit>
     f52:	0d c0       	rjmp	.+26     	; 0xf6e <__uartTransmitService+0x56>
     f54:	c7 01       	movw	r24, r14
     f56:	0e 94 71 06 	call	0xce2	; 0xce2 <_uartTransmitBlockEnd>
     f5a:	f7 01       	movw	r30, r14
     f5c:	86 81       	ldd	r24, Z+6	; 0x06
     f5e:	8d 7f       	andi	r24, 0xFD	; 253
     f60:	86 83       	std	Z+6, r24	; 0x06
     f62:	05 c0       	rjmp	.+10     	; 0xf6e <__uartTransmitService+0x56>
     f64:	1f b7       	in	r17, 0x3f	; 63
     f66:	f8 94       	cli
     f68:	c7 01       	movw	r24, r14
     f6a:	0e 94 71 06 	call	0xce2	; 0xce2 <_uartTransmitBlockEnd>
     f6e:	1f bf       	out	0x3f, r17	; 63
     f70:	0f 90       	pop	r0
     f72:	cf 91       	pop	r28
     f74:	df 91       	pop	r29
     f76:	1f 91       	pop	r17
     f78:	ff 90       	pop	r15
     f7a:	ef 90       	pop	r14
     f7c:	08 95       	ret

00000f7e <__uartReceiveService>:
     f7e:	cf 93       	push	r28
     f80:	df 93       	push	r29
     f82:	ec 01       	movw	r28, r24
     f84:	8c 81       	ldd	r24, Y+4	; 0x04
     f86:	9d 81       	ldd	r25, Y+5	; 0x05
     f88:	89 2b       	or	r24, r25
     f8a:	29 f0       	breq	.+10     	; 0xf96 <__uartReceiveService+0x18>
     f8c:	ec 81       	ldd	r30, Y+4	; 0x04
     f8e:	fd 81       	ldd	r31, Y+5	; 0x05
     f90:	86 2f       	mov	r24, r22
     f92:	09 95       	icall
     f94:	19 c0       	rjmp	.+50     	; 0xfc8 <__uartReceiveService+0x4a>
     f96:	88 81       	ld	r24, Y
     f98:	99 81       	ldd	r25, Y+1	; 0x01
     f9a:	00 97       	sbiw	r24, 0x00	; 0
     f9c:	29 f0       	breq	.+10     	; 0xfa8 <__uartReceiveService+0x2a>
     f9e:	0e 94 5c 08 	call	0x10b8	; 0x10b8 <bufferPut>
     fa2:	88 23       	and	r24, r24
     fa4:	89 f4       	brne	.+34     	; 0xfc8 <__uartReceiveService+0x4a>
     fa6:	0a c0       	rjmp	.+20     	; 0xfbc <__uartReceiveService+0x3e>
     fa8:	89 85       	ldd	r24, Y+9	; 0x09
     faa:	9a 85       	ldd	r25, Y+10	; 0x0a
     fac:	8f 5f       	subi	r24, 0xFF	; 255
     fae:	9f 4f       	sbci	r25, 0xFF	; 255
     fb0:	29 f4       	brne	.+10     	; 0xfbc <__uartReceiveService+0x3e>
     fb2:	86 2f       	mov	r24, r22
     fb4:	90 e0       	ldi	r25, 0x00	; 0
     fb6:	9a 87       	std	Y+10, r25	; 0x0a
     fb8:	89 87       	std	Y+9, r24	; 0x09
     fba:	06 c0       	rjmp	.+12     	; 0xfc8 <__uartReceiveService+0x4a>
     fbc:	8e 81       	ldd	r24, Y+6	; 0x06
     fbe:	84 60       	ori	r24, 0x04	; 4
     fc0:	8e 83       	std	Y+6, r24	; 0x06
     fc2:	85 ef       	ldi	r24, 0xF5	; 245
     fc4:	0e 94 2d 10 	call	0x205a	; 0x205a <setError>
     fc8:	df 91       	pop	r29
     fca:	cf 91       	pop	r28
     fcc:	08 95       	ret

00000fce <__act_setSpeed>:
     fce:	1f 93       	push	r17
     fd0:	cf 93       	push	r28
     fd2:	df 93       	push	r29
     fd4:	ec 01       	movw	r28, r24
     fd6:	16 2f       	mov	r17, r22
     fd8:	61 38       	cpi	r22, 0x81	; 129
     fda:	0c f4       	brge	.+2      	; 0xfde <__act_setSpeed+0x10>
     fdc:	11 e8       	ldi	r17, 0x81	; 129
     fde:	e8 81       	ld	r30, Y
     fe0:	f9 81       	ldd	r31, Y+1	; 0x01
     fe2:	30 97       	sbiw	r30, 0x00	; 0
     fe4:	79 f0       	breq	.+30     	; 0x1004 <__act_setSpeed+0x36>
     fe6:	25 91       	lpm	r18, Z+
     fe8:	34 91       	lpm	r19, Z+
     fea:	21 15       	cp	r18, r1
     fec:	31 05       	cpc	r19, r1
     fee:	51 f0       	breq	.+20     	; 0x1004 <__act_setSpeed+0x36>
     ff0:	8b 81       	ldd	r24, Y+3	; 0x03
     ff2:	81 fd       	sbrc	r24, 1
     ff4:	02 c0       	rjmp	.+4      	; 0xffa <__act_setSpeed+0x2c>
     ff6:	61 2f       	mov	r22, r17
     ff8:	02 c0       	rjmp	.+4      	; 0xffe <__act_setSpeed+0x30>
     ffa:	61 2f       	mov	r22, r17
     ffc:	61 95       	neg	r22
     ffe:	ce 01       	movw	r24, r28
    1000:	f9 01       	movw	r30, r18
    1002:	09 95       	icall
    1004:	1a 83       	std	Y+2, r17	; 0x02
    1006:	df 91       	pop	r29
    1008:	cf 91       	pop	r28
    100a:	1f 91       	pop	r17
    100c:	08 95       	ret

0000100e <__act_setConnected>:
    100e:	dc 01       	movw	r26, r24
    1010:	96 2f       	mov	r25, r22
    1012:	91 70       	andi	r25, 0x01	; 1
    1014:	13 96       	adiw	r26, 0x03	; 3
    1016:	8c 91       	ld	r24, X
    1018:	13 97       	sbiw	r26, 0x03	; 3
    101a:	8e 7f       	andi	r24, 0xFE	; 254
    101c:	89 2b       	or	r24, r25
    101e:	13 96       	adiw	r26, 0x03	; 3
    1020:	8c 93       	st	X, r24
    1022:	13 97       	sbiw	r26, 0x03	; 3
    1024:	8d 91       	ld	r24, X+
    1026:	9c 91       	ld	r25, X
    1028:	11 97       	sbiw	r26, 0x01	; 1
    102a:	00 97       	sbiw	r24, 0x00	; 0
    102c:	51 f0       	breq	.+20     	; 0x1042 <__act_setConnected+0x34>
    102e:	fc 01       	movw	r30, r24
    1030:	32 96       	adiw	r30, 0x02	; 2
    1032:	25 91       	lpm	r18, Z+
    1034:	34 91       	lpm	r19, Z+
    1036:	21 15       	cp	r18, r1
    1038:	31 05       	cpc	r19, r1
    103a:	19 f0       	breq	.+6      	; 0x1042 <__act_setConnected+0x34>
    103c:	cd 01       	movw	r24, r26
    103e:	f9 01       	movw	r30, r18
    1040:	09 95       	icall
    1042:	08 95       	ret

00001044 <bufferInit>:
    1044:	fc 01       	movw	r30, r24
    1046:	8f b7       	in	r24, 0x3f	; 63
    1048:	f8 94       	cli
    104a:	71 83       	std	Z+1, r23	; 0x01
    104c:	60 83       	st	Z, r22
    104e:	53 83       	std	Z+3, r21	; 0x03
    1050:	42 83       	std	Z+2, r20	; 0x02
    1052:	15 82       	std	Z+5, r1	; 0x05
    1054:	14 82       	std	Z+4, r1	; 0x04
    1056:	17 82       	std	Z+7, r1	; 0x07
    1058:	16 82       	std	Z+6, r1	; 0x06
    105a:	8f bf       	out	0x3f, r24	; 63
    105c:	08 95       	ret

0000105e <bufferGet>:
    105e:	cf 93       	push	r28
    1060:	df 93       	push	r29
    1062:	ec 01       	movw	r28, r24
    1064:	db 01       	movw	r26, r22
    1066:	2f b7       	in	r18, 0x3f	; 63
    1068:	f8 94       	cli
    106a:	00 97       	sbiw	r24, 0x00	; 0
    106c:	01 f1       	breq	.+64     	; 0x10ae <bufferGet+0x50>
    106e:	8a 81       	ldd	r24, Y+2	; 0x02
    1070:	9b 81       	ldd	r25, Y+3	; 0x03
    1072:	89 2b       	or	r24, r25
    1074:	e1 f0       	breq	.+56     	; 0x10ae <bufferGet+0x50>
    1076:	8c 81       	ldd	r24, Y+4	; 0x04
    1078:	9d 81       	ldd	r25, Y+5	; 0x05
    107a:	89 2b       	or	r24, r25
    107c:	c1 f0       	breq	.+48     	; 0x10ae <bufferGet+0x50>
    107e:	e8 81       	ld	r30, Y
    1080:	f9 81       	ldd	r31, Y+1	; 0x01
    1082:	8e 81       	ldd	r24, Y+6	; 0x06
    1084:	9f 81       	ldd	r25, Y+7	; 0x07
    1086:	e8 0f       	add	r30, r24
    1088:	f9 1f       	adc	r31, r25
    108a:	80 81       	ld	r24, Z
    108c:	8c 93       	st	X, r24
    108e:	8e 81       	ldd	r24, Y+6	; 0x06
    1090:	9f 81       	ldd	r25, Y+7	; 0x07
    1092:	6a 81       	ldd	r22, Y+2	; 0x02
    1094:	7b 81       	ldd	r23, Y+3	; 0x03
    1096:	01 96       	adiw	r24, 0x01	; 1
    1098:	0e 94 51 1d 	call	0x3aa2	; 0x3aa2 <__udivmodhi4>
    109c:	9f 83       	std	Y+7, r25	; 0x07
    109e:	8e 83       	std	Y+6, r24	; 0x06
    10a0:	8c 81       	ldd	r24, Y+4	; 0x04
    10a2:	9d 81       	ldd	r25, Y+5	; 0x05
    10a4:	01 97       	sbiw	r24, 0x01	; 1
    10a6:	9d 83       	std	Y+5, r25	; 0x05
    10a8:	8c 83       	std	Y+4, r24	; 0x04
    10aa:	8f ef       	ldi	r24, 0xFF	; 255
    10ac:	01 c0       	rjmp	.+2      	; 0x10b0 <bufferGet+0x52>
    10ae:	80 e0       	ldi	r24, 0x00	; 0
    10b0:	2f bf       	out	0x3f, r18	; 63
    10b2:	df 91       	pop	r29
    10b4:	cf 91       	pop	r28
    10b6:	08 95       	ret

000010b8 <bufferPut>:
    10b8:	1f 93       	push	r17
    10ba:	cf 93       	push	r28
    10bc:	df 93       	push	r29
    10be:	ec 01       	movw	r28, r24
    10c0:	46 2f       	mov	r20, r22
    10c2:	1f b7       	in	r17, 0x3f	; 63
    10c4:	f8 94       	cli
    10c6:	2c 81       	ldd	r18, Y+4	; 0x04
    10c8:	3d 81       	ldd	r19, Y+5	; 0x05
    10ca:	6a 81       	ldd	r22, Y+2	; 0x02
    10cc:	7b 81       	ldd	r23, Y+3	; 0x03
    10ce:	26 17       	cp	r18, r22
    10d0:	37 07       	cpc	r19, r23
    10d2:	10 f0       	brcs	.+4      	; 0x10d8 <bufferPut+0x20>
    10d4:	80 e0       	ldi	r24, 0x00	; 0
    10d6:	11 c0       	rjmp	.+34     	; 0x10fa <bufferPut+0x42>
    10d8:	8e 81       	ldd	r24, Y+6	; 0x06
    10da:	9f 81       	ldd	r25, Y+7	; 0x07
    10dc:	82 0f       	add	r24, r18
    10de:	93 1f       	adc	r25, r19
    10e0:	0e 94 51 1d 	call	0x3aa2	; 0x3aa2 <__udivmodhi4>
    10e4:	e8 81       	ld	r30, Y
    10e6:	f9 81       	ldd	r31, Y+1	; 0x01
    10e8:	e8 0f       	add	r30, r24
    10ea:	f9 1f       	adc	r31, r25
    10ec:	40 83       	st	Z, r20
    10ee:	8c 81       	ldd	r24, Y+4	; 0x04
    10f0:	9d 81       	ldd	r25, Y+5	; 0x05
    10f2:	01 96       	adiw	r24, 0x01	; 1
    10f4:	9d 83       	std	Y+5, r25	; 0x05
    10f6:	8c 83       	std	Y+4, r24	; 0x04
    10f8:	8f ef       	ldi	r24, 0xFF	; 255
    10fa:	1f bf       	out	0x3f, r17	; 63
    10fc:	df 91       	pop	r29
    10fe:	cf 91       	pop	r28
    1100:	1f 91       	pop	r17
    1102:	08 95       	ret

00001104 <bufferFreeSpace>:
    1104:	fc 01       	movw	r30, r24
    1106:	4f b7       	in	r20, 0x3f	; 63
    1108:	f8 94       	cli
    110a:	00 97       	sbiw	r24, 0x00	; 0
    110c:	19 f4       	brne	.+6      	; 0x1114 <bufferFreeSpace+0x10>
    110e:	20 e0       	ldi	r18, 0x00	; 0
    1110:	30 e0       	ldi	r19, 0x00	; 0
    1112:	06 c0       	rjmp	.+12     	; 0x1120 <bufferFreeSpace+0x1c>
    1114:	22 81       	ldd	r18, Z+2	; 0x02
    1116:	33 81       	ldd	r19, Z+3	; 0x03
    1118:	84 81       	ldd	r24, Z+4	; 0x04
    111a:	95 81       	ldd	r25, Z+5	; 0x05
    111c:	28 1b       	sub	r18, r24
    111e:	39 0b       	sbc	r19, r25
    1120:	4f bf       	out	0x3f, r20	; 63
    1122:	c9 01       	movw	r24, r18
    1124:	08 95       	ret

00001126 <bufferBytesUsed>:
    1126:	fc 01       	movw	r30, r24
    1128:	8f b7       	in	r24, 0x3f	; 63
    112a:	f8 94       	cli
    112c:	30 97       	sbiw	r30, 0x00	; 0
    112e:	19 f4       	brne	.+6      	; 0x1136 <bufferBytesUsed+0x10>
    1130:	20 e0       	ldi	r18, 0x00	; 0
    1132:	30 e0       	ldi	r19, 0x00	; 0
    1134:	02 c0       	rjmp	.+4      	; 0x113a <bufferBytesUsed+0x14>
    1136:	24 81       	ldd	r18, Z+4	; 0x04
    1138:	35 81       	ldd	r19, Z+5	; 0x05
    113a:	8f bf       	out	0x3f, r24	; 63
    113c:	c9 01       	movw	r24, r18
    113e:	08 95       	ret

00001140 <bufferIsFull>:
    1140:	0e 94 82 08 	call	0x1104	; 0x1104 <bufferFreeSpace>
    1144:	89 2b       	or	r24, r25
    1146:	11 f0       	breq	.+4      	; 0x114c <bufferIsFull+0xc>
    1148:	80 e0       	ldi	r24, 0x00	; 0
    114a:	08 95       	ret
    114c:	8f ef       	ldi	r24, 0xFF	; 255
    114e:	08 95       	ret

00001150 <bufferFlush>:
    1150:	fc 01       	movw	r30, r24
    1152:	00 97       	sbiw	r24, 0x00	; 0
    1154:	29 f0       	breq	.+10     	; 0x1160 <bufferFlush+0x10>
    1156:	8f b7       	in	r24, 0x3f	; 63
    1158:	f8 94       	cli
    115a:	15 82       	std	Z+5, r1	; 0x05
    115c:	14 82       	std	Z+4, r1	; 0x04
    115e:	8f bf       	out	0x3f, r24	; 63
    1160:	08 95       	ret

00001162 <breathe>:
    1162:	8f b7       	in	r24, 0x3f	; 63
    1164:	78 94       	sei
	...
    1172:	00 00       	nop
    1174:	8f bf       	out	0x3f, r24	; 63
    1176:	08 95       	ret

00001178 <__portMaskSet>:
    1178:	9c 01       	movw	r18, r24
    117a:	fc 01       	movw	r30, r24
    117c:	a5 91       	lpm	r26, Z+
    117e:	b4 91       	lpm	r27, Z+
    1180:	2e 5f       	subi	r18, 0xFE	; 254
    1182:	3f 4f       	sbci	r19, 0xFF	; 255
    1184:	f9 01       	movw	r30, r18
    1186:	94 91       	lpm	r25, Z+
    1188:	8c 91       	ld	r24, X
    118a:	89 2b       	or	r24, r25
    118c:	8c 93       	st	X, r24
    118e:	08 95       	ret

00001190 <__portMaskGet>:
    1190:	9c 01       	movw	r18, r24
    1192:	fc 01       	movw	r30, r24
    1194:	a5 91       	lpm	r26, Z+
    1196:	b4 91       	lpm	r27, Z+
    1198:	2e 5f       	subi	r18, 0xFE	; 254
    119a:	3f 4f       	sbci	r19, 0xFF	; 255
    119c:	f9 01       	movw	r30, r18
    119e:	94 91       	lpm	r25, Z+
    11a0:	8c 91       	ld	r24, X
    11a2:	89 23       	and	r24, r25
    11a4:	09 f0       	breq	.+2      	; 0x11a8 <__portMaskGet+0x18>
    11a6:	8f ef       	ldi	r24, 0xFF	; 255
    11a8:	08 95       	ret

000011aa <__portMaskClear>:
    11aa:	9c 01       	movw	r18, r24
    11ac:	fc 01       	movw	r30, r24
    11ae:	a5 91       	lpm	r26, Z+
    11b0:	b4 91       	lpm	r27, Z+
    11b2:	2e 5f       	subi	r18, 0xFE	; 254
    11b4:	3f 4f       	sbci	r19, 0xFF	; 255
    11b6:	f9 01       	movw	r30, r18
    11b8:	94 91       	lpm	r25, Z+
    11ba:	8c 91       	ld	r24, X
    11bc:	90 95       	com	r25
    11be:	89 23       	and	r24, r25
    11c0:	8c 93       	st	X, r24
    11c2:	08 95       	ret

000011c4 <main>:
    11c4:	6f 92       	push	r6
    11c6:	7f 92       	push	r7
    11c8:	8f 92       	push	r8
    11ca:	9f 92       	push	r9
    11cc:	af 92       	push	r10
    11ce:	bf 92       	push	r11
    11d0:	cf 92       	push	r12
    11d2:	df 92       	push	r13
    11d4:	ef 92       	push	r14
    11d6:	ff 92       	push	r15
    11d8:	0f 93       	push	r16
    11da:	1f 93       	push	r17
    11dc:	0e 94 4b 01 	call	0x296	; 0x296 <configure_ports>
    11e0:	0e 94 4c 01 	call	0x298	; 0x298 <registerLED>
    11e4:	0e 94 69 13 	call	0x26d2	; 0x26d2 <initTimers>
    11e8:	0e 94 4d 01 	call	0x29a	; 0x29a <sysInitHardware>
    11ec:	0e 94 9a 02 	call	0x534	; 0x534 <appInitHardware>
    11f0:	0e 94 00 14 	call	0x2800	; 0x2800 <__clockInit>
    11f4:	0e 94 26 10 	call	0x204c	; 0x204c <clockGetus>
    11f8:	5b 01       	movw	r10, r22
    11fa:	6c 01       	movw	r12, r24
    11fc:	0e 94 81 02 	call	0x502	; 0x502 <appInitSoftware>
    1200:	7b 01       	movw	r14, r22
    1202:	8c 01       	movw	r16, r24
    1204:	66 24       	eor	r6, r6
    1206:	77 24       	eor	r7, r7
    1208:	43 01       	movw	r8, r6
    120a:	0e 94 b1 08 	call	0x1162	; 0x1162 <breathe>
    120e:	e1 14       	cp	r14, r1
    1210:	f1 04       	cpc	r15, r1
    1212:	01 05       	cpc	r16, r1
    1214:	11 05       	cpc	r17, r1
    1216:	19 f4       	brne	.+6      	; 0x121e <main+0x5a>
    1218:	0a c0       	rjmp	.+20     	; 0x122e <main+0x6a>
    121a:	0e 94 b1 08 	call	0x1162	; 0x1162 <breathe>
    121e:	c6 01       	movw	r24, r12
    1220:	b5 01       	movw	r22, r10
    1222:	a8 01       	movw	r20, r16
    1224:	97 01       	movw	r18, r14
    1226:	0e 94 cc 15 	call	0x2b98	; 0x2b98 <clockHasElapsed>
    122a:	88 23       	and	r24, r24
    122c:	b1 f3       	breq	.-20     	; 0x121a <main+0x56>
    122e:	0e 94 26 10 	call	0x204c	; 0x204c <clockGetus>
    1232:	5b 01       	movw	r10, r22
    1234:	6c 01       	movw	r12, r24
    1236:	08 94       	sec
    1238:	61 1c       	adc	r6, r1
    123a:	71 1c       	adc	r7, r1
    123c:	81 1c       	adc	r8, r1
    123e:	91 1c       	adc	r9, r1
    1240:	c4 01       	movw	r24, r8
    1242:	b3 01       	movw	r22, r6
    1244:	a6 01       	movw	r20, r12
    1246:	95 01       	movw	r18, r10
    1248:	0e 94 53 01 	call	0x2a6	; 0x2a6 <appControl>
    124c:	7b 01       	movw	r14, r22
    124e:	8c 01       	movw	r16, r24
    1250:	dc cf       	rjmp	.-72     	; 0x120a <main+0x46>

00001252 <interpolate>:
    1252:	4f 92       	push	r4
    1254:	5f 92       	push	r5
    1256:	6f 92       	push	r6
    1258:	7f 92       	push	r7
    125a:	8f 92       	push	r8
    125c:	9f 92       	push	r9
    125e:	af 92       	push	r10
    1260:	bf 92       	push	r11
    1262:	cf 92       	push	r12
    1264:	df 92       	push	r13
    1266:	ef 92       	push	r14
    1268:	ff 92       	push	r15
    126a:	0f 93       	push	r16
    126c:	1f 93       	push	r17
    126e:	2b 01       	movw	r4, r22
    1270:	3a 01       	movw	r6, r20
    1272:	59 01       	movw	r10, r18
    1274:	78 01       	movw	r14, r16
    1276:	e2 1a       	sub	r14, r18
    1278:	f3 0a       	sbc	r15, r19
    127a:	00 27       	eor	r16, r16
    127c:	f7 fc       	sbrc	r15, 7
    127e:	00 95       	com	r16
    1280:	10 2f       	mov	r17, r16
    1282:	9c 01       	movw	r18, r24
    1284:	26 1b       	sub	r18, r22
    1286:	37 0b       	sbc	r19, r23
    1288:	44 27       	eor	r20, r20
    128a:	37 fd       	sbrc	r19, 7
    128c:	40 95       	com	r20
    128e:	54 2f       	mov	r21, r20
    1290:	c8 01       	movw	r24, r16
    1292:	b7 01       	movw	r22, r14
    1294:	0e 94 32 1d 	call	0x3a64	; 0x3a64 <__mulsi3>
    1298:	64 18       	sub	r6, r4
    129a:	75 08       	sbc	r7, r5
    129c:	88 24       	eor	r8, r8
    129e:	77 fc       	sbrc	r7, 7
    12a0:	80 94       	com	r8
    12a2:	98 2c       	mov	r9, r8
    12a4:	a4 01       	movw	r20, r8
    12a6:	93 01       	movw	r18, r6
    12a8:	0e 94 87 1d 	call	0x3b0e	; 0x3b0e <__divmodsi4>
    12ac:	c9 01       	movw	r24, r18
    12ae:	da 01       	movw	r26, r20
    12b0:	cc 24       	eor	r12, r12
    12b2:	b7 fc       	sbrc	r11, 7
    12b4:	c0 94       	com	r12
    12b6:	dc 2c       	mov	r13, r12
    12b8:	a8 0e       	add	r10, r24
    12ba:	b9 1e       	adc	r11, r25
    12bc:	ca 1e       	adc	r12, r26
    12be:	db 1e       	adc	r13, r27
    12c0:	c5 01       	movw	r24, r10
    12c2:	1f 91       	pop	r17
    12c4:	0f 91       	pop	r16
    12c6:	ff 90       	pop	r15
    12c8:	ef 90       	pop	r14
    12ca:	df 90       	pop	r13
    12cc:	cf 90       	pop	r12
    12ce:	bf 90       	pop	r11
    12d0:	af 90       	pop	r10
    12d2:	9f 90       	pop	r9
    12d4:	8f 90       	pop	r8
    12d6:	7f 90       	pop	r7
    12d8:	6f 90       	pop	r6
    12da:	5f 90       	pop	r5
    12dc:	4f 90       	pop	r4
    12de:	08 95       	ret

000012e0 <interpolateU>:
    12e0:	4f 92       	push	r4
    12e2:	5f 92       	push	r5
    12e4:	6f 92       	push	r6
    12e6:	7f 92       	push	r7
    12e8:	8f 92       	push	r8
    12ea:	9f 92       	push	r9
    12ec:	af 92       	push	r10
    12ee:	bf 92       	push	r11
    12f0:	cf 92       	push	r12
    12f2:	df 92       	push	r13
    12f4:	ef 92       	push	r14
    12f6:	ff 92       	push	r15
    12f8:	0f 93       	push	r16
    12fa:	1f 93       	push	r17
    12fc:	2b 01       	movw	r4, r22
    12fe:	5a 01       	movw	r10, r20
    1300:	39 01       	movw	r6, r18
    1302:	78 01       	movw	r14, r16
    1304:	e2 1a       	sub	r14, r18
    1306:	f3 0a       	sbc	r15, r19
    1308:	00 e0       	ldi	r16, 0x00	; 0
    130a:	10 e0       	ldi	r17, 0x00	; 0
    130c:	9c 01       	movw	r18, r24
    130e:	26 1b       	sub	r18, r22
    1310:	37 0b       	sbc	r19, r23
    1312:	44 27       	eor	r20, r20
    1314:	37 fd       	sbrc	r19, 7
    1316:	40 95       	com	r20
    1318:	54 2f       	mov	r21, r20
    131a:	c8 01       	movw	r24, r16
    131c:	b7 01       	movw	r22, r14
    131e:	0e 94 32 1d 	call	0x3a64	; 0x3a64 <__mulsi3>
    1322:	a4 18       	sub	r10, r4
    1324:	b5 08       	sbc	r11, r5
    1326:	cc 24       	eor	r12, r12
    1328:	b7 fc       	sbrc	r11, 7
    132a:	c0 94       	com	r12
    132c:	dc 2c       	mov	r13, r12
    132e:	a6 01       	movw	r20, r12
    1330:	95 01       	movw	r18, r10
    1332:	0e 94 87 1d 	call	0x3b0e	; 0x3b0e <__divmodsi4>
    1336:	88 24       	eor	r8, r8
    1338:	99 24       	eor	r9, r9
    133a:	26 0d       	add	r18, r6
    133c:	37 1d       	adc	r19, r7
    133e:	48 1d       	adc	r20, r8
    1340:	59 1d       	adc	r21, r9
    1342:	c9 01       	movw	r24, r18
    1344:	1f 91       	pop	r17
    1346:	0f 91       	pop	r16
    1348:	ff 90       	pop	r15
    134a:	ef 90       	pop	r14
    134c:	df 90       	pop	r13
    134e:	cf 90       	pop	r12
    1350:	bf 90       	pop	r11
    1352:	af 90       	pop	r10
    1354:	9f 90       	pop	r9
    1356:	8f 90       	pop	r8
    1358:	7f 90       	pop	r7
    135a:	6f 90       	pop	r6
    135c:	5f 90       	pop	r5
    135e:	4f 90       	pop	r4
    1360:	08 95       	ret

00001362 <pin_is_high>:
    1362:	9c 01       	movw	r18, r24
    1364:	00 97       	sbiw	r24, 0x00	; 0
    1366:	81 f0       	breq	.+32     	; 0x1388 <pin_is_high+0x26>
    1368:	fc 01       	movw	r30, r24
    136a:	85 91       	lpm	r24, Z+
    136c:	94 91       	lpm	r25, Z+
    136e:	04 96       	adiw	r24, 0x04	; 4
    1370:	fc 01       	movw	r30, r24
    1372:	a5 91       	lpm	r26, Z+
    1374:	b4 91       	lpm	r27, Z+
    1376:	2e 5f       	subi	r18, 0xFE	; 254
    1378:	3f 4f       	sbci	r19, 0xFF	; 255
    137a:	f9 01       	movw	r30, r18
    137c:	94 91       	lpm	r25, Z+
    137e:	8c 91       	ld	r24, X
    1380:	89 23       	and	r24, r25
    1382:	11 f0       	breq	.+4      	; 0x1388 <pin_is_high+0x26>
    1384:	8f ef       	ldi	r24, 0xFF	; 255
    1386:	08 95       	ret
    1388:	80 e0       	ldi	r24, 0x00	; 0
    138a:	08 95       	ret

0000138c <pin_make_input>:
    138c:	cf 93       	push	r28
    138e:	df 93       	push	r29
    1390:	9c 01       	movw	r18, r24
    1392:	00 97       	sbiw	r24, 0x00	; 0
    1394:	f9 f0       	breq	.+62     	; 0x13d4 <pin_make_input+0x48>
    1396:	fc 01       	movw	r30, r24
    1398:	45 91       	lpm	r20, Z+
    139a:	54 91       	lpm	r21, Z+
    139c:	ca 01       	movw	r24, r20
    139e:	02 96       	adiw	r24, 0x02	; 2
    13a0:	fc 01       	movw	r30, r24
    13a2:	a5 91       	lpm	r26, Z+
    13a4:	b4 91       	lpm	r27, Z+
    13a6:	fa 01       	movw	r30, r20
    13a8:	c5 91       	lpm	r28, Z+
    13aa:	d4 91       	lpm	r29, Z+
    13ac:	2e 5f       	subi	r18, 0xFE	; 254
    13ae:	3f 4f       	sbci	r19, 0xFF	; 255
    13b0:	f9 01       	movw	r30, r18
    13b2:	94 91       	lpm	r25, Z+
    13b4:	3f b7       	in	r19, 0x3f	; 63
    13b6:	f8 94       	cli
    13b8:	8c 91       	ld	r24, X
    13ba:	29 2f       	mov	r18, r25
    13bc:	20 95       	com	r18
    13be:	82 23       	and	r24, r18
    13c0:	8c 93       	st	X, r24
    13c2:	66 23       	and	r22, r22
    13c4:	19 f0       	breq	.+6      	; 0x13cc <pin_make_input+0x40>
    13c6:	88 81       	ld	r24, Y
    13c8:	89 2b       	or	r24, r25
    13ca:	02 c0       	rjmp	.+4      	; 0x13d0 <pin_make_input+0x44>
    13cc:	88 81       	ld	r24, Y
    13ce:	82 23       	and	r24, r18
    13d0:	88 83       	st	Y, r24
    13d2:	3f bf       	out	0x3f, r19	; 63
    13d4:	df 91       	pop	r29
    13d6:	cf 91       	pop	r28
    13d8:	08 95       	ret

000013da <pin_make_output>:
    13da:	cf 93       	push	r28
    13dc:	df 93       	push	r29
    13de:	9c 01       	movw	r18, r24
    13e0:	00 97       	sbiw	r24, 0x00	; 0
    13e2:	f9 f0       	breq	.+62     	; 0x1422 <pin_make_output+0x48>
    13e4:	fc 01       	movw	r30, r24
    13e6:	45 91       	lpm	r20, Z+
    13e8:	54 91       	lpm	r21, Z+
    13ea:	ca 01       	movw	r24, r20
    13ec:	02 96       	adiw	r24, 0x02	; 2
    13ee:	fc 01       	movw	r30, r24
    13f0:	c5 91       	lpm	r28, Z+
    13f2:	d4 91       	lpm	r29, Z+
    13f4:	fa 01       	movw	r30, r20
    13f6:	a5 91       	lpm	r26, Z+
    13f8:	b4 91       	lpm	r27, Z+
    13fa:	2e 5f       	subi	r18, 0xFE	; 254
    13fc:	3f 4f       	sbci	r19, 0xFF	; 255
    13fe:	f9 01       	movw	r30, r18
    1400:	24 91       	lpm	r18, Z+
    1402:	3f b7       	in	r19, 0x3f	; 63
    1404:	f8 94       	cli
    1406:	66 23       	and	r22, r22
    1408:	19 f0       	breq	.+6      	; 0x1410 <pin_make_output+0x36>
    140a:	8c 91       	ld	r24, X
    140c:	82 2b       	or	r24, r18
    140e:	04 c0       	rjmp	.+8      	; 0x1418 <pin_make_output+0x3e>
    1410:	8c 91       	ld	r24, X
    1412:	92 2f       	mov	r25, r18
    1414:	90 95       	com	r25
    1416:	89 23       	and	r24, r25
    1418:	8c 93       	st	X, r24
    141a:	88 81       	ld	r24, Y
    141c:	82 2b       	or	r24, r18
    141e:	88 83       	st	Y, r24
    1420:	3f bf       	out	0x3f, r19	; 63
    1422:	df 91       	pop	r29
    1424:	cf 91       	pop	r28
    1426:	08 95       	ret

00001428 <pin_is_output>:
    1428:	9c 01       	movw	r18, r24
    142a:	00 97       	sbiw	r24, 0x00	; 0
    142c:	81 f0       	breq	.+32     	; 0x144e <pin_is_output+0x26>
    142e:	fc 01       	movw	r30, r24
    1430:	85 91       	lpm	r24, Z+
    1432:	94 91       	lpm	r25, Z+
    1434:	02 96       	adiw	r24, 0x02	; 2
    1436:	fc 01       	movw	r30, r24
    1438:	a5 91       	lpm	r26, Z+
    143a:	b4 91       	lpm	r27, Z+
    143c:	2e 5f       	subi	r18, 0xFE	; 254
    143e:	3f 4f       	sbci	r19, 0xFF	; 255
    1440:	f9 01       	movw	r30, r18
    1442:	94 91       	lpm	r25, Z+
    1444:	8c 91       	ld	r24, X
    1446:	89 23       	and	r24, r25
    1448:	11 f0       	breq	.+4      	; 0x144e <pin_is_output+0x26>
    144a:	8f ef       	ldi	r24, 0xFF	; 255
    144c:	08 95       	ret
    144e:	80 e0       	ldi	r24, 0x00	; 0
    1450:	08 95       	ret

00001452 <pin_toggle>:
    1452:	cf 93       	push	r28
    1454:	df 93       	push	r29
    1456:	9c 01       	movw	r18, r24
    1458:	00 97       	sbiw	r24, 0x00	; 0
    145a:	e1 f0       	breq	.+56     	; 0x1494 <pin_toggle+0x42>
    145c:	fc 01       	movw	r30, r24
    145e:	85 91       	lpm	r24, Z+
    1460:	94 91       	lpm	r25, Z+
    1462:	fc 01       	movw	r30, r24
    1464:	a5 91       	lpm	r26, Z+
    1466:	b4 91       	lpm	r27, Z+
    1468:	02 96       	adiw	r24, 0x02	; 2
    146a:	fc 01       	movw	r30, r24
    146c:	c5 91       	lpm	r28, Z+
    146e:	d4 91       	lpm	r29, Z+
    1470:	2e 5f       	subi	r18, 0xFE	; 254
    1472:	3f 4f       	sbci	r19, 0xFF	; 255
    1474:	f9 01       	movw	r30, r18
    1476:	24 91       	lpm	r18, Z+
    1478:	88 81       	ld	r24, Y
    147a:	82 23       	and	r24, r18
    147c:	41 f0       	breq	.+16     	; 0x148e <pin_toggle+0x3c>
    147e:	9f b7       	in	r25, 0x3f	; 63
    1480:	f8 94       	cli
    1482:	8c 91       	ld	r24, X
    1484:	82 27       	eor	r24, r18
    1486:	8c 93       	st	X, r24
    1488:	9f bf       	out	0x3f, r25	; 63
    148a:	00 00       	nop
    148c:	03 c0       	rjmp	.+6      	; 0x1494 <pin_toggle+0x42>
    148e:	87 ef       	ldi	r24, 0xF7	; 247
    1490:	0e 94 2d 10 	call	0x205a	; 0x205a <setError>
    1494:	df 91       	pop	r29
    1496:	cf 91       	pop	r28
    1498:	08 95       	ret

0000149a <pin_low>:
    149a:	cf 93       	push	r28
    149c:	df 93       	push	r29
    149e:	9c 01       	movw	r18, r24
    14a0:	00 97       	sbiw	r24, 0x00	; 0
    14a2:	e9 f0       	breq	.+58     	; 0x14de <pin_low+0x44>
    14a4:	fc 01       	movw	r30, r24
    14a6:	85 91       	lpm	r24, Z+
    14a8:	94 91       	lpm	r25, Z+
    14aa:	fc 01       	movw	r30, r24
    14ac:	a5 91       	lpm	r26, Z+
    14ae:	b4 91       	lpm	r27, Z+
    14b0:	02 96       	adiw	r24, 0x02	; 2
    14b2:	fc 01       	movw	r30, r24
    14b4:	c5 91       	lpm	r28, Z+
    14b6:	d4 91       	lpm	r29, Z+
    14b8:	2e 5f       	subi	r18, 0xFE	; 254
    14ba:	3f 4f       	sbci	r19, 0xFF	; 255
    14bc:	f9 01       	movw	r30, r18
    14be:	24 91       	lpm	r18, Z+
    14c0:	88 81       	ld	r24, Y
    14c2:	82 23       	and	r24, r18
    14c4:	49 f0       	breq	.+18     	; 0x14d8 <pin_low+0x3e>
    14c6:	9f b7       	in	r25, 0x3f	; 63
    14c8:	f8 94       	cli
    14ca:	8c 91       	ld	r24, X
    14cc:	20 95       	com	r18
    14ce:	82 23       	and	r24, r18
    14d0:	8c 93       	st	X, r24
    14d2:	9f bf       	out	0x3f, r25	; 63
    14d4:	00 00       	nop
    14d6:	03 c0       	rjmp	.+6      	; 0x14de <pin_low+0x44>
    14d8:	87 ef       	ldi	r24, 0xF7	; 247
    14da:	0e 94 2d 10 	call	0x205a	; 0x205a <setError>
    14de:	df 91       	pop	r29
    14e0:	cf 91       	pop	r28
    14e2:	08 95       	ret

000014e4 <pin_high>:
    14e4:	cf 93       	push	r28
    14e6:	df 93       	push	r29
    14e8:	9c 01       	movw	r18, r24
    14ea:	00 97       	sbiw	r24, 0x00	; 0
    14ec:	e1 f0       	breq	.+56     	; 0x1526 <pin_high+0x42>
    14ee:	fc 01       	movw	r30, r24
    14f0:	85 91       	lpm	r24, Z+
    14f2:	94 91       	lpm	r25, Z+
    14f4:	fc 01       	movw	r30, r24
    14f6:	a5 91       	lpm	r26, Z+
    14f8:	b4 91       	lpm	r27, Z+
    14fa:	02 96       	adiw	r24, 0x02	; 2
    14fc:	fc 01       	movw	r30, r24
    14fe:	c5 91       	lpm	r28, Z+
    1500:	d4 91       	lpm	r29, Z+
    1502:	2e 5f       	subi	r18, 0xFE	; 254
    1504:	3f 4f       	sbci	r19, 0xFF	; 255
    1506:	f9 01       	movw	r30, r18
    1508:	24 91       	lpm	r18, Z+
    150a:	88 81       	ld	r24, Y
    150c:	82 23       	and	r24, r18
    150e:	41 f0       	breq	.+16     	; 0x1520 <pin_high+0x3c>
    1510:	9f b7       	in	r25, 0x3f	; 63
    1512:	f8 94       	cli
    1514:	8c 91       	ld	r24, X
    1516:	82 2b       	or	r24, r18
    1518:	8c 93       	st	X, r24
    151a:	9f bf       	out	0x3f, r25	; 63
    151c:	00 00       	nop
    151e:	03 c0       	rjmp	.+6      	; 0x1526 <pin_high+0x42>
    1520:	87 ef       	ldi	r24, 0xF7	; 247
    1522:	0e 94 2d 10 	call	0x205a	; 0x205a <setError>
    1526:	df 91       	pop	r29
    1528:	cf 91       	pop	r28
    152a:	08 95       	ret

0000152c <pin_set>:
    152c:	66 23       	and	r22, r22
    152e:	19 f0       	breq	.+6      	; 0x1536 <pin_set+0xa>
    1530:	0e 94 72 0a 	call	0x14e4	; 0x14e4 <pin_high>
    1534:	08 95       	ret
    1536:	0e 94 4d 0a 	call	0x149a	; 0x149a <pin_low>
    153a:	08 95       	ret

0000153c <LED_set>:
    153c:	1f 93       	push	r17
    153e:	cf 93       	push	r28
    1540:	df 93       	push	r29
    1542:	ec 01       	movw	r28, r24
    1544:	16 2f       	mov	r17, r22
    1546:	88 81       	ld	r24, Y
    1548:	99 81       	ldd	r25, Y+1	; 0x01
    154a:	00 97       	sbiw	r24, 0x00	; 0
    154c:	a9 f0       	breq	.+42     	; 0x1578 <LED_set+0x3c>
    154e:	3a 81       	ldd	r19, Y+2	; 0x02
    1550:	30 fd       	sbrc	r19, 0
    1552:	05 c0       	rjmp	.+10     	; 0x155e <LED_set+0x22>
    1554:	20 e0       	ldi	r18, 0x00	; 0
    1556:	66 23       	and	r22, r22
    1558:	09 f4       	brne	.+2      	; 0x155c <LED_set+0x20>
    155a:	21 e0       	ldi	r18, 0x01	; 1
    155c:	12 2f       	mov	r17, r18
    155e:	31 fd       	sbrc	r19, 1
    1560:	06 c0       	rjmp	.+12     	; 0x156e <LED_set+0x32>
    1562:	61 2f       	mov	r22, r17
    1564:	0e 94 ed 09 	call	0x13da	; 0x13da <pin_make_output>
    1568:	8a 81       	ldd	r24, Y+2	; 0x02
    156a:	82 60       	ori	r24, 0x02	; 2
    156c:	8a 83       	std	Y+2, r24	; 0x02
    156e:	88 81       	ld	r24, Y
    1570:	99 81       	ldd	r25, Y+1	; 0x01
    1572:	61 2f       	mov	r22, r17
    1574:	0e 94 96 0a 	call	0x152c	; 0x152c <pin_set>
    1578:	df 91       	pop	r29
    157a:	cf 91       	pop	r28
    157c:	1f 91       	pop	r17
    157e:	08 95       	ret

00001580 <rprintfIgnore>:
    1580:	08 95       	ret

00001582 <rprintfInit>:
    1582:	20 91 a1 01 	lds	r18, 0x01A1
    1586:	30 91 a2 01 	lds	r19, 0x01A2
    158a:	90 93 a2 01 	sts	0x01A2, r25
    158e:	80 93 a1 01 	sts	0x01A1, r24
    1592:	c9 01       	movw	r24, r18
    1594:	08 95       	ret

00001596 <rprintfChar>:
    1596:	1f 93       	push	r17
    1598:	18 2f       	mov	r17, r24
    159a:	8a 30       	cpi	r24, 0x0A	; 10
    159c:	31 f4       	brne	.+12     	; 0x15aa <rprintfChar+0x14>
    159e:	e0 91 a1 01 	lds	r30, 0x01A1
    15a2:	f0 91 a2 01 	lds	r31, 0x01A2
    15a6:	8d e0       	ldi	r24, 0x0D	; 13
    15a8:	09 95       	icall
    15aa:	e0 91 a1 01 	lds	r30, 0x01A1
    15ae:	f0 91 a2 01 	lds	r31, 0x01A2
    15b2:	81 2f       	mov	r24, r17
    15b4:	09 95       	icall
    15b6:	1f 91       	pop	r17
    15b8:	08 95       	ret

000015ba <rprintfCharN>:
    15ba:	1f 93       	push	r17
    15bc:	cf 93       	push	r28
    15be:	df 93       	push	r29
    15c0:	18 2f       	mov	r17, r24
    15c2:	eb 01       	movw	r28, r22
    15c4:	04 c0       	rjmp	.+8      	; 0x15ce <rprintfCharN+0x14>
    15c6:	81 2f       	mov	r24, r17
    15c8:	0e 94 cb 0a 	call	0x1596	; 0x1596 <rprintfChar>
    15cc:	21 97       	sbiw	r28, 0x01	; 1
    15ce:	20 97       	sbiw	r28, 0x00	; 0
    15d0:	d1 f7       	brne	.-12     	; 0x15c6 <rprintfCharN+0xc>
    15d2:	df 91       	pop	r29
    15d4:	cf 91       	pop	r28
    15d6:	1f 91       	pop	r17
    15d8:	08 95       	ret

000015da <rprintfStr>:
    15da:	cf 93       	push	r28
    15dc:	df 93       	push	r29
    15de:	ec 01       	movw	r28, r24
    15e0:	00 97       	sbiw	r24, 0x00	; 0
    15e2:	21 f4       	brne	.+8      	; 0x15ec <rprintfStr+0x12>
    15e4:	06 c0       	rjmp	.+12     	; 0x15f2 <rprintfStr+0x18>
    15e6:	21 96       	adiw	r28, 0x01	; 1
    15e8:	0e 94 cb 0a 	call	0x1596	; 0x1596 <rprintfChar>
    15ec:	88 81       	ld	r24, Y
    15ee:	88 23       	and	r24, r24
    15f0:	d1 f7       	brne	.-12     	; 0x15e6 <rprintfStr+0xc>
    15f2:	df 91       	pop	r29
    15f4:	cf 91       	pop	r28
    15f6:	08 95       	ret

000015f8 <rprintfProgStr>:
    15f8:	cf 93       	push	r28
    15fa:	df 93       	push	r29
    15fc:	ec 01       	movw	r28, r24
    15fe:	00 97       	sbiw	r24, 0x00	; 0
    1600:	19 f4       	brne	.+6      	; 0x1608 <rprintfProgStr+0x10>
    1602:	07 c0       	rjmp	.+14     	; 0x1612 <rprintfProgStr+0x1a>
    1604:	0e 94 cb 0a 	call	0x1596	; 0x1596 <rprintfChar>
    1608:	fe 01       	movw	r30, r28
    160a:	21 96       	adiw	r28, 0x01	; 1
    160c:	84 91       	lpm	r24, Z+
    160e:	88 23       	and	r24, r24
    1610:	c9 f7       	brne	.-14     	; 0x1604 <rprintfProgStr+0xc>
    1612:	df 91       	pop	r29
    1614:	cf 91       	pop	r28
    1616:	08 95       	ret

00001618 <rprintfCRLF>:
    1618:	8a e0       	ldi	r24, 0x0A	; 10
    161a:	0e 94 cb 0a 	call	0x1596	; 0x1596 <rprintfChar>
    161e:	08 95       	ret

00001620 <rprintfu04>:
    1620:	e8 2f       	mov	r30, r24
    1622:	f0 e0       	ldi	r31, 0x00	; 0
    1624:	ef 70       	andi	r30, 0x0F	; 15
    1626:	f0 70       	andi	r31, 0x00	; 0
    1628:	ef 51       	subi	r30, 0x1F	; 31
    162a:	fe 4f       	sbci	r31, 0xFE	; 254
    162c:	e4 91       	lpm	r30, Z+
    162e:	8e 2f       	mov	r24, r30
    1630:	0e 94 cb 0a 	call	0x1596	; 0x1596 <rprintfChar>
    1634:	08 95       	ret

00001636 <servosInit>:
    1636:	2f 92       	push	r2
    1638:	3f 92       	push	r3
    163a:	4f 92       	push	r4
    163c:	5f 92       	push	r5
    163e:	6f 92       	push	r6
    1640:	7f 92       	push	r7
    1642:	8f 92       	push	r8
    1644:	9f 92       	push	r9
    1646:	af 92       	push	r10
    1648:	bf 92       	push	r11
    164a:	cf 92       	push	r12
    164c:	df 92       	push	r13
    164e:	ef 92       	push	r14
    1650:	ff 92       	push	r15
    1652:	0f 93       	push	r16
    1654:	1f 93       	push	r17
    1656:	cf 93       	push	r28
    1658:	df 93       	push	r29
    165a:	5c 01       	movw	r10, r24
    165c:	eb 01       	movw	r28, r22
    165e:	9b 01       	movw	r18, r22
    1660:	29 5e       	subi	r18, 0xE9	; 233
    1662:	3f 4f       	sbci	r19, 0xFF	; 255
    1664:	f9 01       	movw	r30, r18
    1666:	65 90       	lpm	r6, Z+
    1668:	74 90       	lpm	r7, Z+
    166a:	f9 01       	movw	r30, r18
    166c:	25 90       	lpm	r2, Z+
    166e:	34 90       	lpm	r3, Z+
    1670:	26 96       	adiw	r28, 0x06	; 6
    1672:	fe 01       	movw	r30, r28
    1674:	84 91       	lpm	r24, Z+
    1676:	26 97       	sbiw	r28, 0x06	; 6
    1678:	88 23       	and	r24, r24
    167a:	09 f4       	brne	.+2      	; 0x167e <servosInit+0x48>
    167c:	b4 c0       	rjmp	.+360    	; 0x17e6 <servosInit+0x1b0>
    167e:	28 96       	adiw	r28, 0x08	; 8
    1680:	fe 01       	movw	r30, r28
    1682:	84 91       	lpm	r24, Z+
    1684:	28 97       	sbiw	r28, 0x08	; 8
    1686:	82 30       	cpi	r24, 0x02	; 2
    1688:	08 f4       	brcc	.+2      	; 0x168c <servosInit+0x56>
    168a:	ad c0       	rjmp	.+346    	; 0x17e6 <servosInit+0x1b0>
    168c:	ce 01       	movw	r24, r28
    168e:	04 96       	adiw	r24, 0x04	; 4
    1690:	fc 01       	movw	r30, r24
    1692:	a5 91       	lpm	r26, Z+
    1694:	b4 91       	lpm	r27, Z+
    1696:	8c 91       	ld	r24, X
    1698:	90 e0       	ldi	r25, 0x00	; 0
    169a:	87 70       	andi	r24, 0x07	; 7
    169c:	90 70       	andi	r25, 0x00	; 0
    169e:	89 2b       	or	r24, r25
    16a0:	09 f4       	brne	.+2      	; 0x16a4 <servosInit+0x6e>
    16a2:	a5 c0       	rjmp	.+330    	; 0x17ee <servosInit+0x1b8>
    16a4:	fe 01       	movw	r30, r28
    16a6:	a5 91       	lpm	r26, Z+
    16a8:	b4 91       	lpm	r27, Z+
    16aa:	8d 90       	ld	r8, X+
    16ac:	9c 90       	ld	r9, X
    16ae:	11 97       	sbiw	r26, 0x01	; 1
    16b0:	1a 96       	adiw	r26, 0x0a	; 10
    16b2:	8c 91       	ld	r24, X
    16b4:	88 23       	and	r24, r24
    16b6:	19 f0       	breq	.+6      	; 0x16be <servosInit+0x88>
    16b8:	82 ef       	ldi	r24, 0xF2	; 242
    16ba:	0e 94 2d 10 	call	0x205a	; 0x205a <setError>
    16be:	d5 01       	movw	r26, r10
    16c0:	12 96       	adiw	r26, 0x02	; 2
    16c2:	8c 91       	ld	r24, X
    16c4:	12 97       	sbiw	r26, 0x02	; 2
    16c6:	17 96       	adiw	r26, 0x07	; 7
    16c8:	8c 93       	st	X, r24
    16ca:	64 e1       	ldi	r22, 0x14	; 20
    16cc:	70 e0       	ldi	r23, 0x00	; 0
    16ce:	80 e0       	ldi	r24, 0x00	; 0
    16d0:	90 e0       	ldi	r25, 0x00	; 0
    16d2:	a4 01       	movw	r20, r8
    16d4:	0e 94 84 0d 	call	0x1b08	; 0x1b08 <ticks_per_ms>
    16d8:	f5 01       	movw	r30, r10
    16da:	73 87       	std	Z+11, r23	; 0x0b
    16dc:	62 87       	std	Z+10, r22	; 0x0a
    16de:	60 70       	andi	r22, 0x00	; 0
    16e0:	70 70       	andi	r23, 0x00	; 0
    16e2:	61 15       	cp	r22, r1
    16e4:	71 05       	cpc	r23, r1
    16e6:	81 05       	cpc	r24, r1
    16e8:	91 05       	cpc	r25, r1
    16ea:	11 f0       	breq	.+4      	; 0x16f0 <servosInit+0xba>
    16ec:	86 ee       	ldi	r24, 0xE6	; 230
    16ee:	7c c0       	rjmp	.+248    	; 0x17e8 <servosInit+0x1b2>
    16f0:	d5 01       	movw	r26, r10
    16f2:	12 96       	adiw	r26, 0x02	; 2
    16f4:	8c 91       	ld	r24, X
    16f6:	e8 2e       	mov	r14, r24
    16f8:	ff 24       	eor	r15, r15
    16fa:	08 94       	sec
    16fc:	e1 08       	sbc	r14, r1
    16fe:	f1 08       	sbc	r15, r1
    1700:	67 01       	movw	r12, r14
    1702:	cc 0c       	add	r12, r12
    1704:	dd 1c       	adc	r13, r13
    1706:	82 ef       	ldi	r24, 0xF2	; 242
    1708:	48 2e       	mov	r4, r24
    170a:	81 e0       	ldi	r24, 0x01	; 1
    170c:	58 2e       	mov	r5, r24
    170e:	33 c0       	rjmp	.+102    	; 0x1776 <servosInit+0x140>
    1710:	d5 01       	movw	r26, r10
    1712:	ed 91       	ld	r30, X+
    1714:	fc 91       	ld	r31, X
    1716:	11 97       	sbiw	r26, 0x01	; 1
    1718:	ec 0d       	add	r30, r12
    171a:	fd 1d       	adc	r31, r13
    171c:	05 91       	lpm	r16, Z+
    171e:	14 91       	lpm	r17, Z+
    1720:	f8 01       	movw	r30, r16
    1722:	51 82       	std	Z+1, r5	; 0x01
    1724:	40 82       	st	Z, r4
    1726:	b5 82       	std	Z+5, r11	; 0x05
    1728:	a4 82       	std	Z+4, r10	; 0x04
    172a:	1a 96       	adiw	r26, 0x0a	; 10
    172c:	8d 91       	ld	r24, X+
    172e:	9c 91       	ld	r25, X
    1730:	1b 97       	sbiw	r26, 0x0b	; 11
    1732:	93 8b       	std	Z+19, r25	; 0x13
    1734:	82 8b       	std	Z+18, r24	; 0x12
    1736:	86 81       	ldd	r24, Z+6	; 0x06
    1738:	97 81       	ldd	r25, Z+7	; 0x07
    173a:	60 e0       	ldi	r22, 0x00	; 0
    173c:	0e 94 ed 09 	call	0x13da	; 0x13da <pin_make_output>
    1740:	d8 01       	movw	r26, r16
    1742:	18 96       	adiw	r26, 0x08	; 8
    1744:	6d 91       	ld	r22, X+
    1746:	7c 91       	ld	r23, X
    1748:	19 97       	sbiw	r26, 0x09	; 9
    174a:	1a 96       	adiw	r26, 0x0a	; 10
    174c:	4d 91       	ld	r20, X+
    174e:	5c 91       	ld	r21, X
    1750:	1b 97       	sbiw	r26, 0x0b	; 11
    1752:	c8 01       	movw	r24, r16
    1754:	0e 94 03 0d 	call	0x1a06	; 0x1a06 <servoSetConfig>
    1758:	c8 01       	movw	r24, r16
    175a:	6f ef       	ldi	r22, 0xFF	; 255
    175c:	0e 94 07 08 	call	0x100e	; 0x100e <__act_setConnected>
    1760:	c8 01       	movw	r24, r16
    1762:	60 e0       	ldi	r22, 0x00	; 0
    1764:	0e 94 e7 07 	call	0xfce	; 0xfce <__act_setSpeed>
    1768:	08 94       	sec
    176a:	e1 08       	sbc	r14, r1
    176c:	f1 08       	sbc	r15, r1
    176e:	ee ef       	ldi	r30, 0xFE	; 254
    1770:	ff ef       	ldi	r31, 0xFF	; 255
    1772:	ce 0e       	add	r12, r30
    1774:	df 1e       	adc	r13, r31
    1776:	ff ef       	ldi	r31, 0xFF	; 255
    1778:	ef 16       	cp	r14, r31
    177a:	ff ef       	ldi	r31, 0xFF	; 255
    177c:	ff 06       	cpc	r15, r31
    177e:	41 f6       	brne	.-112    	; 0x1710 <servosInit+0xda>
    1780:	0e 94 af 0e 	call	0x1d5e	; 0x1d5e <getError>
    1784:	88 23       	and	r24, r24
    1786:	d1 f5       	brne	.+116    	; 0x17fc <servosInit+0x1c6>
    1788:	81 01       	movw	r16, r2
    178a:	00 5f       	subi	r16, 0xF0	; 240
    178c:	1f 4f       	sbci	r17, 0xFF	; 255
    178e:	df b6       	in	r13, 0x3f	; 63
    1790:	f8 94       	cli
    1792:	86 2d       	mov	r24, r6
    1794:	97 2d       	mov	r25, r7
    1796:	0e 94 f2 10 	call	0x21e4	; 0x21e4 <compareGetThreshold>
    179a:	d5 01       	movw	r26, r10
    179c:	1a 96       	adiw	r26, 0x0a	; 10
    179e:	4d 91       	ld	r20, X+
    17a0:	5c 91       	ld	r21, X
    17a2:	1b 97       	sbiw	r26, 0x0b	; 11
    17a4:	48 0f       	add	r20, r24
    17a6:	59 1f       	adc	r21, r25
    17a8:	86 2d       	mov	r24, r6
    17aa:	97 2d       	mov	r25, r7
    17ac:	64 e5       	ldi	r22, 0x54	; 84
    17ae:	7c e0       	ldi	r23, 0x0C	; 12
    17b0:	95 01       	movw	r18, r10
    17b2:	0e 94 9a 13 	call	0x2734	; 0x2734 <compareAttach>
    17b6:	c8 01       	movw	r24, r16
    17b8:	0e 94 f2 10 	call	0x21e4	; 0x21e4 <compareGetThreshold>
    17bc:	f5 01       	movw	r30, r10
    17be:	42 85       	ldd	r20, Z+10	; 0x0a
    17c0:	53 85       	ldd	r21, Z+11	; 0x0b
    17c2:	48 0f       	add	r20, r24
    17c4:	59 1f       	adc	r21, r25
    17c6:	c8 01       	movw	r24, r16
    17c8:	64 e3       	ldi	r22, 0x34	; 52
    17ca:	7c e0       	ldi	r23, 0x0C	; 12
    17cc:	95 01       	movw	r18, r10
    17ce:	0e 94 9a 13 	call	0x2734	; 0x2734 <compareAttach>
    17d2:	c8 01       	movw	r24, r16
    17d4:	03 96       	adiw	r24, 0x03	; 3
    17d6:	0e 94 d5 08 	call	0x11aa	; 0x11aa <__portMaskClear>
    17da:	ce 01       	movw	r24, r28
    17dc:	b4 01       	movw	r22, r8
    17de:	0e 94 46 12 	call	0x248c	; 0x248c <timerSetPrescaler>
    17e2:	df be       	out	0x3f, r13	; 63
    17e4:	0b c0       	rjmp	.+22     	; 0x17fc <servosInit+0x1c6>
    17e6:	89 ef       	ldi	r24, 0xF9	; 249
    17e8:	0e 94 2d 10 	call	0x205a	; 0x205a <setError>
    17ec:	07 c0       	rjmp	.+14     	; 0x17fc <servosInit+0x1c6>
    17ee:	ce 01       	movw	r24, r28
    17f0:	69 e1       	ldi	r22, 0x19	; 25
    17f2:	70 e0       	ldi	r23, 0x00	; 0
    17f4:	0e 94 e6 11 	call	0x23cc	; 0x23cc <timerGetBestPrescaler>
    17f8:	4c 01       	movw	r8, r24
    17fa:	61 cf       	rjmp	.-318    	; 0x16be <servosInit+0x88>
    17fc:	df 91       	pop	r29
    17fe:	cf 91       	pop	r28
    1800:	1f 91       	pop	r17
    1802:	0f 91       	pop	r16
    1804:	ff 90       	pop	r15
    1806:	ef 90       	pop	r14
    1808:	df 90       	pop	r13
    180a:	cf 90       	pop	r12
    180c:	bf 90       	pop	r11
    180e:	af 90       	pop	r10
    1810:	9f 90       	pop	r9
    1812:	8f 90       	pop	r8
    1814:	7f 90       	pop	r7
    1816:	6f 90       	pop	r6
    1818:	5f 90       	pop	r5
    181a:	4f 90       	pop	r4
    181c:	3f 90       	pop	r3
    181e:	2f 90       	pop	r2
    1820:	08 95       	ret

00001822 <setSpeed>:
    1822:	0f 93       	push	r16
    1824:	1f 93       	push	r17
    1826:	cf 93       	push	r28
    1828:	df 93       	push	r29
    182a:	ec 01       	movw	r28, r24
    182c:	2c 85       	ldd	r18, Y+12	; 0x0c
    182e:	3d 85       	ldd	r19, Y+13	; 0x0d
    1830:	0e 85       	ldd	r16, Y+14	; 0x0e
    1832:	1f 85       	ldd	r17, Y+15	; 0x0f
    1834:	86 2f       	mov	r24, r22
    1836:	99 27       	eor	r25, r25
    1838:	87 fd       	sbrc	r24, 7
    183a:	90 95       	com	r25
    183c:	61 e8       	ldi	r22, 0x81	; 129
    183e:	7f ef       	ldi	r23, 0xFF	; 255
    1840:	4f e7       	ldi	r20, 0x7F	; 127
    1842:	50 e0       	ldi	r21, 0x00	; 0
    1844:	0e 94 70 09 	call	0x12e0	; 0x12e0 <interpolateU>
    1848:	9c 01       	movw	r18, r24
    184a:	88 89       	ldd	r24, Y+16	; 0x10
    184c:	99 89       	ldd	r25, Y+17	; 0x11
    184e:	28 17       	cp	r18, r24
    1850:	39 07       	cpc	r19, r25
    1852:	29 f0       	breq	.+10     	; 0x185e <setSpeed+0x3c>
    1854:	8f b7       	in	r24, 0x3f	; 63
    1856:	f8 94       	cli
    1858:	39 8b       	std	Y+17, r19	; 0x11
    185a:	28 8b       	std	Y+16, r18	; 0x10
    185c:	8f bf       	out	0x3f, r24	; 63
    185e:	df 91       	pop	r29
    1860:	cf 91       	pop	r28
    1862:	1f 91       	pop	r17
    1864:	0f 91       	pop	r16
    1866:	08 95       	ret

00001868 <__servoEndService>:
    1868:	cf 93       	push	r28
    186a:	df 93       	push	r29
    186c:	ec 01       	movw	r28, r24
    186e:	fb 01       	movw	r30, r22
    1870:	97 81       	ldd	r25, Z+7	; 0x07
    1872:	82 81       	ldd	r24, Z+2	; 0x02
    1874:	98 17       	cp	r25, r24
    1876:	88 f4       	brcc	.+34     	; 0x189a <__servoEndService+0x32>
    1878:	89 2f       	mov	r24, r25
    187a:	90 e0       	ldi	r25, 0x00	; 0
    187c:	88 0f       	add	r24, r24
    187e:	99 1f       	adc	r25, r25
    1880:	20 81       	ld	r18, Z
    1882:	31 81       	ldd	r19, Z+1	; 0x01
    1884:	28 0f       	add	r18, r24
    1886:	39 1f       	adc	r19, r25
    1888:	f9 01       	movw	r30, r18
    188a:	a5 91       	lpm	r26, Z+
    188c:	b4 91       	lpm	r27, Z+
    188e:	16 96       	adiw	r26, 0x06	; 6
    1890:	8d 91       	ld	r24, X+
    1892:	9c 91       	ld	r25, X
    1894:	17 97       	sbiw	r26, 0x07	; 7
    1896:	0e 94 4d 0a 	call	0x149a	; 0x149a <pin_low>
    189a:	ce 01       	movw	r24, r28
    189c:	03 96       	adiw	r24, 0x03	; 3
    189e:	0e 94 d5 08 	call	0x11aa	; 0x11aa <__portMaskClear>
    18a2:	df 91       	pop	r29
    18a4:	cf 91       	pop	r28
    18a6:	08 95       	ret

000018a8 <__servoStartService>:
    18a8:	8f 92       	push	r8
    18aa:	9f 92       	push	r9
    18ac:	af 92       	push	r10
    18ae:	bf 92       	push	r11
    18b0:	cf 92       	push	r12
    18b2:	df 92       	push	r13
    18b4:	ef 92       	push	r14
    18b6:	ff 92       	push	r15
    18b8:	0f 93       	push	r16
    18ba:	1f 93       	push	r17
    18bc:	cf 93       	push	r28
    18be:	df 93       	push	r29
    18c0:	5c 01       	movw	r10, r24
    18c2:	eb 01       	movw	r28, r22
    18c4:	8c 01       	movw	r16, r24
    18c6:	0e 5f       	subi	r16, 0xFE	; 254
    18c8:	1f 4f       	sbci	r17, 0xFF	; 255
    18ca:	f8 01       	movw	r30, r16
    18cc:	94 91       	lpm	r25, Z+
    18ce:	8c e2       	ldi	r24, 0x2C	; 44
    18d0:	98 9f       	mul	r25, r24
    18d2:	70 01       	movw	r14, r0
    18d4:	11 24       	eor	r1, r1
    18d6:	81 e2       	ldi	r24, 0x21	; 33
    18d8:	91 e0       	ldi	r25, 0x01	; 1
    18da:	e8 0e       	add	r14, r24
    18dc:	f9 1e       	adc	r15, r25
    18de:	f7 01       	movw	r30, r14
    18e0:	77 96       	adiw	r30, 0x17	; 23
    18e2:	85 91       	lpm	r24, Z+
    18e4:	94 91       	lpm	r25, Z+
    18e6:	50 e1       	ldi	r21, 0x10	; 16
    18e8:	85 2e       	mov	r8, r21
    18ea:	91 2c       	mov	r9, r1
    18ec:	88 0e       	add	r8, r24
    18ee:	99 1e       	adc	r9, r25
    18f0:	43 e1       	ldi	r20, 0x13	; 19
    18f2:	c4 2e       	mov	r12, r20
    18f4:	d1 2c       	mov	r13, r1
    18f6:	c8 0e       	add	r12, r24
    18f8:	d9 1e       	adc	r13, r25
    18fa:	02 c0       	rjmp	.+4      	; 0x1900 <__servoStartService+0x58>
    18fc:	0e 94 b1 08 	call	0x1162	; 0x1162 <breathe>
    1900:	c6 01       	movw	r24, r12
    1902:	0e 94 c8 08 	call	0x1190	; 0x1190 <__portMaskGet>
    1906:	88 23       	and	r24, r24
    1908:	c9 f7       	brne	.-14     	; 0x18fc <__servoStartService+0x54>
    190a:	8b 81       	ldd	r24, Y+3	; 0x03
    190c:	88 23       	and	r24, r24
    190e:	21 f0       	breq	.+8      	; 0x1918 <__servoStartService+0x70>
    1910:	8f 81       	ldd	r24, Y+7	; 0x07
    1912:	8f 5f       	subi	r24, 0xFF	; 255
    1914:	8f 83       	std	Y+7, r24	; 0x07
    1916:	10 c0       	rjmp	.+32     	; 0x1938 <__servoStartService+0x90>
    1918:	8f ef       	ldi	r24, 0xFF	; 255
    191a:	8b 83       	std	Y+3, r24	; 0x03
    191c:	f8 01       	movw	r30, r16
    191e:	84 91       	lpm	r24, Z+
    1920:	2c e2       	ldi	r18, 0x2C	; 44
    1922:	82 9f       	mul	r24, r18
    1924:	c0 01       	movw	r24, r0
    1926:	11 24       	eor	r1, r1
    1928:	8f 5d       	subi	r24, 0xDF	; 223
    192a:	9e 4f       	sbci	r25, 0xFE	; 254
    192c:	0e 94 31 0e 	call	0x1c62	; 0x1c62 <timerGetCounter>
    1930:	bc 01       	movw	r22, r24
    1932:	c5 01       	movw	r24, r10
    1934:	0e 94 bd 10 	call	0x217a	; 0x217a <compareSetThreshold>
    1938:	9f 81       	ldd	r25, Y+7	; 0x07
    193a:	8a 81       	ldd	r24, Y+2	; 0x02
    193c:	98 17       	cp	r25, r24
    193e:	09 f4       	brne	.+2      	; 0x1942 <__servoStartService+0x9a>
    1940:	3c c0       	rjmp	.+120    	; 0x19ba <__servoStartService+0x112>
    1942:	89 17       	cp	r24, r25
    1944:	18 f4       	brcc	.+6      	; 0x194c <__servoStartService+0xa4>
    1946:	1f 82       	std	Y+7, r1	; 0x07
    1948:	19 86       	std	Y+9, r1	; 0x09
    194a:	18 86       	std	Y+8, r1	; 0x08
    194c:	8f 81       	ldd	r24, Y+7	; 0x07
    194e:	90 e0       	ldi	r25, 0x00	; 0
    1950:	88 0f       	add	r24, r24
    1952:	99 1f       	adc	r25, r25
    1954:	e8 81       	ld	r30, Y
    1956:	f9 81       	ldd	r31, Y+1	; 0x01
    1958:	e8 0f       	add	r30, r24
    195a:	f9 1f       	adc	r31, r25
    195c:	05 91       	lpm	r16, Z+
    195e:	14 91       	lpm	r17, Z+
    1960:	c7 01       	movw	r24, r14
    1962:	0e 94 31 0e 	call	0x1c62	; 0x1c62 <timerGetCounter>
    1966:	7c 01       	movw	r14, r24
    1968:	f8 01       	movw	r30, r16
    196a:	83 81       	ldd	r24, Z+3	; 0x03
    196c:	80 ff       	sbrs	r24, 0
    196e:	04 c0       	rjmp	.+8      	; 0x1978 <__servoStartService+0xd0>
    1970:	86 81       	ldd	r24, Z+6	; 0x06
    1972:	97 81       	ldd	r25, Z+7	; 0x07
    1974:	0e 94 72 0a 	call	0x14e4	; 0x14e4 <pin_high>
    1978:	f8 01       	movw	r30, r16
    197a:	60 89       	ldd	r22, Z+16	; 0x10
    197c:	71 89       	ldd	r23, Z+17	; 0x11
    197e:	6e 0d       	add	r22, r14
    1980:	7f 1d       	adc	r23, r15
    1982:	c4 01       	movw	r24, r8
    1984:	0e 94 bd 10 	call	0x217a	; 0x217a <compareSetThreshold>
    1988:	c4 01       	movw	r24, r8
    198a:	08 96       	adiw	r24, 0x08	; 8
    198c:	0e 94 bc 08 	call	0x1178	; 0x1178 <__portMaskSet>
    1990:	c6 01       	movw	r24, r12
    1992:	0e 94 bc 08 	call	0x1178	; 0x1178 <__portMaskSet>
    1996:	f8 01       	movw	r30, r16
    1998:	66 85       	ldd	r22, Z+14	; 0x0e
    199a:	77 85       	ldd	r23, Z+15	; 0x0f
    199c:	6e 0d       	add	r22, r14
    199e:	7f 1d       	adc	r23, r15
    19a0:	c5 01       	movw	r24, r10
    19a2:	0e 94 bd 10 	call	0x217a	; 0x217a <compareSetThreshold>
    19a6:	88 85       	ldd	r24, Y+8	; 0x08
    19a8:	99 85       	ldd	r25, Y+9	; 0x09
    19aa:	f8 01       	movw	r30, r16
    19ac:	26 85       	ldd	r18, Z+14	; 0x0e
    19ae:	37 85       	ldd	r19, Z+15	; 0x0f
    19b0:	82 0f       	add	r24, r18
    19b2:	93 1f       	adc	r25, r19
    19b4:	99 87       	std	Y+9, r25	; 0x09
    19b6:	88 87       	std	Y+8, r24	; 0x08
    19b8:	19 c0       	rjmp	.+50     	; 0x19ec <__servoStartService+0x144>
    19ba:	c6 01       	movw	r24, r12
    19bc:	0e 94 d5 08 	call	0x11aa	; 0x11aa <__portMaskClear>
    19c0:	88 85       	ldd	r24, Y+8	; 0x08
    19c2:	99 85       	ldd	r25, Y+9	; 0x09
    19c4:	6a 85       	ldd	r22, Y+10	; 0x0a
    19c6:	7b 85       	ldd	r23, Y+11	; 0x0b
    19c8:	68 17       	cp	r22, r24
    19ca:	79 07       	cpc	r23, r25
    19cc:	18 f4       	brcc	.+6      	; 0x19d4 <__servoStartService+0x12c>
    19ce:	c4 e6       	ldi	r28, 0x64	; 100
    19d0:	d0 e0       	ldi	r29, 0x00	; 0
    19d2:	03 c0       	rjmp	.+6      	; 0x19da <__servoStartService+0x132>
    19d4:	eb 01       	movw	r28, r22
    19d6:	c8 1b       	sub	r28, r24
    19d8:	d9 0b       	sbc	r29, r25
    19da:	c5 01       	movw	r24, r10
    19dc:	0e 94 f2 10 	call	0x21e4	; 0x21e4 <compareGetThreshold>
    19e0:	c8 0f       	add	r28, r24
    19e2:	d9 1f       	adc	r29, r25
    19e4:	c5 01       	movw	r24, r10
    19e6:	be 01       	movw	r22, r28
    19e8:	0e 94 bd 10 	call	0x217a	; 0x217a <compareSetThreshold>
    19ec:	df 91       	pop	r29
    19ee:	cf 91       	pop	r28
    19f0:	1f 91       	pop	r17
    19f2:	0f 91       	pop	r16
    19f4:	ff 90       	pop	r15
    19f6:	ef 90       	pop	r14
    19f8:	df 90       	pop	r13
    19fa:	cf 90       	pop	r12
    19fc:	bf 90       	pop	r11
    19fe:	af 90       	pop	r10
    1a00:	9f 90       	pop	r9
    1a02:	8f 90       	pop	r8
    1a04:	08 95       	ret

00001a06 <servoSetConfig>:
    1a06:	9f 92       	push	r9
    1a08:	af 92       	push	r10
    1a0a:	bf 92       	push	r11
    1a0c:	cf 92       	push	r12
    1a0e:	df 92       	push	r13
    1a10:	ef 92       	push	r14
    1a12:	ff 92       	push	r15
    1a14:	0f 93       	push	r16
    1a16:	1f 93       	push	r17
    1a18:	cf 93       	push	r28
    1a1a:	df 93       	push	r29
    1a1c:	ec 01       	movw	r28, r24
    1a1e:	7b 01       	movw	r14, r22
    1a20:	8a 01       	movw	r16, r20
    1a22:	79 87       	std	Y+9, r23	; 0x09
    1a24:	68 87       	std	Y+8, r22	; 0x08
    1a26:	5b 87       	std	Y+11, r21	; 0x0b
    1a28:	4a 87       	std	Y+10, r20	; 0x0a
    1a2a:	8c 81       	ldd	r24, Y+4	; 0x04
    1a2c:	9d 81       	ldd	r25, Y+5	; 0x05
    1a2e:	89 2b       	or	r24, r25
    1a30:	09 f4       	brne	.+2      	; 0x1a34 <servoSetConfig+0x2e>
    1a32:	5e c0       	rjmp	.+188    	; 0x1af0 <servoSetConfig+0xea>
    1a34:	9f b6       	in	r9, 0x3f	; 63
    1a36:	f8 94       	cli
    1a38:	8a 89       	ldd	r24, Y+18	; 0x12
    1a3a:	9b 89       	ldd	r25, Y+19	; 0x13
    1a3c:	68 ee       	ldi	r22, 0xE8	; 232
    1a3e:	73 e0       	ldi	r23, 0x03	; 3
    1a40:	0e 94 51 1d 	call	0x3aa2	; 0x3aa2 <__udivmodhi4>
    1a44:	5b 01       	movw	r10, r22
    1a46:	cc 24       	eor	r12, r12
    1a48:	dd 24       	eor	r13, r13
    1a4a:	b7 01       	movw	r22, r14
    1a4c:	60 1b       	sub	r22, r16
    1a4e:	71 0b       	sbc	r23, r17
    1a50:	80 e0       	ldi	r24, 0x00	; 0
    1a52:	90 e0       	ldi	r25, 0x00	; 0
    1a54:	a6 01       	movw	r20, r12
    1a56:	95 01       	movw	r18, r10
    1a58:	0e 94 32 1d 	call	0x3a64	; 0x3a64 <__mulsi3>
    1a5c:	24 e1       	ldi	r18, 0x14	; 20
    1a5e:	30 e0       	ldi	r19, 0x00	; 0
    1a60:	40 e0       	ldi	r20, 0x00	; 0
    1a62:	50 e0       	ldi	r21, 0x00	; 0
    1a64:	0e 94 65 1d 	call	0x3aca	; 0x3aca <__udivmodsi4>
    1a68:	c9 01       	movw	r24, r18
    1a6a:	da 01       	movw	r26, r20
    1a6c:	9c 01       	movw	r18, r24
    1a6e:	ad 01       	movw	r20, r26
    1a70:	da 01       	movw	r26, r20
    1a72:	c9 01       	movw	r24, r18
    1a74:	80 70       	andi	r24, 0x00	; 0
    1a76:	90 70       	andi	r25, 0x00	; 0
    1a78:	00 97       	sbiw	r24, 0x00	; 0
    1a7a:	a1 05       	cpc	r26, r1
    1a7c:	b1 05       	cpc	r27, r1
    1a7e:	39 f0       	breq	.+14     	; 0x1a8e <servoSetConfig+0x88>
    1a80:	86 ee       	ldi	r24, 0xE6	; 230
    1a82:	0e 94 2d 10 	call	0x205a	; 0x205a <setError>
    1a86:	2f ef       	ldi	r18, 0xFF	; 255
    1a88:	3f ef       	ldi	r19, 0xFF	; 255
    1a8a:	40 e0       	ldi	r20, 0x00	; 0
    1a8c:	50 e0       	ldi	r21, 0x00	; 0
    1a8e:	3d 87       	std	Y+13, r19	; 0x0d
    1a90:	2c 87       	std	Y+12, r18	; 0x0c
    1a92:	0e 0d       	add	r16, r14
    1a94:	1f 1d       	adc	r17, r15
    1a96:	b8 01       	movw	r22, r16
    1a98:	80 e0       	ldi	r24, 0x00	; 0
    1a9a:	90 e0       	ldi	r25, 0x00	; 0
    1a9c:	a6 01       	movw	r20, r12
    1a9e:	95 01       	movw	r18, r10
    1aa0:	0e 94 32 1d 	call	0x3a64	; 0x3a64 <__mulsi3>
    1aa4:	24 e1       	ldi	r18, 0x14	; 20
    1aa6:	30 e0       	ldi	r19, 0x00	; 0
    1aa8:	40 e0       	ldi	r20, 0x00	; 0
    1aaa:	50 e0       	ldi	r21, 0x00	; 0
    1aac:	0e 94 65 1d 	call	0x3aca	; 0x3aca <__udivmodsi4>
    1ab0:	c9 01       	movw	r24, r18
    1ab2:	da 01       	movw	r26, r20
    1ab4:	9c 01       	movw	r18, r24
    1ab6:	ad 01       	movw	r20, r26
    1ab8:	da 01       	movw	r26, r20
    1aba:	c9 01       	movw	r24, r18
    1abc:	80 70       	andi	r24, 0x00	; 0
    1abe:	90 70       	andi	r25, 0x00	; 0
    1ac0:	00 97       	sbiw	r24, 0x00	; 0
    1ac2:	a1 05       	cpc	r26, r1
    1ac4:	b1 05       	cpc	r27, r1
    1ac6:	39 f0       	breq	.+14     	; 0x1ad6 <servoSetConfig+0xd0>
    1ac8:	86 ee       	ldi	r24, 0xE6	; 230
    1aca:	0e 94 2d 10 	call	0x205a	; 0x205a <setError>
    1ace:	2f ef       	ldi	r18, 0xFF	; 255
    1ad0:	3f ef       	ldi	r19, 0xFF	; 255
    1ad2:	40 e0       	ldi	r20, 0x00	; 0
    1ad4:	50 e0       	ldi	r21, 0x00	; 0
    1ad6:	3f 87       	std	Y+15, r19	; 0x0f
    1ad8:	2e 87       	std	Y+14, r18	; 0x0e
    1ada:	8b 81       	ldd	r24, Y+3	; 0x03
    1adc:	80 ff       	sbrs	r24, 0
    1ade:	07 c0       	rjmp	.+14     	; 0x1aee <servoSetConfig+0xe8>
    1ae0:	6a 81       	ldd	r22, Y+2	; 0x02
    1ae2:	61 50       	subi	r22, 0x01	; 1
    1ae4:	6a 83       	std	Y+2, r22	; 0x02
    1ae6:	6f 5f       	subi	r22, 0xFF	; 255
    1ae8:	ce 01       	movw	r24, r28
    1aea:	0e 94 e7 07 	call	0xfce	; 0xfce <__act_setSpeed>
    1aee:	9f be       	out	0x3f, r9	; 63
    1af0:	df 91       	pop	r29
    1af2:	cf 91       	pop	r28
    1af4:	1f 91       	pop	r17
    1af6:	0f 91       	pop	r16
    1af8:	ff 90       	pop	r15
    1afa:	ef 90       	pop	r14
    1afc:	df 90       	pop	r13
    1afe:	cf 90       	pop	r12
    1b00:	bf 90       	pop	r11
    1b02:	af 90       	pop	r10
    1b04:	9f 90       	pop	r9
    1b06:	08 95       	ret

00001b08 <ticks_per_ms>:
    1b08:	ef 92       	push	r14
    1b0a:	ff 92       	push	r15
    1b0c:	0f 93       	push	r16
    1b0e:	1f 93       	push	r17
    1b10:	7a 01       	movw	r14, r20
    1b12:	20 91 04 01 	lds	r18, 0x0104
    1b16:	30 91 05 01 	lds	r19, 0x0105
    1b1a:	40 e0       	ldi	r20, 0x00	; 0
    1b1c:	50 e0       	ldi	r21, 0x00	; 0
    1b1e:	0e 94 32 1d 	call	0x3a64	; 0x3a64 <__mulsi3>
    1b22:	00 e0       	ldi	r16, 0x00	; 0
    1b24:	10 e0       	ldi	r17, 0x00	; 0
    1b26:	a8 01       	movw	r20, r16
    1b28:	97 01       	movw	r18, r14
    1b2a:	0e 94 65 1d 	call	0x3aca	; 0x3aca <__udivmodsi4>
    1b2e:	ca 01       	movw	r24, r20
    1b30:	b9 01       	movw	r22, r18
    1b32:	1f 91       	pop	r17
    1b34:	0f 91       	pop	r16
    1b36:	ff 90       	pop	r15
    1b38:	ef 90       	pop	r14
    1b3a:	08 95       	ret

00001b3c <delay_cycles>:
    1b3c:	61 30       	cpi	r22, 0x01	; 1
    1b3e:	23 e0       	ldi	r18, 0x03	; 3
    1b40:	72 07       	cpc	r23, r18
    1b42:	20 e0       	ldi	r18, 0x00	; 0
    1b44:	82 07       	cpc	r24, r18
    1b46:	20 e0       	ldi	r18, 0x00	; 0
    1b48:	92 07       	cpc	r25, r18
    1b4a:	48 f4       	brcc	.+18     	; 0x1b5e <delay_cycles+0x22>
    1b4c:	23 e0       	ldi	r18, 0x03	; 3
    1b4e:	30 e0       	ldi	r19, 0x00	; 0
    1b50:	40 e0       	ldi	r20, 0x00	; 0
    1b52:	50 e0       	ldi	r21, 0x00	; 0
    1b54:	0e 94 65 1d 	call	0x3aca	; 0x3aca <__udivmodsi4>
    1b58:	2a 95       	dec	r18
    1b5a:	f1 f7       	brne	.-4      	; 0x1b58 <delay_cycles+0x1c>
    1b5c:	08 95       	ret
    1b5e:	9b 01       	movw	r18, r22
    1b60:	ac 01       	movw	r20, r24
    1b62:	82 e0       	ldi	r24, 0x02	; 2
    1b64:	56 95       	lsr	r21
    1b66:	47 95       	ror	r20
    1b68:	37 95       	ror	r19
    1b6a:	27 95       	ror	r18
    1b6c:	8a 95       	dec	r24
    1b6e:	d1 f7       	brne	.-12     	; 0x1b64 <delay_cycles+0x28>
    1b70:	da 01       	movw	r26, r20
    1b72:	c9 01       	movw	r24, r18
    1b74:	20 30       	cpi	r18, 0x00	; 0
    1b76:	60 e0       	ldi	r22, 0x00	; 0
    1b78:	36 07       	cpc	r19, r22
    1b7a:	61 e0       	ldi	r22, 0x01	; 1
    1b7c:	46 07       	cpc	r20, r22
    1b7e:	60 e0       	ldi	r22, 0x00	; 0
    1b80:	56 07       	cpc	r21, r22
    1b82:	20 f0       	brcs	.+8      	; 0x1b8c <delay_cycles+0x50>
    1b84:	8f ef       	ldi	r24, 0xFF	; 255
    1b86:	9f ef       	ldi	r25, 0xFF	; 255
    1b88:	a0 e0       	ldi	r26, 0x00	; 0
    1b8a:	b0 e0       	ldi	r27, 0x00	; 0
    1b8c:	fc 01       	movw	r30, r24
    1b8e:	31 97       	sbiw	r30, 0x01	; 1
    1b90:	f1 f7       	brne	.-4      	; 0x1b8e <delay_cycles+0x52>
    1b92:	a0 e0       	ldi	r26, 0x00	; 0
    1b94:	b0 e0       	ldi	r27, 0x00	; 0
    1b96:	28 1b       	sub	r18, r24
    1b98:	39 0b       	sbc	r19, r25
    1b9a:	4a 0b       	sbc	r20, r26
    1b9c:	5b 0b       	sbc	r21, r27
    1b9e:	41 f7       	brne	.-48     	; 0x1b70 <delay_cycles+0x34>
    1ba0:	08 95       	ret

00001ba2 <nullTimerCompareCallback>:
    1ba2:	08 95       	ret

00001ba4 <clockCallback>:
    1ba4:	80 91 ef 01 	lds	r24, 0x01EF
    1ba8:	90 91 f0 01 	lds	r25, 0x01F0
    1bac:	a0 91 f1 01 	lds	r26, 0x01F1
    1bb0:	b0 91 f2 01 	lds	r27, 0x01F2
    1bb4:	01 96       	adiw	r24, 0x01	; 1
    1bb6:	a1 1d       	adc	r26, r1
    1bb8:	b1 1d       	adc	r27, r1
    1bba:	80 93 ef 01 	sts	0x01EF, r24
    1bbe:	90 93 f0 01 	sts	0x01F0, r25
    1bc2:	a0 93 f1 01 	sts	0x01F1, r26
    1bc6:	b0 93 f2 01 	sts	0x01F2, r27
    1bca:	08 95       	ret

00001bcc <__timerPrescalerIndex>:
    1bcc:	fc 01       	movw	r30, r24
    1bce:	37 96       	adiw	r30, 0x07	; 7
    1bd0:	e4 91       	lpm	r30, Z+
    1bd2:	ee 23       	and	r30, r30
    1bd4:	21 f4       	brne	.+8      	; 0x1bde <__timerPrescalerIndex+0x12>
    1bd6:	26 e0       	ldi	r18, 0x06	; 6
    1bd8:	86 ef       	ldi	r24, 0xF6	; 246
    1bda:	91 e0       	ldi	r25, 0x01	; 1
    1bdc:	03 c0       	rjmp	.+6      	; 0x1be4 <__timerPrescalerIndex+0x18>
    1bde:	28 e0       	ldi	r18, 0x08	; 8
    1be0:	82 e0       	ldi	r24, 0x02	; 2
    1be2:	92 e0       	ldi	r25, 0x02	; 2
    1be4:	42 2f       	mov	r20, r18
    1be6:	41 50       	subi	r20, 0x01	; 1
    1be8:	24 2f       	mov	r18, r20
    1bea:	33 27       	eor	r19, r19
    1bec:	27 fd       	sbrc	r18, 7
    1bee:	30 95       	com	r19
    1bf0:	22 0f       	add	r18, r18
    1bf2:	33 1f       	adc	r19, r19
    1bf4:	28 0f       	add	r18, r24
    1bf6:	39 1f       	adc	r19, r25
    1bf8:	0e c0       	rjmp	.+28     	; 0x1c16 <__timerPrescalerIndex+0x4a>
    1bfa:	f9 01       	movw	r30, r18
    1bfc:	85 91       	lpm	r24, Z+
    1bfe:	94 91       	lpm	r25, Z+
    1c00:	22 50       	subi	r18, 0x02	; 2
    1c02:	30 40       	sbci	r19, 0x00	; 0
    1c04:	86 17       	cp	r24, r22
    1c06:	97 07       	cpc	r25, r23
    1c08:	29 f4       	brne	.+10     	; 0x1c14 <__timerPrescalerIndex+0x48>
    1c0a:	24 2f       	mov	r18, r20
    1c0c:	33 27       	eor	r19, r19
    1c0e:	27 fd       	sbrc	r18, 7
    1c10:	30 95       	com	r19
    1c12:	05 c0       	rjmp	.+10     	; 0x1c1e <__timerPrescalerIndex+0x52>
    1c14:	41 50       	subi	r20, 0x01	; 1
    1c16:	47 ff       	sbrs	r20, 7
    1c18:	f0 cf       	rjmp	.-32     	; 0x1bfa <__timerPrescalerIndex+0x2e>
    1c1a:	2f ef       	ldi	r18, 0xFF	; 255
    1c1c:	3f ef       	ldi	r19, 0xFF	; 255
    1c1e:	c9 01       	movw	r24, r18
    1c20:	08 95       	ret

00001c22 <timerGetClosestPrescale>:
    1c22:	0f 93       	push	r16
    1c24:	1f 93       	push	r17
    1c26:	cf 93       	push	r28
    1c28:	df 93       	push	r29
    1c2a:	8c 01       	movw	r16, r24
    1c2c:	24 e0       	ldi	r18, 0x04	; 4
    1c2e:	61 30       	cpi	r22, 0x01	; 1
    1c30:	72 07       	cpc	r23, r18
    1c32:	10 f0       	brcs	.+4      	; 0x1c38 <timerGetClosestPrescale+0x16>
    1c34:	60 e0       	ldi	r22, 0x00	; 0
    1c36:	74 e0       	ldi	r23, 0x04	; 4
    1c38:	eb 01       	movw	r28, r22
    1c3a:	61 15       	cp	r22, r1
    1c3c:	71 05       	cpc	r23, r1
    1c3e:	21 f4       	brne	.+8      	; 0x1c48 <timerGetClosestPrescale+0x26>
    1c40:	c1 e0       	ldi	r28, 0x01	; 1
    1c42:	d0 e0       	ldi	r29, 0x00	; 0
    1c44:	01 c0       	rjmp	.+2      	; 0x1c48 <timerGetClosestPrescale+0x26>
    1c46:	21 96       	adiw	r28, 0x01	; 1
    1c48:	c8 01       	movw	r24, r16
    1c4a:	be 01       	movw	r22, r28
    1c4c:	0e 94 e6 0d 	call	0x1bcc	; 0x1bcc <__timerPrescalerIndex>
    1c50:	8f 5f       	subi	r24, 0xFF	; 255
    1c52:	9f 4f       	sbci	r25, 0xFF	; 255
    1c54:	c1 f3       	breq	.-16     	; 0x1c46 <timerGetClosestPrescale+0x24>
    1c56:	ce 01       	movw	r24, r28
    1c58:	df 91       	pop	r29
    1c5a:	cf 91       	pop	r28
    1c5c:	1f 91       	pop	r17
    1c5e:	0f 91       	pop	r16
    1c60:	08 95       	ret

00001c62 <timerGetCounter>:
    1c62:	9c 01       	movw	r18, r24
    1c64:	02 96       	adiw	r24, 0x02	; 2
    1c66:	fc 01       	movw	r30, r24
    1c68:	a5 91       	lpm	r26, Z+
    1c6a:	b4 91       	lpm	r27, Z+
    1c6c:	2a 5f       	subi	r18, 0xFA	; 250
    1c6e:	3f 4f       	sbci	r19, 0xFF	; 255
    1c70:	f9 01       	movw	r30, r18
    1c72:	84 91       	lpm	r24, Z+
    1c74:	88 23       	and	r24, r24
    1c76:	19 f0       	breq	.+6      	; 0x1c7e <timerGetCounter+0x1c>
    1c78:	2d 91       	ld	r18, X+
    1c7a:	3c 91       	ld	r19, X
    1c7c:	03 c0       	rjmp	.+6      	; 0x1c84 <timerGetCounter+0x22>
    1c7e:	8c 91       	ld	r24, X
    1c80:	28 2f       	mov	r18, r24
    1c82:	30 e0       	ldi	r19, 0x00	; 0
    1c84:	c9 01       	movw	r24, r18
    1c86:	08 95       	ret

00001c88 <compareSetOutputMode>:
    1c88:	9c 01       	movw	r18, r24
    1c8a:	0b 96       	adiw	r24, 0x0b	; 11
    1c8c:	fc 01       	movw	r30, r24
    1c8e:	a5 91       	lpm	r26, Z+
    1c90:	b4 91       	lpm	r27, Z+
    1c92:	23 5f       	subi	r18, 0xF3	; 243
    1c94:	3f 4f       	sbci	r19, 0xFF	; 255
    1c96:	f9 01       	movw	r30, r18
    1c98:	24 91       	lpm	r18, Z+
    1c9a:	70 e0       	ldi	r23, 0x00	; 0
    1c9c:	02 2e       	mov	r0, r18
    1c9e:	02 c0       	rjmp	.+4      	; 0x1ca4 <compareSetOutputMode+0x1c>
    1ca0:	66 0f       	add	r22, r22
    1ca2:	77 1f       	adc	r23, r23
    1ca4:	0a 94       	dec	r0
    1ca6:	e2 f7       	brpl	.-8      	; 0x1ca0 <compareSetOutputMode+0x18>
    1ca8:	81 e0       	ldi	r24, 0x01	; 1
    1caa:	90 e0       	ldi	r25, 0x00	; 0
    1cac:	02 c0       	rjmp	.+4      	; 0x1cb2 <compareSetOutputMode+0x2a>
    1cae:	88 0f       	add	r24, r24
    1cb0:	99 1f       	adc	r25, r25
    1cb2:	2a 95       	dec	r18
    1cb4:	e2 f7       	brpl	.-8      	; 0x1cae <compareSetOutputMode+0x26>
    1cb6:	28 2f       	mov	r18, r24
    1cb8:	22 0f       	add	r18, r18
    1cba:	28 2b       	or	r18, r24
    1cbc:	9c 91       	ld	r25, X
    1cbe:	82 2f       	mov	r24, r18
    1cc0:	86 23       	and	r24, r22
    1cc2:	20 95       	com	r18
    1cc4:	29 23       	and	r18, r25
    1cc6:	82 2b       	or	r24, r18
    1cc8:	8c 93       	st	X, r24
    1cca:	08 95       	ret

00001ccc <compareGetOutputMode>:
    1ccc:	9c 01       	movw	r18, r24
    1cce:	0b 96       	adiw	r24, 0x0b	; 11
    1cd0:	fc 01       	movw	r30, r24
    1cd2:	a5 91       	lpm	r26, Z+
    1cd4:	b4 91       	lpm	r27, Z+
    1cd6:	23 5f       	subi	r18, 0xF3	; 243
    1cd8:	3f 4f       	sbci	r19, 0xFF	; 255
    1cda:	f9 01       	movw	r30, r18
    1cdc:	44 91       	lpm	r20, Z+
    1cde:	21 e0       	ldi	r18, 0x01	; 1
    1ce0:	30 e0       	ldi	r19, 0x00	; 0
    1ce2:	04 2e       	mov	r0, r20
    1ce4:	02 c0       	rjmp	.+4      	; 0x1cea <compareGetOutputMode+0x1e>
    1ce6:	22 0f       	add	r18, r18
    1ce8:	33 1f       	adc	r19, r19
    1cea:	0a 94       	dec	r0
    1cec:	e2 f7       	brpl	.-8      	; 0x1ce6 <compareGetOutputMode+0x1a>
    1cee:	82 2f       	mov	r24, r18
    1cf0:	88 0f       	add	r24, r24
    1cf2:	82 2b       	or	r24, r18
    1cf4:	2c 91       	ld	r18, X
    1cf6:	82 23       	and	r24, r18
    1cf8:	90 e0       	ldi	r25, 0x00	; 0
    1cfa:	02 c0       	rjmp	.+4      	; 0x1d00 <compareGetOutputMode+0x34>
    1cfc:	95 95       	asr	r25
    1cfe:	87 95       	ror	r24
    1d00:	4a 95       	dec	r20
    1d02:	e2 f7       	brpl	.-8      	; 0x1cfc <compareGetOutputMode+0x30>
    1d04:	08 95       	ret

00001d06 <__timer_overflowService>:
    1d06:	fc 01       	movw	r30, r24
    1d08:	a5 91       	lpm	r26, Z+
    1d0a:	b4 91       	lpm	r27, Z+
    1d0c:	12 96       	adiw	r26, 0x02	; 2
    1d0e:	ed 91       	ld	r30, X+
    1d10:	fc 91       	ld	r31, X
    1d12:	13 97       	sbiw	r26, 0x03	; 3
    1d14:	30 97       	sbiw	r30, 0x00	; 0
    1d16:	29 f0       	breq	.+10     	; 0x1d22 <__timer_overflowService+0x1c>
    1d18:	14 96       	adiw	r26, 0x04	; 4
    1d1a:	6d 91       	ld	r22, X+
    1d1c:	7c 91       	ld	r23, X
    1d1e:	15 97       	sbiw	r26, 0x05	; 5
    1d20:	09 95       	icall
    1d22:	08 95       	ret

00001d24 <__timer_captureService>:
    1d24:	fc 01       	movw	r30, r24
    1d26:	a5 91       	lpm	r26, Z+
    1d28:	b4 91       	lpm	r27, Z+
    1d2a:	16 96       	adiw	r26, 0x06	; 6
    1d2c:	ed 91       	ld	r30, X+
    1d2e:	fc 91       	ld	r31, X
    1d30:	17 97       	sbiw	r26, 0x07	; 7
    1d32:	30 97       	sbiw	r30, 0x00	; 0
    1d34:	29 f0       	breq	.+10     	; 0x1d40 <__timer_captureService+0x1c>
    1d36:	18 96       	adiw	r26, 0x08	; 8
    1d38:	6d 91       	ld	r22, X+
    1d3a:	7c 91       	ld	r23, X
    1d3c:	19 97       	sbiw	r26, 0x09	; 9
    1d3e:	09 95       	icall
    1d40:	08 95       	ret

00001d42 <__timer_compareService>:
    1d42:	fc 01       	movw	r30, r24
    1d44:	a5 91       	lpm	r26, Z+
    1d46:	b4 91       	lpm	r27, Z+
    1d48:	ed 91       	ld	r30, X+
    1d4a:	fc 91       	ld	r31, X
    1d4c:	11 97       	sbiw	r26, 0x01	; 1
    1d4e:	30 97       	sbiw	r30, 0x00	; 0
    1d50:	29 f0       	breq	.+10     	; 0x1d5c <__timer_compareService+0x1a>
    1d52:	12 96       	adiw	r26, 0x02	; 2
    1d54:	6d 91       	ld	r22, X+
    1d56:	7c 91       	ld	r23, X
    1d58:	13 97       	sbiw	r26, 0x03	; 3
    1d5a:	09 95       	icall
    1d5c:	08 95       	ret

00001d5e <getError>:
    1d5e:	80 91 75 04 	lds	r24, 0x0475
    1d62:	08 95       	ret

00001d64 <setErrorLog>:
    1d64:	90 93 79 04 	sts	0x0479, r25
    1d68:	80 93 78 04 	sts	0x0478, r24
    1d6c:	08 95       	ret

00001d6e <__error_flash>:
    1d6e:	8f 92       	push	r8
    1d70:	9f 92       	push	r9
    1d72:	af 92       	push	r10
    1d74:	bf 92       	push	r11
    1d76:	cf 92       	push	r12
    1d78:	df 92       	push	r13
    1d7a:	ef 92       	push	r14
    1d7c:	ff 92       	push	r15
    1d7e:	0f 93       	push	r16
    1d80:	1f 93       	push	r17
    1d82:	cf 93       	push	r28
    1d84:	df 93       	push	r29
    1d86:	98 2e       	mov	r9, r24
    1d88:	89 2e       	mov	r8, r25
    1d8a:	5a 01       	movw	r10, r20
    1d8c:	6b 01       	movw	r12, r22
    1d8e:	c8 2f       	mov	r28, r24
    1d90:	d9 2f       	mov	r29, r25
    1d92:	89 81       	ldd	r24, Y+1	; 0x01
    1d94:	88 23       	and	r24, r24
    1d96:	41 f4       	brne	.+16     	; 0x1da8 <__error_flash+0x3a>
    1d98:	88 81       	ld	r24, Y
    1d9a:	18 16       	cp	r1, r24
    1d9c:	14 f4       	brge	.+4      	; 0x1da2 <__error_flash+0x34>
    1d9e:	88 81       	ld	r24, Y
    1da0:	02 c0       	rjmp	.+4      	; 0x1da6 <__error_flash+0x38>
    1da2:	88 81       	ld	r24, Y
    1da4:	81 95       	neg	r24
    1da6:	89 83       	std	Y+1, r24	; 0x01
    1da8:	88 81       	ld	r24, Y
    1daa:	87 fd       	sbrc	r24, 7
    1dac:	08 c0       	rjmp	.+16     	; 0x1dbe <__error_flash+0x50>
    1dae:	e0 e2       	ldi	r30, 0x20	; 32
    1db0:	ee 2e       	mov	r14, r30
    1db2:	e1 ea       	ldi	r30, 0xA1	; 161
    1db4:	fe 2e       	mov	r15, r30
    1db6:	e7 e0       	ldi	r30, 0x07	; 7
    1db8:	0e 2f       	mov	r16, r30
    1dba:	11 2d       	mov	r17, r1
    1dbc:	07 c0       	rjmp	.+14     	; 0x1dcc <__error_flash+0x5e>
    1dbe:	70 e9       	ldi	r23, 0x90	; 144
    1dc0:	e7 2e       	mov	r14, r23
    1dc2:	70 ed       	ldi	r23, 0xD0	; 208
    1dc4:	f7 2e       	mov	r15, r23
    1dc6:	73 e0       	ldi	r23, 0x03	; 3
    1dc8:	07 2f       	mov	r16, r23
    1dca:	11 2d       	mov	r17, r1
    1dcc:	8a 81       	ldd	r24, Y+2	; 0x02
    1dce:	80 ff       	sbrs	r24, 0
    1dd0:	1d c0       	rjmp	.+58     	; 0x1e0c <__error_flash+0x9e>
    1dd2:	80 91 e8 01 	lds	r24, 0x01E8
    1dd6:	90 91 e9 01 	lds	r25, 0x01E9
    1dda:	0e 94 14 0a 	call	0x1428	; 0x1428 <pin_is_output>
    1dde:	88 23       	and	r24, r24
    1de0:	29 f0       	breq	.+10     	; 0x1dec <__error_flash+0x7e>
    1de2:	88 ee       	ldi	r24, 0xE8	; 232
    1de4:	91 e0       	ldi	r25, 0x01	; 1
    1de6:	60 e0       	ldi	r22, 0x00	; 0
    1de8:	0e 94 9e 0a 	call	0x153c	; 0x153c <LED_set>
    1dec:	89 81       	ldd	r24, Y+1	; 0x01
    1dee:	81 50       	subi	r24, 0x01	; 1
    1df0:	89 83       	std	Y+1, r24	; 0x01
    1df2:	89 81       	ldd	r24, Y+1	; 0x01
    1df4:	88 23       	and	r24, r24
    1df6:	39 f4       	brne	.+14     	; 0x1e06 <__error_flash+0x98>
    1df8:	60 e8       	ldi	r22, 0x80	; 128
    1dfa:	e6 2e       	mov	r14, r22
    1dfc:	64 e8       	ldi	r22, 0x84	; 132
    1dfe:	f6 2e       	mov	r15, r22
    1e00:	6e e1       	ldi	r22, 0x1E	; 30
    1e02:	06 2f       	mov	r16, r22
    1e04:	11 2d       	mov	r17, r1
    1e06:	8a 81       	ldd	r24, Y+2	; 0x02
    1e08:	8e 7f       	andi	r24, 0xFE	; 254
    1e0a:	0f c0       	rjmp	.+30     	; 0x1e2a <__error_flash+0xbc>
    1e0c:	80 91 e8 01 	lds	r24, 0x01E8
    1e10:	90 91 e9 01 	lds	r25, 0x01E9
    1e14:	0e 94 14 0a 	call	0x1428	; 0x1428 <pin_is_output>
    1e18:	88 23       	and	r24, r24
    1e1a:	29 f0       	breq	.+10     	; 0x1e26 <__error_flash+0xb8>
    1e1c:	88 ee       	ldi	r24, 0xE8	; 232
    1e1e:	91 e0       	ldi	r25, 0x01	; 1
    1e20:	6f ef       	ldi	r22, 0xFF	; 255
    1e22:	0e 94 9e 0a 	call	0x153c	; 0x153c <LED_set>
    1e26:	8a 81       	ldd	r24, Y+2	; 0x02
    1e28:	81 60       	ori	r24, 0x01	; 1
    1e2a:	8a 83       	std	Y+2, r24	; 0x02
    1e2c:	87 eb       	ldi	r24, 0xB7	; 183
    1e2e:	9e e0       	ldi	r25, 0x0E	; 14
    1e30:	69 2d       	mov	r22, r9
    1e32:	78 2d       	mov	r23, r8
    1e34:	a6 01       	movw	r20, r12
    1e36:	95 01       	movw	r18, r10
    1e38:	0e 94 8b 1c 	call	0x3916	; 0x3916 <scheduleJob>
    1e3c:	df 91       	pop	r29
    1e3e:	cf 91       	pop	r28
    1e40:	1f 91       	pop	r17
    1e42:	0f 91       	pop	r16
    1e44:	ff 90       	pop	r15
    1e46:	ef 90       	pop	r14
    1e48:	df 90       	pop	r13
    1e4a:	cf 90       	pop	r12
    1e4c:	bf 90       	pop	r11
    1e4e:	af 90       	pop	r10
    1e50:	9f 90       	pop	r9
    1e52:	8f 90       	pop	r8
    1e54:	08 95       	ret

00001e56 <__timerRead>:
    1e56:	df 92       	push	r13
    1e58:	ef 92       	push	r14
    1e5a:	ff 92       	push	r15
    1e5c:	0f 93       	push	r16
    1e5e:	1f 93       	push	r17
    1e60:	cf 93       	push	r28
    1e62:	df 93       	push	r29
    1e64:	9c 01       	movw	r18, r24
    1e66:	eb 01       	movw	r28, r22
    1e68:	fc 01       	movw	r30, r24
    1e6a:	a5 91       	lpm	r26, Z+
    1e6c:	b4 91       	lpm	r27, Z+
    1e6e:	1a 96       	adiw	r26, 0x0a	; 10
    1e70:	8c 91       	ld	r24, X
    1e72:	39 83       	std	Y+1, r19	; 0x01
    1e74:	28 83       	st	Y, r18
    1e76:	21 15       	cp	r18, r1
    1e78:	31 05       	cpc	r19, r1
    1e7a:	39 f4       	brne	.+14     	; 0x1e8a <__timerRead+0x34>
    1e7c:	1a 82       	std	Y+2, r1	; 0x02
    1e7e:	1b 82       	std	Y+3, r1	; 0x03
    1e80:	1c 82       	std	Y+4, r1	; 0x04
    1e82:	1d 82       	std	Y+5, r1	; 0x05
    1e84:	1f 82       	std	Y+7, r1	; 0x07
    1e86:	1e 82       	std	Y+6, r1	; 0x06
    1e88:	b1 c0       	rjmp	.+354    	; 0x1fec <__timerRead+0x196>
    1e8a:	84 30       	cpi	r24, 0x04	; 4
    1e8c:	39 f0       	breq	.+14     	; 0x1e9c <__timerRead+0x46>
    1e8e:	89 30       	cpi	r24, 0x09	; 9
    1e90:	29 f0       	breq	.+10     	; 0x1e9c <__timerRead+0x46>
    1e92:	8b 30       	cpi	r24, 0x0B	; 11
    1e94:	19 f0       	breq	.+6      	; 0x1e9c <__timerRead+0x46>
    1e96:	8f 30       	cpi	r24, 0x0F	; 15
    1e98:	09 f0       	breq	.+2      	; 0x1e9c <__timerRead+0x46>
    1e9a:	48 c0       	rjmp	.+144    	; 0x1f2c <__timerRead+0xd6>
    1e9c:	f9 01       	movw	r30, r18
    1e9e:	77 96       	adiw	r30, 0x17	; 23
    1ea0:	65 91       	lpm	r22, Z+
    1ea2:	74 91       	lpm	r23, Z+
    1ea4:	df b6       	in	r13, 0x3f	; 63
    1ea6:	f8 94       	cli
    1ea8:	a2 e0       	ldi	r26, 0x02	; 2
    1eaa:	ea 2e       	mov	r14, r26
    1eac:	f1 2c       	mov	r15, r1
    1eae:	e2 0e       	add	r14, r18
    1eb0:	f3 1e       	adc	r15, r19
    1eb2:	f7 01       	movw	r30, r14
    1eb4:	a5 91       	lpm	r26, Z+
    1eb6:	b4 91       	lpm	r27, Z+
    1eb8:	89 01       	movw	r16, r18
    1eba:	0a 5f       	subi	r16, 0xFA	; 250
    1ebc:	1f 4f       	sbci	r17, 0xFF	; 255
    1ebe:	f8 01       	movw	r30, r16
    1ec0:	84 91       	lpm	r24, Z+
    1ec2:	88 23       	and	r24, r24
    1ec4:	19 f0       	breq	.+6      	; 0x1ecc <__timerRead+0x76>
    1ec6:	4d 91       	ld	r20, X+
    1ec8:	5c 91       	ld	r21, X
    1eca:	03 c0       	rjmp	.+6      	; 0x1ed2 <__timerRead+0x7c>
    1ecc:	8c 91       	ld	r24, X
    1ece:	48 2f       	mov	r20, r24
    1ed0:	50 e0       	ldi	r21, 0x00	; 0
    1ed2:	80 91 7a 04 	lds	r24, 0x047A
    1ed6:	90 91 7b 04 	lds	r25, 0x047B
    1eda:	28 17       	cp	r18, r24
    1edc:	39 07       	cpc	r19, r25
    1ede:	29 f0       	breq	.+10     	; 0x1eea <__timerRead+0x94>
    1ee0:	80 e0       	ldi	r24, 0x00	; 0
    1ee2:	90 e0       	ldi	r25, 0x00	; 0
    1ee4:	a0 e0       	ldi	r26, 0x00	; 0
    1ee6:	b0 e0       	ldi	r27, 0x00	; 0
    1ee8:	08 c0       	rjmp	.+16     	; 0x1efa <__timerRead+0xa4>
    1eea:	80 91 ef 01 	lds	r24, 0x01EF
    1eee:	90 91 f0 01 	lds	r25, 0x01F0
    1ef2:	a0 91 f1 01 	lds	r26, 0x01F1
    1ef6:	b0 91 f2 01 	lds	r27, 0x01F2
    1efa:	8a 83       	std	Y+2, r24	; 0x02
    1efc:	9b 83       	std	Y+3, r25	; 0x03
    1efe:	ac 83       	std	Y+4, r26	; 0x04
    1f00:	bd 83       	std	Y+5, r27	; 0x05
    1f02:	f7 01       	movw	r30, r14
    1f04:	a5 91       	lpm	r26, Z+
    1f06:	b4 91       	lpm	r27, Z+
    1f08:	f8 01       	movw	r30, r16
    1f0a:	84 91       	lpm	r24, Z+
    1f0c:	88 23       	and	r24, r24
    1f0e:	19 f0       	breq	.+6      	; 0x1f16 <__timerRead+0xc0>
    1f10:	8d 91       	ld	r24, X+
    1f12:	9c 91       	ld	r25, X
    1f14:	02 c0       	rjmp	.+4      	; 0x1f1a <__timerRead+0xc4>
    1f16:	8c 91       	ld	r24, X
    1f18:	90 e0       	ldi	r25, 0x00	; 0
    1f1a:	9f 83       	std	Y+7, r25	; 0x07
    1f1c:	8e 83       	std	Y+6, r24	; 0x06
    1f1e:	84 17       	cp	r24, r20
    1f20:	95 07       	cpc	r25, r21
    1f22:	08 f4       	brcc	.+2      	; 0x1f26 <__timerRead+0xd0>
    1f24:	49 c0       	rjmp	.+146    	; 0x1fb8 <__timerRead+0x162>
    1f26:	cb 01       	movw	r24, r22
    1f28:	08 96       	adiw	r24, 0x08	; 8
    1f2a:	42 c0       	rjmp	.+132    	; 0x1fb0 <__timerRead+0x15a>
    1f2c:	df b6       	in	r13, 0x3f	; 63
    1f2e:	f8 94       	cli
    1f30:	f2 e0       	ldi	r31, 0x02	; 2
    1f32:	ef 2e       	mov	r14, r31
    1f34:	f1 2c       	mov	r15, r1
    1f36:	e2 0e       	add	r14, r18
    1f38:	f3 1e       	adc	r15, r19
    1f3a:	f7 01       	movw	r30, r14
    1f3c:	a5 91       	lpm	r26, Z+
    1f3e:	b4 91       	lpm	r27, Z+
    1f40:	89 01       	movw	r16, r18
    1f42:	0a 5f       	subi	r16, 0xFA	; 250
    1f44:	1f 4f       	sbci	r17, 0xFF	; 255
    1f46:	f8 01       	movw	r30, r16
    1f48:	84 91       	lpm	r24, Z+
    1f4a:	88 23       	and	r24, r24
    1f4c:	19 f0       	breq	.+6      	; 0x1f54 <__timerRead+0xfe>
    1f4e:	4d 91       	ld	r20, X+
    1f50:	5c 91       	ld	r21, X
    1f52:	03 c0       	rjmp	.+6      	; 0x1f5a <__timerRead+0x104>
    1f54:	8c 91       	ld	r24, X
    1f56:	48 2f       	mov	r20, r24
    1f58:	50 e0       	ldi	r21, 0x00	; 0
    1f5a:	80 91 7a 04 	lds	r24, 0x047A
    1f5e:	90 91 7b 04 	lds	r25, 0x047B
    1f62:	28 17       	cp	r18, r24
    1f64:	39 07       	cpc	r19, r25
    1f66:	29 f0       	breq	.+10     	; 0x1f72 <__timerRead+0x11c>
    1f68:	80 e0       	ldi	r24, 0x00	; 0
    1f6a:	90 e0       	ldi	r25, 0x00	; 0
    1f6c:	a0 e0       	ldi	r26, 0x00	; 0
    1f6e:	b0 e0       	ldi	r27, 0x00	; 0
    1f70:	08 c0       	rjmp	.+16     	; 0x1f82 <__timerRead+0x12c>
    1f72:	80 91 ef 01 	lds	r24, 0x01EF
    1f76:	90 91 f0 01 	lds	r25, 0x01F0
    1f7a:	a0 91 f1 01 	lds	r26, 0x01F1
    1f7e:	b0 91 f2 01 	lds	r27, 0x01F2
    1f82:	8a 83       	std	Y+2, r24	; 0x02
    1f84:	9b 83       	std	Y+3, r25	; 0x03
    1f86:	ac 83       	std	Y+4, r26	; 0x04
    1f88:	bd 83       	std	Y+5, r27	; 0x05
    1f8a:	f7 01       	movw	r30, r14
    1f8c:	a5 91       	lpm	r26, Z+
    1f8e:	b4 91       	lpm	r27, Z+
    1f90:	f8 01       	movw	r30, r16
    1f92:	84 91       	lpm	r24, Z+
    1f94:	88 23       	and	r24, r24
    1f96:	19 f0       	breq	.+6      	; 0x1f9e <__timerRead+0x148>
    1f98:	8d 91       	ld	r24, X+
    1f9a:	9c 91       	ld	r25, X
    1f9c:	02 c0       	rjmp	.+4      	; 0x1fa2 <__timerRead+0x14c>
    1f9e:	8c 91       	ld	r24, X
    1fa0:	90 e0       	ldi	r25, 0x00	; 0
    1fa2:	9f 83       	std	Y+7, r25	; 0x07
    1fa4:	8e 83       	std	Y+6, r24	; 0x06
    1fa6:	84 17       	cp	r24, r20
    1fa8:	95 07       	cpc	r25, r21
    1faa:	30 f0       	brcs	.+12     	; 0x1fb8 <__timerRead+0x162>
    1fac:	c9 01       	movw	r24, r18
    1fae:	4c 96       	adiw	r24, 0x1c	; 28
    1fb0:	0e 94 c8 08 	call	0x1190	; 0x1190 <__portMaskGet>
    1fb4:	88 23       	and	r24, r24
    1fb6:	c9 f0       	breq	.+50     	; 0x1fea <__timerRead+0x194>
    1fb8:	8a 81       	ldd	r24, Y+2	; 0x02
    1fba:	9b 81       	ldd	r25, Y+3	; 0x03
    1fbc:	ac 81       	ldd	r26, Y+4	; 0x04
    1fbe:	bd 81       	ldd	r27, Y+5	; 0x05
    1fc0:	01 96       	adiw	r24, 0x01	; 1
    1fc2:	a1 1d       	adc	r26, r1
    1fc4:	b1 1d       	adc	r27, r1
    1fc6:	8a 83       	std	Y+2, r24	; 0x02
    1fc8:	9b 83       	std	Y+3, r25	; 0x03
    1fca:	ac 83       	std	Y+4, r26	; 0x04
    1fcc:	bd 83       	std	Y+5, r27	; 0x05
    1fce:	f7 01       	movw	r30, r14
    1fd0:	a5 91       	lpm	r26, Z+
    1fd2:	b4 91       	lpm	r27, Z+
    1fd4:	f8 01       	movw	r30, r16
    1fd6:	84 91       	lpm	r24, Z+
    1fd8:	88 23       	and	r24, r24
    1fda:	19 f0       	breq	.+6      	; 0x1fe2 <__timerRead+0x18c>
    1fdc:	8d 91       	ld	r24, X+
    1fde:	9c 91       	ld	r25, X
    1fe0:	02 c0       	rjmp	.+4      	; 0x1fe6 <__timerRead+0x190>
    1fe2:	8c 91       	ld	r24, X
    1fe4:	90 e0       	ldi	r25, 0x00	; 0
    1fe6:	9f 83       	std	Y+7, r25	; 0x07
    1fe8:	8e 83       	std	Y+6, r24	; 0x06
    1fea:	df be       	out	0x3f, r13	; 63
    1fec:	df 91       	pop	r29
    1fee:	cf 91       	pop	r28
    1ff0:	1f 91       	pop	r17
    1ff2:	0f 91       	pop	r16
    1ff4:	ff 90       	pop	r15
    1ff6:	ef 90       	pop	r14
    1ff8:	df 90       	pop	r13
    1ffa:	08 95       	ret

00001ffc <clockGetSnapshot>:
    1ffc:	bc 01       	movw	r22, r24
    1ffe:	80 91 7a 04 	lds	r24, 0x047A
    2002:	90 91 7b 04 	lds	r25, 0x047B
    2006:	0e 94 2b 0f 	call	0x1e56	; 0x1e56 <__timerRead>
    200a:	08 95       	ret

0000200c <timerGetTicks>:
    200c:	0f 93       	push	r16
    200e:	1f 93       	push	r17
    2010:	df 93       	push	r29
    2012:	cf 93       	push	r28
    2014:	cd b7       	in	r28, 0x3d	; 61
    2016:	de b7       	in	r29, 0x3e	; 62
    2018:	28 97       	sbiw	r28, 0x08	; 8
    201a:	0f b6       	in	r0, 0x3f	; 63
    201c:	f8 94       	cli
    201e:	de bf       	out	0x3e, r29	; 62
    2020:	0f be       	out	0x3f, r0	; 63
    2022:	cd bf       	out	0x3d, r28	; 61
    2024:	8e 01       	movw	r16, r28
    2026:	0f 5f       	subi	r16, 0xFF	; 255
    2028:	1f 4f       	sbci	r17, 0xFF	; 255
    202a:	b8 01       	movw	r22, r16
    202c:	0e 94 2b 0f 	call	0x1e56	; 0x1e56 <__timerRead>
    2030:	c8 01       	movw	r24, r16
    2032:	0e 94 7a 11 	call	0x22f4	; 0x22f4 <timerSnapshotToTicks>
    2036:	28 96       	adiw	r28, 0x08	; 8
    2038:	0f b6       	in	r0, 0x3f	; 63
    203a:	f8 94       	cli
    203c:	de bf       	out	0x3e, r29	; 62
    203e:	0f be       	out	0x3f, r0	; 63
    2040:	cd bf       	out	0x3d, r28	; 61
    2042:	cf 91       	pop	r28
    2044:	df 91       	pop	r29
    2046:	1f 91       	pop	r17
    2048:	0f 91       	pop	r16
    204a:	08 95       	ret

0000204c <clockGetus>:
    204c:	80 91 7a 04 	lds	r24, 0x047A
    2050:	90 91 7b 04 	lds	r25, 0x047B
    2054:	0e 94 06 10 	call	0x200c	; 0x200c <timerGetTicks>
    2058:	08 95       	ret

0000205a <setError>:
    205a:	df 92       	push	r13
    205c:	ef 92       	push	r14
    205e:	ff 92       	push	r15
    2060:	0f 93       	push	r16
    2062:	1f 93       	push	r17
    2064:	d8 2e       	mov	r13, r24
    2066:	80 91 75 04 	lds	r24, 0x0475
    206a:	88 23       	and	r24, r24
    206c:	09 f0       	breq	.+2      	; 0x2070 <setError+0x16>
    206e:	5b c0       	rjmp	.+182    	; 0x2126 <setError+0xcc>
    2070:	d0 92 75 04 	sts	0x0475, r13
    2074:	80 91 e8 01 	lds	r24, 0x01E8
    2078:	90 91 e9 01 	lds	r25, 0x01E9
    207c:	89 2b       	or	r24, r25
    207e:	99 f0       	breq	.+38     	; 0x20a6 <setError+0x4c>
    2080:	80 91 7a 04 	lds	r24, 0x047A
    2084:	90 91 7b 04 	lds	r25, 0x047B
    2088:	89 2b       	or	r24, r25
    208a:	69 f0       	breq	.+26     	; 0x20a6 <setError+0x4c>
    208c:	0e 94 26 10 	call	0x204c	; 0x204c <clockGetus>
    2090:	9b 01       	movw	r18, r22
    2092:	ac 01       	movw	r20, r24
    2094:	87 eb       	ldi	r24, 0xB7	; 183
    2096:	9e e0       	ldi	r25, 0x0E	; 14
    2098:	65 e7       	ldi	r22, 0x75	; 117
    209a:	74 e0       	ldi	r23, 0x04	; 4
    209c:	ee 24       	eor	r14, r14
    209e:	ff 24       	eor	r15, r15
    20a0:	87 01       	movw	r16, r14
    20a2:	0e 94 8b 1c 	call	0x3916	; 0x3916 <scheduleJob>
    20a6:	80 91 78 04 	lds	r24, 0x0478
    20aa:	90 91 79 04 	lds	r25, 0x0479
    20ae:	00 97       	sbiw	r24, 0x00	; 0
    20b0:	d1 f1       	breq	.+116    	; 0x2126 <setError+0xcc>
    20b2:	0e 94 c1 0a 	call	0x1582	; 0x1582 <rprintfInit>
    20b6:	8c 01       	movw	r16, r24
    20b8:	2d 2d       	mov	r18, r13
    20ba:	33 27       	eor	r19, r19
    20bc:	27 fd       	sbrc	r18, 7
    20be:	30 95       	com	r19
    20c0:	d7 fe       	sbrs	r13, 7
    20c2:	16 c0       	rjmp	.+44     	; 0x20f0 <setError+0x96>
    20c4:	00 d0       	rcall	.+0      	; 0x20c6 <setError+0x6c>
    20c6:	00 d0       	rcall	.+0      	; 0x20c8 <setError+0x6e>
    20c8:	0f 92       	push	r0
    20ca:	ed b7       	in	r30, 0x3d	; 61
    20cc:	fe b7       	in	r31, 0x3e	; 62
    20ce:	31 96       	adiw	r30, 0x01	; 1
    20d0:	81 e0       	ldi	r24, 0x01	; 1
    20d2:	ad b7       	in	r26, 0x3d	; 61
    20d4:	be b7       	in	r27, 0x3e	; 62
    20d6:	11 96       	adiw	r26, 0x01	; 1
    20d8:	8c 93       	st	X, r24
    20da:	87 e3       	ldi	r24, 0x37	; 55
    20dc:	92 e0       	ldi	r25, 0x02	; 2
    20de:	92 83       	std	Z+2, r25	; 0x02
    20e0:	81 83       	std	Z+1, r24	; 0x01
    20e2:	88 27       	eor	r24, r24
    20e4:	99 27       	eor	r25, r25
    20e6:	82 1b       	sub	r24, r18
    20e8:	93 0b       	sbc	r25, r19
    20ea:	94 83       	std	Z+4, r25	; 0x04
    20ec:	83 83       	std	Z+3, r24	; 0x03
    20ee:	11 c0       	rjmp	.+34     	; 0x2112 <setError+0xb8>
    20f0:	00 d0       	rcall	.+0      	; 0x20f2 <setError+0x98>
    20f2:	00 d0       	rcall	.+0      	; 0x20f4 <setError+0x9a>
    20f4:	0f 92       	push	r0
    20f6:	ed b7       	in	r30, 0x3d	; 61
    20f8:	fe b7       	in	r31, 0x3e	; 62
    20fa:	31 96       	adiw	r30, 0x01	; 1
    20fc:	81 e0       	ldi	r24, 0x01	; 1
    20fe:	ad b7       	in	r26, 0x3d	; 61
    2100:	be b7       	in	r27, 0x3e	; 62
    2102:	11 96       	adiw	r26, 0x01	; 1
    2104:	8c 93       	st	X, r24
    2106:	88 e2       	ldi	r24, 0x28	; 40
    2108:	92 e0       	ldi	r25, 0x02	; 2
    210a:	92 83       	std	Z+2, r25	; 0x02
    210c:	81 83       	std	Z+1, r24	; 0x01
    210e:	34 83       	std	Z+4, r19	; 0x04
    2110:	23 83       	std	Z+3, r18	; 0x03
    2112:	0e 94 c7 1a 	call	0x358e	; 0x358e <rprintf1RamRom>
    2116:	0f 90       	pop	r0
    2118:	0f 90       	pop	r0
    211a:	0f 90       	pop	r0
    211c:	0f 90       	pop	r0
    211e:	0f 90       	pop	r0
    2120:	c8 01       	movw	r24, r16
    2122:	0e 94 c1 0a 	call	0x1582	; 0x1582 <rprintfInit>
    2126:	1f 91       	pop	r17
    2128:	0f 91       	pop	r16
    212a:	ff 90       	pop	r15
    212c:	ef 90       	pop	r14
    212e:	df 90       	pop	r13
    2130:	08 95       	ret

00002132 <compareDetach>:
    2132:	cf 93       	push	r28
    2134:	df 93       	push	r29
    2136:	ec 01       	movw	r28, r24
    2138:	22 96       	adiw	r28, 0x02	; 2
    213a:	fe 01       	movw	r30, r28
    213c:	94 91       	lpm	r25, Z+
    213e:	22 97       	sbiw	r28, 0x02	; 2
    2140:	8c e2       	ldi	r24, 0x2C	; 44
    2142:	98 9f       	mul	r25, r24
    2144:	f0 01       	movw	r30, r0
    2146:	11 24       	eor	r1, r1
    2148:	e7 5d       	subi	r30, 0xD7	; 215
    214a:	fe 4f       	sbci	r31, 0xFE	; 254
    214c:	e4 91       	lpm	r30, Z+
    214e:	ee 23       	and	r30, r30
    2150:	71 f0       	breq	.+28     	; 0x216e <compareDetach+0x3c>
    2152:	ce 01       	movw	r24, r28
    2154:	03 96       	adiw	r24, 0x03	; 3
    2156:	0e 94 d5 08 	call	0x11aa	; 0x11aa <__portMaskClear>
    215a:	ce 01       	movw	r24, r28
    215c:	60 e0       	ldi	r22, 0x00	; 0
    215e:	0e 94 44 0e 	call	0x1c88	; 0x1c88 <compareSetOutputMode>
    2162:	fe 01       	movw	r30, r28
    2164:	a5 91       	lpm	r26, Z+
    2166:	b4 91       	lpm	r27, Z+
    2168:	1d 92       	st	X+, r1
    216a:	1c 92       	st	X, r1
    216c:	03 c0       	rjmp	.+6      	; 0x2174 <compareDetach+0x42>
    216e:	8d ef       	ldi	r24, 0xFD	; 253
    2170:	0e 94 2d 10 	call	0x205a	; 0x205a <setError>
    2174:	df 91       	pop	r29
    2176:	cf 91       	pop	r28
    2178:	08 95       	ret

0000217a <compareSetThreshold>:
    217a:	cf 93       	push	r28
    217c:	df 93       	push	r29
    217e:	9c 01       	movw	r18, r24
    2180:	2e 5f       	subi	r18, 0xFE	; 254
    2182:	3f 4f       	sbci	r19, 0xFF	; 255
    2184:	f9 01       	movw	r30, r18
    2186:	84 91       	lpm	r24, Z+
    2188:	22 50       	subi	r18, 0x02	; 2
    218a:	30 40       	sbci	r19, 0x00	; 0
    218c:	9c e2       	ldi	r25, 0x2C	; 44
    218e:	89 9f       	mul	r24, r25
    2190:	a0 01       	movw	r20, r0
    2192:	11 24       	eor	r1, r1
    2194:	4f 5d       	subi	r20, 0xDF	; 223
    2196:	5e 4f       	sbci	r21, 0xFE	; 254
    2198:	48 5f       	subi	r20, 0xF8	; 248
    219a:	5f 4f       	sbci	r21, 0xFF	; 255
    219c:	fa 01       	movw	r30, r20
    219e:	84 91       	lpm	r24, Z+
    21a0:	48 50       	subi	r20, 0x08	; 8
    21a2:	50 40       	sbci	r21, 0x00	; 0
    21a4:	88 23       	and	r24, r24
    21a6:	c1 f0       	breq	.+48     	; 0x21d8 <compareSetThreshold+0x5e>
    21a8:	c9 01       	movw	r24, r18
    21aa:	06 96       	adiw	r24, 0x06	; 6
    21ac:	fc 01       	movw	r30, r24
    21ae:	c5 91       	lpm	r28, Z+
    21b0:	d4 91       	lpm	r29, Z+
    21b2:	fa 01       	movw	r30, r20
    21b4:	36 96       	adiw	r30, 0x06	; 6
    21b6:	e4 91       	lpm	r30, Z+
    21b8:	ee 23       	and	r30, r30
    21ba:	19 f0       	breq	.+6      	; 0x21c2 <compareSetThreshold+0x48>
    21bc:	79 83       	std	Y+1, r23	; 0x01
    21be:	68 83       	st	Y, r22
    21c0:	0e c0       	rjmp	.+28     	; 0x21de <compareSetThreshold+0x64>
    21c2:	6f 3f       	cpi	r22, 0xFF	; 255
    21c4:	71 05       	cpc	r23, r1
    21c6:	31 f0       	breq	.+12     	; 0x21d4 <compareSetThreshold+0x5a>
    21c8:	28 f0       	brcs	.+10     	; 0x21d4 <compareSetThreshold+0x5a>
    21ca:	8e ef       	ldi	r24, 0xFE	; 254
    21cc:	0e 94 2d 10 	call	0x205a	; 0x205a <setError>
    21d0:	6f ef       	ldi	r22, 0xFF	; 255
    21d2:	70 e0       	ldi	r23, 0x00	; 0
    21d4:	68 83       	st	Y, r22
    21d6:	03 c0       	rjmp	.+6      	; 0x21de <compareSetThreshold+0x64>
    21d8:	8d ef       	ldi	r24, 0xFD	; 253
    21da:	0e 94 2d 10 	call	0x205a	; 0x205a <setError>
    21de:	df 91       	pop	r29
    21e0:	cf 91       	pop	r28
    21e2:	08 95       	ret

000021e4 <compareGetThreshold>:
    21e4:	9c 01       	movw	r18, r24
    21e6:	2e 5f       	subi	r18, 0xFE	; 254
    21e8:	3f 4f       	sbci	r19, 0xFF	; 255
    21ea:	f9 01       	movw	r30, r18
    21ec:	84 91       	lpm	r24, Z+
    21ee:	22 50       	subi	r18, 0x02	; 2
    21f0:	30 40       	sbci	r19, 0x00	; 0
    21f2:	9c e2       	ldi	r25, 0x2C	; 44
    21f4:	89 9f       	mul	r24, r25
    21f6:	a0 01       	movw	r20, r0
    21f8:	11 24       	eor	r1, r1
    21fa:	4f 5d       	subi	r20, 0xDF	; 223
    21fc:	5e 4f       	sbci	r21, 0xFE	; 254
    21fe:	48 5f       	subi	r20, 0xF8	; 248
    2200:	5f 4f       	sbci	r21, 0xFF	; 255
    2202:	fa 01       	movw	r30, r20
    2204:	84 91       	lpm	r24, Z+
    2206:	48 50       	subi	r20, 0x08	; 8
    2208:	50 40       	sbci	r21, 0x00	; 0
    220a:	88 23       	and	r24, r24
    220c:	89 f0       	breq	.+34     	; 0x2230 <compareGetThreshold+0x4c>
    220e:	c9 01       	movw	r24, r18
    2210:	06 96       	adiw	r24, 0x06	; 6
    2212:	fc 01       	movw	r30, r24
    2214:	a5 91       	lpm	r26, Z+
    2216:	b4 91       	lpm	r27, Z+
    2218:	fa 01       	movw	r30, r20
    221a:	36 96       	adiw	r30, 0x06	; 6
    221c:	e4 91       	lpm	r30, Z+
    221e:	ee 23       	and	r30, r30
    2220:	19 f0       	breq	.+6      	; 0x2228 <compareGetThreshold+0x44>
    2222:	2d 91       	ld	r18, X+
    2224:	3c 91       	ld	r19, X
    2226:	09 c0       	rjmp	.+18     	; 0x223a <compareGetThreshold+0x56>
    2228:	8c 91       	ld	r24, X
    222a:	28 2f       	mov	r18, r24
    222c:	30 e0       	ldi	r19, 0x00	; 0
    222e:	05 c0       	rjmp	.+10     	; 0x223a <compareGetThreshold+0x56>
    2230:	8d ef       	ldi	r24, 0xFD	; 253
    2232:	0e 94 2d 10 	call	0x205a	; 0x205a <setError>
    2236:	2f ef       	ldi	r18, 0xFF	; 255
    2238:	30 e0       	ldi	r19, 0x00	; 0
    223a:	c9 01       	movw	r24, r18
    223c:	08 95       	ret

0000223e <timerGetTOP>:
    223e:	cf 93       	push	r28
    2240:	df 93       	push	r29
    2242:	ec 01       	movw	r28, r24
    2244:	04 96       	adiw	r24, 0x04	; 4
    2246:	fc 01       	movw	r30, r24
    2248:	a5 91       	lpm	r26, Z+
    224a:	b4 91       	lpm	r27, Z+
    224c:	8c 91       	ld	r24, X
    224e:	90 e0       	ldi	r25, 0x00	; 0
    2250:	87 70       	andi	r24, 0x07	; 7
    2252:	90 70       	andi	r25, 0x00	; 0
    2254:	89 2b       	or	r24, r25
    2256:	09 f4       	brne	.+2      	; 0x225a <timerGetTOP+0x1c>
    2258:	41 c0       	rjmp	.+130    	; 0x22dc <timerGetTOP+0x9e>
    225a:	fe 01       	movw	r30, r28
    225c:	a5 91       	lpm	r26, Z+
    225e:	b4 91       	lpm	r27, Z+
    2260:	1a 96       	adiw	r26, 0x0a	; 10
    2262:	8c 91       	ld	r24, X
    2264:	87 30       	cpi	r24, 0x07	; 7
    2266:	39 f1       	breq	.+78     	; 0x22b6 <timerGetTOP+0x78>
    2268:	88 30       	cpi	r24, 0x08	; 8
    226a:	70 f4       	brcc	.+28     	; 0x2288 <timerGetTOP+0x4a>
    226c:	83 30       	cpi	r24, 0x03	; 3
    226e:	19 f1       	breq	.+70     	; 0x22b6 <timerGetTOP+0x78>
    2270:	84 30       	cpi	r24, 0x04	; 4
    2272:	28 f4       	brcc	.+10     	; 0x227e <timerGetTOP+0x40>
    2274:	81 30       	cpi	r24, 0x01	; 1
    2276:	c9 f0       	breq	.+50     	; 0x22aa <timerGetTOP+0x6c>
    2278:	82 30       	cpi	r24, 0x02	; 2
    227a:	d0 f4       	brcc	.+52     	; 0x22b0 <timerGetTOP+0x72>
    227c:	13 c0       	rjmp	.+38     	; 0x22a4 <timerGetTOP+0x66>
    227e:	85 30       	cpi	r24, 0x05	; 5
    2280:	a1 f0       	breq	.+40     	; 0x22aa <timerGetTOP+0x6c>
    2282:	86 30       	cpi	r24, 0x06	; 6
    2284:	a8 f4       	brcc	.+42     	; 0x22b0 <timerGetTOP+0x72>
    2286:	1a c0       	rjmp	.+52     	; 0x22bc <timerGetTOP+0x7e>
    2288:	8b 30       	cpi	r24, 0x0B	; 11
    228a:	c1 f0       	breq	.+48     	; 0x22bc <timerGetTOP+0x7e>
    228c:	8c 30       	cpi	r24, 0x0C	; 12
    228e:	18 f4       	brcc	.+6      	; 0x2296 <timerGetTOP+0x58>
    2290:	89 30       	cpi	r24, 0x09	; 9
    2292:	e1 f4       	brne	.+56     	; 0x22cc <timerGetTOP+0x8e>
    2294:	13 c0       	rjmp	.+38     	; 0x22bc <timerGetTOP+0x7e>
    2296:	8e 30       	cpi	r24, 0x0E	; 14
    2298:	c9 f0       	breq	.+50     	; 0x22cc <timerGetTOP+0x8e>
    229a:	8f 30       	cpi	r24, 0x0F	; 15
    229c:	79 f0       	breq	.+30     	; 0x22bc <timerGetTOP+0x7e>
    229e:	8c 30       	cpi	r24, 0x0C	; 12
    22a0:	e9 f4       	brne	.+58     	; 0x22dc <timerGetTOP+0x9e>
    22a2:	14 c0       	rjmp	.+40     	; 0x22cc <timerGetTOP+0x8e>
    22a4:	2f ef       	ldi	r18, 0xFF	; 255
    22a6:	3f ef       	ldi	r19, 0xFF	; 255
    22a8:	1b c0       	rjmp	.+54     	; 0x22e0 <timerGetTOP+0xa2>
    22aa:	2f ef       	ldi	r18, 0xFF	; 255
    22ac:	30 e0       	ldi	r19, 0x00	; 0
    22ae:	18 c0       	rjmp	.+48     	; 0x22e0 <timerGetTOP+0xa2>
    22b0:	2f ef       	ldi	r18, 0xFF	; 255
    22b2:	31 e0       	ldi	r19, 0x01	; 1
    22b4:	15 c0       	rjmp	.+42     	; 0x22e0 <timerGetTOP+0xa2>
    22b6:	2f ef       	ldi	r18, 0xFF	; 255
    22b8:	33 e0       	ldi	r19, 0x03	; 3
    22ba:	12 c0       	rjmp	.+36     	; 0x22e0 <timerGetTOP+0xa2>
    22bc:	fe 01       	movw	r30, r28
    22be:	77 96       	adiw	r30, 0x17	; 23
    22c0:	85 91       	lpm	r24, Z+
    22c2:	94 91       	lpm	r25, Z+
    22c4:	0e 94 f2 10 	call	0x21e4	; 0x21e4 <compareGetThreshold>
    22c8:	9c 01       	movw	r18, r24
    22ca:	0a c0       	rjmp	.+20     	; 0x22e0 <timerGetTOP+0xa2>
    22cc:	ce 01       	movw	r24, r28
    22ce:	4f 96       	adiw	r24, 0x1f	; 31
    22d0:	fc 01       	movw	r30, r24
    22d2:	a5 91       	lpm	r26, Z+
    22d4:	b4 91       	lpm	r27, Z+
    22d6:	2d 91       	ld	r18, X+
    22d8:	3c 91       	ld	r19, X
    22da:	02 c0       	rjmp	.+4      	; 0x22e0 <timerGetTOP+0xa2>
    22dc:	20 e0       	ldi	r18, 0x00	; 0
    22de:	30 e0       	ldi	r19, 0x00	; 0
    22e0:	26 96       	adiw	r28, 0x06	; 6
    22e2:	fe 01       	movw	r30, r28
    22e4:	84 91       	lpm	r24, Z+
    22e6:	88 23       	and	r24, r24
    22e8:	09 f4       	brne	.+2      	; 0x22ec <timerGetTOP+0xae>
    22ea:	30 70       	andi	r19, 0x00	; 0
    22ec:	c9 01       	movw	r24, r18
    22ee:	df 91       	pop	r29
    22f0:	cf 91       	pop	r28
    22f2:	08 95       	ret

000022f4 <timerSnapshotToTicks>:
    22f4:	6f 92       	push	r6
    22f6:	7f 92       	push	r7
    22f8:	8f 92       	push	r8
    22fa:	9f 92       	push	r9
    22fc:	af 92       	push	r10
    22fe:	bf 92       	push	r11
    2300:	cf 92       	push	r12
    2302:	df 92       	push	r13
    2304:	ef 92       	push	r14
    2306:	ff 92       	push	r15
    2308:	0f 93       	push	r16
    230a:	1f 93       	push	r17
    230c:	cf 93       	push	r28
    230e:	df 93       	push	r29
    2310:	8c 01       	movw	r16, r24
    2312:	fc 01       	movw	r30, r24
    2314:	80 81       	ld	r24, Z
    2316:	91 81       	ldd	r25, Z+1	; 0x01
    2318:	0e 94 1f 11 	call	0x223e	; 0x223e <timerGetTOP>
    231c:	3c 01       	movw	r6, r24
    231e:	88 24       	eor	r8, r8
    2320:	99 24       	eor	r9, r9
    2322:	f8 01       	movw	r30, r16
    2324:	20 81       	ld	r18, Z
    2326:	31 81       	ldd	r19, Z+1	; 0x01
    2328:	80 91 7a 04 	lds	r24, 0x047A
    232c:	90 91 7b 04 	lds	r25, 0x047B
    2330:	a2 80       	ldd	r10, Z+2	; 0x02
    2332:	b3 80       	ldd	r11, Z+3	; 0x03
    2334:	c4 80       	ldd	r12, Z+4	; 0x04
    2336:	d5 80       	ldd	r13, Z+5	; 0x05
    2338:	c6 81       	ldd	r28, Z+6	; 0x06
    233a:	d7 81       	ldd	r29, Z+7	; 0x07
    233c:	28 17       	cp	r18, r24
    233e:	39 07       	cpc	r19, r25
    2340:	01 f5       	brne	.+64     	; 0x2382 <timerSnapshotToTicks+0x8e>
    2342:	e0 90 eb 01 	lds	r14, 0x01EB
    2346:	f0 90 ec 01 	lds	r15, 0x01EC
    234a:	00 91 ed 01 	lds	r16, 0x01ED
    234e:	10 91 ee 01 	lds	r17, 0x01EE
    2352:	c8 01       	movw	r24, r16
    2354:	b7 01       	movw	r22, r14
    2356:	a6 01       	movw	r20, r12
    2358:	95 01       	movw	r18, r10
    235a:	0e 94 32 1d 	call	0x3a64	; 0x3a64 <__mulsi3>
    235e:	5b 01       	movw	r10, r22
    2360:	6c 01       	movw	r12, r24
    2362:	be 01       	movw	r22, r28
    2364:	80 e0       	ldi	r24, 0x00	; 0
    2366:	90 e0       	ldi	r25, 0x00	; 0
    2368:	a8 01       	movw	r20, r16
    236a:	97 01       	movw	r18, r14
    236c:	0e 94 32 1d 	call	0x3a64	; 0x3a64 <__mulsi3>
    2370:	a4 01       	movw	r20, r8
    2372:	93 01       	movw	r18, r6
    2374:	0e 94 65 1d 	call	0x3aca	; 0x3aca <__udivmodsi4>
    2378:	2a 0d       	add	r18, r10
    237a:	3b 1d       	adc	r19, r11
    237c:	4c 1d       	adc	r20, r12
    237e:	5d 1d       	adc	r21, r13
    2380:	14 c0       	rjmp	.+40     	; 0x23aa <timerSnapshotToTicks+0xb6>
    2382:	08 94       	sec
    2384:	61 1c       	adc	r6, r1
    2386:	71 1c       	adc	r7, r1
    2388:	81 1c       	adc	r8, r1
    238a:	91 1c       	adc	r9, r1
    238c:	c4 01       	movw	r24, r8
    238e:	b3 01       	movw	r22, r6
    2390:	a6 01       	movw	r20, r12
    2392:	95 01       	movw	r18, r10
    2394:	0e 94 32 1d 	call	0x3a64	; 0x3a64 <__mulsi3>
    2398:	9b 01       	movw	r18, r22
    239a:	ac 01       	movw	r20, r24
    239c:	ce 01       	movw	r24, r28
    239e:	a0 e0       	ldi	r26, 0x00	; 0
    23a0:	b0 e0       	ldi	r27, 0x00	; 0
    23a2:	28 0f       	add	r18, r24
    23a4:	39 1f       	adc	r19, r25
    23a6:	4a 1f       	adc	r20, r26
    23a8:	5b 1f       	adc	r21, r27
    23aa:	b9 01       	movw	r22, r18
    23ac:	ca 01       	movw	r24, r20
    23ae:	df 91       	pop	r29
    23b0:	cf 91       	pop	r28
    23b2:	1f 91       	pop	r17
    23b4:	0f 91       	pop	r16
    23b6:	ff 90       	pop	r15
    23b8:	ef 90       	pop	r14
    23ba:	df 90       	pop	r13
    23bc:	cf 90       	pop	r12
    23be:	bf 90       	pop	r11
    23c0:	af 90       	pop	r10
    23c2:	9f 90       	pop	r9
    23c4:	8f 90       	pop	r8
    23c6:	7f 90       	pop	r7
    23c8:	6f 90       	pop	r6
    23ca:	08 95       	ret

000023cc <timerGetBestPrescaler>:
    23cc:	4f 92       	push	r4
    23ce:	5f 92       	push	r5
    23d0:	6f 92       	push	r6
    23d2:	7f 92       	push	r7
    23d4:	8f 92       	push	r8
    23d6:	9f 92       	push	r9
    23d8:	af 92       	push	r10
    23da:	bf 92       	push	r11
    23dc:	cf 92       	push	r12
    23de:	df 92       	push	r13
    23e0:	ef 92       	push	r14
    23e2:	ff 92       	push	r15
    23e4:	0f 93       	push	r16
    23e6:	1f 93       	push	r17
    23e8:	cf 93       	push	r28
    23ea:	df 93       	push	r29
    23ec:	8c 01       	movw	r16, r24
    23ee:	0a 5f       	subi	r16, 0xFA	; 250
    23f0:	1f 4f       	sbci	r17, 0xFF	; 255
    23f2:	f8 01       	movw	r30, r16
    23f4:	84 91       	lpm	r24, Z+
    23f6:	06 50       	subi	r16, 0x06	; 6
    23f8:	10 40       	sbci	r17, 0x00	; 0
    23fa:	88 23       	and	r24, r24
    23fc:	31 f4       	brne	.+12     	; 0x240a <timerGetBestPrescaler+0x3e>
    23fe:	2f ef       	ldi	r18, 0xFF	; 255
    2400:	a2 2e       	mov	r10, r18
    2402:	b1 2c       	mov	r11, r1
    2404:	c1 2c       	mov	r12, r1
    2406:	d1 2c       	mov	r13, r1
    2408:	06 c0       	rjmp	.+12     	; 0x2416 <timerGetBestPrescaler+0x4a>
    240a:	9f ef       	ldi	r25, 0xFF	; 255
    240c:	a9 2e       	mov	r10, r25
    240e:	9f ef       	ldi	r25, 0xFF	; 255
    2410:	b9 2e       	mov	r11, r25
    2412:	c1 2c       	mov	r12, r1
    2414:	d1 2c       	mov	r13, r1
    2416:	c1 e0       	ldi	r28, 0x01	; 1
    2418:	d0 e0       	ldi	r29, 0x00	; 0
    241a:	81 e0       	ldi	r24, 0x01	; 1
    241c:	48 2e       	mov	r4, r24
    241e:	51 2c       	mov	r5, r1
    2420:	ee 24       	eor	r14, r14
    2422:	ff 24       	eor	r15, r15
    2424:	3b 01       	movw	r6, r22
    2426:	88 24       	eor	r8, r8
    2428:	99 24       	eor	r9, r9
    242a:	c8 01       	movw	r24, r16
    242c:	be 01       	movw	r22, r28
    242e:	0e 94 e6 0d 	call	0x1bcc	; 0x1bcc <__timerPrescalerIndex>
    2432:	8f 5f       	subi	r24, 0xFF	; 255
    2434:	9f 4f       	sbci	r25, 0xFF	; 255
    2436:	59 f0       	breq	.+22     	; 0x244e <timerGetBestPrescaler+0x82>
    2438:	c4 01       	movw	r24, r8
    243a:	b3 01       	movw	r22, r6
    243c:	ae 01       	movw	r20, r28
    243e:	0e 94 84 0d 	call	0x1b08	; 0x1b08 <ticks_per_ms>
    2442:	a6 16       	cp	r10, r22
    2444:	b7 06       	cpc	r11, r23
    2446:	c8 06       	cpc	r12, r24
    2448:	d9 06       	cpc	r13, r25
    244a:	70 f4       	brcc	.+28     	; 0x2468 <timerGetBestPrescaler+0x9c>
    244c:	2e 01       	movw	r4, r28
    244e:	cc 0f       	add	r28, r28
    2450:	dd 1f       	adc	r29, r29
    2452:	08 94       	sec
    2454:	e1 1c       	adc	r14, r1
    2456:	f1 1c       	adc	r15, r1
    2458:	2b e0       	ldi	r18, 0x0B	; 11
    245a:	e2 16       	cp	r14, r18
    245c:	f1 04       	cpc	r15, r1
    245e:	29 f7       	brne	.-54     	; 0x242a <timerGetBestPrescaler+0x5e>
    2460:	88 ef       	ldi	r24, 0xF8	; 248
    2462:	0e 94 2d 10 	call	0x205a	; 0x205a <setError>
    2466:	e2 01       	movw	r28, r4
    2468:	ce 01       	movw	r24, r28
    246a:	df 91       	pop	r29
    246c:	cf 91       	pop	r28
    246e:	1f 91       	pop	r17
    2470:	0f 91       	pop	r16
    2472:	ff 90       	pop	r15
    2474:	ef 90       	pop	r14
    2476:	df 90       	pop	r13
    2478:	cf 90       	pop	r12
    247a:	bf 90       	pop	r11
    247c:	af 90       	pop	r10
    247e:	9f 90       	pop	r9
    2480:	8f 90       	pop	r8
    2482:	7f 90       	pop	r7
    2484:	6f 90       	pop	r6
    2486:	5f 90       	pop	r5
    2488:	4f 90       	pop	r4
    248a:	08 95       	ret

0000248c <timerSetPrescaler>:
    248c:	df 92       	push	r13
    248e:	ef 92       	push	r14
    2490:	ff 92       	push	r15
    2492:	0f 93       	push	r16
    2494:	1f 93       	push	r17
    2496:	cf 93       	push	r28
    2498:	df 93       	push	r29
    249a:	ec 01       	movw	r28, r24
    249c:	7b 01       	movw	r14, r22
    249e:	fc 01       	movw	r30, r24
    24a0:	34 96       	adiw	r30, 0x04	; 4
    24a2:	05 91       	lpm	r16, Z+
    24a4:	14 91       	lpm	r17, Z+
    24a6:	df b6       	in	r13, 0x3f	; 63
    24a8:	f8 94       	cli
    24aa:	0e 94 e6 0d 	call	0x1bcc	; 0x1bcc <__timerPrescalerIndex>
    24ae:	ac 01       	movw	r20, r24
    24b0:	8f ef       	ldi	r24, 0xFF	; 255
    24b2:	4f 3f       	cpi	r20, 0xFF	; 255
    24b4:	58 07       	cpc	r21, r24
    24b6:	69 f0       	breq	.+26     	; 0x24d2 <timerSetPrescaler+0x46>
    24b8:	fe 01       	movw	r30, r28
    24ba:	a5 91       	lpm	r26, Z+
    24bc:	b4 91       	lpm	r27, Z+
    24be:	ed 92       	st	X+, r14
    24c0:	fc 92       	st	X, r15
    24c2:	f8 01       	movw	r30, r16
    24c4:	80 81       	ld	r24, Z
    24c6:	88 7f       	andi	r24, 0xF8	; 248
    24c8:	80 83       	st	Z, r24
    24ca:	80 81       	ld	r24, Z
    24cc:	84 2b       	or	r24, r20
    24ce:	80 83       	st	Z, r24
    24d0:	03 c0       	rjmp	.+6      	; 0x24d8 <timerSetPrescaler+0x4c>
    24d2:	8a ef       	ldi	r24, 0xFA	; 250
    24d4:	0e 94 2d 10 	call	0x205a	; 0x205a <setError>
    24d8:	df be       	out	0x3f, r13	; 63
    24da:	df 91       	pop	r29
    24dc:	cf 91       	pop	r28
    24de:	1f 91       	pop	r17
    24e0:	0f 91       	pop	r16
    24e2:	ff 90       	pop	r15
    24e4:	ef 90       	pop	r14
    24e6:	df 90       	pop	r13
    24e8:	08 95       	ret

000024ea <timerInit>:
    24ea:	7f 92       	push	r7
    24ec:	8f 92       	push	r8
    24ee:	9f 92       	push	r9
    24f0:	af 92       	push	r10
    24f2:	bf 92       	push	r11
    24f4:	cf 92       	push	r12
    24f6:	df 92       	push	r13
    24f8:	ef 92       	push	r14
    24fa:	ff 92       	push	r15
    24fc:	0f 93       	push	r16
    24fe:	1f 93       	push	r17
    2500:	cf 93       	push	r28
    2502:	df 93       	push	r29
    2504:	ec 01       	movw	r28, r24
    2506:	fc 01       	movw	r30, r24
    2508:	32 96       	adiw	r30, 0x02	; 2
    250a:	05 91       	lpm	r16, Z+
    250c:	14 91       	lpm	r17, Z+
    250e:	fc 01       	movw	r30, r24
    2510:	85 90       	lpm	r8, Z+
    2512:	94 90       	lpm	r9, Z+
    2514:	7f b6       	in	r7, 0x3f	; 63
    2516:	f8 94       	cli
    2518:	04 96       	adiw	r24, 0x04	; 4
    251a:	fc 01       	movw	r30, r24
    251c:	a5 91       	lpm	r26, Z+
    251e:	b4 91       	lpm	r27, Z+
    2520:	8c 91       	ld	r24, X
    2522:	88 7f       	andi	r24, 0xF8	; 248
    2524:	8c 93       	st	X, r24
    2526:	39 e1       	ldi	r19, 0x19	; 25
    2528:	a3 2e       	mov	r10, r19
    252a:	b1 2c       	mov	r11, r1
    252c:	ac 0e       	add	r10, r28
    252e:	bd 1e       	adc	r11, r29
    2530:	c5 01       	movw	r24, r10
    2532:	0e 94 d5 08 	call	0x11aa	; 0x11aa <__portMaskClear>
    2536:	f8 01       	movw	r30, r16
    2538:	10 82       	st	Z, r1
    253a:	f4 01       	movw	r30, r8
    253c:	60 81       	ld	r22, Z
    253e:	71 81       	ldd	r23, Z+1	; 0x01
    2540:	ce 01       	movw	r24, r28
    2542:	0e 94 46 12 	call	0x248c	; 0x248c <timerSetPrescaler>
    2546:	28 96       	adiw	r28, 0x08	; 8
    2548:	fe 01       	movw	r30, r28
    254a:	e4 90       	lpm	r14, Z+
    254c:	2f 96       	adiw	r28, 0x0f	; 15
    254e:	ff 24       	eor	r15, r15
    2550:	00 e0       	ldi	r16, 0x00	; 0
    2552:	10 e0       	ldi	r17, 0x00	; 0
    2554:	fe 01       	movw	r30, r28
    2556:	c5 90       	lpm	r12, Z+
    2558:	d4 90       	lpm	r13, Z+
    255a:	67 97       	sbiw	r28, 0x17	; 23
    255c:	09 c0       	rjmp	.+18     	; 0x2570 <timerInit+0x86>
    255e:	c6 01       	movw	r24, r12
    2560:	80 0f       	add	r24, r16
    2562:	91 1f       	adc	r25, r17
    2564:	08 96       	adiw	r24, 0x08	; 8
    2566:	0e 94 bc 08 	call	0x1178	; 0x1178 <__portMaskSet>
    256a:	f3 94       	inc	r15
    256c:	00 5f       	subi	r16, 0xF0	; 240
    256e:	1f 4f       	sbci	r17, 0xFF	; 255
    2570:	fe 14       	cp	r15, r14
    2572:	a8 f3       	brcs	.-22     	; 0x255e <timerInit+0x74>
    2574:	ce 01       	movw	r24, r28
    2576:	4c 96       	adiw	r24, 0x1c	; 28
    2578:	0e 94 bc 08 	call	0x1178	; 0x1178 <__portMaskSet>
    257c:	f4 01       	movw	r30, r8
    257e:	82 81       	ldd	r24, Z+2	; 0x02
    2580:	93 81       	ldd	r25, Z+3	; 0x03
    2582:	89 2b       	or	r24, r25
    2584:	19 f0       	breq	.+6      	; 0x258c <timerInit+0xa2>
    2586:	c5 01       	movw	r24, r10
    2588:	0e 94 bc 08 	call	0x1178	; 0x1178 <__portMaskSet>
    258c:	7f be       	out	0x3f, r7	; 63
    258e:	df 91       	pop	r29
    2590:	cf 91       	pop	r28
    2592:	1f 91       	pop	r17
    2594:	0f 91       	pop	r16
    2596:	ff 90       	pop	r15
    2598:	ef 90       	pop	r14
    259a:	df 90       	pop	r13
    259c:	cf 90       	pop	r12
    259e:	bf 90       	pop	r11
    25a0:	af 90       	pop	r10
    25a2:	9f 90       	pop	r9
    25a4:	8f 90       	pop	r8
    25a6:	7f 90       	pop	r7
    25a8:	08 95       	ret

000025aa <timerSetMode>:
    25aa:	df 92       	push	r13
    25ac:	ef 92       	push	r14
    25ae:	ff 92       	push	r15
    25b0:	0f 93       	push	r16
    25b2:	1f 93       	push	r17
    25b4:	cf 93       	push	r28
    25b6:	df 93       	push	r29
    25b8:	8c 01       	movw	r16, r24
    25ba:	66 23       	and	r22, r22
    25bc:	41 f0       	breq	.+16     	; 0x25ce <timerSetMode+0x24>
    25be:	fc 01       	movw	r30, r24
    25c0:	a5 91       	lpm	r26, Z+
    25c2:	b4 91       	lpm	r27, Z+
    25c4:	1a 96       	adiw	r26, 0x0a	; 10
    25c6:	8c 91       	ld	r24, X
    25c8:	86 17       	cp	r24, r22
    25ca:	09 f4       	brne	.+2      	; 0x25ce <timerSetMode+0x24>
    25cc:	7a c0       	rjmp	.+244    	; 0x26c2 <timerSetMode+0x118>
    25ce:	f8 01       	movw	r30, r16
    25d0:	39 96       	adiw	r30, 0x09	; 9
    25d2:	25 91       	lpm	r18, Z+
    25d4:	34 91       	lpm	r19, Z+
    25d6:	81 e0       	ldi	r24, 0x01	; 1
    25d8:	90 e0       	ldi	r25, 0x00	; 0
    25da:	06 2e       	mov	r0, r22
    25dc:	02 c0       	rjmp	.+4      	; 0x25e2 <timerSetMode+0x38>
    25de:	88 0f       	add	r24, r24
    25e0:	99 1f       	adc	r25, r25
    25e2:	0a 94       	dec	r0
    25e4:	e2 f7       	brpl	.-8      	; 0x25de <timerSetMode+0x34>
    25e6:	82 23       	and	r24, r18
    25e8:	93 23       	and	r25, r19
    25ea:	89 2b       	or	r24, r25
    25ec:	09 f4       	brne	.+2      	; 0x25f0 <timerSetMode+0x46>
    25ee:	66 c0       	rjmp	.+204    	; 0x26bc <timerSetMode+0x112>
    25f0:	f8 01       	movw	r30, r16
    25f2:	a5 91       	lpm	r26, Z+
    25f4:	b4 91       	lpm	r27, Z+
    25f6:	1a 96       	adiw	r26, 0x0a	; 10
    25f8:	6c 93       	st	X, r22
    25fa:	ff ed       	ldi	r31, 0xDF	; 223
    25fc:	2f 3f       	cpi	r18, 0xFF	; 255
    25fe:	3f 07       	cpc	r19, r31
    2600:	11 f4       	brne	.+4      	; 0x2606 <timerSetMode+0x5c>
    2602:	d6 2e       	mov	r13, r22
    2604:	13 c0       	rjmp	.+38     	; 0x262c <timerSetMode+0x82>
    2606:	88 e8       	ldi	r24, 0x88	; 136
    2608:	23 33       	cpi	r18, 0x33	; 51
    260a:	38 07       	cpc	r19, r24
    260c:	31 f4       	brne	.+12     	; 0x261a <timerSetMode+0x70>
    260e:	e6 2f       	mov	r30, r22
    2610:	f0 e0       	ldi	r31, 0x00	; 0
    2612:	ee 5e       	subi	r30, 0xEE	; 238
    2614:	fd 4f       	sbci	r31, 0xFD	; 253
    2616:	d4 90       	lpm	r13, Z+
    2618:	09 c0       	rjmp	.+18     	; 0x262c <timerSetMode+0x82>
    261a:	23 33       	cpi	r18, 0x33	; 51
    261c:	31 05       	cpc	r19, r1
    261e:	09 f0       	breq	.+2      	; 0x2622 <timerSetMode+0x78>
    2620:	4d c0       	rjmp	.+154    	; 0x26bc <timerSetMode+0x112>
    2622:	e6 2f       	mov	r30, r22
    2624:	f0 e0       	ldi	r31, 0x00	; 0
    2626:	ee 5d       	subi	r30, 0xDE	; 222
    2628:	fd 4f       	sbci	r31, 0xFD	; 253
    262a:	d4 90       	lpm	r13, Z+
    262c:	ef ef       	ldi	r30, 0xFF	; 255
    262e:	de 16       	cp	r13, r30
    2630:	09 f4       	brne	.+2      	; 0x2634 <timerSetMode+0x8a>
    2632:	44 c0       	rjmp	.+136    	; 0x26bc <timerSetMode+0x112>
    2634:	c8 01       	movw	r24, r16
    2636:	04 96       	adiw	r24, 0x04	; 4
    2638:	fc 01       	movw	r30, r24
    263a:	a5 91       	lpm	r26, Z+
    263c:	b4 91       	lpm	r27, Z+
    263e:	8c 91       	ld	r24, X
    2640:	88 7f       	andi	r24, 0xF8	; 248
    2642:	8c 93       	st	X, r24
    2644:	e8 01       	movw	r28, r16
    2646:	2b 96       	adiw	r28, 0x0b	; 11
    2648:	ee 24       	eor	r14, r14
    264a:	ff 24       	eor	r15, r15
    264c:	e8 81       	ld	r30, Y
    264e:	f9 81       	ldd	r31, Y+1	; 0x01
    2650:	85 91       	lpm	r24, Z+
    2652:	94 91       	lpm	r25, Z+
    2654:	89 2b       	or	r24, r25
    2656:	99 f0       	breq	.+38     	; 0x267e <timerSetMode+0xd4>
    2658:	d0 fe       	sbrs	r13, 0
    265a:	04 c0       	rjmp	.+8      	; 0x2664 <timerSetMode+0xba>
    265c:	ce 01       	movw	r24, r28
    265e:	0e 94 bc 08 	call	0x1178	; 0x1178 <__portMaskSet>
    2662:	03 c0       	rjmp	.+6      	; 0x266a <timerSetMode+0xc0>
    2664:	ce 01       	movw	r24, r28
    2666:	0e 94 d5 08 	call	0x11aa	; 0x11aa <__portMaskClear>
    266a:	08 94       	sec
    266c:	e1 1c       	adc	r14, r1
    266e:	f1 1c       	adc	r15, r1
    2670:	f4 e0       	ldi	r31, 0x04	; 4
    2672:	ef 16       	cp	r14, r31
    2674:	f1 04       	cpc	r15, r1
    2676:	19 f0       	breq	.+6      	; 0x267e <timerSetMode+0xd4>
    2678:	d6 94       	lsr	r13
    267a:	23 96       	adiw	r28, 0x03	; 3
    267c:	e7 cf       	rjmp	.-50     	; 0x264c <timerSetMode+0xa2>
    267e:	08 5f       	subi	r16, 0xF8	; 248
    2680:	1f 4f       	sbci	r17, 0xFF	; 255
    2682:	f8 01       	movw	r30, r16
    2684:	f4 90       	lpm	r15, Z+
    2686:	fa 94       	dec	r15
    2688:	01 5f       	subi	r16, 0xF1	; 241
    268a:	1f 4f       	sbci	r17, 0xFF	; 255
    268c:	f8 01       	movw	r30, r16
    268e:	c5 91       	lpm	r28, Z+
    2690:	d4 91       	lpm	r29, Z+
    2692:	07 51       	subi	r16, 0x17	; 23
    2694:	10 40       	sbci	r17, 0x00	; 0
    2696:	0c c0       	rjmp	.+24     	; 0x26b0 <timerSetMode+0x106>
    2698:	8f 2d       	mov	r24, r15
    269a:	90 e0       	ldi	r25, 0x00	; 0
    269c:	44 e0       	ldi	r20, 0x04	; 4
    269e:	88 0f       	add	r24, r24
    26a0:	99 1f       	adc	r25, r25
    26a2:	4a 95       	dec	r20
    26a4:	e1 f7       	brne	.-8      	; 0x269e <timerSetMode+0xf4>
    26a6:	8c 0f       	add	r24, r28
    26a8:	9d 1f       	adc	r25, r29
    26aa:	0e 94 99 10 	call	0x2132	; 0x2132 <compareDetach>
    26ae:	fa 94       	dec	r15
    26b0:	f7 fe       	sbrs	r15, 7
    26b2:	f2 cf       	rjmp	.-28     	; 0x2698 <timerSetMode+0xee>
    26b4:	c8 01       	movw	r24, r16
    26b6:	0e 94 75 12 	call	0x24ea	; 0x24ea <timerInit>
    26ba:	03 c0       	rjmp	.+6      	; 0x26c2 <timerSetMode+0x118>
    26bc:	86 ef       	ldi	r24, 0xF6	; 246
    26be:	0e 94 2d 10 	call	0x205a	; 0x205a <setError>
    26c2:	df 91       	pop	r29
    26c4:	cf 91       	pop	r28
    26c6:	1f 91       	pop	r17
    26c8:	0f 91       	pop	r16
    26ca:	ff 90       	pop	r15
    26cc:	ef 90       	pop	r14
    26ce:	df 90       	pop	r13
    26d0:	08 95       	ret

000026d2 <initTimers>:
    26d2:	df 92       	push	r13
    26d4:	ef 92       	push	r14
    26d6:	ff 92       	push	r15
    26d8:	0f 93       	push	r16
    26da:	1f 93       	push	r17
    26dc:	f8 94       	cli
    26de:	ff 24       	eor	r15, r15
    26e0:	e0 90 08 01 	lds	r14, 0x0108
    26e4:	5c e2       	ldi	r21, 0x2C	; 44
    26e6:	d5 2e       	mov	r13, r21
    26e8:	1c c0       	rjmp	.+56     	; 0x2722 <initTimers+0x50>
    26ea:	fd 9c       	mul	r15, r13
    26ec:	80 01       	movw	r16, r0
    26ee:	11 24       	eor	r1, r1
    26f0:	0f 5d       	subi	r16, 0xDF	; 223
    26f2:	1e 4f       	sbci	r17, 0xFE	; 254
    26f4:	c8 01       	movw	r24, r16
    26f6:	60 e0       	ldi	r22, 0x00	; 0
    26f8:	70 e0       	ldi	r23, 0x00	; 0
    26fa:	40 e0       	ldi	r20, 0x00	; 0
    26fc:	50 e0       	ldi	r21, 0x00	; 0
    26fe:	0e 94 bb 16 	call	0x2d76	; 0x2d76 <timerOverflowAttach>
    2702:	c8 01       	movw	r24, r16
    2704:	0e 94 ef 15 	call	0x2bde	; 0x2bde <timerCaptureDetach>
    2708:	c8 01       	movw	r24, r16
    270a:	60 e0       	ldi	r22, 0x00	; 0
    270c:	0e 94 d5 12 	call	0x25aa	; 0x25aa <timerSetMode>
    2710:	c8 01       	movw	r24, r16
    2712:	04 96       	adiw	r24, 0x04	; 4
    2714:	fc 01       	movw	r30, r24
    2716:	a5 91       	lpm	r26, Z+
    2718:	b4 91       	lpm	r27, Z+
    271a:	8c 91       	ld	r24, X
    271c:	88 7f       	andi	r24, 0xF8	; 248
    271e:	8c 93       	st	X, r24
    2720:	f3 94       	inc	r15
    2722:	fe 14       	cp	r15, r14
    2724:	10 f3       	brcs	.-60     	; 0x26ea <initTimers+0x18>
    2726:	78 94       	sei
    2728:	1f 91       	pop	r17
    272a:	0f 91       	pop	r16
    272c:	ff 90       	pop	r15
    272e:	ef 90       	pop	r14
    2730:	df 90       	pop	r13
    2732:	08 95       	ret

00002734 <compareAttach>:
    2734:	8f 92       	push	r8
    2736:	9f 92       	push	r9
    2738:	af 92       	push	r10
    273a:	bf 92       	push	r11
    273c:	cf 92       	push	r12
    273e:	df 92       	push	r13
    2740:	ef 92       	push	r14
    2742:	ff 92       	push	r15
    2744:	0f 93       	push	r16
    2746:	1f 93       	push	r17
    2748:	cf 93       	push	r28
    274a:	df 93       	push	r29
    274c:	8c 01       	movw	r16, r24
    274e:	6b 01       	movw	r12, r22
    2750:	5a 01       	movw	r10, r20
    2752:	49 01       	movw	r8, r18
    2754:	0e 5f       	subi	r16, 0xFE	; 254
    2756:	1f 4f       	sbci	r17, 0xFF	; 255
    2758:	f8 01       	movw	r30, r16
    275a:	84 91       	lpm	r24, Z+
    275c:	02 50       	subi	r16, 0x02	; 2
    275e:	10 40       	sbci	r17, 0x00	; 0
    2760:	9c e2       	ldi	r25, 0x2C	; 44
    2762:	89 9f       	mul	r24, r25
    2764:	e0 01       	movw	r28, r0
    2766:	11 24       	eor	r1, r1
    2768:	cf 5d       	subi	r28, 0xDF	; 223
    276a:	de 4f       	sbci	r29, 0xFE	; 254
    276c:	28 96       	adiw	r28, 0x08	; 8
    276e:	fe 01       	movw	r30, r28
    2770:	84 91       	lpm	r24, Z+
    2772:	28 97       	sbiw	r28, 0x08	; 8
    2774:	88 23       	and	r24, r24
    2776:	a1 f1       	breq	.+104    	; 0x27e0 <compareAttach+0xac>
    2778:	f8 01       	movw	r30, r16
    277a:	e5 90       	lpm	r14, Z+
    277c:	f4 90       	lpm	r15, Z+
    277e:	61 15       	cp	r22, r1
    2780:	71 05       	cpc	r23, r1
    2782:	41 f0       	breq	.+16     	; 0x2794 <compareAttach+0x60>
    2784:	f7 01       	movw	r30, r14
    2786:	80 81       	ld	r24, Z
    2788:	91 81       	ldd	r25, Z+1	; 0x01
    278a:	89 2b       	or	r24, r25
    278c:	19 f0       	breq	.+6      	; 0x2794 <compareAttach+0x60>
    278e:	8b ef       	ldi	r24, 0xFB	; 251
    2790:	0e 94 2d 10 	call	0x205a	; 0x205a <setError>
    2794:	ce 01       	movw	r24, r28
    2796:	fe 01       	movw	r30, r28
    2798:	a5 91       	lpm	r26, Z+
    279a:	b4 91       	lpm	r27, Z+
    279c:	6d 91       	ld	r22, X+
    279e:	7c 91       	ld	r23, X
    27a0:	0e 94 46 12 	call	0x248c	; 0x248c <timerSetPrescaler>
    27a4:	e8 01       	movw	r28, r16
    27a6:	23 96       	adiw	r28, 0x03	; 3
    27a8:	ce 01       	movw	r24, r28
    27aa:	0e 94 d5 08 	call	0x11aa	; 0x11aa <__portMaskClear>
    27ae:	c8 01       	movw	r24, r16
    27b0:	b5 01       	movw	r22, r10
    27b2:	0e 94 bd 10 	call	0x217a	; 0x217a <compareSetThreshold>
    27b6:	f7 01       	movw	r30, r14
    27b8:	d1 82       	std	Z+1, r13	; 0x01
    27ba:	c0 82       	st	Z, r12
    27bc:	93 82       	std	Z+3, r9	; 0x03
    27be:	82 82       	std	Z+2, r8	; 0x02
    27c0:	c8 01       	movw	r24, r16
    27c2:	08 96       	adiw	r24, 0x08	; 8
    27c4:	0e 94 bc 08 	call	0x1178	; 0x1178 <__portMaskSet>
    27c8:	c1 14       	cp	r12, r1
    27ca:	d1 04       	cpc	r13, r1
    27cc:	61 f0       	breq	.+24     	; 0x27e6 <compareAttach+0xb2>
    27ce:	f1 ed       	ldi	r31, 0xD1	; 209
    27d0:	cf 16       	cp	r12, r31
    27d2:	fd e0       	ldi	r31, 0x0D	; 13
    27d4:	df 06       	cpc	r13, r31
    27d6:	39 f0       	breq	.+14     	; 0x27e6 <compareAttach+0xb2>
    27d8:	ce 01       	movw	r24, r28
    27da:	0e 94 bc 08 	call	0x1178	; 0x1178 <__portMaskSet>
    27de:	03 c0       	rjmp	.+6      	; 0x27e6 <compareAttach+0xb2>
    27e0:	8d ef       	ldi	r24, 0xFD	; 253
    27e2:	0e 94 2d 10 	call	0x205a	; 0x205a <setError>
    27e6:	df 91       	pop	r29
    27e8:	cf 91       	pop	r28
    27ea:	1f 91       	pop	r17
    27ec:	0f 91       	pop	r16
    27ee:	ff 90       	pop	r15
    27f0:	ef 90       	pop	r14
    27f2:	df 90       	pop	r13
    27f4:	cf 90       	pop	r12
    27f6:	bf 90       	pop	r11
    27f8:	af 90       	pop	r10
    27fa:	9f 90       	pop	r9
    27fc:	8f 90       	pop	r8
    27fe:	08 95       	ret

00002800 <__clockInit>:
    2800:	2f 92       	push	r2
    2802:	3f 92       	push	r3
    2804:	4f 92       	push	r4
    2806:	5f 92       	push	r5
    2808:	6f 92       	push	r6
    280a:	7f 92       	push	r7
    280c:	8f 92       	push	r8
    280e:	9f 92       	push	r9
    2810:	af 92       	push	r10
    2812:	bf 92       	push	r11
    2814:	cf 92       	push	r12
    2816:	df 92       	push	r13
    2818:	ef 92       	push	r14
    281a:	ff 92       	push	r15
    281c:	0f 93       	push	r16
    281e:	1f 93       	push	r17
    2820:	df 93       	push	r29
    2822:	cf 93       	push	r28
    2824:	00 d0       	rcall	.+0      	; 0x2826 <__clockInit+0x26>
    2826:	00 d0       	rcall	.+0      	; 0x2828 <__clockInit+0x28>
    2828:	cd b7       	in	r28, 0x3d	; 61
    282a:	de b7       	in	r29, 0x3e	; 62
    282c:	10 92 7b 04 	sts	0x047B, r1
    2830:	10 92 7a 04 	sts	0x047A, r1
    2834:	00 91 08 01 	lds	r16, 0x0108
    2838:	01 50       	subi	r16, 0x01	; 1
    283a:	8c e2       	ldi	r24, 0x2C	; 44
    283c:	08 02       	muls	r16, r24
    283e:	60 01       	movw	r12, r0
    2840:	11 24       	eor	r1, r1
    2842:	21 e2       	ldi	r18, 0x21	; 33
    2844:	31 e0       	ldi	r19, 0x01	; 1
    2846:	c2 0e       	add	r12, r18
    2848:	d3 1e       	adc	r13, r19
    284a:	aa 24       	eor	r10, r10
    284c:	bb 24       	eor	r11, r11
    284e:	22 24       	eor	r2, r2
    2850:	33 24       	eor	r3, r3
    2852:	1a 82       	std	Y+2, r1	; 0x02
    2854:	19 82       	std	Y+1, r1	; 0x01
    2856:	52 c0       	rjmp	.+164    	; 0x28fc <__clockInit+0xfc>
    2858:	c6 01       	movw	r24, r12
    285a:	04 96       	adiw	r24, 0x04	; 4
    285c:	fc 01       	movw	r30, r24
    285e:	a5 91       	lpm	r26, Z+
    2860:	b4 91       	lpm	r27, Z+
    2862:	8c 91       	ld	r24, X
    2864:	90 e0       	ldi	r25, 0x00	; 0
    2866:	87 70       	andi	r24, 0x07	; 7
    2868:	90 70       	andi	r25, 0x00	; 0
    286a:	89 2b       	or	r24, r25
    286c:	09 f0       	breq	.+2      	; 0x2870 <__clockInit+0x70>
    286e:	41 c0       	rjmp	.+130    	; 0x28f2 <__clockInit+0xf2>
    2870:	db c0       	rjmp	.+438    	; 0x2a28 <__clockInit+0x228>
    2872:	28 e0       	ldi	r18, 0x08	; 8
    2874:	30 e0       	ldi	r19, 0x00	; 0
    2876:	c2 0e       	add	r12, r18
    2878:	d3 1e       	adc	r13, r19
    287a:	f6 01       	movw	r30, r12
    287c:	84 91       	lpm	r24, Z+
    287e:	28 ef       	ldi	r18, 0xF8	; 248
    2880:	3f ef       	ldi	r19, 0xFF	; 255
    2882:	c2 0e       	add	r12, r18
    2884:	d3 1e       	adc	r13, r19
    2886:	82 30       	cpi	r24, 0x02	; 2
    2888:	a0 f1       	brcs	.+104    	; 0x28f2 <__clockInit+0xf2>
    288a:	3f ef       	ldi	r19, 0xFF	; 255
    288c:	23 16       	cp	r2, r19
    288e:	31 04       	cpc	r3, r1
    2890:	69 f0       	breq	.+26     	; 0x28ac <__clockInit+0xac>
    2892:	60 f0       	brcs	.+24     	; 0x28ac <__clockInit+0xac>
    2894:	86 e0       	ldi	r24, 0x06	; 6
    2896:	90 e0       	ldi	r25, 0x00	; 0
    2898:	c8 0e       	add	r12, r24
    289a:	d9 1e       	adc	r13, r25
    289c:	f6 01       	movw	r30, r12
    289e:	84 91       	lpm	r24, Z+
    28a0:	2a ef       	ldi	r18, 0xFA	; 250
    28a2:	3f ef       	ldi	r19, 0xFF	; 255
    28a4:	c2 0e       	add	r12, r18
    28a6:	d3 1e       	adc	r13, r19
    28a8:	88 23       	and	r24, r24
    28aa:	19 f1       	breq	.+70     	; 0x28f2 <__clockInit+0xf2>
    28ac:	c6 01       	movw	r24, r12
    28ae:	6c e0       	ldi	r22, 0x0C	; 12
    28b0:	70 e0       	ldi	r23, 0x00	; 0
    28b2:	0e 94 e6 11 	call	0x23cc	; 0x23cc <timerGetBestPrescaler>
    28b6:	f8 2e       	mov	r15, r24
    28b8:	e9 2e       	mov	r14, r25
    28ba:	6c e0       	ldi	r22, 0x0C	; 12
    28bc:	70 e0       	ldi	r23, 0x00	; 0
    28be:	80 e0       	ldi	r24, 0x00	; 0
    28c0:	90 e0       	ldi	r25, 0x00	; 0
    28c2:	4f 2d       	mov	r20, r15
    28c4:	5e 2d       	mov	r21, r14
    28c6:	0e 94 84 0d 	call	0x1b08	; 0x1b08 <ticks_per_ms>
    28ca:	9b 01       	movw	r18, r22
    28cc:	ac 01       	movw	r20, r24
    28ce:	a1 14       	cp	r10, r1
    28d0:	b1 04       	cpc	r11, r1
    28d2:	41 f0       	breq	.+16     	; 0x28e4 <__clockInit+0xe4>
    28d4:	c1 01       	movw	r24, r2
    28d6:	a0 e0       	ldi	r26, 0x00	; 0
    28d8:	b0 e0       	ldi	r27, 0x00	; 0
    28da:	82 17       	cp	r24, r18
    28dc:	93 07       	cpc	r25, r19
    28de:	a4 07       	cpc	r26, r20
    28e0:	b5 07       	cpc	r27, r21
    28e2:	38 f4       	brcc	.+14     	; 0x28f2 <__clockInit+0xf2>
    28e4:	19 01       	movw	r2, r18
    28e6:	56 01       	movw	r10, r12
    28e8:	8f 2d       	mov	r24, r15
    28ea:	9e 2d       	mov	r25, r14
    28ec:	9c 01       	movw	r18, r24
    28ee:	3a 83       	std	Y+2, r19	; 0x02
    28f0:	29 83       	std	Y+1, r18	; 0x01
    28f2:	01 50       	subi	r16, 0x01	; 1
    28f4:	84 ed       	ldi	r24, 0xD4	; 212
    28f6:	9f ef       	ldi	r25, 0xFF	; 255
    28f8:	c8 0e       	add	r12, r24
    28fa:	d9 1e       	adc	r13, r25
    28fc:	07 ff       	sbrs	r16, 7
    28fe:	ac cf       	rjmp	.-168    	; 0x2858 <__clockInit+0x58>
    2900:	a1 14       	cp	r10, r1
    2902:	b1 04       	cpc	r11, r1
    2904:	09 f4       	brne	.+2      	; 0x2908 <__clockInit+0x108>
    2906:	87 c0       	rjmp	.+270    	; 0x2a16 <__clockInit+0x216>
    2908:	e6 e0       	ldi	r30, 0x06	; 6
    290a:	f0 e0       	ldi	r31, 0x00	; 0
    290c:	ae 0e       	add	r10, r30
    290e:	bf 1e       	adc	r11, r31
    2910:	f5 01       	movw	r30, r10
    2912:	84 91       	lpm	r24, Z+
    2914:	2a ef       	ldi	r18, 0xFA	; 250
    2916:	3f ef       	ldi	r19, 0xFF	; 255
    2918:	a2 0e       	add	r10, r18
    291a:	b3 1e       	adc	r11, r19
    291c:	88 23       	and	r24, r24
    291e:	31 f4       	brne	.+12     	; 0x292c <__clockInit+0x12c>
    2920:	ef ef       	ldi	r30, 0xFF	; 255
    2922:	ce 2e       	mov	r12, r30
    2924:	d1 2c       	mov	r13, r1
    2926:	e1 2c       	mov	r14, r1
    2928:	f1 2c       	mov	r15, r1
    292a:	06 c0       	rjmp	.+12     	; 0x2938 <__clockInit+0x138>
    292c:	7f ef       	ldi	r23, 0xFF	; 255
    292e:	c7 2e       	mov	r12, r23
    2930:	7f ef       	ldi	r23, 0xFF	; 255
    2932:	d7 2e       	mov	r13, r23
    2934:	e1 2c       	mov	r14, r1
    2936:	f1 2c       	mov	r15, r1
    2938:	6c e0       	ldi	r22, 0x0C	; 12
    293a:	86 2e       	mov	r8, r22
    293c:	91 2c       	mov	r9, r1
    293e:	21 01       	movw	r4, r2
    2940:	66 24       	eor	r6, r6
    2942:	77 24       	eor	r7, r7
    2944:	61 e0       	ldi	r22, 0x01	; 1
    2946:	70 e0       	ldi	r23, 0x00	; 0
    2948:	80 e0       	ldi	r24, 0x00	; 0
    294a:	90 e0       	ldi	r25, 0x00	; 0
    294c:	49 81       	ldd	r20, Y+1	; 0x01
    294e:	5a 81       	ldd	r21, Y+2	; 0x02
    2950:	0e 94 84 0d 	call	0x1b08	; 0x1b08 <ticks_per_ms>
    2954:	6f 5f       	subi	r22, 0xFF	; 255
    2956:	7f 4f       	sbci	r23, 0xFF	; 255
    2958:	8f 4f       	sbci	r24, 0xFF	; 255
    295a:	9f 4f       	sbci	r25, 0xFF	; 255
    295c:	64 0d       	add	r22, r4
    295e:	75 1d       	adc	r23, r5
    2960:	86 1d       	adc	r24, r6
    2962:	97 1d       	adc	r25, r7
    2964:	6c 15       	cp	r22, r12
    2966:	7d 05       	cpc	r23, r13
    2968:	8e 05       	cpc	r24, r14
    296a:	9f 05       	cpc	r25, r15
    296c:	28 f5       	brcc	.+74     	; 0x29b8 <__clockInit+0x1b8>
    296e:	c4 01       	movw	r24, r8
    2970:	01 96       	adiw	r24, 0x01	; 1
    2972:	9c 83       	std	Y+4, r25	; 0x04
    2974:	8b 83       	std	Y+3, r24	; 0x03
    2976:	c5 01       	movw	r24, r10
    2978:	6b 81       	ldd	r22, Y+3	; 0x03
    297a:	7c 81       	ldd	r23, Y+4	; 0x04
    297c:	0e 94 e6 11 	call	0x23cc	; 0x23cc <timerGetBestPrescaler>
    2980:	8c 01       	movw	r16, r24
    2982:	eb 81       	ldd	r30, Y+3	; 0x03
    2984:	fc 81       	ldd	r31, Y+4	; 0x04
    2986:	bf 01       	movw	r22, r30
    2988:	80 e0       	ldi	r24, 0x00	; 0
    298a:	90 e0       	ldi	r25, 0x00	; 0
    298c:	a8 01       	movw	r20, r16
    298e:	0e 94 84 0d 	call	0x1b08	; 0x1b08 <ticks_per_ms>
    2992:	29 81       	ldd	r18, Y+1	; 0x01
    2994:	3a 81       	ldd	r19, Y+2	; 0x02
    2996:	02 17       	cp	r16, r18
    2998:	13 07       	cpc	r17, r19
    299a:	71 f4       	brne	.+28     	; 0x29b8 <__clockInit+0x1b8>
    299c:	c6 16       	cp	r12, r22
    299e:	d7 06       	cpc	r13, r23
    29a0:	e8 06       	cpc	r14, r24
    29a2:	f9 06       	cpc	r15, r25
    29a4:	48 f0       	brcs	.+18     	; 0x29b8 <__clockInit+0x1b8>
    29a6:	46 16       	cp	r4, r22
    29a8:	57 06       	cpc	r5, r23
    29aa:	68 06       	cpc	r6, r24
    29ac:	79 06       	cpc	r7, r25
    29ae:	20 f4       	brcc	.+8      	; 0x29b8 <__clockInit+0x1b8>
    29b0:	1b 01       	movw	r2, r22
    29b2:	8b 80       	ldd	r8, Y+3	; 0x03
    29b4:	9c 80       	ldd	r9, Y+4	; 0x04
    29b6:	c3 cf       	rjmp	.-122    	; 0x293e <__clockInit+0x13e>
    29b8:	b0 92 7b 04 	sts	0x047B, r11
    29bc:	a0 92 7a 04 	sts	0x047A, r10
    29c0:	b4 01       	movw	r22, r8
    29c2:	80 e0       	ldi	r24, 0x00	; 0
    29c4:	90 e0       	ldi	r25, 0x00	; 0
    29c6:	28 ee       	ldi	r18, 0xE8	; 232
    29c8:	33 e0       	ldi	r19, 0x03	; 3
    29ca:	40 e0       	ldi	r20, 0x00	; 0
    29cc:	50 e0       	ldi	r21, 0x00	; 0
    29ce:	0e 94 32 1d 	call	0x3a64	; 0x3a64 <__mulsi3>
    29d2:	60 93 eb 01 	sts	0x01EB, r22
    29d6:	70 93 ec 01 	sts	0x01EC, r23
    29da:	80 93 ed 01 	sts	0x01ED, r24
    29de:	90 93 ee 01 	sts	0x01EE, r25
    29e2:	c5 01       	movw	r24, r10
    29e4:	69 81       	ldd	r22, Y+1	; 0x01
    29e6:	7a 81       	ldd	r23, Y+2	; 0x02
    29e8:	0e 94 46 12 	call	0x248c	; 0x248c <timerSetPrescaler>
    29ec:	80 91 7a 04 	lds	r24, 0x047A
    29f0:	90 91 7b 04 	lds	r25, 0x047B
    29f4:	64 e0       	ldi	r22, 0x04	; 4
    29f6:	0e 94 d5 12 	call	0x25aa	; 0x25aa <timerSetMode>
    29fa:	e0 91 7a 04 	lds	r30, 0x047A
    29fe:	f0 91 7b 04 	lds	r31, 0x047B
    2a02:	77 96       	adiw	r30, 0x17	; 23
    2a04:	85 91       	lpm	r24, Z+
    2a06:	94 91       	lpm	r25, Z+
    2a08:	62 ed       	ldi	r22, 0xD2	; 210
    2a0a:	7d e0       	ldi	r23, 0x0D	; 13
    2a0c:	a1 01       	movw	r20, r2
    2a0e:	20 e0       	ldi	r18, 0x00	; 0
    2a10:	30 e0       	ldi	r19, 0x00	; 0
    2a12:	0e 94 9a 13 	call	0x2734	; 0x2734 <compareAttach>
    2a16:	80 91 75 04 	lds	r24, 0x0475
    2a1a:	88 23       	and	r24, r24
    2a1c:	61 f0       	breq	.+24     	; 0x2a36 <__clockInit+0x236>
    2a1e:	10 92 75 04 	sts	0x0475, r1
    2a22:	0e 94 2d 10 	call	0x205a	; 0x205a <setError>
    2a26:	07 c0       	rjmp	.+14     	; 0x2a36 <__clockInit+0x236>
    2a28:	f6 01       	movw	r30, r12
    2a2a:	39 96       	adiw	r30, 0x09	; 9
    2a2c:	85 91       	lpm	r24, Z+
    2a2e:	94 91       	lpm	r25, Z+
    2a30:	84 fd       	sbrc	r24, 4
    2a32:	1f cf       	rjmp	.-450    	; 0x2872 <__clockInit+0x72>
    2a34:	5e cf       	rjmp	.-324    	; 0x28f2 <__clockInit+0xf2>
    2a36:	0f 90       	pop	r0
    2a38:	0f 90       	pop	r0
    2a3a:	0f 90       	pop	r0
    2a3c:	0f 90       	pop	r0
    2a3e:	cf 91       	pop	r28
    2a40:	df 91       	pop	r29
    2a42:	1f 91       	pop	r17
    2a44:	0f 91       	pop	r16
    2a46:	ff 90       	pop	r15
    2a48:	ef 90       	pop	r14
    2a4a:	df 90       	pop	r13
    2a4c:	cf 90       	pop	r12
    2a4e:	bf 90       	pop	r11
    2a50:	af 90       	pop	r10
    2a52:	9f 90       	pop	r9
    2a54:	8f 90       	pop	r8
    2a56:	7f 90       	pop	r7
    2a58:	6f 90       	pop	r6
    2a5a:	5f 90       	pop	r5
    2a5c:	4f 90       	pop	r4
    2a5e:	3f 90       	pop	r3
    2a60:	2f 90       	pop	r2
    2a62:	08 95       	ret

00002a64 <clockHasElapsedGetOverflow>:
    2a64:	8f 92       	push	r8
    2a66:	9f 92       	push	r9
    2a68:	af 92       	push	r10
    2a6a:	bf 92       	push	r11
    2a6c:	cf 92       	push	r12
    2a6e:	df 92       	push	r13
    2a70:	ef 92       	push	r14
    2a72:	ff 92       	push	r15
    2a74:	0f 93       	push	r16
    2a76:	1f 93       	push	r17
    2a78:	cf 93       	push	r28
    2a7a:	df 93       	push	r29
    2a7c:	6b 01       	movw	r12, r22
    2a7e:	7c 01       	movw	r14, r24
    2a80:	49 01       	movw	r8, r18
    2a82:	5a 01       	movw	r10, r20
    2a84:	e8 01       	movw	r28, r16
    2a86:	0e 94 26 10 	call	0x204c	; 0x204c <clockGetus>
    2a8a:	6c 19       	sub	r22, r12
    2a8c:	7d 09       	sbc	r23, r13
    2a8e:	8e 09       	sbc	r24, r14
    2a90:	9f 09       	sbc	r25, r15
    2a92:	86 16       	cp	r8, r22
    2a94:	97 06       	cpc	r9, r23
    2a96:	a8 06       	cpc	r10, r24
    2a98:	b9 06       	cpc	r11, r25
    2a9a:	50 f4       	brcc	.+20     	; 0x2ab0 <clockHasElapsedGetOverflow+0x4c>
    2a9c:	68 19       	sub	r22, r8
    2a9e:	79 09       	sbc	r23, r9
    2aa0:	8a 09       	sbc	r24, r10
    2aa2:	9b 09       	sbc	r25, r11
    2aa4:	68 83       	st	Y, r22
    2aa6:	79 83       	std	Y+1, r23	; 0x01
    2aa8:	8a 83       	std	Y+2, r24	; 0x02
    2aaa:	9b 83       	std	Y+3, r25	; 0x03
    2aac:	8f ef       	ldi	r24, 0xFF	; 255
    2aae:	09 c0       	rjmp	.+18     	; 0x2ac2 <clockHasElapsedGetOverflow+0x5e>
    2ab0:	86 1a       	sub	r8, r22
    2ab2:	97 0a       	sbc	r9, r23
    2ab4:	a8 0a       	sbc	r10, r24
    2ab6:	b9 0a       	sbc	r11, r25
    2ab8:	88 82       	st	Y, r8
    2aba:	99 82       	std	Y+1, r9	; 0x01
    2abc:	aa 82       	std	Y+2, r10	; 0x02
    2abe:	bb 82       	std	Y+3, r11	; 0x03
    2ac0:	80 e0       	ldi	r24, 0x00	; 0
    2ac2:	df 91       	pop	r29
    2ac4:	cf 91       	pop	r28
    2ac6:	1f 91       	pop	r17
    2ac8:	0f 91       	pop	r16
    2aca:	ff 90       	pop	r15
    2acc:	ef 90       	pop	r14
    2ace:	df 90       	pop	r13
    2ad0:	cf 90       	pop	r12
    2ad2:	bf 90       	pop	r11
    2ad4:	af 90       	pop	r10
    2ad6:	9f 90       	pop	r9
    2ad8:	8f 90       	pop	r8
    2ada:	08 95       	ret

00002adc <clockWaitus>:
    2adc:	af 92       	push	r10
    2ade:	bf 92       	push	r11
    2ae0:	cf 92       	push	r12
    2ae2:	df 92       	push	r13
    2ae4:	ef 92       	push	r14
    2ae6:	ff 92       	push	r15
    2ae8:	0f 93       	push	r16
    2aea:	1f 93       	push	r17
    2aec:	5b 01       	movw	r10, r22
    2aee:	6c 01       	movw	r12, r24
    2af0:	0e 94 26 10 	call	0x204c	; 0x204c <clockGetus>
    2af4:	7b 01       	movw	r14, r22
    2af6:	8c 01       	movw	r16, r24
    2af8:	01 c0       	rjmp	.+2      	; 0x2afc <clockWaitus+0x20>
    2afa:	00 00       	nop
    2afc:	0e 94 26 10 	call	0x204c	; 0x204c <clockGetus>
    2b00:	6e 19       	sub	r22, r14
    2b02:	7f 09       	sbc	r23, r15
    2b04:	80 0b       	sbc	r24, r16
    2b06:	91 0b       	sbc	r25, r17
    2b08:	6a 15       	cp	r22, r10
    2b0a:	7b 05       	cpc	r23, r11
    2b0c:	8c 05       	cpc	r24, r12
    2b0e:	9d 05       	cpc	r25, r13
    2b10:	a0 f3       	brcs	.-24     	; 0x2afa <clockWaitus+0x1e>
    2b12:	1f 91       	pop	r17
    2b14:	0f 91       	pop	r16
    2b16:	ff 90       	pop	r15
    2b18:	ef 90       	pop	r14
    2b1a:	df 90       	pop	r13
    2b1c:	cf 90       	pop	r12
    2b1e:	bf 90       	pop	r11
    2b20:	af 90       	pop	r10
    2b22:	08 95       	ret

00002b24 <clockWaitms>:
    2b24:	28 ee       	ldi	r18, 0xE8	; 232
    2b26:	33 e0       	ldi	r19, 0x03	; 3
    2b28:	40 e0       	ldi	r20, 0x00	; 0
    2b2a:	50 e0       	ldi	r21, 0x00	; 0
    2b2c:	0e 94 32 1d 	call	0x3a64	; 0x3a64 <__mulsi3>
    2b30:	0e 94 6e 15 	call	0x2adc	; 0x2adc <clockWaitus>
    2b34:	08 95       	ret

00002b36 <delay_ms>:
    2b36:	9b 01       	movw	r18, r22
    2b38:	ac 01       	movw	r20, r24
    2b3a:	80 91 7a 04 	lds	r24, 0x047A
    2b3e:	90 91 7b 04 	lds	r25, 0x047B
    2b42:	89 2b       	or	r24, r25
    2b44:	29 f0       	breq	.+10     	; 0x2b50 <delay_ms+0x1a>
    2b46:	ca 01       	movw	r24, r20
    2b48:	b9 01       	movw	r22, r18
    2b4a:	0e 94 92 15 	call	0x2b24	; 0x2b24 <clockWaitms>
    2b4e:	08 95       	ret
    2b50:	ca 01       	movw	r24, r20
    2b52:	b9 01       	movw	r22, r18
    2b54:	41 e0       	ldi	r20, 0x01	; 1
    2b56:	50 e0       	ldi	r21, 0x00	; 0
    2b58:	0e 94 84 0d 	call	0x1b08	; 0x1b08 <ticks_per_ms>
    2b5c:	0e 94 9e 0d 	call	0x1b3c	; 0x1b3c <delay_cycles>
    2b60:	08 95       	ret

00002b62 <delay_us>:
    2b62:	9b 01       	movw	r18, r22
    2b64:	ac 01       	movw	r20, r24
    2b66:	80 91 7a 04 	lds	r24, 0x047A
    2b6a:	90 91 7b 04 	lds	r25, 0x047B
    2b6e:	89 2b       	or	r24, r25
    2b70:	51 f0       	breq	.+20     	; 0x2b86 <delay_us+0x24>
    2b72:	25 36       	cpi	r18, 0x65	; 101
    2b74:	31 05       	cpc	r19, r1
    2b76:	41 05       	cpc	r20, r1
    2b78:	51 05       	cpc	r21, r1
    2b7a:	28 f0       	brcs	.+10     	; 0x2b86 <delay_us+0x24>
    2b7c:	ca 01       	movw	r24, r20
    2b7e:	b9 01       	movw	r22, r18
    2b80:	0e 94 6e 15 	call	0x2adc	; 0x2adc <clockWaitus>
    2b84:	08 95       	ret
    2b86:	ca 01       	movw	r24, r20
    2b88:	b9 01       	movw	r22, r18
    2b8a:	48 ee       	ldi	r20, 0xE8	; 232
    2b8c:	53 e0       	ldi	r21, 0x03	; 3
    2b8e:	0e 94 84 0d 	call	0x1b08	; 0x1b08 <ticks_per_ms>
    2b92:	0e 94 9e 0d 	call	0x1b3c	; 0x1b3c <delay_cycles>
    2b96:	08 95       	ret

00002b98 <clockHasElapsed>:
    2b98:	af 92       	push	r10
    2b9a:	bf 92       	push	r11
    2b9c:	cf 92       	push	r12
    2b9e:	df 92       	push	r13
    2ba0:	ef 92       	push	r14
    2ba2:	ff 92       	push	r15
    2ba4:	0f 93       	push	r16
    2ba6:	1f 93       	push	r17
    2ba8:	7b 01       	movw	r14, r22
    2baa:	8c 01       	movw	r16, r24
    2bac:	59 01       	movw	r10, r18
    2bae:	6a 01       	movw	r12, r20
    2bb0:	0e 94 26 10 	call	0x204c	; 0x204c <clockGetus>
    2bb4:	6e 19       	sub	r22, r14
    2bb6:	7f 09       	sbc	r23, r15
    2bb8:	80 0b       	sbc	r24, r16
    2bba:	91 0b       	sbc	r25, r17
    2bbc:	6a 15       	cp	r22, r10
    2bbe:	7b 05       	cpc	r23, r11
    2bc0:	8c 05       	cpc	r24, r12
    2bc2:	9d 05       	cpc	r25, r13
    2bc4:	10 f4       	brcc	.+4      	; 0x2bca <clockHasElapsed+0x32>
    2bc6:	80 e0       	ldi	r24, 0x00	; 0
    2bc8:	01 c0       	rjmp	.+2      	; 0x2bcc <clockHasElapsed+0x34>
    2bca:	8f ef       	ldi	r24, 0xFF	; 255
    2bcc:	1f 91       	pop	r17
    2bce:	0f 91       	pop	r16
    2bd0:	ff 90       	pop	r15
    2bd2:	ef 90       	pop	r14
    2bd4:	df 90       	pop	r13
    2bd6:	cf 90       	pop	r12
    2bd8:	bf 90       	pop	r11
    2bda:	af 90       	pop	r10
    2bdc:	08 95       	ret

00002bde <timerCaptureDetach>:
    2bde:	ef 92       	push	r14
    2be0:	ff 92       	push	r15
    2be2:	0f 93       	push	r16
    2be4:	1f 93       	push	r17
    2be6:	8c 01       	movw	r16, r24
    2be8:	fc 01       	movw	r30, r24
    2bea:	e5 90       	lpm	r14, Z+
    2bec:	f4 90       	lpm	r15, Z+
    2bee:	81 96       	adiw	r24, 0x21	; 33
    2bf0:	0e 94 d5 08 	call	0x11aa	; 0x11aa <__portMaskClear>
    2bf4:	c8 01       	movw	r24, r16
    2bf6:	84 96       	adiw	r24, 0x24	; 36
    2bf8:	0e 94 bc 08 	call	0x1178	; 0x1178 <__portMaskSet>
    2bfc:	f7 01       	movw	r30, r14
    2bfe:	17 82       	std	Z+7, r1	; 0x07
    2c00:	16 82       	std	Z+6, r1	; 0x06
    2c02:	1f 91       	pop	r17
    2c04:	0f 91       	pop	r16
    2c06:	ff 90       	pop	r15
    2c08:	ef 90       	pop	r14
    2c0a:	08 95       	ret

00002c0c <timerCaptureAttach>:
    2c0c:	af 92       	push	r10
    2c0e:	bf 92       	push	r11
    2c10:	cf 92       	push	r12
    2c12:	df 92       	push	r13
    2c14:	ef 92       	push	r14
    2c16:	ff 92       	push	r15
    2c18:	0f 93       	push	r16
    2c1a:	1f 93       	push	r17
    2c1c:	cf 93       	push	r28
    2c1e:	df 93       	push	r29
    2c20:	8c 01       	movw	r16, r24
    2c22:	7b 01       	movw	r14, r22
    2c24:	6a 01       	movw	r12, r20
    2c26:	b2 2e       	mov	r11, r18
    2c28:	fc 01       	movw	r30, r24
    2c2a:	c5 91       	lpm	r28, Z+
    2c2c:	d4 91       	lpm	r29, Z+
    2c2e:	8e 81       	ldd	r24, Y+6	; 0x06
    2c30:	9f 81       	ldd	r25, Y+7	; 0x07
    2c32:	89 2b       	or	r24, r25
    2c34:	19 f0       	breq	.+6      	; 0x2c3c <timerCaptureAttach+0x30>
    2c36:	8a ee       	ldi	r24, 0xEA	; 234
    2c38:	0e 94 2d 10 	call	0x205a	; 0x205a <setError>
    2c3c:	af b6       	in	r10, 0x3f	; 63
    2c3e:	f8 94       	cli
    2c40:	ff 82       	std	Y+7, r15	; 0x07
    2c42:	ee 82       	std	Y+6, r14	; 0x06
    2c44:	d9 86       	std	Y+9, r13	; 0x09
    2c46:	c8 86       	std	Y+8, r12	; 0x08
    2c48:	c8 01       	movw	r24, r16
    2c4a:	87 96       	adiw	r24, 0x27	; 39
    2c4c:	bb 20       	and	r11, r11
    2c4e:	19 f0       	breq	.+6      	; 0x2c56 <timerCaptureAttach+0x4a>
    2c50:	0e 94 bc 08 	call	0x1178	; 0x1178 <__portMaskSet>
    2c54:	02 c0       	rjmp	.+4      	; 0x2c5a <timerCaptureAttach+0x4e>
    2c56:	0e 94 d5 08 	call	0x11aa	; 0x11aa <__portMaskClear>
    2c5a:	c8 01       	movw	r24, r16
    2c5c:	84 96       	adiw	r24, 0x24	; 36
    2c5e:	0e 94 bc 08 	call	0x1178	; 0x1178 <__portMaskSet>
    2c62:	c8 01       	movw	r24, r16
    2c64:	81 96       	adiw	r24, 0x21	; 33
    2c66:	0e 94 bc 08 	call	0x1178	; 0x1178 <__portMaskSet>
    2c6a:	af be       	out	0x3f, r10	; 63
    2c6c:	df 91       	pop	r29
    2c6e:	cf 91       	pop	r28
    2c70:	1f 91       	pop	r17
    2c72:	0f 91       	pop	r16
    2c74:	ff 90       	pop	r15
    2c76:	ef 90       	pop	r14
    2c78:	df 90       	pop	r13
    2c7a:	cf 90       	pop	r12
    2c7c:	bf 90       	pop	r11
    2c7e:	af 90       	pop	r10
    2c80:	08 95       	ret

00002c82 <compareIsInUse>:
    2c82:	9c 01       	movw	r18, r24
    2c84:	fc 01       	movw	r30, r24
    2c86:	a5 91       	lpm	r26, Z+
    2c88:	b4 91       	lpm	r27, Z+
    2c8a:	8d 91       	ld	r24, X+
    2c8c:	9c 91       	ld	r25, X
    2c8e:	89 2b       	or	r24, r25
    2c90:	11 f5       	brne	.+68     	; 0x2cd6 <compareIsInUse+0x54>
    2c92:	2e 5f       	subi	r18, 0xFE	; 254
    2c94:	3f 4f       	sbci	r19, 0xFF	; 255
    2c96:	f9 01       	movw	r30, r18
    2c98:	94 91       	lpm	r25, Z+
    2c9a:	22 50       	subi	r18, 0x02	; 2
    2c9c:	30 40       	sbci	r19, 0x00	; 0
    2c9e:	8c e2       	ldi	r24, 0x2C	; 44
    2ca0:	98 9f       	mul	r25, r24
    2ca2:	b0 01       	movw	r22, r0
    2ca4:	11 24       	eor	r1, r1
    2ca6:	6f 5d       	subi	r22, 0xDF	; 223
    2ca8:	7e 4f       	sbci	r23, 0xFE	; 254
    2caa:	ab 01       	movw	r20, r22
    2cac:	49 5e       	subi	r20, 0xE9	; 233
    2cae:	5f 4f       	sbci	r21, 0xFF	; 255
    2cb0:	fa 01       	movw	r30, r20
    2cb2:	85 91       	lpm	r24, Z+
    2cb4:	94 91       	lpm	r25, Z+
    2cb6:	28 17       	cp	r18, r24
    2cb8:	39 07       	cpc	r19, r25
    2cba:	79 f4       	brne	.+30     	; 0x2cda <compareIsInUse+0x58>
    2cbc:	fb 01       	movw	r30, r22
    2cbe:	a5 91       	lpm	r26, Z+
    2cc0:	b4 91       	lpm	r27, Z+
    2cc2:	1a 96       	adiw	r26, 0x0a	; 10
    2cc4:	8c 91       	ld	r24, X
    2cc6:	84 30       	cpi	r24, 0x04	; 4
    2cc8:	31 f0       	breq	.+12     	; 0x2cd6 <compareIsInUse+0x54>
    2cca:	89 30       	cpi	r24, 0x09	; 9
    2ccc:	21 f0       	breq	.+8      	; 0x2cd6 <compareIsInUse+0x54>
    2cce:	8b 30       	cpi	r24, 0x0B	; 11
    2cd0:	11 f0       	breq	.+4      	; 0x2cd6 <compareIsInUse+0x54>
    2cd2:	8f 30       	cpi	r24, 0x0F	; 15
    2cd4:	11 f4       	brne	.+4      	; 0x2cda <compareIsInUse+0x58>
    2cd6:	8f ef       	ldi	r24, 0xFF	; 255
    2cd8:	08 95       	ret
    2cda:	80 e0       	ldi	r24, 0x00	; 0
    2cdc:	08 95       	ret

00002cde <compareFromIOPin>:
    2cde:	bf 92       	push	r11
    2ce0:	cf 92       	push	r12
    2ce2:	df 92       	push	r13
    2ce4:	ef 92       	push	r14
    2ce6:	ff 92       	push	r15
    2ce8:	0f 93       	push	r16
    2cea:	1f 93       	push	r17
    2cec:	cf 93       	push	r28
    2cee:	df 93       	push	r29
    2cf0:	6c 01       	movw	r12, r24
    2cf2:	b0 90 08 01 	lds	r11, 0x0108
    2cf6:	21 e2       	ldi	r18, 0x21	; 33
    2cf8:	31 e0       	ldi	r19, 0x01	; 1
    2cfa:	90 e0       	ldi	r25, 0x00	; 0
    2cfc:	c0 e0       	ldi	r28, 0x00	; 0
    2cfe:	d0 e0       	ldi	r29, 0x00	; 0
    2d00:	2d c0       	rjmp	.+90     	; 0x2d5c <compareFromIOPin+0x7e>
    2d02:	28 5f       	subi	r18, 0xF8	; 248
    2d04:	3f 4f       	sbci	r19, 0xFF	; 255
    2d06:	f9 01       	movw	r30, r18
    2d08:	e4 90       	lpm	r14, Z+
    2d0a:	28 50       	subi	r18, 0x08	; 8
    2d0c:	30 40       	sbci	r19, 0x00	; 0
    2d0e:	f9 01       	movw	r30, r18
    2d10:	77 96       	adiw	r30, 0x17	; 23
    2d12:	2a 5f       	subi	r18, 0xFA	; 250
    2d14:	3f 4f       	sbci	r19, 0xFF	; 255
    2d16:	80 e0       	ldi	r24, 0x00	; 0
    2d18:	a0 e0       	ldi	r26, 0x00	; 0
    2d1a:	b0 e0       	ldi	r27, 0x00	; 0
    2d1c:	05 91       	lpm	r16, Z+
    2d1e:	14 91       	lpm	r17, Z+
    2d20:	f9 01       	movw	r30, r18
    2d22:	f4 90       	lpm	r15, Z+
    2d24:	26 50       	subi	r18, 0x06	; 6
    2d26:	30 40       	sbci	r19, 0x00	; 0
    2d28:	14 c0       	rjmp	.+40     	; 0x2d52 <compareFromIOPin+0x74>
    2d2a:	b8 01       	movw	r22, r16
    2d2c:	6a 0f       	add	r22, r26
    2d2e:	7b 1f       	adc	r23, r27
    2d30:	fb 01       	movw	r30, r22
    2d32:	3e 96       	adiw	r30, 0x0e	; 14
    2d34:	45 91       	lpm	r20, Z+
    2d36:	54 91       	lpm	r21, Z+
    2d38:	41 15       	cp	r20, r1
    2d3a:	51 05       	cpc	r21, r1
    2d3c:	41 f0       	breq	.+16     	; 0x2d4e <compareFromIOPin+0x70>
    2d3e:	4c 15       	cp	r20, r12
    2d40:	5d 05       	cpc	r21, r13
    2d42:	29 f4       	brne	.+10     	; 0x2d4e <compareFromIOPin+0x70>
    2d44:	ff 20       	and	r15, r15
    2d46:	11 f0       	breq	.+4      	; 0x2d4c <compareFromIOPin+0x6e>
    2d48:	eb 01       	movw	r28, r22
    2d4a:	0a c0       	rjmp	.+20     	; 0x2d60 <compareFromIOPin+0x82>
    2d4c:	eb 01       	movw	r28, r22
    2d4e:	8f 5f       	subi	r24, 0xFF	; 255
    2d50:	50 96       	adiw	r26, 0x10	; 16
    2d52:	8e 15       	cp	r24, r14
    2d54:	50 f3       	brcs	.-44     	; 0x2d2a <compareFromIOPin+0x4c>
    2d56:	9f 5f       	subi	r25, 0xFF	; 255
    2d58:	24 5d       	subi	r18, 0xD4	; 212
    2d5a:	3f 4f       	sbci	r19, 0xFF	; 255
    2d5c:	9b 15       	cp	r25, r11
    2d5e:	88 f2       	brcs	.-94     	; 0x2d02 <compareFromIOPin+0x24>
    2d60:	ce 01       	movw	r24, r28
    2d62:	df 91       	pop	r29
    2d64:	cf 91       	pop	r28
    2d66:	1f 91       	pop	r17
    2d68:	0f 91       	pop	r16
    2d6a:	ff 90       	pop	r15
    2d6c:	ef 90       	pop	r14
    2d6e:	df 90       	pop	r13
    2d70:	cf 90       	pop	r12
    2d72:	bf 90       	pop	r11
    2d74:	08 95       	ret

00002d76 <timerOverflowAttach>:
    2d76:	df 92       	push	r13
    2d78:	ef 92       	push	r14
    2d7a:	ff 92       	push	r15
    2d7c:	0f 93       	push	r16
    2d7e:	1f 93       	push	r17
    2d80:	cf 93       	push	r28
    2d82:	df 93       	push	r29
    2d84:	ec 01       	movw	r28, r24
    2d86:	8b 01       	movw	r16, r22
    2d88:	7a 01       	movw	r14, r20
    2d8a:	df b6       	in	r13, 0x3f	; 63
    2d8c:	f8 94       	cli
    2d8e:	61 15       	cp	r22, r1
    2d90:	71 05       	cpc	r23, r1
    2d92:	61 f0       	breq	.+24     	; 0x2dac <timerOverflowAttach+0x36>
    2d94:	fc 01       	movw	r30, r24
    2d96:	a5 91       	lpm	r26, Z+
    2d98:	b4 91       	lpm	r27, Z+
    2d9a:	12 96       	adiw	r26, 0x02	; 2
    2d9c:	8d 91       	ld	r24, X+
    2d9e:	9c 91       	ld	r25, X
    2da0:	13 97       	sbiw	r26, 0x03	; 3
    2da2:	89 2b       	or	r24, r25
    2da4:	19 f0       	breq	.+6      	; 0x2dac <timerOverflowAttach+0x36>
    2da6:	8c ef       	ldi	r24, 0xFC	; 252
    2da8:	0e 94 2d 10 	call	0x205a	; 0x205a <setError>
    2dac:	ce 01       	movw	r24, r28
    2dae:	fe 01       	movw	r30, r28
    2db0:	a5 91       	lpm	r26, Z+
    2db2:	b4 91       	lpm	r27, Z+
    2db4:	13 96       	adiw	r26, 0x03	; 3
    2db6:	1c 93       	st	X, r17
    2db8:	0e 93       	st	-X, r16
    2dba:	12 97       	sbiw	r26, 0x02	; 2
    2dbc:	15 96       	adiw	r26, 0x05	; 5
    2dbe:	fc 92       	st	X, r15
    2dc0:	ee 92       	st	-X, r14
    2dc2:	14 97       	sbiw	r26, 0x04	; 4
    2dc4:	49 96       	adiw	r24, 0x19	; 25
    2dc6:	01 2b       	or	r16, r17
    2dc8:	19 f0       	breq	.+6      	; 0x2dd0 <timerOverflowAttach+0x5a>
    2dca:	0e 94 bc 08 	call	0x1178	; 0x1178 <__portMaskSet>
    2dce:	02 c0       	rjmp	.+4      	; 0x2dd4 <timerOverflowAttach+0x5e>
    2dd0:	0e 94 d5 08 	call	0x11aa	; 0x11aa <__portMaskClear>
    2dd4:	df be       	out	0x3f, r13	; 63
    2dd6:	df 91       	pop	r29
    2dd8:	cf 91       	pop	r28
    2dda:	1f 91       	pop	r17
    2ddc:	0f 91       	pop	r16
    2dde:	ff 90       	pop	r15
    2de0:	ef 90       	pop	r14
    2de2:	df 90       	pop	r13
    2de4:	08 95       	ret

00002de6 <__timerPWMGetDeciHertz>:
    2de6:	cf 92       	push	r12
    2de8:	df 92       	push	r13
    2dea:	ef 92       	push	r14
    2dec:	ff 92       	push	r15
    2dee:	0f 93       	push	r16
    2df0:	df 93       	push	r29
    2df2:	cf 93       	push	r28
    2df4:	00 d0       	rcall	.+0      	; 0x2df6 <__timerPWMGetDeciHertz+0x10>
    2df6:	00 d0       	rcall	.+0      	; 0x2df8 <__timerPWMGetDeciHertz+0x12>
    2df8:	cd b7       	in	r28, 0x3d	; 61
    2dfa:	de b7       	in	r29, 0x3e	; 62
    2dfc:	08 2f       	mov	r16, r24
    2dfe:	7b 01       	movw	r14, r22
    2e00:	d4 2e       	mov	r13, r20
    2e02:	c5 2e       	mov	r12, r21
    2e04:	60 91 00 01 	lds	r22, 0x0100
    2e08:	70 91 01 01 	lds	r23, 0x0101
    2e0c:	80 91 02 01 	lds	r24, 0x0102
    2e10:	90 91 03 01 	lds	r25, 0x0103
    2e14:	2a e0       	ldi	r18, 0x0A	; 10
    2e16:	30 e0       	ldi	r19, 0x00	; 0
    2e18:	40 e0       	ldi	r20, 0x00	; 0
    2e1a:	50 e0       	ldi	r21, 0x00	; 0
    2e1c:	0e 94 32 1d 	call	0x3a64	; 0x3a64 <__mulsi3>
    2e20:	97 01       	movw	r18, r14
    2e22:	40 e0       	ldi	r20, 0x00	; 0
    2e24:	50 e0       	ldi	r21, 0x00	; 0
    2e26:	29 83       	std	Y+1, r18	; 0x01
    2e28:	3a 83       	std	Y+2, r19	; 0x02
    2e2a:	4b 83       	std	Y+3, r20	; 0x03
    2e2c:	5c 83       	std	Y+4, r21	; 0x04
    2e2e:	0e 94 65 1d 	call	0x3aca	; 0x3aca <__udivmodsi4>
    2e32:	b9 01       	movw	r22, r18
    2e34:	fa 01       	movw	r30, r20
    2e36:	06 30       	cpi	r16, 0x06	; 6
    2e38:	e1 f1       	breq	.+120    	; 0x2eb2 <__timerPWMGetDeciHertz+0xcc>
    2e3a:	07 30       	cpi	r16, 0x07	; 7
    2e3c:	60 f4       	brcc	.+24     	; 0x2e56 <__timerPWMGetDeciHertz+0x70>
    2e3e:	02 30       	cpi	r16, 0x02	; 2
    2e40:	29 f1       	breq	.+74     	; 0x2e8c <__timerPWMGetDeciHertz+0xa6>
    2e42:	03 30       	cpi	r16, 0x03	; 3
    2e44:	18 f4       	brcc	.+6      	; 0x2e4c <__timerPWMGetDeciHertz+0x66>
    2e46:	01 30       	cpi	r16, 0x01	; 1
    2e48:	71 f4       	brne	.+28     	; 0x2e66 <__timerPWMGetDeciHertz+0x80>
    2e4a:	15 c0       	rjmp	.+42     	; 0x2e76 <__timerPWMGetDeciHertz+0x90>
    2e4c:	03 30       	cpi	r16, 0x03	; 3
    2e4e:	09 f1       	breq	.+66     	; 0x2e92 <__timerPWMGetDeciHertz+0xac>
    2e50:	05 30       	cpi	r16, 0x05	; 5
    2e52:	49 f4       	brne	.+18     	; 0x2e66 <__timerPWMGetDeciHertz+0x80>
    2e54:	0d c0       	rjmp	.+26     	; 0x2e70 <__timerPWMGetDeciHertz+0x8a>
    2e56:	08 30       	cpi	r16, 0x08	; 8
    2e58:	a9 f0       	breq	.+42     	; 0x2e84 <__timerPWMGetDeciHertz+0x9e>
    2e5a:	08 30       	cpi	r16, 0x08	; 8
    2e5c:	68 f1       	brcs	.+90     	; 0x2eb8 <__timerPWMGetDeciHertz+0xd2>
    2e5e:	0a 30       	cpi	r16, 0x0A	; 10
    2e60:	89 f0       	breq	.+34     	; 0x2e84 <__timerPWMGetDeciHertz+0x9e>
    2e62:	0e 30       	cpi	r16, 0x0E	; 14
    2e64:	59 f0       	breq	.+22     	; 0x2e7c <__timerPWMGetDeciHertz+0x96>
    2e66:	20 e0       	ldi	r18, 0x00	; 0
    2e68:	30 e0       	ldi	r19, 0x00	; 0
    2e6a:	40 e0       	ldi	r20, 0x00	; 0
    2e6c:	50 e0       	ldi	r21, 0x00	; 0
    2e6e:	33 c0       	rjmp	.+102    	; 0x2ed6 <__timerPWMGetDeciHertz+0xf0>
    2e70:	2f ef       	ldi	r18, 0xFF	; 255
    2e72:	30 e0       	ldi	r19, 0x00	; 0
    2e74:	23 c0       	rjmp	.+70     	; 0x2ebc <__timerPWMGetDeciHertz+0xd6>
    2e76:	2f ef       	ldi	r18, 0xFF	; 255
    2e78:	30 e0       	ldi	r19, 0x00	; 0
    2e7a:	0d c0       	rjmp	.+26     	; 0x2e96 <__timerPWMGetDeciHertz+0xb0>
    2e7c:	8d 2d       	mov	r24, r13
    2e7e:	9c 2d       	mov	r25, r12
    2e80:	9c 01       	movw	r18, r24
    2e82:	1c c0       	rjmp	.+56     	; 0x2ebc <__timerPWMGetDeciHertz+0xd6>
    2e84:	8d 2d       	mov	r24, r13
    2e86:	9c 2d       	mov	r25, r12
    2e88:	9c 01       	movw	r18, r24
    2e8a:	05 c0       	rjmp	.+10     	; 0x2e96 <__timerPWMGetDeciHertz+0xb0>
    2e8c:	2f ef       	ldi	r18, 0xFF	; 255
    2e8e:	31 e0       	ldi	r19, 0x01	; 1
    2e90:	02 c0       	rjmp	.+4      	; 0x2e96 <__timerPWMGetDeciHertz+0xb0>
    2e92:	2f ef       	ldi	r18, 0xFF	; 255
    2e94:	33 e0       	ldi	r19, 0x03	; 3
    2e96:	40 e0       	ldi	r20, 0x00	; 0
    2e98:	50 e0       	ldi	r21, 0x00	; 0
    2e9a:	cf 01       	movw	r24, r30
    2e9c:	0e 94 65 1d 	call	0x3aca	; 0x3aca <__udivmodsi4>
    2ea0:	c9 01       	movw	r24, r18
    2ea2:	da 01       	movw	r26, r20
    2ea4:	9c 01       	movw	r18, r24
    2ea6:	ad 01       	movw	r20, r26
    2ea8:	56 95       	lsr	r21
    2eaa:	47 95       	ror	r20
    2eac:	37 95       	ror	r19
    2eae:	27 95       	ror	r18
    2eb0:	12 c0       	rjmp	.+36     	; 0x2ed6 <__timerPWMGetDeciHertz+0xf0>
    2eb2:	2f ef       	ldi	r18, 0xFF	; 255
    2eb4:	31 e0       	ldi	r19, 0x01	; 1
    2eb6:	02 c0       	rjmp	.+4      	; 0x2ebc <__timerPWMGetDeciHertz+0xd6>
    2eb8:	2f ef       	ldi	r18, 0xFF	; 255
    2eba:	33 e0       	ldi	r19, 0x03	; 3
    2ebc:	40 e0       	ldi	r20, 0x00	; 0
    2ebe:	50 e0       	ldi	r21, 0x00	; 0
    2ec0:	2f 5f       	subi	r18, 0xFF	; 255
    2ec2:	3f 4f       	sbci	r19, 0xFF	; 255
    2ec4:	4f 4f       	sbci	r20, 0xFF	; 255
    2ec6:	5f 4f       	sbci	r21, 0xFF	; 255
    2ec8:	cf 01       	movw	r24, r30
    2eca:	0e 94 65 1d 	call	0x3aca	; 0x3aca <__udivmodsi4>
    2ece:	c9 01       	movw	r24, r18
    2ed0:	da 01       	movw	r26, r20
    2ed2:	9c 01       	movw	r18, r24
    2ed4:	ad 01       	movw	r20, r26
    2ed6:	b9 01       	movw	r22, r18
    2ed8:	ca 01       	movw	r24, r20
    2eda:	0f 90       	pop	r0
    2edc:	0f 90       	pop	r0
    2ede:	0f 90       	pop	r0
    2ee0:	0f 90       	pop	r0
    2ee2:	cf 91       	pop	r28
    2ee4:	df 91       	pop	r29
    2ee6:	0f 91       	pop	r16
    2ee8:	ff 90       	pop	r15
    2eea:	ef 90       	pop	r14
    2eec:	df 90       	pop	r13
    2eee:	cf 90       	pop	r12
    2ef0:	08 95       	ret

00002ef2 <TimerGetPwmDeciHertz>:
    2ef2:	cf 93       	push	r28
    2ef4:	df 93       	push	r29
    2ef6:	9c 01       	movw	r18, r24
    2ef8:	04 96       	adiw	r24, 0x04	; 4
    2efa:	fc 01       	movw	r30, r24
    2efc:	a5 91       	lpm	r26, Z+
    2efe:	b4 91       	lpm	r27, Z+
    2f00:	8c 91       	ld	r24, X
    2f02:	90 e0       	ldi	r25, 0x00	; 0
    2f04:	87 70       	andi	r24, 0x07	; 7
    2f06:	90 70       	andi	r25, 0x00	; 0
    2f08:	89 2b       	or	r24, r25
    2f0a:	29 f4       	brne	.+10     	; 0x2f16 <TimerGetPwmDeciHertz+0x24>
    2f0c:	20 e0       	ldi	r18, 0x00	; 0
    2f0e:	30 e0       	ldi	r19, 0x00	; 0
    2f10:	40 e0       	ldi	r20, 0x00	; 0
    2f12:	50 e0       	ldi	r21, 0x00	; 0
    2f14:	21 c0       	rjmp	.+66     	; 0x2f58 <TimerGetPwmDeciHertz+0x66>
    2f16:	f9 01       	movw	r30, r18
    2f18:	c5 91       	lpm	r28, Z+
    2f1a:	d4 91       	lpm	r29, Z+
    2f1c:	aa 85       	ldd	r26, Y+10	; 0x0a
    2f1e:	68 81       	ld	r22, Y
    2f20:	79 81       	ldd	r23, Y+1	; 0x01
    2f22:	81 e0       	ldi	r24, 0x01	; 1
    2f24:	90 e0       	ldi	r25, 0x00	; 0
    2f26:	0a 2e       	mov	r0, r26
    2f28:	02 c0       	rjmp	.+4      	; 0x2f2e <TimerGetPwmDeciHertz+0x3c>
    2f2a:	88 0f       	add	r24, r24
    2f2c:	99 1f       	adc	r25, r25
    2f2e:	0a 94       	dec	r0
    2f30:	e2 f7       	brpl	.-8      	; 0x2f2a <TimerGetPwmDeciHertz+0x38>
    2f32:	80 70       	andi	r24, 0x00	; 0
    2f34:	95 75       	andi	r25, 0x55	; 85
    2f36:	89 2b       	or	r24, r25
    2f38:	19 f4       	brne	.+6      	; 0x2f40 <TimerGetPwmDeciHertz+0x4e>
    2f3a:	40 e0       	ldi	r20, 0x00	; 0
    2f3c:	50 e0       	ldi	r21, 0x00	; 0
    2f3e:	07 c0       	rjmp	.+14     	; 0x2f4e <TimerGetPwmDeciHertz+0x5c>
    2f40:	c9 01       	movw	r24, r18
    2f42:	4f 96       	adiw	r24, 0x1f	; 31
    2f44:	fc 01       	movw	r30, r24
    2f46:	c5 91       	lpm	r28, Z+
    2f48:	d4 91       	lpm	r29, Z+
    2f4a:	48 81       	ld	r20, Y
    2f4c:	59 81       	ldd	r21, Y+1	; 0x01
    2f4e:	8a 2f       	mov	r24, r26
    2f50:	0e 94 f3 16 	call	0x2de6	; 0x2de6 <__timerPWMGetDeciHertz>
    2f54:	9b 01       	movw	r18, r22
    2f56:	ac 01       	movw	r20, r24
    2f58:	b9 01       	movw	r22, r18
    2f5a:	ca 01       	movw	r24, r20
    2f5c:	df 91       	pop	r29
    2f5e:	cf 91       	pop	r28
    2f60:	08 95       	ret

00002f62 <timerCalcPwm>:
    2f62:	2f 92       	push	r2
    2f64:	3f 92       	push	r3
    2f66:	4f 92       	push	r4
    2f68:	5f 92       	push	r5
    2f6a:	6f 92       	push	r6
    2f6c:	7f 92       	push	r7
    2f6e:	8f 92       	push	r8
    2f70:	9f 92       	push	r9
    2f72:	af 92       	push	r10
    2f74:	bf 92       	push	r11
    2f76:	cf 92       	push	r12
    2f78:	df 92       	push	r13
    2f7a:	ef 92       	push	r14
    2f7c:	ff 92       	push	r15
    2f7e:	0f 93       	push	r16
    2f80:	1f 93       	push	r17
    2f82:	df 93       	push	r29
    2f84:	cf 93       	push	r28
    2f86:	cd b7       	in	r28, 0x3d	; 61
    2f88:	de b7       	in	r29, 0x3e	; 62
    2f8a:	6e 97       	sbiw	r28, 0x1e	; 30
    2f8c:	0f b6       	in	r0, 0x3f	; 63
    2f8e:	f8 94       	cli
    2f90:	de bf       	out	0x3e, r29	; 62
    2f92:	0f be       	out	0x3f, r0	; 63
    2f94:	cd bf       	out	0x3d, r28	; 61
    2f96:	3c 01       	movw	r6, r24
    2f98:	4a 01       	movw	r8, r20
    2f9a:	5b 01       	movw	r10, r22
    2f9c:	3c 87       	std	Y+12, r19	; 0x0c
    2f9e:	2b 87       	std	Y+11, r18	; 0x0b
    2fa0:	1e 87       	std	Y+14, r17	; 0x0e
    2fa2:	0d 87       	std	Y+13, r16	; 0x0d
    2fa4:	f8 8a       	std	Y+16, r15	; 0x10
    2fa6:	ef 86       	std	Y+15, r14	; 0x0f
    2fa8:	da 8a       	std	Y+18, r13	; 0x12
    2faa:	c9 8a       	std	Y+17, r12	; 0x11
    2fac:	04 96       	adiw	r24, 0x04	; 4
    2fae:	fc 01       	movw	r30, r24
    2fb0:	a5 91       	lpm	r26, Z+
    2fb2:	b4 91       	lpm	r27, Z+
    2fb4:	8c 91       	ld	r24, X
    2fb6:	90 e0       	ldi	r25, 0x00	; 0
    2fb8:	87 70       	andi	r24, 0x07	; 7
    2fba:	90 70       	andi	r25, 0x00	; 0
    2fbc:	89 2b       	or	r24, r25
    2fbe:	21 f4       	brne	.+8      	; 0x2fc8 <timerCalcPwm+0x66>
    2fc0:	dd 24       	eor	r13, r13
    2fc2:	ff e0       	ldi	r31, 0x0F	; 15
    2fc4:	fa 87       	std	Y+10, r31	; 0x0a
    2fc6:	07 c0       	rjmp	.+14     	; 0x2fd6 <timerCalcPwm+0x74>
    2fc8:	f3 01       	movw	r30, r6
    2fca:	a5 91       	lpm	r26, Z+
    2fcc:	b4 91       	lpm	r27, Z+
    2fce:	1a 96       	adiw	r26, 0x0a	; 10
    2fd0:	fc 91       	ld	r31, X
    2fd2:	fa 87       	std	Y+10, r31	; 0x0a
    2fd4:	df 2e       	mov	r13, r31
    2fd6:	e0 90 00 01 	lds	r14, 0x0100
    2fda:	f0 90 01 01 	lds	r15, 0x0101
    2fde:	00 91 02 01 	lds	r16, 0x0102
    2fe2:	10 91 03 01 	lds	r17, 0x0103
    2fe6:	29 e0       	ldi	r18, 0x09	; 9
    2fe8:	30 e0       	ldi	r19, 0x00	; 0
    2fea:	62 0e       	add	r6, r18
    2fec:	73 1e       	adc	r7, r19
    2fee:	c8 01       	movw	r24, r16
    2ff0:	b7 01       	movw	r22, r14
    2ff2:	96 95       	lsr	r25
    2ff4:	87 95       	ror	r24
    2ff6:	77 95       	ror	r23
    2ff8:	67 95       	ror	r22
    2ffa:	2a e0       	ldi	r18, 0x0A	; 10
    2ffc:	30 e0       	ldi	r19, 0x00	; 0
    2ffe:	40 e0       	ldi	r20, 0x00	; 0
    3000:	50 e0       	ldi	r21, 0x00	; 0
    3002:	0e 94 32 1d 	call	0x3a64	; 0x3a64 <__mulsi3>
    3006:	6f 8b       	std	Y+23, r22	; 0x17
    3008:	78 8f       	std	Y+24, r23	; 0x18
    300a:	89 8f       	std	Y+25, r24	; 0x19
    300c:	9a 8f       	std	Y+26, r25	; 0x1a
    300e:	c8 01       	movw	r24, r16
    3010:	b7 01       	movw	r22, r14
    3012:	0e 94 32 1d 	call	0x3a64	; 0x3a64 <__mulsi3>
    3016:	6b 8b       	std	Y+19, r22	; 0x13
    3018:	7c 8b       	std	Y+20, r23	; 0x14
    301a:	8d 8b       	std	Y+21, r24	; 0x15
    301c:	9e 8b       	std	Y+22, r25	; 0x16
    301e:	cc 24       	eor	r12, r12
    3020:	1e 82       	std	Y+6, r1	; 0x06
    3022:	1f 82       	std	Y+7, r1	; 0x07
    3024:	18 86       	std	Y+8, r1	; 0x08
    3026:	19 86       	std	Y+9, r1	; 0x09
    3028:	1d 82       	std	Y+5, r1	; 0x05
    302a:	1c 82       	std	Y+4, r1	; 0x04
    302c:	1b 82       	std	Y+3, r1	; 0x03
    302e:	1a 82       	std	Y+2, r1	; 0x02
    3030:	19 82       	std	Y+1, r1	; 0x01
    3032:	f3 01       	movw	r30, r6
    3034:	45 91       	lpm	r20, Z+
    3036:	54 91       	lpm	r21, Z+
    3038:	5c 8f       	std	Y+28, r21	; 0x1c
    303a:	4b 8f       	std	Y+27, r20	; 0x1b
    303c:	87 ef       	ldi	r24, 0xF7	; 247
    303e:	9f ef       	ldi	r25, 0xFF	; 255
    3040:	68 0e       	add	r6, r24
    3042:	79 1e       	adc	r7, r25
    3044:	ab 85       	ldd	r26, Y+11	; 0x0b
    3046:	bc 85       	ldd	r27, Y+12	; 0x0c
    3048:	1d 01       	movw	r2, r26
    304a:	44 24       	eor	r4, r4
    304c:	55 24       	eor	r5, r5
    304e:	57 c1       	rjmp	.+686    	; 0x32fe <timerCalcPwm+0x39c>
    3050:	21 e0       	ldi	r18, 0x01	; 1
    3052:	30 e0       	ldi	r19, 0x00	; 0
    3054:	0d 2c       	mov	r0, r13
    3056:	02 c0       	rjmp	.+4      	; 0x305c <timerCalcPwm+0xfa>
    3058:	22 0f       	add	r18, r18
    305a:	33 1f       	adc	r19, r19
    305c:	0a 94       	dec	r0
    305e:	e2 f7       	brpl	.-8      	; 0x3058 <timerCalcPwm+0xf6>
    3060:	c9 01       	movw	r24, r18
    3062:	8e 7e       	andi	r24, 0xEE	; 238
    3064:	9f 7c       	andi	r25, 0xCF	; 207
    3066:	89 2b       	or	r24, r25
    3068:	09 f4       	brne	.+2      	; 0x306c <timerCalcPwm+0x10a>
    306a:	48 c1       	rjmp	.+656    	; 0x32fc <timerCalcPwm+0x39a>
    306c:	c9 01       	movw	r24, r18
    306e:	eb 8d       	ldd	r30, Y+27	; 0x1b
    3070:	fc 8d       	ldd	r31, Y+28	; 0x1c
    3072:	8e 23       	and	r24, r30
    3074:	9f 23       	and	r25, r31
    3076:	89 2b       	or	r24, r25
    3078:	09 f4       	brne	.+2      	; 0x307c <timerCalcPwm+0x11a>
    307a:	40 c1       	rjmp	.+640    	; 0x32fc <timerCalcPwm+0x39a>
    307c:	f6 e0       	ldi	r31, 0x06	; 6
    307e:	df 16       	cp	r13, r31
    3080:	09 f1       	breq	.+66     	; 0x30c4 <timerCalcPwm+0x162>
    3082:	fd 15       	cp	r31, r13
    3084:	90 f0       	brcs	.+36     	; 0x30aa <timerCalcPwm+0x148>
    3086:	22 e0       	ldi	r18, 0x02	; 2
    3088:	d2 16       	cp	r13, r18
    308a:	f9 f0       	breq	.+62     	; 0x30ca <timerCalcPwm+0x168>
    308c:	2d 15       	cp	r18, r13
    308e:	28 f0       	brcs	.+10     	; 0x309a <timerCalcPwm+0x138>
    3090:	31 e0       	ldi	r19, 0x01	; 1
    3092:	d3 16       	cp	r13, r19
    3094:	09 f0       	breq	.+2      	; 0x3098 <timerCalcPwm+0x136>
    3096:	32 c1       	rjmp	.+612    	; 0x32fc <timerCalcPwm+0x39a>
    3098:	1e c0       	rjmp	.+60     	; 0x30d6 <timerCalcPwm+0x174>
    309a:	43 e0       	ldi	r20, 0x03	; 3
    309c:	d4 16       	cp	r13, r20
    309e:	f1 f0       	breq	.+60     	; 0x30dc <timerCalcPwm+0x17a>
    30a0:	55 e0       	ldi	r21, 0x05	; 5
    30a2:	d5 16       	cp	r13, r21
    30a4:	09 f0       	breq	.+2      	; 0x30a8 <timerCalcPwm+0x146>
    30a6:	2a c1       	rjmp	.+596    	; 0x32fc <timerCalcPwm+0x39a>
    30a8:	13 c0       	rjmp	.+38     	; 0x30d0 <timerCalcPwm+0x16e>
    30aa:	88 e0       	ldi	r24, 0x08	; 8
    30ac:	d8 16       	cp	r13, r24
    30ae:	c9 f0       	breq	.+50     	; 0x30e2 <timerCalcPwm+0x180>
    30b0:	d8 16       	cp	r13, r24
    30b2:	88 f1       	brcs	.+98     	; 0x3116 <timerCalcPwm+0x1b4>
    30b4:	9a e0       	ldi	r25, 0x0A	; 10
    30b6:	d9 16       	cp	r13, r25
    30b8:	a1 f0       	breq	.+40     	; 0x30e2 <timerCalcPwm+0x180>
    30ba:	ae e0       	ldi	r26, 0x0E	; 14
    30bc:	da 16       	cp	r13, r26
    30be:	09 f0       	breq	.+2      	; 0x30c2 <timerCalcPwm+0x160>
    30c0:	1d c1       	rjmp	.+570    	; 0x32fc <timerCalcPwm+0x39a>
    30c2:	2c c0       	rjmp	.+88     	; 0x311c <timerCalcPwm+0x1ba>
    30c4:	0f ef       	ldi	r16, 0xFF	; 255
    30c6:	11 e0       	ldi	r17, 0x01	; 1
    30c8:	2b c0       	rjmp	.+86     	; 0x3120 <timerCalcPwm+0x1be>
    30ca:	0f ef       	ldi	r16, 0xFF	; 255
    30cc:	11 e0       	ldi	r17, 0x01	; 1
    30ce:	0b c0       	rjmp	.+22     	; 0x30e6 <timerCalcPwm+0x184>
    30d0:	0f ef       	ldi	r16, 0xFF	; 255
    30d2:	10 e0       	ldi	r17, 0x00	; 0
    30d4:	25 c0       	rjmp	.+74     	; 0x3120 <timerCalcPwm+0x1be>
    30d6:	0f ef       	ldi	r16, 0xFF	; 255
    30d8:	10 e0       	ldi	r17, 0x00	; 0
    30da:	05 c0       	rjmp	.+10     	; 0x30e6 <timerCalcPwm+0x184>
    30dc:	0f ef       	ldi	r16, 0xFF	; 255
    30de:	13 e0       	ldi	r17, 0x03	; 3
    30e0:	02 c0       	rjmp	.+4      	; 0x30e6 <timerCalcPwm+0x184>
    30e2:	0f ef       	ldi	r16, 0xFF	; 255
    30e4:	1f ef       	ldi	r17, 0xFF	; 255
    30e6:	81 14       	cp	r8, r1
    30e8:	91 04       	cpc	r9, r1
    30ea:	a1 04       	cpc	r10, r1
    30ec:	b1 04       	cpc	r11, r1
    30ee:	29 f4       	brne	.+10     	; 0x30fa <timerCalcPwm+0x198>
    30f0:	6f 89       	ldd	r22, Y+23	; 0x17
    30f2:	78 8d       	ldd	r23, Y+24	; 0x18
    30f4:	89 8d       	ldd	r24, Y+25	; 0x19
    30f6:	9a 8d       	ldd	r25, Y+26	; 0x1a
    30f8:	0a c0       	rjmp	.+20     	; 0x310e <timerCalcPwm+0x1ac>
    30fa:	6f 89       	ldd	r22, Y+23	; 0x17
    30fc:	78 8d       	ldd	r23, Y+24	; 0x18
    30fe:	89 8d       	ldd	r24, Y+25	; 0x19
    3100:	9a 8d       	ldd	r25, Y+26	; 0x1a
    3102:	a5 01       	movw	r20, r10
    3104:	94 01       	movw	r18, r8
    3106:	0e 94 65 1d 	call	0x3aca	; 0x3aca <__udivmodsi4>
    310a:	b9 01       	movw	r22, r18
    310c:	ca 01       	movw	r24, r20
    310e:	98 01       	movw	r18, r16
    3110:	40 e0       	ldi	r20, 0x00	; 0
    3112:	50 e0       	ldi	r21, 0x00	; 0
    3114:	20 c0       	rjmp	.+64     	; 0x3156 <timerCalcPwm+0x1f4>
    3116:	0f ef       	ldi	r16, 0xFF	; 255
    3118:	13 e0       	ldi	r17, 0x03	; 3
    311a:	02 c0       	rjmp	.+4      	; 0x3120 <timerCalcPwm+0x1be>
    311c:	0f ef       	ldi	r16, 0xFF	; 255
    311e:	1f ef       	ldi	r17, 0xFF	; 255
    3120:	81 14       	cp	r8, r1
    3122:	91 04       	cpc	r9, r1
    3124:	a1 04       	cpc	r10, r1
    3126:	b1 04       	cpc	r11, r1
    3128:	29 f4       	brne	.+10     	; 0x3134 <timerCalcPwm+0x1d2>
    312a:	6b 89       	ldd	r22, Y+19	; 0x13
    312c:	7c 89       	ldd	r23, Y+20	; 0x14
    312e:	8d 89       	ldd	r24, Y+21	; 0x15
    3130:	9e 89       	ldd	r25, Y+22	; 0x16
    3132:	0a c0       	rjmp	.+20     	; 0x3148 <timerCalcPwm+0x1e6>
    3134:	6b 89       	ldd	r22, Y+19	; 0x13
    3136:	7c 89       	ldd	r23, Y+20	; 0x14
    3138:	8d 89       	ldd	r24, Y+21	; 0x15
    313a:	9e 89       	ldd	r25, Y+22	; 0x16
    313c:	a5 01       	movw	r20, r10
    313e:	94 01       	movw	r18, r8
    3140:	0e 94 65 1d 	call	0x3aca	; 0x3aca <__udivmodsi4>
    3144:	b9 01       	movw	r22, r18
    3146:	ca 01       	movw	r24, r20
    3148:	98 01       	movw	r18, r16
    314a:	40 e0       	ldi	r20, 0x00	; 0
    314c:	50 e0       	ldi	r21, 0x00	; 0
    314e:	2f 5f       	subi	r18, 0xFF	; 255
    3150:	3f 4f       	sbci	r19, 0xFF	; 255
    3152:	4f 4f       	sbci	r20, 0xFF	; 255
    3154:	5f 4f       	sbci	r21, 0xFF	; 255
    3156:	0e 94 65 1d 	call	0x3aca	; 0x3aca <__udivmodsi4>
    315a:	c9 01       	movw	r24, r18
    315c:	da 01       	movw	r26, r20
    315e:	82 30       	cpi	r24, 0x02	; 2
    3160:	91 05       	cpc	r25, r1
    3162:	a1 05       	cpc	r26, r1
    3164:	b1 05       	cpc	r27, r1
    3166:	08 f4       	brcc	.+2      	; 0x316a <timerCalcPwm+0x208>
    3168:	05 c1       	rjmp	.+522    	; 0x3374 <timerCalcPwm+0x412>
    316a:	81 30       	cpi	r24, 0x01	; 1
    316c:	e4 e0       	ldi	r30, 0x04	; 4
    316e:	9e 07       	cpc	r25, r30
    3170:	e0 e0       	ldi	r30, 0x00	; 0
    3172:	ae 07       	cpc	r26, r30
    3174:	e0 e0       	ldi	r30, 0x00	; 0
    3176:	be 07       	cpc	r27, r30
    3178:	20 f0       	brcs	.+8      	; 0x3182 <timerCalcPwm+0x220>
    317a:	80 e0       	ldi	r24, 0x00	; 0
    317c:	94 e0       	ldi	r25, 0x04	; 4
    317e:	a0 e0       	ldi	r26, 0x00	; 0
    3180:	b0 e0       	ldi	r27, 0x00	; 0
    3182:	bc 01       	movw	r22, r24
    3184:	c3 01       	movw	r24, r6
    3186:	0e 94 11 0e 	call	0x1c22	; 0x1c22 <timerGetClosestPrescale>
    318a:	81 14       	cp	r8, r1
    318c:	91 04       	cpc	r9, r1
    318e:	a1 04       	cpc	r10, r1
    3190:	b1 04       	cpc	r11, r1
    3192:	39 f4       	brne	.+14     	; 0x31a2 <timerCalcPwm+0x240>
    3194:	20 e0       	ldi	r18, 0x00	; 0
    3196:	34 e0       	ldi	r19, 0x04	; 4
    3198:	3e 8f       	std	Y+30, r19	; 0x1e
    319a:	2d 8f       	std	Y+29, r18	; 0x1d
    319c:	0f ef       	ldi	r16, 0xFF	; 255
    319e:	1f ef       	ldi	r17, 0xFF	; 255
    31a0:	7d c0       	rjmp	.+250    	; 0x329c <timerCalcPwm+0x33a>
    31a2:	3f ef       	ldi	r19, 0xFF	; 255
    31a4:	83 16       	cp	r8, r19
    31a6:	3f ef       	ldi	r19, 0xFF	; 255
    31a8:	93 06       	cpc	r9, r19
    31aa:	3f ef       	ldi	r19, 0xFF	; 255
    31ac:	a3 06       	cpc	r10, r19
    31ae:	3f ef       	ldi	r19, 0xFF	; 255
    31b0:	b3 06       	cpc	r11, r19
    31b2:	39 f4       	brne	.+14     	; 0x31c2 <timerCalcPwm+0x260>
    31b4:	0b 85       	ldd	r16, Y+11	; 0x0b
    31b6:	1c 85       	ldd	r17, Y+12	; 0x0c
    31b8:	41 e0       	ldi	r20, 0x01	; 1
    31ba:	50 e0       	ldi	r21, 0x00	; 0
    31bc:	5e 8f       	std	Y+30, r21	; 0x1e
    31be:	4d 8f       	std	Y+29, r20	; 0x1d
    31c0:	6d c0       	rjmp	.+218    	; 0x329c <timerCalcPwm+0x33a>
    31c2:	dc 01       	movw	r26, r24
    31c4:	11 97       	sbiw	r26, 0x01	; 1
    31c6:	be 8f       	std	Y+30, r27	; 0x1e
    31c8:	ad 8f       	std	Y+29, r26	; 0x1d
    31ca:	ee 24       	eor	r14, r14
    31cc:	ff 24       	eor	r15, r15
    31ce:	87 01       	movw	r16, r14
    31d0:	ed 8d       	ldd	r30, Y+29	; 0x1d
    31d2:	fe 8d       	ldd	r31, Y+30	; 0x1e
    31d4:	31 96       	adiw	r30, 0x01	; 1
    31d6:	c3 01       	movw	r24, r6
    31d8:	bf 01       	movw	r22, r30
    31da:	0e 94 11 0e 	call	0x1c22	; 0x1c22 <timerGetClosestPrescale>
    31de:	9e 8f       	std	Y+30, r25	; 0x1e
    31e0:	8d 8f       	std	Y+29, r24	; 0x1d
    31e2:	fa e0       	ldi	r31, 0x0A	; 10
    31e4:	df 16       	cp	r13, r31
    31e6:	31 f0       	breq	.+12     	; 0x31f4 <timerCalcPwm+0x292>
    31e8:	2e e0       	ldi	r18, 0x0E	; 14
    31ea:	d2 16       	cp	r13, r18
    31ec:	c9 f0       	breq	.+50     	; 0x3220 <timerCalcPwm+0x2be>
    31ee:	38 e0       	ldi	r19, 0x08	; 8
    31f0:	d3 16       	cp	r13, r19
    31f2:	81 f5       	brne	.+96     	; 0x3254 <timerCalcPwm+0x2f2>
    31f4:	6f 89       	ldd	r22, Y+23	; 0x17
    31f6:	78 8d       	ldd	r23, Y+24	; 0x18
    31f8:	89 8d       	ldd	r24, Y+25	; 0x19
    31fa:	9a 8d       	ldd	r25, Y+26	; 0x1a
    31fc:	a5 01       	movw	r20, r10
    31fe:	94 01       	movw	r18, r8
    3200:	0e 94 65 1d 	call	0x3aca	; 0x3aca <__udivmodsi4>
    3204:	b9 01       	movw	r22, r18
    3206:	ca 01       	movw	r24, r20
    3208:	ad 8d       	ldd	r26, Y+29	; 0x1d
    320a:	be 8d       	ldd	r27, Y+30	; 0x1e
    320c:	9d 01       	movw	r18, r26
    320e:	40 e0       	ldi	r20, 0x00	; 0
    3210:	50 e0       	ldi	r21, 0x00	; 0
    3212:	0e 94 65 1d 	call	0x3aca	; 0x3aca <__udivmodsi4>
    3216:	c9 01       	movw	r24, r18
    3218:	da 01       	movw	r26, r20
    321a:	7c 01       	movw	r14, r24
    321c:	8d 01       	movw	r16, r26
    321e:	1a c0       	rjmp	.+52     	; 0x3254 <timerCalcPwm+0x2f2>
    3220:	6b 89       	ldd	r22, Y+19	; 0x13
    3222:	7c 89       	ldd	r23, Y+20	; 0x14
    3224:	8d 89       	ldd	r24, Y+21	; 0x15
    3226:	9e 89       	ldd	r25, Y+22	; 0x16
    3228:	a5 01       	movw	r20, r10
    322a:	94 01       	movw	r18, r8
    322c:	0e 94 65 1d 	call	0x3aca	; 0x3aca <__udivmodsi4>
    3230:	b9 01       	movw	r22, r18
    3232:	ca 01       	movw	r24, r20
    3234:	ed 8d       	ldd	r30, Y+29	; 0x1d
    3236:	fe 8d       	ldd	r31, Y+30	; 0x1e
    3238:	9f 01       	movw	r18, r30
    323a:	40 e0       	ldi	r20, 0x00	; 0
    323c:	50 e0       	ldi	r21, 0x00	; 0
    323e:	0e 94 65 1d 	call	0x3aca	; 0x3aca <__udivmodsi4>
    3242:	c9 01       	movw	r24, r18
    3244:	da 01       	movw	r26, r20
    3246:	7c 01       	movw	r14, r24
    3248:	8d 01       	movw	r16, r26
    324a:	08 94       	sec
    324c:	e1 08       	sbc	r14, r1
    324e:	f1 08       	sbc	r15, r1
    3250:	01 09       	sbc	r16, r1
    3252:	11 09       	sbc	r17, r1
    3254:	2d 8d       	ldd	r18, Y+29	; 0x1d
    3256:	3e 8d       	ldd	r19, Y+30	; 0x1e
    3258:	20 50       	subi	r18, 0x00	; 0
    325a:	34 40       	sbci	r19, 0x04	; 4
    325c:	48 f4       	brcc	.+18     	; 0x3270 <timerCalcPwm+0x30e>
    325e:	d8 01       	movw	r26, r16
    3260:	c7 01       	movw	r24, r14
    3262:	80 70       	andi	r24, 0x00	; 0
    3264:	90 70       	andi	r25, 0x00	; 0
    3266:	00 97       	sbiw	r24, 0x00	; 0
    3268:	a1 05       	cpc	r26, r1
    326a:	b1 05       	cpc	r27, r1
    326c:	09 f0       	breq	.+2      	; 0x3270 <timerCalcPwm+0x30e>
    326e:	b0 cf       	rjmp	.-160    	; 0x31d0 <timerCalcPwm+0x26e>
    3270:	d8 01       	movw	r26, r16
    3272:	c7 01       	movw	r24, r14
    3274:	80 30       	cpi	r24, 0x00	; 0
    3276:	50 e0       	ldi	r21, 0x00	; 0
    3278:	95 07       	cpc	r25, r21
    327a:	51 e0       	ldi	r21, 0x01	; 1
    327c:	a5 07       	cpc	r26, r21
    327e:	50 e0       	ldi	r21, 0x00	; 0
    3280:	b5 07       	cpc	r27, r21
    3282:	20 f0       	brcs	.+8      	; 0x328c <timerCalcPwm+0x32a>
    3284:	8f ef       	ldi	r24, 0xFF	; 255
    3286:	9f ef       	ldi	r25, 0xFF	; 255
    3288:	a0 e0       	ldi	r26, 0x00	; 0
    328a:	b0 e0       	ldi	r27, 0x00	; 0
    328c:	82 15       	cp	r24, r2
    328e:	93 05       	cpc	r25, r3
    3290:	a4 05       	cpc	r26, r4
    3292:	b5 05       	cpc	r27, r5
    3294:	10 f4       	brcc	.+4      	; 0x329a <timerCalcPwm+0x338>
    3296:	d2 01       	movw	r26, r4
    3298:	c1 01       	movw	r24, r2
    329a:	8c 01       	movw	r16, r24
    329c:	8d 2d       	mov	r24, r13
    329e:	6d 8d       	ldd	r22, Y+29	; 0x1d
    32a0:	7e 8d       	ldd	r23, Y+30	; 0x1e
    32a2:	a8 01       	movw	r20, r16
    32a4:	0e 94 f3 16 	call	0x2de6	; 0x2de6 <__timerPWMGetDeciHertz>
    32a8:	86 16       	cp	r8, r22
    32aa:	97 06       	cpc	r9, r23
    32ac:	a8 06       	cpc	r10, r24
    32ae:	b9 06       	cpc	r11, r25
    32b0:	28 f4       	brcc	.+10     	; 0x32bc <timerCalcPwm+0x35a>
    32b2:	68 19       	sub	r22, r8
    32b4:	79 09       	sbc	r23, r9
    32b6:	8a 09       	sbc	r24, r10
    32b8:	9b 09       	sbc	r25, r11
    32ba:	08 c0       	rjmp	.+16     	; 0x32cc <timerCalcPwm+0x36a>
    32bc:	a5 01       	movw	r20, r10
    32be:	94 01       	movw	r18, r8
    32c0:	26 1b       	sub	r18, r22
    32c2:	37 0b       	sbc	r19, r23
    32c4:	48 0b       	sbc	r20, r24
    32c6:	59 0b       	sbc	r21, r25
    32c8:	ca 01       	movw	r24, r20
    32ca:	b9 01       	movw	r22, r18
    32cc:	cc 20       	and	r12, r12
    32ce:	49 f0       	breq	.+18     	; 0x32e2 <timerCalcPwm+0x380>
    32d0:	2e 81       	ldd	r18, Y+6	; 0x06
    32d2:	3f 81       	ldd	r19, Y+7	; 0x07
    32d4:	48 85       	ldd	r20, Y+8	; 0x08
    32d6:	59 85       	ldd	r21, Y+9	; 0x09
    32d8:	62 17       	cp	r22, r18
    32da:	73 07       	cpc	r23, r19
    32dc:	84 07       	cpc	r24, r20
    32de:	95 07       	cpc	r25, r21
    32e0:	68 f4       	brcc	.+26     	; 0x32fc <timerCalcPwm+0x39a>
    32e2:	6e 83       	std	Y+6, r22	; 0x06
    32e4:	7f 83       	std	Y+7, r23	; 0x07
    32e6:	88 87       	std	Y+8, r24	; 0x08
    32e8:	99 87       	std	Y+9, r25	; 0x09
    32ea:	dd 82       	std	Y+5, r13	; 0x05
    32ec:	4d 8d       	ldd	r20, Y+29	; 0x1d
    32ee:	5e 8d       	ldd	r21, Y+30	; 0x1e
    32f0:	5c 83       	std	Y+4, r21	; 0x04
    32f2:	4b 83       	std	Y+3, r20	; 0x03
    32f4:	1a 83       	std	Y+2, r17	; 0x02
    32f6:	09 83       	std	Y+1, r16	; 0x01
    32f8:	cc 24       	eor	r12, r12
    32fa:	ca 94       	dec	r12
    32fc:	d3 94       	inc	r13
    32fe:	5a 85       	ldd	r21, Y+10	; 0x0a
    3300:	5d 15       	cp	r21, r13
    3302:	08 f0       	brcs	.+2      	; 0x3306 <timerCalcPwm+0x3a4>
    3304:	a5 ce       	rjmp	.-694    	; 0x3050 <timerCalcPwm+0xee>
    3306:	cc 20       	and	r12, r12
    3308:	d9 f0       	breq	.+54     	; 0x3340 <timerCalcPwm+0x3de>
    330a:	8d 85       	ldd	r24, Y+13	; 0x0d
    330c:	9e 85       	ldd	r25, Y+14	; 0x0e
    330e:	00 97       	sbiw	r24, 0x00	; 0
    3310:	19 f0       	breq	.+6      	; 0x3318 <timerCalcPwm+0x3b6>
    3312:	ed 81       	ldd	r30, Y+5	; 0x05
    3314:	dc 01       	movw	r26, r24
    3316:	ec 93       	st	X, r30
    3318:	2f 85       	ldd	r18, Y+15	; 0x0f
    331a:	38 89       	ldd	r19, Y+16	; 0x10
    331c:	21 15       	cp	r18, r1
    331e:	31 05       	cpc	r19, r1
    3320:	29 f0       	breq	.+10     	; 0x332c <timerCalcPwm+0x3ca>
    3322:	e9 81       	ldd	r30, Y+1	; 0x01
    3324:	fa 81       	ldd	r31, Y+2	; 0x02
    3326:	d9 01       	movw	r26, r18
    3328:	ed 93       	st	X+, r30
    332a:	fc 93       	st	X, r31
    332c:	29 89       	ldd	r18, Y+17	; 0x11
    332e:	3a 89       	ldd	r19, Y+18	; 0x12
    3330:	21 15       	cp	r18, r1
    3332:	31 05       	cpc	r19, r1
    3334:	29 f0       	breq	.+10     	; 0x3340 <timerCalcPwm+0x3de>
    3336:	eb 81       	ldd	r30, Y+3	; 0x03
    3338:	fc 81       	ldd	r31, Y+4	; 0x04
    333a:	d9 01       	movw	r26, r18
    333c:	ed 93       	st	X+, r30
    333e:	fc 93       	st	X, r31
    3340:	8c 2d       	mov	r24, r12
    3342:	6e 96       	adiw	r28, 0x1e	; 30
    3344:	0f b6       	in	r0, 0x3f	; 63
    3346:	f8 94       	cli
    3348:	de bf       	out	0x3e, r29	; 62
    334a:	0f be       	out	0x3f, r0	; 63
    334c:	cd bf       	out	0x3d, r28	; 61
    334e:	cf 91       	pop	r28
    3350:	df 91       	pop	r29
    3352:	1f 91       	pop	r17
    3354:	0f 91       	pop	r16
    3356:	ff 90       	pop	r15
    3358:	ef 90       	pop	r14
    335a:	df 90       	pop	r13
    335c:	cf 90       	pop	r12
    335e:	bf 90       	pop	r11
    3360:	af 90       	pop	r10
    3362:	9f 90       	pop	r9
    3364:	8f 90       	pop	r8
    3366:	7f 90       	pop	r7
    3368:	6f 90       	pop	r6
    336a:	5f 90       	pop	r5
    336c:	4f 90       	pop	r4
    336e:	3f 90       	pop	r3
    3370:	2f 90       	pop	r2
    3372:	08 95       	ret
    3374:	61 e0       	ldi	r22, 0x01	; 1
    3376:	70 e0       	ldi	r23, 0x00	; 0
    3378:	05 cf       	rjmp	.-502    	; 0x3184 <timerCalcPwm+0x222>

0000337a <__uartHWSetBaudRate>:
    337a:	bf 92       	push	r11
    337c:	cf 92       	push	r12
    337e:	df 92       	push	r13
    3380:	ef 92       	push	r14
    3382:	ff 92       	push	r15
    3384:	0f 93       	push	r16
    3386:	1f 93       	push	r17
    3388:	cf 93       	push	r28
    338a:	df 93       	push	r29
    338c:	7a 01       	movw	r14, r20
    338e:	8b 01       	movw	r16, r22
    3390:	ec 01       	movw	r28, r24
    3392:	bf b6       	in	r11, 0x3f	; 63
    3394:	f8 94       	cli
    3396:	4f 3f       	cpi	r20, 0xFF	; 255
    3398:	8f ef       	ldi	r24, 0xFF	; 255
    339a:	58 07       	cpc	r21, r24
    339c:	8f ef       	ldi	r24, 0xFF	; 255
    339e:	68 07       	cpc	r22, r24
    33a0:	8f ef       	ldi	r24, 0xFF	; 255
    33a2:	78 07       	cpc	r23, r24
    33a4:	21 f4       	brne	.+8      	; 0x33ae <__uartHWSetBaudRate+0x34>
    33a6:	a1 e0       	ldi	r26, 0x01	; 1
    33a8:	ca 2e       	mov	r12, r26
    33aa:	d1 2c       	mov	r13, r1
    33ac:	24 c0       	rjmp	.+72     	; 0x33f6 <__uartHWSetBaudRate+0x7c>
    33ae:	cb 01       	movw	r24, r22
    33b0:	ba 01       	movw	r22, r20
    33b2:	f3 e0       	ldi	r31, 0x03	; 3
    33b4:	66 0f       	add	r22, r22
    33b6:	77 1f       	adc	r23, r23
    33b8:	88 1f       	adc	r24, r24
    33ba:	99 1f       	adc	r25, r25
    33bc:	fa 95       	dec	r31
    33be:	d1 f7       	brne	.-12     	; 0x33b4 <__uartHWSetBaudRate+0x3a>
    33c0:	20 91 00 01 	lds	r18, 0x0100
    33c4:	30 91 01 01 	lds	r19, 0x0101
    33c8:	40 91 02 01 	lds	r20, 0x0102
    33cc:	50 91 03 01 	lds	r21, 0x0103
    33d0:	62 0f       	add	r22, r18
    33d2:	73 1f       	adc	r23, r19
    33d4:	84 1f       	adc	r24, r20
    33d6:	95 1f       	adc	r25, r21
    33d8:	a8 01       	movw	r20, r16
    33da:	97 01       	movw	r18, r14
    33dc:	e4 e0       	ldi	r30, 0x04	; 4
    33de:	22 0f       	add	r18, r18
    33e0:	33 1f       	adc	r19, r19
    33e2:	44 1f       	adc	r20, r20
    33e4:	55 1f       	adc	r21, r21
    33e6:	ea 95       	dec	r30
    33e8:	d1 f7       	brne	.-12     	; 0x33de <__uartHWSetBaudRate+0x64>
    33ea:	0e 94 65 1d 	call	0x3aca	; 0x3aca <__udivmodsi4>
    33ee:	69 01       	movw	r12, r18
    33f0:	08 94       	sec
    33f2:	c1 08       	sbc	r12, r1
    33f4:	d1 08       	sbc	r13, r1
    33f6:	9c a1       	ldd	r25, Y+36	; 0x24
    33f8:	99 23       	and	r25, r25
    33fa:	c9 f1       	breq	.+114    	; 0x346e <__uartHWSetBaudRate+0xf4>
    33fc:	e8 8d       	ldd	r30, Y+24	; 0x18
    33fe:	f9 8d       	ldd	r31, Y+25	; 0x19
    3400:	80 81       	ld	r24, Z
    3402:	90 95       	com	r25
    3404:	89 23       	and	r24, r25
    3406:	80 83       	st	Z, r24
    3408:	8f ef       	ldi	r24, 0xFF	; 255
    340a:	e8 16       	cp	r14, r24
    340c:	8f ef       	ldi	r24, 0xFF	; 255
    340e:	f8 06       	cpc	r15, r24
    3410:	8f ef       	ldi	r24, 0xFF	; 255
    3412:	08 07       	cpc	r16, r24
    3414:	8f ef       	ldi	r24, 0xFF	; 255
    3416:	18 07       	cpc	r17, r24
    3418:	19 f4       	brne	.+6      	; 0x3420 <__uartHWSetBaudRate+0xa6>
    341a:	21 e0       	ldi	r18, 0x01	; 1
    341c:	30 e0       	ldi	r19, 0x00	; 0
    341e:	1d c0       	rjmp	.+58     	; 0x345a <__uartHWSetBaudRate+0xe0>
    3420:	32 e0       	ldi	r19, 0x02	; 2
    3422:	ee 0c       	add	r14, r14
    3424:	ff 1c       	adc	r15, r15
    3426:	00 1f       	adc	r16, r16
    3428:	11 1f       	adc	r17, r17
    342a:	3a 95       	dec	r19
    342c:	d1 f7       	brne	.-12     	; 0x3422 <__uartHWSetBaudRate+0xa8>
    342e:	60 91 00 01 	lds	r22, 0x0100
    3432:	70 91 01 01 	lds	r23, 0x0101
    3436:	80 91 02 01 	lds	r24, 0x0102
    343a:	90 91 03 01 	lds	r25, 0x0103
    343e:	6e 0d       	add	r22, r14
    3440:	7f 1d       	adc	r23, r15
    3442:	80 1f       	adc	r24, r16
    3444:	91 1f       	adc	r25, r17
    3446:	ee 0c       	add	r14, r14
    3448:	ff 1c       	adc	r15, r15
    344a:	00 1f       	adc	r16, r16
    344c:	11 1f       	adc	r17, r17
    344e:	a8 01       	movw	r20, r16
    3450:	97 01       	movw	r18, r14
    3452:	0e 94 65 1d 	call	0x3aca	; 0x3aca <__udivmodsi4>
    3456:	21 50       	subi	r18, 0x01	; 1
    3458:	30 40       	sbci	r19, 0x00	; 0
    345a:	2c 15       	cp	r18, r12
    345c:	3d 05       	cpc	r19, r13
    345e:	38 f0       	brcs	.+14     	; 0x346e <__uartHWSetBaudRate+0xf4>
    3460:	e8 8d       	ldd	r30, Y+24	; 0x18
    3462:	f9 8d       	ldd	r31, Y+25	; 0x19
    3464:	80 81       	ld	r24, Z
    3466:	9c a1       	ldd	r25, Y+36	; 0x24
    3468:	89 2b       	or	r24, r25
    346a:	80 83       	st	Z, r24
    346c:	69 01       	movw	r12, r18
    346e:	ec 8d       	ldd	r30, Y+28	; 0x1c
    3470:	fd 8d       	ldd	r31, Y+29	; 0x1d
    3472:	c0 82       	st	Z, r12
    3474:	ee 8d       	ldd	r30, Y+30	; 0x1e
    3476:	ff 8d       	ldd	r31, Y+31	; 0x1f
    3478:	d0 82       	st	Z, r13
    347a:	bf be       	out	0x3f, r11	; 63
    347c:	df 91       	pop	r29
    347e:	cf 91       	pop	r28
    3480:	1f 91       	pop	r17
    3482:	0f 91       	pop	r16
    3484:	ff 90       	pop	r15
    3486:	ef 90       	pop	r14
    3488:	df 90       	pop	r13
    348a:	cf 90       	pop	r12
    348c:	bf 90       	pop	r11
    348e:	08 95       	ret

00003490 <__uartHWOff>:
    3490:	dc 01       	movw	r26, r24
    3492:	5a 96       	adiw	r26, 0x1a	; 26
    3494:	ed 91       	ld	r30, X+
    3496:	fc 91       	ld	r31, X
    3498:	5b 97       	sbiw	r26, 0x1b	; 27
    349a:	80 81       	ld	r24, Z
    349c:	87 72       	andi	r24, 0x27	; 39
    349e:	80 83       	st	Z, r24
    34a0:	94 96       	adiw	r26, 0x24	; 36
    34a2:	9c 91       	ld	r25, X
    34a4:	94 97       	sbiw	r26, 0x24	; 36
    34a6:	99 23       	and	r25, r25
    34a8:	41 f0       	breq	.+16     	; 0x34ba <__uartHWOff+0x2a>
    34aa:	58 96       	adiw	r26, 0x18	; 24
    34ac:	ed 91       	ld	r30, X+
    34ae:	fc 91       	ld	r31, X
    34b0:	59 97       	sbiw	r26, 0x19	; 25
    34b2:	80 81       	ld	r24, Z
    34b4:	90 95       	com	r25
    34b6:	89 23       	and	r24, r25
    34b8:	80 83       	st	Z, r24
    34ba:	08 95       	ret

000034bc <oneWireReceiveMode>:
    34bc:	dc 01       	movw	r26, r24
    34be:	53 96       	adiw	r26, 0x13	; 19
    34c0:	8c 91       	ld	r24, X
    34c2:	53 97       	sbiw	r26, 0x13	; 19
    34c4:	88 23       	and	r24, r24
    34c6:	71 f0       	breq	.+28     	; 0x34e4 <oneWireReceiveMode+0x28>
    34c8:	5a 96       	adiw	r26, 0x1a	; 26
    34ca:	ed 91       	ld	r30, X+
    34cc:	fc 91       	ld	r31, X
    34ce:	5b 97       	sbiw	r26, 0x1b	; 27
    34d0:	80 81       	ld	r24, Z
    34d2:	87 7b       	andi	r24, 0xB7	; 183
    34d4:	80 83       	st	Z, r24
    34d6:	5a 96       	adiw	r26, 0x1a	; 26
    34d8:	ed 91       	ld	r30, X+
    34da:	fc 91       	ld	r31, X
    34dc:	5b 97       	sbiw	r26, 0x1b	; 27
    34de:	80 81       	ld	r24, Z
    34e0:	80 69       	ori	r24, 0x90	; 144
    34e2:	80 83       	st	Z, r24
    34e4:	08 95       	ret

000034e6 <__uartHWStartXmit>:
    34e6:	dc 01       	movw	r26, r24
    34e8:	90 96       	adiw	r26, 0x20	; 32
    34ea:	ed 91       	ld	r30, X+
    34ec:	fc 91       	ld	r31, X
    34ee:	91 97       	sbiw	r26, 0x21	; 33
    34f0:	60 83       	st	Z, r22
    34f2:	08 95       	ret

000034f4 <startXmitMode>:
    34f4:	dc 01       	movw	r26, r24
    34f6:	53 96       	adiw	r26, 0x13	; 19
    34f8:	8c 91       	ld	r24, X
    34fa:	53 97       	sbiw	r26, 0x13	; 19
    34fc:	88 23       	and	r24, r24
    34fe:	71 f0       	breq	.+28     	; 0x351c <startXmitMode+0x28>
    3500:	5a 96       	adiw	r26, 0x1a	; 26
    3502:	ed 91       	ld	r30, X+
    3504:	fc 91       	ld	r31, X
    3506:	5b 97       	sbiw	r26, 0x1b	; 27
    3508:	80 81       	ld	r24, Z
    350a:	8f 76       	andi	r24, 0x6F	; 111
    350c:	80 83       	st	Z, r24
    350e:	5a 96       	adiw	r26, 0x1a	; 26
    3510:	ed 91       	ld	r30, X+
    3512:	fc 91       	ld	r31, X
    3514:	5b 97       	sbiw	r26, 0x1b	; 27
    3516:	80 81       	ld	r24, Z
    3518:	88 64       	ori	r24, 0x48	; 72
    351a:	80 83       	st	Z, r24
    351c:	08 95       	ret

0000351e <uartReceivePollingMode>:
    351e:	dc 01       	movw	r26, r24
    3520:	5a 96       	adiw	r26, 0x1a	; 26
    3522:	ed 91       	ld	r30, X+
    3524:	fc 91       	ld	r31, X
    3526:	5b 97       	sbiw	r26, 0x1b	; 27
    3528:	66 23       	and	r22, r22
    352a:	19 f0       	breq	.+6      	; 0x3532 <uartReceivePollingMode+0x14>
    352c:	80 81       	ld	r24, Z
    352e:	8f 77       	andi	r24, 0x7F	; 127
    3530:	02 c0       	rjmp	.+4      	; 0x3536 <uartReceivePollingMode+0x18>
    3532:	80 81       	ld	r24, Z
    3534:	80 68       	ori	r24, 0x80	; 128
    3536:	80 83       	st	Z, r24
    3538:	08 95       	ret

0000353a <uartPollByte>:
    353a:	dc 01       	movw	r26, r24
    353c:	58 96       	adiw	r26, 0x18	; 24
    353e:	ed 91       	ld	r30, X+
    3540:	fc 91       	ld	r31, X
    3542:	59 97       	sbiw	r26, 0x19	; 25
    3544:	80 81       	ld	r24, Z
    3546:	87 fd       	sbrc	r24, 7
    3548:	03 c0       	rjmp	.+6      	; 0x3550 <uartPollByte+0x16>
    354a:	2f ef       	ldi	r18, 0xFF	; 255
    354c:	3f ef       	ldi	r19, 0xFF	; 255
    354e:	07 c0       	rjmp	.+14     	; 0x355e <uartPollByte+0x24>
    3550:	90 96       	adiw	r26, 0x20	; 32
    3552:	ed 91       	ld	r30, X+
    3554:	fc 91       	ld	r31, X
    3556:	91 97       	sbiw	r26, 0x21	; 33
    3558:	80 81       	ld	r24, Z
    355a:	28 2f       	mov	r18, r24
    355c:	30 e0       	ldi	r19, 0x00	; 0
    355e:	c9 01       	movw	r24, r18
    3560:	08 95       	ret

00003562 <__uartHWInit>:
    3562:	0f 93       	push	r16
    3564:	1f 93       	push	r17
    3566:	8c 01       	movw	r16, r24
    3568:	0e 94 8d 06 	call	0xd1a	; 0xd1a <_uartSetBaudRate>
    356c:	d8 01       	movw	r26, r16
    356e:	53 96       	adiw	r26, 0x13	; 19
    3570:	8c 91       	ld	r24, X
    3572:	53 97       	sbiw	r26, 0x13	; 19
    3574:	5a 96       	adiw	r26, 0x1a	; 26
    3576:	ed 91       	ld	r30, X+
    3578:	fc 91       	ld	r31, X
    357a:	5b 97       	sbiw	r26, 0x1b	; 27
    357c:	88 23       	and	r24, r24
    357e:	11 f0       	breq	.+4      	; 0x3584 <__uartHWInit+0x22>
    3580:	80 e9       	ldi	r24, 0x90	; 144
    3582:	01 c0       	rjmp	.+2      	; 0x3586 <__uartHWInit+0x24>
    3584:	88 ed       	ldi	r24, 0xD8	; 216
    3586:	80 83       	st	Z, r24
    3588:	1f 91       	pop	r17
    358a:	0f 91       	pop	r16
    358c:	08 95       	ret

0000358e <rprintf1RamRom>:
    358e:	7f 92       	push	r7
    3590:	8f 92       	push	r8
    3592:	9f 92       	push	r9
    3594:	af 92       	push	r10
    3596:	bf 92       	push	r11
    3598:	cf 92       	push	r12
    359a:	df 92       	push	r13
    359c:	ef 92       	push	r14
    359e:	ff 92       	push	r15
    35a0:	0f 93       	push	r16
    35a2:	1f 93       	push	r17
    35a4:	df 93       	push	r29
    35a6:	cf 93       	push	r28
    35a8:	0f 92       	push	r0
    35aa:	cd b7       	in	r28, 0x3d	; 61
    35ac:	de b7       	in	r29, 0x3e	; 62
    35ae:	79 88       	ldd	r7, Y+17	; 0x11
    35b0:	ca 88       	ldd	r12, Y+18	; 0x12
    35b2:	db 88       	ldd	r13, Y+19	; 0x13
    35b4:	64 e1       	ldi	r22, 0x14	; 20
    35b6:	e6 2e       	mov	r14, r22
    35b8:	f1 2c       	mov	r15, r1
    35ba:	ec 0e       	add	r14, r28
    35bc:	fd 1e       	adc	r15, r29
    35be:	17 c0       	rjmp	.+46     	; 0x35ee <rprintf1RamRom+0x60>
    35c0:	88 23       	and	r24, r24
    35c2:	89 f4       	brne	.+34     	; 0x35e6 <rprintf1RamRom+0x58>
    35c4:	80 e0       	ldi	r24, 0x00	; 0
    35c6:	90 e0       	ldi	r25, 0x00	; 0
    35c8:	0f 90       	pop	r0
    35ca:	cf 91       	pop	r28
    35cc:	df 91       	pop	r29
    35ce:	1f 91       	pop	r17
    35d0:	0f 91       	pop	r16
    35d2:	ff 90       	pop	r15
    35d4:	ef 90       	pop	r14
    35d6:	df 90       	pop	r13
    35d8:	cf 90       	pop	r12
    35da:	bf 90       	pop	r11
    35dc:	af 90       	pop	r10
    35de:	9f 90       	pop	r9
    35e0:	8f 90       	pop	r8
    35e2:	7f 90       	pop	r7
    35e4:	08 95       	ret
    35e6:	0e 94 cb 0a 	call	0x1596	; 0x1596 <rprintfChar>
    35ea:	57 01       	movw	r10, r14
    35ec:	75 01       	movw	r14, r10
    35ee:	96 01       	movw	r18, r12
    35f0:	2f 5f       	subi	r18, 0xFF	; 255
    35f2:	3f 4f       	sbci	r19, 0xFF	; 255
    35f4:	77 20       	and	r7, r7
    35f6:	21 f0       	breq	.+8      	; 0x3600 <rprintf1RamRom+0x72>
    35f8:	f6 01       	movw	r30, r12
    35fa:	69 01       	movw	r12, r18
    35fc:	84 91       	lpm	r24, Z+
    35fe:	03 c0       	rjmp	.+6      	; 0x3606 <rprintf1RamRom+0x78>
    3600:	f6 01       	movw	r30, r12
    3602:	80 81       	ld	r24, Z
    3604:	69 01       	movw	r12, r18
    3606:	85 32       	cpi	r24, 0x25	; 37
    3608:	d9 f6       	brne	.-74     	; 0x35c0 <rprintf1RamRom+0x32>
    360a:	2f 5f       	subi	r18, 0xFF	; 255
    360c:	3f 4f       	sbci	r19, 0xFF	; 255
    360e:	77 20       	and	r7, r7
    3610:	21 f0       	breq	.+8      	; 0x361a <rprintf1RamRom+0x8c>
    3612:	f6 01       	movw	r30, r12
    3614:	69 01       	movw	r12, r18
    3616:	94 91       	lpm	r25, Z+
    3618:	03 c0       	rjmp	.+6      	; 0x3620 <rprintf1RamRom+0x92>
    361a:	f6 01       	movw	r30, r12
    361c:	90 81       	ld	r25, Z
    361e:	69 01       	movw	r12, r18
    3620:	93 37       	cpi	r25, 0x73	; 115
    3622:	a1 f0       	breq	.+40     	; 0x364c <rprintf1RamRom+0xbe>
    3624:	94 37       	cpi	r25, 0x74	; 116
    3626:	38 f4       	brcc	.+14     	; 0x3636 <rprintf1RamRom+0xa8>
    3628:	93 36       	cpi	r25, 0x63	; 99
    362a:	d9 f0       	breq	.+54     	; 0x3662 <rprintf1RamRom+0xd4>
    362c:	94 36       	cpi	r25, 0x64	; 100
    362e:	41 f0       	breq	.+16     	; 0x3640 <rprintf1RamRom+0xb2>
    3630:	95 32       	cpi	r25, 0x25	; 37
    3632:	09 f5       	brne	.+66     	; 0x3676 <rprintf1RamRom+0xe8>
    3634:	25 c0       	rjmp	.+74     	; 0x3680 <rprintf1RamRom+0xf2>
    3636:	95 37       	cpi	r25, 0x75	; 117
    3638:	19 f0       	breq	.+6      	; 0x3640 <rprintf1RamRom+0xb2>
    363a:	98 37       	cpi	r25, 0x78	; 120
    363c:	e1 f4       	brne	.+56     	; 0x3676 <rprintf1RamRom+0xe8>
    363e:	22 c0       	rjmp	.+68     	; 0x3684 <rprintf1RamRom+0xf6>
    3640:	00 e1       	ldi	r16, 0x10	; 16
    3642:	17 e2       	ldi	r17, 0x27	; 39
    3644:	5a e0       	ldi	r21, 0x0A	; 10
    3646:	85 2e       	mov	r8, r21
    3648:	91 2c       	mov	r9, r1
    364a:	21 c0       	rjmp	.+66     	; 0x368e <rprintf1RamRom+0x100>
    364c:	42 e0       	ldi	r20, 0x02	; 2
    364e:	a4 2e       	mov	r10, r20
    3650:	b1 2c       	mov	r11, r1
    3652:	ae 0c       	add	r10, r14
    3654:	bf 1c       	adc	r11, r15
    3656:	f7 01       	movw	r30, r14
    3658:	80 81       	ld	r24, Z
    365a:	91 81       	ldd	r25, Z+1	; 0x01
    365c:	0e 94 ed 0a 	call	0x15da	; 0x15da <rprintfStr>
    3660:	c5 cf       	rjmp	.-118    	; 0x35ec <rprintf1RamRom+0x5e>
    3662:	32 e0       	ldi	r19, 0x02	; 2
    3664:	a3 2e       	mov	r10, r19
    3666:	b1 2c       	mov	r11, r1
    3668:	ae 0c       	add	r10, r14
    366a:	bf 1c       	adc	r11, r15
    366c:	f7 01       	movw	r30, r14
    366e:	80 81       	ld	r24, Z
    3670:	0e 94 cb 0a 	call	0x1596	; 0x1596 <rprintfChar>
    3674:	bb cf       	rjmp	.-138    	; 0x35ec <rprintf1RamRom+0x5e>
    3676:	85 e2       	ldi	r24, 0x25	; 37
    3678:	99 83       	std	Y+1, r25	; 0x01
    367a:	0e 94 cb 0a 	call	0x1596	; 0x1596 <rprintfChar>
    367e:	99 81       	ldd	r25, Y+1	; 0x01
    3680:	89 2f       	mov	r24, r25
    3682:	b1 cf       	rjmp	.-158    	; 0x35e6 <rprintf1RamRom+0x58>
    3684:	00 e0       	ldi	r16, 0x00	; 0
    3686:	10 e1       	ldi	r17, 0x10	; 16
    3688:	20 e1       	ldi	r18, 0x10	; 16
    368a:	82 2e       	mov	r8, r18
    368c:	91 2c       	mov	r9, r1
    368e:	82 e0       	ldi	r24, 0x02	; 2
    3690:	a8 2e       	mov	r10, r24
    3692:	b1 2c       	mov	r11, r1
    3694:	ae 0c       	add	r10, r14
    3696:	bf 1c       	adc	r11, r15
    3698:	f7 01       	movw	r30, r14
    369a:	e0 80       	ld	r14, Z
    369c:	f1 80       	ldd	r15, Z+1	; 0x01
    369e:	94 36       	cpi	r25, 0x64	; 100
    36a0:	51 f4       	brne	.+20     	; 0x36b6 <rprintf1RamRom+0x128>
    36a2:	f7 fe       	sbrs	r15, 7
    36a4:	14 c0       	rjmp	.+40     	; 0x36ce <rprintf1RamRom+0x140>
    36a6:	f0 94       	com	r15
    36a8:	e1 94       	neg	r14
    36aa:	f1 08       	sbc	r15, r1
    36ac:	f3 94       	inc	r15
    36ae:	8d e2       	ldi	r24, 0x2D	; 45
    36b0:	0e 94 cb 0a 	call	0x1596	; 0x1596 <rprintfChar>
    36b4:	0c c0       	rjmp	.+24     	; 0x36ce <rprintf1RamRom+0x140>
    36b6:	95 37       	cpi	r25, 0x75	; 117
    36b8:	69 f4       	brne	.+26     	; 0x36d4 <rprintf1RamRom+0x146>
    36ba:	09 c0       	rjmp	.+18     	; 0x36ce <rprintf1RamRom+0x140>
    36bc:	c8 01       	movw	r24, r16
    36be:	6a e0       	ldi	r22, 0x0A	; 10
    36c0:	70 e0       	ldi	r23, 0x00	; 0
    36c2:	0e 94 51 1d 	call	0x3aa2	; 0x3aa2 <__udivmodhi4>
    36c6:	8b 01       	movw	r16, r22
    36c8:	62 30       	cpi	r22, 0x02	; 2
    36ca:	71 05       	cpc	r23, r1
    36cc:	18 f0       	brcs	.+6      	; 0x36d4 <rprintf1RamRom+0x146>
    36ce:	e0 16       	cp	r14, r16
    36d0:	f1 06       	cpc	r15, r17
    36d2:	a0 f3       	brcs	.-24     	; 0x36bc <rprintf1RamRom+0x12e>
    36d4:	c7 01       	movw	r24, r14
    36d6:	b8 01       	movw	r22, r16
    36d8:	0e 94 51 1d 	call	0x3aa2	; 0x3aa2 <__udivmodhi4>
    36dc:	86 2f       	mov	r24, r22
    36de:	0e 94 10 0b 	call	0x1620	; 0x1620 <rprintfu04>
    36e2:	c7 01       	movw	r24, r14
    36e4:	b8 01       	movw	r22, r16
    36e6:	0e 94 51 1d 	call	0x3aa2	; 0x3aa2 <__udivmodhi4>
    36ea:	7c 01       	movw	r14, r24
    36ec:	c8 01       	movw	r24, r16
    36ee:	b4 01       	movw	r22, r8
    36f0:	0e 94 51 1d 	call	0x3aa2	; 0x3aa2 <__udivmodhi4>
    36f4:	8b 01       	movw	r16, r22
    36f6:	61 15       	cp	r22, r1
    36f8:	71 05       	cpc	r23, r1
    36fa:	61 f7       	brne	.-40     	; 0x36d4 <rprintf1RamRom+0x146>
    36fc:	77 cf       	rjmp	.-274    	; 0x35ec <rprintf1RamRom+0x5e>

000036fe <__scheduleUpdate>:
    36fe:	2f 92       	push	r2
    3700:	3f 92       	push	r3
    3702:	4f 92       	push	r4
    3704:	5f 92       	push	r5
    3706:	6f 92       	push	r6
    3708:	7f 92       	push	r7
    370a:	8f 92       	push	r8
    370c:	9f 92       	push	r9
    370e:	af 92       	push	r10
    3710:	bf 92       	push	r11
    3712:	cf 92       	push	r12
    3714:	df 92       	push	r13
    3716:	ef 92       	push	r14
    3718:	ff 92       	push	r15
    371a:	0f 93       	push	r16
    371c:	1f 93       	push	r17
    371e:	df 93       	push	r29
    3720:	cf 93       	push	r28
    3722:	cd b7       	in	r28, 0x3d	; 61
    3724:	de b7       	in	r29, 0x3e	; 62
    3726:	29 97       	sbiw	r28, 0x09	; 9
    3728:	0f b6       	in	r0, 0x3f	; 63
    372a:	f8 94       	cli
    372c:	de bf       	out	0x3e, r29	; 62
    372e:	0f be       	out	0x3f, r0	; 63
    3730:	cd bf       	out	0x3d, r28	; 61
    3732:	99 87       	std	Y+9, r25	; 0x09
    3734:	88 87       	std	Y+8, r24	; 0x08
    3736:	0e 94 99 10 	call	0x2132	; 0x2132 <compareDetach>
    373a:	2f b7       	in	r18, 0x3f	; 63
    373c:	2f 83       	std	Y+7, r18	; 0x07
    373e:	78 94       	sei
    3740:	8f ef       	ldi	r24, 0xFF	; 255
    3742:	80 93 7f 04 	sts	0x047F, r24
    3746:	10 92 7e 04 	sts	0x047E, r1
    374a:	80 91 41 01 	lds	r24, 0x0141
    374e:	a8 2f       	mov	r26, r24
    3750:	b0 e0       	ldi	r27, 0x00	; 0
    3752:	11 97       	sbiw	r26, 0x01	; 1
    3754:	be 83       	std	Y+6, r27	; 0x06
    3756:	ad 83       	std	Y+5, r26	; 0x05
    3758:	ed e0       	ldi	r30, 0x0D	; 13
    375a:	f0 e0       	ldi	r31, 0x00	; 0
    375c:	ae 9f       	mul	r26, r30
    375e:	50 01       	movw	r10, r0
    3760:	af 9f       	mul	r26, r31
    3762:	b0 0c       	add	r11, r0
    3764:	be 9f       	mul	r27, r30
    3766:	b0 0c       	add	r11, r0
    3768:	11 24       	eor	r1, r1
    376a:	22 ef       	ldi	r18, 0xF2	; 242
    376c:	32 e0       	ldi	r19, 0x02	; 2
    376e:	a2 0e       	add	r10, r18
    3770:	b3 1e       	adc	r11, r19
    3772:	22 24       	eor	r2, r2
    3774:	33 24       	eor	r3, r3
    3776:	21 01       	movw	r4, r2
    3778:	5a c0       	rjmp	.+180    	; 0x382e <__scheduleUpdate+0x130>
    377a:	d5 01       	movw	r26, r10
    377c:	8c 91       	ld	r24, X
    377e:	88 23       	and	r24, r24
    3780:	09 f4       	brne	.+2      	; 0x3784 <__scheduleUpdate+0x86>
    3782:	4c c0       	rjmp	.+152    	; 0x381c <__scheduleUpdate+0x11e>
    3784:	19 96       	adiw	r26, 0x09	; 9
    3786:	6d 90       	ld	r6, X+
    3788:	7d 90       	ld	r7, X+
    378a:	8d 90       	ld	r8, X+
    378c:	9c 90       	ld	r9, X
    378e:	1c 97       	sbiw	r26, 0x0c	; 12
    3790:	15 96       	adiw	r26, 0x05	; 5
    3792:	cd 90       	ld	r12, X+
    3794:	dd 90       	ld	r13, X+
    3796:	ed 90       	ld	r14, X+
    3798:	fc 90       	ld	r15, X
    379a:	18 97       	sbiw	r26, 0x08	; 8
    379c:	c4 01       	movw	r24, r8
    379e:	b3 01       	movw	r22, r6
    37a0:	a7 01       	movw	r20, r14
    37a2:	96 01       	movw	r18, r12
    37a4:	8e 01       	movw	r16, r28
    37a6:	0f 5f       	subi	r16, 0xFF	; 255
    37a8:	1f 4f       	sbci	r17, 0xFF	; 255
    37aa:	0e 94 32 15 	call	0x2a64	; 0x2a64 <clockHasElapsedGetOverflow>
    37ae:	88 23       	and	r24, r24
    37b0:	19 f1       	breq	.+70     	; 0x37f8 <__scheduleUpdate+0xfa>
    37b2:	d5 01       	movw	r26, r10
    37b4:	11 96       	adiw	r26, 0x01	; 1
    37b6:	ed 91       	ld	r30, X+
    37b8:	fc 91       	ld	r31, X
    37ba:	12 97       	sbiw	r26, 0x02	; 2
    37bc:	13 96       	adiw	r26, 0x03	; 3
    37be:	8d 91       	ld	r24, X+
    37c0:	9c 91       	ld	r25, X
    37c2:	14 97       	sbiw	r26, 0x04	; 4
    37c4:	1c 92       	st	X, r1
    37c6:	20 91 7c 04 	lds	r18, 0x047C
    37ca:	30 91 7d 04 	lds	r19, 0x047D
    37ce:	21 50       	subi	r18, 0x01	; 1
    37d0:	30 40       	sbci	r19, 0x00	; 0
    37d2:	30 93 7d 04 	sts	0x047D, r19
    37d6:	20 93 7c 04 	sts	0x047C, r18
    37da:	c6 0c       	add	r12, r6
    37dc:	d7 1c       	adc	r13, r7
    37de:	e8 1c       	adc	r14, r8
    37e0:	f9 1c       	adc	r15, r9
    37e2:	09 81       	ldd	r16, Y+1	; 0x01
    37e4:	1a 81       	ldd	r17, Y+2	; 0x02
    37e6:	2b 81       	ldd	r18, Y+3	; 0x03
    37e8:	3c 81       	ldd	r19, Y+4	; 0x04
    37ea:	b7 01       	movw	r22, r14
    37ec:	a6 01       	movw	r20, r12
    37ee:	09 95       	icall
    37f0:	bf ef       	ldi	r27, 0xFF	; 255
    37f2:	b0 93 7e 04 	sts	0x047E, r27
    37f6:	12 c0       	rjmp	.+36     	; 0x381c <__scheduleUpdate+0x11e>
    37f8:	21 14       	cp	r2, r1
    37fa:	31 04       	cpc	r3, r1
    37fc:	41 04       	cpc	r4, r1
    37fe:	51 04       	cpc	r5, r1
    3800:	49 f0       	breq	.+18     	; 0x3814 <__scheduleUpdate+0x116>
    3802:	89 81       	ldd	r24, Y+1	; 0x01
    3804:	9a 81       	ldd	r25, Y+2	; 0x02
    3806:	ab 81       	ldd	r26, Y+3	; 0x03
    3808:	bc 81       	ldd	r27, Y+4	; 0x04
    380a:	82 15       	cp	r24, r2
    380c:	93 05       	cpc	r25, r3
    380e:	a4 05       	cpc	r26, r4
    3810:	b5 05       	cpc	r27, r5
    3812:	20 f4       	brcc	.+8      	; 0x381c <__scheduleUpdate+0x11e>
    3814:	29 80       	ldd	r2, Y+1	; 0x01
    3816:	3a 80       	ldd	r3, Y+2	; 0x02
    3818:	4b 80       	ldd	r4, Y+3	; 0x03
    381a:	5c 80       	ldd	r5, Y+4	; 0x04
    381c:	ed 81       	ldd	r30, Y+5	; 0x05
    381e:	fe 81       	ldd	r31, Y+6	; 0x06
    3820:	31 97       	sbiw	r30, 0x01	; 1
    3822:	fe 83       	std	Y+6, r31	; 0x06
    3824:	ed 83       	std	Y+5, r30	; 0x05
    3826:	23 ef       	ldi	r18, 0xF3	; 243
    3828:	3f ef       	ldi	r19, 0xFF	; 255
    382a:	a2 0e       	add	r10, r18
    382c:	b3 1e       	adc	r11, r19
    382e:	8d 81       	ldd	r24, Y+5	; 0x05
    3830:	9e 81       	ldd	r25, Y+6	; 0x06
    3832:	8f 5f       	subi	r24, 0xFF	; 255
    3834:	9f 4f       	sbci	r25, 0xFF	; 255
    3836:	09 f0       	breq	.+2      	; 0x383a <__scheduleUpdate+0x13c>
    3838:	a0 cf       	rjmp	.-192    	; 0x377a <__scheduleUpdate+0x7c>
    383a:	80 91 7e 04 	lds	r24, 0x047E
    383e:	88 23       	and	r24, r24
    3840:	09 f0       	breq	.+2      	; 0x3844 <__scheduleUpdate+0x146>
    3842:	81 cf       	rjmp	.-254    	; 0x3746 <__scheduleUpdate+0x48>
    3844:	10 92 7f 04 	sts	0x047F, r1
    3848:	80 91 7c 04 	lds	r24, 0x047C
    384c:	90 91 7d 04 	lds	r25, 0x047D
    3850:	18 16       	cp	r1, r24
    3852:	19 06       	cpc	r1, r25
    3854:	0c f0       	brlt	.+2      	; 0x3858 <__scheduleUpdate+0x15a>
    3856:	44 c0       	rjmp	.+136    	; 0x38e0 <__scheduleUpdate+0x1e2>
    3858:	f0 90 7a 04 	lds	r15, 0x047A
    385c:	e0 90 7b 04 	lds	r14, 0x047B
    3860:	ef 2d       	mov	r30, r15
    3862:	fe 2d       	mov	r31, r14
    3864:	05 91       	lpm	r16, Z+
    3866:	14 91       	lpm	r17, Z+
    3868:	20 91 06 01 	lds	r18, 0x0106
    386c:	30 91 07 01 	lds	r19, 0x0107
    3870:	40 e0       	ldi	r20, 0x00	; 0
    3872:	50 e0       	ldi	r21, 0x00	; 0
    3874:	c2 01       	movw	r24, r4
    3876:	b1 01       	movw	r22, r2
    3878:	0e 94 32 1d 	call	0x3a64	; 0x3a64 <__mulsi3>
    387c:	f8 01       	movw	r30, r16
    387e:	20 81       	ld	r18, Z
    3880:	31 81       	ldd	r19, Z+1	; 0x01
    3882:	40 e0       	ldi	r20, 0x00	; 0
    3884:	50 e0       	ldi	r21, 0x00	; 0
    3886:	0e 94 65 1d 	call	0x3aca	; 0x3aca <__udivmodsi4>
    388a:	59 01       	movw	r10, r18
    388c:	6a 01       	movw	r12, r20
    388e:	8f 2d       	mov	r24, r15
    3890:	9e 2d       	mov	r25, r14
    3892:	0e 94 1f 11 	call	0x223e	; 0x223e <timerGetTOP>
    3896:	7c 01       	movw	r14, r24
    3898:	00 e0       	ldi	r16, 0x00	; 0
    389a:	10 e0       	ldi	r17, 0x00	; 0
    389c:	ae 14       	cp	r10, r14
    389e:	bf 04       	cpc	r11, r15
    38a0:	c0 06       	cpc	r12, r16
    38a2:	d1 06       	cpc	r13, r17
    38a4:	10 f4       	brcc	.+4      	; 0x38aa <__scheduleUpdate+0x1ac>
    38a6:	86 01       	movw	r16, r12
    38a8:	75 01       	movw	r14, r10
    38aa:	80 91 7a 04 	lds	r24, 0x047A
    38ae:	90 91 7b 04 	lds	r25, 0x047B
    38b2:	0e 94 1f 11 	call	0x223e	; 0x223e <timerGetTOP>
    38b6:	8c 01       	movw	r16, r24
    38b8:	80 91 7a 04 	lds	r24, 0x047A
    38bc:	90 91 7b 04 	lds	r25, 0x047B
    38c0:	0e 94 31 0e 	call	0x1c62	; 0x1c62 <timerGetCounter>
    38c4:	8e 0d       	add	r24, r14
    38c6:	9f 1d       	adc	r25, r15
    38c8:	b8 01       	movw	r22, r16
    38ca:	0e 94 51 1d 	call	0x3aa2	; 0x3aa2 <__udivmodhi4>
    38ce:	ac 01       	movw	r20, r24
    38d0:	88 85       	ldd	r24, Y+8	; 0x08
    38d2:	99 85       	ldd	r25, Y+9	; 0x09
    38d4:	6f e7       	ldi	r22, 0x7F	; 127
    38d6:	7b e1       	ldi	r23, 0x1B	; 27
    38d8:	20 e0       	ldi	r18, 0x00	; 0
    38da:	30 e0       	ldi	r19, 0x00	; 0
    38dc:	0e 94 9a 13 	call	0x2734	; 0x2734 <compareAttach>
    38e0:	ff 81       	ldd	r31, Y+7	; 0x07
    38e2:	ff bf       	out	0x3f, r31	; 63
    38e4:	29 96       	adiw	r28, 0x09	; 9
    38e6:	0f b6       	in	r0, 0x3f	; 63
    38e8:	f8 94       	cli
    38ea:	de bf       	out	0x3e, r29	; 62
    38ec:	0f be       	out	0x3f, r0	; 63
    38ee:	cd bf       	out	0x3d, r28	; 61
    38f0:	cf 91       	pop	r28
    38f2:	df 91       	pop	r29
    38f4:	1f 91       	pop	r17
    38f6:	0f 91       	pop	r16
    38f8:	ff 90       	pop	r15
    38fa:	ef 90       	pop	r14
    38fc:	df 90       	pop	r13
    38fe:	cf 90       	pop	r12
    3900:	bf 90       	pop	r11
    3902:	af 90       	pop	r10
    3904:	9f 90       	pop	r9
    3906:	8f 90       	pop	r8
    3908:	7f 90       	pop	r7
    390a:	6f 90       	pop	r6
    390c:	5f 90       	pop	r5
    390e:	4f 90       	pop	r4
    3910:	3f 90       	pop	r3
    3912:	2f 90       	pop	r2
    3914:	08 95       	ret

00003916 <scheduleJob>:
    3916:	2f 92       	push	r2
    3918:	3f 92       	push	r3
    391a:	4f 92       	push	r4
    391c:	5f 92       	push	r5
    391e:	6f 92       	push	r6
    3920:	7f 92       	push	r7
    3922:	8f 92       	push	r8
    3924:	9f 92       	push	r9
    3926:	af 92       	push	r10
    3928:	bf 92       	push	r11
    392a:	cf 92       	push	r12
    392c:	df 92       	push	r13
    392e:	ef 92       	push	r14
    3930:	ff 92       	push	r15
    3932:	0f 93       	push	r16
    3934:	1f 93       	push	r17
    3936:	df 93       	push	r29
    3938:	cf 93       	push	r28
    393a:	00 d0       	rcall	.+0      	; 0x393c <scheduleJob+0x26>
    393c:	00 d0       	rcall	.+0      	; 0x393e <scheduleJob+0x28>
    393e:	cd b7       	in	r28, 0x3d	; 61
    3940:	de b7       	in	r29, 0x3e	; 62
    3942:	1c 01       	movw	r2, r24
    3944:	2b 01       	movw	r4, r22
    3946:	49 01       	movw	r8, r18
    3948:	5a 01       	movw	r10, r20
    394a:	67 01       	movw	r12, r14
    394c:	78 01       	movw	r14, r16
    394e:	88 ee       	ldi	r24, 0xE8	; 232
    3950:	c8 16       	cp	r12, r24
    3952:	83 e0       	ldi	r24, 0x03	; 3
    3954:	d8 06       	cpc	r13, r24
    3956:	80 e0       	ldi	r24, 0x00	; 0
    3958:	e8 06       	cpc	r14, r24
    395a:	80 e0       	ldi	r24, 0x00	; 0
    395c:	f8 06       	cpc	r15, r24
    395e:	38 f4       	brcc	.+14     	; 0x396e <scheduleJob+0x58>
    3960:	80 91 7f 04 	lds	r24, 0x047F
    3964:	88 23       	and	r24, r24
    3966:	c1 f1       	breq	.+112    	; 0x39d8 <scheduleJob+0xc2>
    3968:	8f ef       	ldi	r24, 0xFF	; 255
    396a:	80 93 7e 04 	sts	0x047E, r24
    396e:	6f b7       	in	r22, 0x3f	; 63
    3970:	f8 94       	cli
    3972:	80 91 41 01 	lds	r24, 0x0141
    3976:	48 2f       	mov	r20, r24
    3978:	50 e0       	ldi	r21, 0x00	; 0
    397a:	a2 ef       	ldi	r26, 0xF2	; 242
    397c:	b2 e0       	ldi	r27, 0x02	; 2
    397e:	20 e0       	ldi	r18, 0x00	; 0
    3980:	30 e0       	ldi	r19, 0x00	; 0
    3982:	20 c0       	rjmp	.+64     	; 0x39c4 <scheduleJob+0xae>
    3984:	fd 01       	movw	r30, r26
    3986:	8c 91       	ld	r24, X
    3988:	1d 96       	adiw	r26, 0x0d	; 13
    398a:	88 23       	and	r24, r24
    398c:	c9 f4       	brne	.+50     	; 0x39c0 <scheduleJob+0xaa>
    398e:	8f ef       	ldi	r24, 0xFF	; 255
    3990:	80 83       	st	Z, r24
    3992:	32 82       	std	Z+2, r3	; 0x02
    3994:	21 82       	std	Z+1, r2	; 0x01
    3996:	54 82       	std	Z+4, r5	; 0x04
    3998:	43 82       	std	Z+3, r4	; 0x03
    399a:	81 86       	std	Z+9, r8	; 0x09
    399c:	92 86       	std	Z+10, r9	; 0x0a
    399e:	a3 86       	std	Z+11, r10	; 0x0b
    39a0:	b4 86       	std	Z+12, r11	; 0x0c
    39a2:	c5 82       	std	Z+5, r12	; 0x05
    39a4:	d6 82       	std	Z+6, r13	; 0x06
    39a6:	e7 82       	std	Z+7, r14	; 0x07
    39a8:	f0 86       	std	Z+8, r15	; 0x08
    39aa:	80 91 7c 04 	lds	r24, 0x047C
    39ae:	90 91 7d 04 	lds	r25, 0x047D
    39b2:	01 96       	adiw	r24, 0x01	; 1
    39b4:	90 93 7d 04 	sts	0x047D, r25
    39b8:	80 93 7c 04 	sts	0x047C, r24
    39bc:	8f ef       	ldi	r24, 0xFF	; 255
    39be:	06 c0       	rjmp	.+12     	; 0x39cc <scheduleJob+0xb6>
    39c0:	2f 5f       	subi	r18, 0xFF	; 255
    39c2:	3f 4f       	sbci	r19, 0xFF	; 255
    39c4:	24 17       	cp	r18, r20
    39c6:	35 07       	cpc	r19, r21
    39c8:	ec f2       	brlt	.-70     	; 0x3984 <scheduleJob+0x6e>
    39ca:	80 e0       	ldi	r24, 0x00	; 0
    39cc:	6f bf       	out	0x3f, r22	; 63
    39ce:	88 23       	and	r24, r24
    39d0:	59 f5       	brne	.+86     	; 0x3a28 <scheduleJob+0x112>
    39d2:	8f ef       	ldi	r24, 0xFF	; 255
    39d4:	0e 94 2d 10 	call	0x205a	; 0x205a <setError>
    39d8:	3e 01       	movw	r6, r28
    39da:	08 94       	sec
    39dc:	61 1c       	adc	r6, r1
    39de:	71 1c       	adc	r7, r1
    39e0:	c5 01       	movw	r24, r10
    39e2:	b4 01       	movw	r22, r8
    39e4:	a7 01       	movw	r20, r14
    39e6:	96 01       	movw	r18, r12
    39e8:	83 01       	movw	r16, r6
    39ea:	0e 94 32 15 	call	0x2a64	; 0x2a64 <clockHasElapsedGetOverflow>
    39ee:	88 23       	and	r24, r24
    39f0:	b9 f3       	breq	.-18     	; 0x39e0 <scheduleJob+0xca>
    39f2:	c8 0c       	add	r12, r8
    39f4:	d9 1c       	adc	r13, r9
    39f6:	ea 1c       	adc	r14, r10
    39f8:	fb 1c       	adc	r15, r11
    39fa:	09 81       	ldd	r16, Y+1	; 0x01
    39fc:	1a 81       	ldd	r17, Y+2	; 0x02
    39fe:	2b 81       	ldd	r18, Y+3	; 0x03
    3a00:	3c 81       	ldd	r19, Y+4	; 0x04
    3a02:	c2 01       	movw	r24, r4
    3a04:	b7 01       	movw	r22, r14
    3a06:	a6 01       	movw	r20, r12
    3a08:	f1 01       	movw	r30, r2
    3a0a:	09 95       	icall
    3a0c:	11 c0       	rjmp	.+34     	; 0x3a30 <scheduleJob+0x11a>
    3a0e:	e0 91 7a 04 	lds	r30, 0x047A
    3a12:	f0 91 7b 04 	lds	r31, 0x047B
    3a16:	77 96       	adiw	r30, 0x17	; 23
    3a18:	85 91       	lpm	r24, Z+
    3a1a:	94 91       	lpm	r25, Z+
    3a1c:	40 96       	adiw	r24, 0x10	; 16
    3a1e:	60 e0       	ldi	r22, 0x00	; 0
    3a20:	70 e0       	ldi	r23, 0x00	; 0
    3a22:	0e 94 7f 1b 	call	0x36fe	; 0x36fe <__scheduleUpdate>
    3a26:	04 c0       	rjmp	.+8      	; 0x3a30 <scheduleJob+0x11a>
    3a28:	80 91 7f 04 	lds	r24, 0x047F
    3a2c:	88 23       	and	r24, r24
    3a2e:	79 f3       	breq	.-34     	; 0x3a0e <scheduleJob+0xf8>
    3a30:	0f 90       	pop	r0
    3a32:	0f 90       	pop	r0
    3a34:	0f 90       	pop	r0
    3a36:	0f 90       	pop	r0
    3a38:	cf 91       	pop	r28
    3a3a:	df 91       	pop	r29
    3a3c:	1f 91       	pop	r17
    3a3e:	0f 91       	pop	r16
    3a40:	ff 90       	pop	r15
    3a42:	ef 90       	pop	r14
    3a44:	df 90       	pop	r13
    3a46:	cf 90       	pop	r12
    3a48:	bf 90       	pop	r11
    3a4a:	af 90       	pop	r10
    3a4c:	9f 90       	pop	r9
    3a4e:	8f 90       	pop	r8
    3a50:	7f 90       	pop	r7
    3a52:	6f 90       	pop	r6
    3a54:	5f 90       	pop	r5
    3a56:	4f 90       	pop	r4
    3a58:	3f 90       	pop	r3
    3a5a:	2f 90       	pop	r2
    3a5c:	08 95       	ret

00003a5e <exit>:
    3a5e:	f8 94       	cli
    3a60:	0c 94 a2 1d 	jmp	0x3b44	; 0x3b44 <_exit>

00003a64 <__mulsi3>:
    3a64:	62 9f       	mul	r22, r18
    3a66:	d0 01       	movw	r26, r0
    3a68:	73 9f       	mul	r23, r19
    3a6a:	f0 01       	movw	r30, r0
    3a6c:	82 9f       	mul	r24, r18
    3a6e:	e0 0d       	add	r30, r0
    3a70:	f1 1d       	adc	r31, r1
    3a72:	64 9f       	mul	r22, r20
    3a74:	e0 0d       	add	r30, r0
    3a76:	f1 1d       	adc	r31, r1
    3a78:	92 9f       	mul	r25, r18
    3a7a:	f0 0d       	add	r31, r0
    3a7c:	83 9f       	mul	r24, r19
    3a7e:	f0 0d       	add	r31, r0
    3a80:	74 9f       	mul	r23, r20
    3a82:	f0 0d       	add	r31, r0
    3a84:	65 9f       	mul	r22, r21
    3a86:	f0 0d       	add	r31, r0
    3a88:	99 27       	eor	r25, r25
    3a8a:	72 9f       	mul	r23, r18
    3a8c:	b0 0d       	add	r27, r0
    3a8e:	e1 1d       	adc	r30, r1
    3a90:	f9 1f       	adc	r31, r25
    3a92:	63 9f       	mul	r22, r19
    3a94:	b0 0d       	add	r27, r0
    3a96:	e1 1d       	adc	r30, r1
    3a98:	f9 1f       	adc	r31, r25
    3a9a:	bd 01       	movw	r22, r26
    3a9c:	cf 01       	movw	r24, r30
    3a9e:	11 24       	eor	r1, r1
    3aa0:	08 95       	ret

00003aa2 <__udivmodhi4>:
    3aa2:	aa 1b       	sub	r26, r26
    3aa4:	bb 1b       	sub	r27, r27
    3aa6:	51 e1       	ldi	r21, 0x11	; 17
    3aa8:	07 c0       	rjmp	.+14     	; 0x3ab8 <__udivmodhi4_ep>

00003aaa <__udivmodhi4_loop>:
    3aaa:	aa 1f       	adc	r26, r26
    3aac:	bb 1f       	adc	r27, r27
    3aae:	a6 17       	cp	r26, r22
    3ab0:	b7 07       	cpc	r27, r23
    3ab2:	10 f0       	brcs	.+4      	; 0x3ab8 <__udivmodhi4_ep>
    3ab4:	a6 1b       	sub	r26, r22
    3ab6:	b7 0b       	sbc	r27, r23

00003ab8 <__udivmodhi4_ep>:
    3ab8:	88 1f       	adc	r24, r24
    3aba:	99 1f       	adc	r25, r25
    3abc:	5a 95       	dec	r21
    3abe:	a9 f7       	brne	.-22     	; 0x3aaa <__udivmodhi4_loop>
    3ac0:	80 95       	com	r24
    3ac2:	90 95       	com	r25
    3ac4:	bc 01       	movw	r22, r24
    3ac6:	cd 01       	movw	r24, r26
    3ac8:	08 95       	ret

00003aca <__udivmodsi4>:
    3aca:	a1 e2       	ldi	r26, 0x21	; 33
    3acc:	1a 2e       	mov	r1, r26
    3ace:	aa 1b       	sub	r26, r26
    3ad0:	bb 1b       	sub	r27, r27
    3ad2:	fd 01       	movw	r30, r26
    3ad4:	0d c0       	rjmp	.+26     	; 0x3af0 <__udivmodsi4_ep>

00003ad6 <__udivmodsi4_loop>:
    3ad6:	aa 1f       	adc	r26, r26
    3ad8:	bb 1f       	adc	r27, r27
    3ada:	ee 1f       	adc	r30, r30
    3adc:	ff 1f       	adc	r31, r31
    3ade:	a2 17       	cp	r26, r18
    3ae0:	b3 07       	cpc	r27, r19
    3ae2:	e4 07       	cpc	r30, r20
    3ae4:	f5 07       	cpc	r31, r21
    3ae6:	20 f0       	brcs	.+8      	; 0x3af0 <__udivmodsi4_ep>
    3ae8:	a2 1b       	sub	r26, r18
    3aea:	b3 0b       	sbc	r27, r19
    3aec:	e4 0b       	sbc	r30, r20
    3aee:	f5 0b       	sbc	r31, r21

00003af0 <__udivmodsi4_ep>:
    3af0:	66 1f       	adc	r22, r22
    3af2:	77 1f       	adc	r23, r23
    3af4:	88 1f       	adc	r24, r24
    3af6:	99 1f       	adc	r25, r25
    3af8:	1a 94       	dec	r1
    3afa:	69 f7       	brne	.-38     	; 0x3ad6 <__udivmodsi4_loop>
    3afc:	60 95       	com	r22
    3afe:	70 95       	com	r23
    3b00:	80 95       	com	r24
    3b02:	90 95       	com	r25
    3b04:	9b 01       	movw	r18, r22
    3b06:	ac 01       	movw	r20, r24
    3b08:	bd 01       	movw	r22, r26
    3b0a:	cf 01       	movw	r24, r30
    3b0c:	08 95       	ret

00003b0e <__divmodsi4>:
    3b0e:	97 fb       	bst	r25, 7
    3b10:	09 2e       	mov	r0, r25
    3b12:	05 26       	eor	r0, r21
    3b14:	0e d0       	rcall	.+28     	; 0x3b32 <__divmodsi4_neg1>
    3b16:	57 fd       	sbrc	r21, 7
    3b18:	04 d0       	rcall	.+8      	; 0x3b22 <__divmodsi4_neg2>
    3b1a:	d7 df       	rcall	.-82     	; 0x3aca <__udivmodsi4>
    3b1c:	0a d0       	rcall	.+20     	; 0x3b32 <__divmodsi4_neg1>
    3b1e:	00 1c       	adc	r0, r0
    3b20:	38 f4       	brcc	.+14     	; 0x3b30 <__divmodsi4_exit>

00003b22 <__divmodsi4_neg2>:
    3b22:	50 95       	com	r21
    3b24:	40 95       	com	r20
    3b26:	30 95       	com	r19
    3b28:	21 95       	neg	r18
    3b2a:	3f 4f       	sbci	r19, 0xFF	; 255
    3b2c:	4f 4f       	sbci	r20, 0xFF	; 255
    3b2e:	5f 4f       	sbci	r21, 0xFF	; 255

00003b30 <__divmodsi4_exit>:
    3b30:	08 95       	ret

00003b32 <__divmodsi4_neg1>:
    3b32:	f6 f7       	brtc	.-4      	; 0x3b30 <__divmodsi4_exit>
    3b34:	90 95       	com	r25
    3b36:	80 95       	com	r24
    3b38:	70 95       	com	r23
    3b3a:	61 95       	neg	r22
    3b3c:	7f 4f       	sbci	r23, 0xFF	; 255
    3b3e:	8f 4f       	sbci	r24, 0xFF	; 255
    3b40:	9f 4f       	sbci	r25, 0xFF	; 255
    3b42:	08 95       	ret

00003b44 <_exit>:
    3b44:	f8 94       	cli

00003b46 <__stop_program>:
    3b46:	ff cf       	rjmp	.-2      	; 0x3b46 <__stop_program>
