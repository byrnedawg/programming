Archive member included because of file (symbol)

c:/program files (x86)/atmel/avr studio 5.0/avr toolchain/bin/../lib/gcc/avr/4.5.1/avr4\libgcc.a(_divmodsi4.o)
                              TWI.o (__divmodsi4)
c:/program files (x86)/atmel/avr studio 5.0/avr toolchain/bin/../lib/gcc/avr/4.5.1/avr4\libgcc.a(_exit.o)
                              c:/program files (x86)/atmel/avr studio 5.0/avr toolchain/bin/../lib/gcc/avr/4.5.1/../../../../avr/lib/avr4/crtm8.o (exit)
c:/program files (x86)/atmel/avr studio 5.0/avr toolchain/bin/../lib/gcc/avr/4.5.1/avr4\libgcc.a(_copy_data.o)
                              TWI.o (__do_copy_data)
c:/program files (x86)/atmel/avr studio 5.0/avr toolchain/bin/../lib/gcc/avr/4.5.1/avr4\libgcc.a(_clear_bss.o)
                              I2C Slave.o (__do_clear_bss)
c:/program files (x86)/atmel/avr studio 5.0/avr toolchain/bin/../lib/gcc/avr/4.5.1/avr4\libgcc.a(_udivmodsi4.o)
                              c:/program files (x86)/atmel/avr studio 5.0/avr toolchain/bin/../lib/gcc/avr/4.5.1/avr4\libgcc.a(_divmodsi4.o) (__udivmodsi4)

Allocating common symbols
Common symbol       size              file

TWI_write_bytes     0x2               I2C Slave.o
TWI_buffer_max      0x2               I2C Slave.o
TWI_master_state    0x1               I2C Slave.o
I2C_buffer          0x19              I2C Slave.o
TWI_status          0x1               I2C Slave.o
p_TWI_buffer        0x2               I2C Slave.o
TWI_error           0x1               I2C Slave.o
TWI_read_bytes      0x2               I2C Slave.o
TWI_return_result   0x2               I2C Slave.o
TWI_target_slave_addr
                    0x1               I2C Slave.o
TWI_buffer_len      0x1               I2C Slave.o
TWI_busy            0x1               I2C Slave.o
TWI_operation       0x1               I2C Slave.o
TWI_bytes_returned  0x2               I2C Slave.o
TWI_buffer_pos      0x2               I2C Slave.o

Memory Configuration

Name             Origin             Length             Attributes
text             0x00000000         0x00002000         xr
data             0x00800060         0x0000ffa0         rw !x
eeprom           0x00810000         0x00010000         rw !x
fuse             0x00820000         0x00000400         rw !x
lock             0x00830000         0x00000400         rw !x
signature        0x00840000         0x00000400         rw !x
*default*        0x00000000         0xffffffff

Linker script and memory map

LOAD c:/program files (x86)/atmel/avr studio 5.0/avr toolchain/bin/../lib/gcc/avr/4.5.1/../../../../avr/lib/avr4/crtm8.o
LOAD I2C Slave.o
LOAD TWI.o
LOAD c:/program files (x86)/atmel/avr studio 5.0/avr toolchain/bin/../lib/gcc/avr/4.5.1/avr4\libgcc.a
LOAD c:/program files (x86)/atmel/avr studio 5.0/avr toolchain/bin/../lib/gcc/avr/4.5.1/../../../../avr/lib/avr4\libc.a
LOAD c:/program files (x86)/atmel/avr studio 5.0/avr toolchain/bin/../lib/gcc/avr/4.5.1/avr4\libgcc.a

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x00000000      0x906
 *(.vectors)
 .vectors       0x00000000       0x26 c:/program files (x86)/atmel/avr studio 5.0/avr toolchain/bin/../lib/gcc/avr/4.5.1/../../../../avr/lib/avr4/crtm8.o
                0x00000000                __vector_default
                0x00000000                __vectors
 *(.vectors)
 *(.progmem.gcc*)
 .progmem.gcc_sw_table
                0x00000026      0x182 TWI.o
 *(.progmem*)
                0x000001a8                . = ALIGN (0x2)
                0x000001a8                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x000001a8        0x0 linker stubs
 *(.trampolines*)
                0x000001a8                __trampolines_end = .
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x000001a8                __ctors_start = .
 *(.ctors)
                0x000001a8                __ctors_end = .
                0x000001a8                __dtors_start = .
 *(.dtors)
                0x000001a8                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x000001a8        0x0 c:/program files (x86)/atmel/avr studio 5.0/avr toolchain/bin/../lib/gcc/avr/4.5.1/../../../../avr/lib/avr4/crtm8.o
                0x000001a8                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x000001a8        0xc c:/program files (x86)/atmel/avr studio 5.0/avr toolchain/bin/../lib/gcc/avr/4.5.1/../../../../avr/lib/avr4/crtm8.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x000001b4       0x16 c:/program files (x86)/atmel/avr studio 5.0/avr toolchain/bin/../lib/gcc/avr/4.5.1/avr4\libgcc.a(_copy_data.o)
                0x000001b4                __do_copy_data
 .init4         0x000001ca       0x10 c:/program files (x86)/atmel/avr studio 5.0/avr toolchain/bin/../lib/gcc/avr/4.5.1/avr4\libgcc.a(_clear_bss.o)
                0x000001ca                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x000001da        0x4 c:/program files (x86)/atmel/avr studio 5.0/avr toolchain/bin/../lib/gcc/avr/4.5.1/../../../../avr/lib/avr4/crtm8.o
 *(.init9)
 *(.text)
 .text          0x000001de        0x2 c:/program files (x86)/atmel/avr studio 5.0/avr toolchain/bin/../lib/gcc/avr/4.5.1/../../../../avr/lib/avr4/crtm8.o
                0x000001de                __vector_1
                0x000001de                __vector_12
                0x000001de                __bad_interrupt
                0x000001de                __vector_6
                0x000001de                __vector_3
                0x000001de                __vector_11
                0x000001de                __vector_13
                0x000001de                __vector_7
                0x000001de                __vector_5
                0x000001de                __vector_4
                0x000001de                __vector_9
                0x000001de                __vector_2
                0x000001de                __vector_15
                0x000001de                __vector_8
                0x000001de                __vector_14
                0x000001de                __vector_10
                0x000001de                __vector_16
                0x000001de                __vector_18
 .text          0x000001e0       0x7c I2C Slave.o
                0x000001e0                main
                0x0000022a                handle_I2C_interrupt
 .text          0x0000025c      0x62c TWI.o
                0x0000025c                TWI_init
                0x00000320                TWI_master_start_write
                0x00000390                TWI_master_start_read
                0x00000400                TWI_master_start_write_then_read
                0x000004aa                TWI_enable_slave_mode
                0x00000506                __vector_17
 .text          0x00000888        0x0 c:/program files (x86)/atmel/avr studio 5.0/avr toolchain/bin/../lib/gcc/avr/4.5.1/avr4\libgcc.a(_divmodsi4.o)
 .text          0x00000888        0x0 c:/program files (x86)/atmel/avr studio 5.0/avr toolchain/bin/../lib/gcc/avr/4.5.1/avr4\libgcc.a(_exit.o)
 .text          0x00000888        0x0 c:/program files (x86)/atmel/avr studio 5.0/avr toolchain/bin/../lib/gcc/avr/4.5.1/avr4\libgcc.a(_copy_data.o)
 .text          0x00000888        0x0 c:/program files (x86)/atmel/avr studio 5.0/avr toolchain/bin/../lib/gcc/avr/4.5.1/avr4\libgcc.a(_clear_bss.o)
 .text          0x00000888        0x0 c:/program files (x86)/atmel/avr studio 5.0/avr toolchain/bin/../lib/gcc/avr/4.5.1/avr4\libgcc.a(_udivmodsi4.o)
                0x00000888                . = ALIGN (0x2)
 *(.text.*)
 .text.libgcc   0x00000888       0x36 c:/program files (x86)/atmel/avr studio 5.0/avr toolchain/bin/../lib/gcc/avr/4.5.1/avr4\libgcc.a(_divmodsi4.o)
                0x00000888                __divmodsi4
 .text.libgcc   0x000008be        0x0 c:/program files (x86)/atmel/avr studio 5.0/avr toolchain/bin/../lib/gcc/avr/4.5.1/avr4\libgcc.a(_exit.o)
 .text.libgcc   0x000008be        0x0 c:/program files (x86)/atmel/avr studio 5.0/avr toolchain/bin/../lib/gcc/avr/4.5.1/avr4\libgcc.a(_copy_data.o)
 .text.libgcc   0x000008be        0x0 c:/program files (x86)/atmel/avr studio 5.0/avr toolchain/bin/../lib/gcc/avr/4.5.1/avr4\libgcc.a(_clear_bss.o)
 .text.libgcc   0x000008be       0x44 c:/program files (x86)/atmel/avr studio 5.0/avr toolchain/bin/../lib/gcc/avr/4.5.1/avr4\libgcc.a(_udivmodsi4.o)
                0x000008be                __udivmodsi4
                0x00000902                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x00000902        0x0 c:/program files (x86)/atmel/avr studio 5.0/avr toolchain/bin/../lib/gcc/avr/4.5.1/avr4\libgcc.a(_exit.o)
                0x00000902                _exit
                0x00000902                exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x00000902        0x4 c:/program files (x86)/atmel/avr studio 5.0/avr toolchain/bin/../lib/gcc/avr/4.5.1/avr4\libgcc.a(_exit.o)
 *(.fini0)
                0x00000906                _etext = .

.data           0x00800060        0x0 load address 0x00000906
                0x00800060                PROVIDE (__data_start, .)
 *(.data)
 .data          0x00800060        0x0 c:/program files (x86)/atmel/avr studio 5.0/avr toolchain/bin/../lib/gcc/avr/4.5.1/../../../../avr/lib/avr4/crtm8.o
 .data          0x00800060        0x0 I2C Slave.o
 .data          0x00800060        0x0 TWI.o
 .data          0x00800060        0x0 c:/program files (x86)/atmel/avr studio 5.0/avr toolchain/bin/../lib/gcc/avr/4.5.1/avr4\libgcc.a(_divmodsi4.o)
 .data          0x00800060        0x0 c:/program files (x86)/atmel/avr studio 5.0/avr toolchain/bin/../lib/gcc/avr/4.5.1/avr4\libgcc.a(_exit.o)
 .data          0x00800060        0x0 c:/program files (x86)/atmel/avr studio 5.0/avr toolchain/bin/../lib/gcc/avr/4.5.1/avr4\libgcc.a(_copy_data.o)
 .data          0x00800060        0x0 c:/program files (x86)/atmel/avr studio 5.0/avr toolchain/bin/../lib/gcc/avr/4.5.1/avr4\libgcc.a(_clear_bss.o)
 .data          0x00800060        0x0 c:/program files (x86)/atmel/avr studio 5.0/avr toolchain/bin/../lib/gcc/avr/4.5.1/avr4\libgcc.a(_udivmodsi4.o)
 *(.data*)
 *(.rodata)
 *(.rodata*)
 *(.gnu.linkonce.d*)
                0x00800060                . = ALIGN (0x2)
                0x00800060                _edata = .
                0x00800060                PROVIDE (__data_end, .)

.bss            0x00800060       0x2e
                0x00800060                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x00800060        0x0 c:/program files (x86)/atmel/avr studio 5.0/avr toolchain/bin/../lib/gcc/avr/4.5.1/../../../../avr/lib/avr4/crtm8.o
 .bss           0x00800060        0x0 I2C Slave.o
 .bss           0x00800060        0x0 TWI.o
 .bss           0x00800060        0x0 c:/program files (x86)/atmel/avr studio 5.0/avr toolchain/bin/../lib/gcc/avr/4.5.1/avr4\libgcc.a(_divmodsi4.o)
 .bss           0x00800060        0x0 c:/program files (x86)/atmel/avr studio 5.0/avr toolchain/bin/../lib/gcc/avr/4.5.1/avr4\libgcc.a(_exit.o)
 .bss           0x00800060        0x0 c:/program files (x86)/atmel/avr studio 5.0/avr toolchain/bin/../lib/gcc/avr/4.5.1/avr4\libgcc.a(_copy_data.o)
 .bss           0x00800060        0x0 c:/program files (x86)/atmel/avr studio 5.0/avr toolchain/bin/../lib/gcc/avr/4.5.1/avr4\libgcc.a(_clear_bss.o)
 .bss           0x00800060        0x0 c:/program files (x86)/atmel/avr studio 5.0/avr toolchain/bin/../lib/gcc/avr/4.5.1/avr4\libgcc.a(_udivmodsi4.o)
 *(.bss*)
 *(COMMON)
 COMMON         0x00800060       0x2e I2C Slave.o
                0x00800060                TWI_write_bytes
                0x00800062                TWI_buffer_max
                0x00800064                TWI_master_state
                0x00800065                I2C_buffer
                0x0080007e                TWI_status
                0x0080007f                p_TWI_buffer
                0x00800081                TWI_error
                0x00800082                TWI_read_bytes
                0x00800084                TWI_return_result
                0x00800086                TWI_target_slave_addr
                0x00800087                TWI_buffer_len
                0x00800088                TWI_busy
                0x00800089                TWI_operation
                0x0080008a                TWI_bytes_returned
                0x0080008c                TWI_buffer_pos
                0x0080008e                PROVIDE (__bss_end, .)
                0x00000906                __data_load_start = LOADADDR (.data)
                0x00000906                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x0080008e        0x0
                0x0080008e                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x0080008e                PROVIDE (__noinit_end, .)
                0x0080008e                _end = .
                0x0080008e                PROVIDE (__heap_start, .)

.eeprom         0x00810000        0x0
 *(.eeprom*)
                0x00810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.stab           0x00000000      0x6cc
 *(.stab)
 .stab          0x00000000      0x6cc c:/program files (x86)/atmel/avr studio 5.0/avr toolchain/bin/../lib/gcc/avr/4.5.1/../../../../avr/lib/avr4/crtm8.o

.stabstr        0x00000000       0x85
 *(.stabstr)
 .stabstr       0x00000000       0x85 c:/program files (x86)/atmel/avr studio 5.0/avr toolchain/bin/../lib/gcc/avr/4.5.1/../../../../avr/lib/avr4/crtm8.o

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment
 *(.comment)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges  0x00000000       0x40
 *(.debug_aranges)
 .debug_aranges
                0x00000000       0x20 I2C Slave.o
 .debug_aranges
                0x00000020       0x20 TWI.o

.debug_pubnames
                0x00000000      0x2f8
 *(.debug_pubnames)
 .debug_pubnames
                0x00000000      0x14c I2C Slave.o
 .debug_pubnames
                0x0000014c      0x1ac TWI.o

.debug_info     0x00000000      0x5e4
 *(.debug_info)
 .debug_info    0x00000000      0x229 I2C Slave.o
 .debug_info    0x00000229      0x3bb TWI.o
 *(.gnu.linkonce.wi.*)

.debug_abbrev   0x00000000      0x189
 *(.debug_abbrev)
 .debug_abbrev  0x00000000       0xc6 I2C Slave.o
 .debug_abbrev  0x000000c6       0xc3 TWI.o

.debug_line     0x00000000      0x578
 *(.debug_line)
 .debug_line    0x00000000      0x11a I2C Slave.o
 .debug_line    0x0000011a      0x45e TWI.o

.debug_frame    0x00000000       0xa0
 *(.debug_frame)
 .debug_frame   0x00000000       0x30 I2C Slave.o
 .debug_frame   0x00000030       0x70 TWI.o

.debug_str      0x00000000      0x2a4
 *(.debug_str)
 .debug_str     0x00000000      0x1d5 I2C Slave.o
                                0x215 (size before relaxing)
 .debug_str     0x000001d5       0xcf TWI.o
                                0x2b5 (size before relaxing)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)
OUTPUT(I2C Slave.elf elf32-avr)
LOAD linker stubs

.debug_pubtypes
                0x00000000       0x56
 .debug_pubtypes
                0x00000000       0x2b I2C Slave.o
 .debug_pubtypes
                0x0000002b       0x2b TWI.o
