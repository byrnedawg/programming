
Retrolit_Tx.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00001158  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         0000000e  00800060  00001158  000011ec  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          0000006f  0080006e  0080006e  000011fa  2**0
                  ALLOC
  3 .stab         000006b4  00000000  00000000  000011fc  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      00000085  00000000  00000000  000018b0  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_aranges 00000160  00000000  00000000  00001935  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_pubnames 000002b8  00000000  00000000  00001a95  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_info   000020b8  00000000  00000000  00001d4d  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 00000f5d  00000000  00000000  00003e05  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   000015fa  00000000  00000000  00004d62  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_frame  00000240  00000000  00000000  0000635c  2**2
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    000004bf  00000000  00000000  0000659c  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_loc    00000a79  00000000  00000000  00006a5b  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_pubtypes 000005a0  00000000  00000000  000074d4  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_ranges 00000030  00000000  00000000  00007a74  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	12 c0       	rjmp	.+36     	; 0x26 <__ctors_end>
       2:	2a c0       	rjmp	.+84     	; 0x58 <__bad_interrupt>
       4:	29 c0       	rjmp	.+82     	; 0x58 <__bad_interrupt>
       6:	28 c0       	rjmp	.+80     	; 0x58 <__bad_interrupt>
       8:	27 c0       	rjmp	.+78     	; 0x58 <__bad_interrupt>
       a:	26 c0       	rjmp	.+76     	; 0x58 <__bad_interrupt>
       c:	25 c0       	rjmp	.+74     	; 0x58 <__bad_interrupt>
       e:	24 c0       	rjmp	.+72     	; 0x58 <__bad_interrupt>
      10:	23 c0       	rjmp	.+70     	; 0x58 <__bad_interrupt>
      12:	22 c0       	rjmp	.+68     	; 0x58 <__bad_interrupt>
      14:	21 c0       	rjmp	.+66     	; 0x58 <__bad_interrupt>
      16:	20 c0       	rjmp	.+64     	; 0x58 <__bad_interrupt>
      18:	1f c0       	rjmp	.+62     	; 0x58 <__bad_interrupt>
      1a:	1e c0       	rjmp	.+60     	; 0x58 <__bad_interrupt>
      1c:	1d c0       	rjmp	.+58     	; 0x58 <__bad_interrupt>
      1e:	1c c0       	rjmp	.+56     	; 0x58 <__bad_interrupt>
      20:	1b c0       	rjmp	.+54     	; 0x58 <__bad_interrupt>
      22:	1a c0       	rjmp	.+52     	; 0x58 <__bad_interrupt>
      24:	19 c0       	rjmp	.+50     	; 0x58 <__bad_interrupt>

00000026 <__ctors_end>:
      26:	11 24       	eor	r1, r1
      28:	1f be       	out	0x3f, r1	; 63
      2a:	cf ed       	ldi	r28, 0xDF	; 223
      2c:	cd bf       	out	0x3d, r28	; 61

0000002e <__do_copy_data>:
      2e:	10 e0       	ldi	r17, 0x00	; 0
      30:	a0 e6       	ldi	r26, 0x60	; 96
      32:	b0 e0       	ldi	r27, 0x00	; 0
      34:	e8 e5       	ldi	r30, 0x58	; 88
      36:	f1 e1       	ldi	r31, 0x11	; 17
      38:	02 c0       	rjmp	.+4      	; 0x3e <__SP_H__>
      3a:	05 90       	lpm	r0, Z+
      3c:	0d 92       	st	X+, r0
      3e:	ae 36       	cpi	r26, 0x6E	; 110
      40:	b1 07       	cpc	r27, r17
      42:	d9 f7       	brne	.-10     	; 0x3a <__CCP__+0x6>

00000044 <__do_clear_bss>:
      44:	10 e0       	ldi	r17, 0x00	; 0
      46:	ae e6       	ldi	r26, 0x6E	; 110
      48:	b0 e0       	ldi	r27, 0x00	; 0
      4a:	01 c0       	rjmp	.+2      	; 0x4e <.do_clear_bss_start>

0000004c <.do_clear_bss_loop>:
      4c:	1d 92       	st	X+, r1

0000004e <.do_clear_bss_start>:
      4e:	ad 3d       	cpi	r26, 0xDD	; 221
      50:	b1 07       	cpc	r27, r17
      52:	e1 f7       	brne	.-8      	; 0x4c <.do_clear_bss_loop>
      54:	19 d2       	rcall	.+1074   	; 0x488 <main>
      56:	7e c8       	rjmp	.-3844   	; 0xfffff154 <__eeprom_end+0xff7ef154>

00000058 <__bad_interrupt>:
      58:	d3 cf       	rjmp	.-90     	; 0x0 <__vectors>

0000005a <USARTInit>:

#include "GB_usart.h"


void USARTInit(uint16_t ubrrvalue)
{
      5a:	df 93       	push	r29
      5c:	cf 93       	push	r28
      5e:	00 d0       	rcall	.+0      	; 0x60 <USARTInit+0x6>
      60:	cd b7       	in	r28, 0x3d	; 61
      62:	de b7       	in	r29, 0x3e	; 62
      64:	9a 83       	std	Y+2, r25	; 0x02
      66:	89 83       	std	Y+1, r24	; 0x01
	//Setup q
	UQFront=UQEnd=-1;
      68:	8f ef       	ldi	r24, 0xFF	; 255
      6a:	80 93 9c 00 	sts	0x009C, r24
      6e:	80 91 9c 00 	lds	r24, 0x009C
      72:	80 93 9b 00 	sts	0x009B, r24

	//Set Baud rate
	UBRRH=(unsigned char)(ubrrvalue>>8);
      76:	82 e2       	ldi	r24, 0x22	; 34
      78:	90 e0       	ldi	r25, 0x00	; 0
      7a:	29 81       	ldd	r18, Y+1	; 0x01
      7c:	3a 81       	ldd	r19, Y+2	; 0x02
      7e:	23 2f       	mov	r18, r19
      80:	33 27       	eor	r19, r19
      82:	fc 01       	movw	r30, r24
      84:	20 83       	st	Z, r18
	UBRRL=(unsigned char)ubrrvalue;
      86:	89 e2       	ldi	r24, 0x29	; 41
      88:	90 e0       	ldi	r25, 0x00	; 0
      8a:	29 81       	ldd	r18, Y+1	; 0x01
      8c:	fc 01       	movw	r30, r24
      8e:	20 83       	st	Z, r18
	1 StopBit
	char size 8

	*/
     
	 UCSRC = (1<<USBS)|(3<<UCSZ0);
      90:	83 e2       	ldi	r24, 0x23	; 35
      92:	90 e0       	ldi	r25, 0x00	; 0
      94:	2e e0       	ldi	r18, 0x0E	; 14
      96:	fc 01       	movw	r30, r24
      98:	20 83       	st	Z, r18

	Enable The recevier and transmitter

	*/

	UCSRB=(1<<RXCIE)|(1<<TXEN);
      9a:	8a e2       	ldi	r24, 0x2A	; 42
      9c:	90 e0       	ldi	r25, 0x00	; 0
      9e:	28 e8       	ldi	r18, 0x88	; 136
      a0:	fc 01       	movw	r30, r24
      a2:	20 83       	st	Z, r18
	sei();
      a4:	78 94       	sei

}
      a6:	ce 5f       	subi	r28, 0xFE	; 254
      a8:	cd bf       	out	0x3d, r28	; 61
      aa:	cf 91       	pop	r28
      ac:	df 91       	pop	r29
      ae:	08 95       	ret

000000b0 <USART0_RXC>:

//The USART ISR
ISR(USART_RXC_VECT)
{
      b0:	1f 92       	push	r1
      b2:	0f 92       	push	r0
      b4:	0f b6       	in	r0, 0x3f	; 63
      b6:	0f 92       	push	r0
      b8:	11 24       	eor	r1, r1
      ba:	2f 93       	push	r18
      bc:	3f 93       	push	r19
      be:	8f 93       	push	r24
      c0:	9f 93       	push	r25
      c2:	ef 93       	push	r30
      c4:	ff 93       	push	r31
      c6:	df 93       	push	r29
      c8:	cf 93       	push	r28
      ca:	0f 92       	push	r0
      cc:	cd b7       	in	r28, 0x3d	; 61
      ce:	de b7       	in	r29, 0x3e	; 62
	//Read the data
	uint8_t data=UDR;
      d0:	8c e2       	ldi	r24, 0x2C	; 44
      d2:	90 e0       	ldi	r25, 0x00	; 0
      d4:	fc 01       	movw	r30, r24
      d6:	80 81       	ld	r24, Z
      d8:	89 83       	std	Y+1, r24	; 0x01

	//Now add it to q

	if(((UQEnd==RECEIVE_BUFF_SIZE-1) && UQFront==0) || ((UQEnd+1)==UQFront))
      da:	80 91 9c 00 	lds	r24, 0x009C
      de:	8f 33       	cpi	r24, 0x3F	; 63
      e0:	21 f4       	brne	.+8      	; 0xea <__stack+0xb>
      e2:	80 91 9b 00 	lds	r24, 0x009B
      e6:	88 23       	and	r24, r24
      e8:	81 f0       	breq	.+32     	; 0x10a <__stack+0x2b>
      ea:	80 91 9c 00 	lds	r24, 0x009C
      ee:	99 27       	eor	r25, r25
      f0:	87 fd       	sbrc	r24, 7
      f2:	90 95       	com	r25
      f4:	9c 01       	movw	r18, r24
      f6:	2f 5f       	subi	r18, 0xFF	; 255
      f8:	3f 4f       	sbci	r19, 0xFF	; 255
      fa:	80 91 9b 00 	lds	r24, 0x009B
      fe:	99 27       	eor	r25, r25
     100:	87 fd       	sbrc	r24, 7
     102:	90 95       	com	r25
     104:	28 17       	cp	r18, r24
     106:	39 07       	cpc	r19, r25
     108:	59 f4       	brne	.+22     	; 0x120 <__stack+0x41>
	{
		//Q Full
		UQFront++;
     10a:	80 91 9b 00 	lds	r24, 0x009B
     10e:	8f 5f       	subi	r24, 0xFF	; 255
     110:	80 93 9b 00 	sts	0x009B, r24
		if(UQFront==RECEIVE_BUFF_SIZE) UQFront=0;
     114:	80 91 9b 00 	lds	r24, 0x009B
     118:	80 34       	cpi	r24, 0x40	; 64
     11a:	11 f4       	brne	.+4      	; 0x120 <__stack+0x41>
     11c:	10 92 9b 00 	sts	0x009B, r1
	}
	

	if(UQEnd==RECEIVE_BUFF_SIZE-1)
     120:	80 91 9c 00 	lds	r24, 0x009C
     124:	8f 33       	cpi	r24, 0x3F	; 63
     126:	19 f4       	brne	.+6      	; 0x12e <__stack+0x4f>
		UQEnd=0;
     128:	10 92 9c 00 	sts	0x009C, r1
     12c:	05 c0       	rjmp	.+10     	; 0x138 <__stack+0x59>
	else
		UQEnd++;
     12e:	80 91 9c 00 	lds	r24, 0x009C
     132:	8f 5f       	subi	r24, 0xFF	; 255
     134:	80 93 9c 00 	sts	0x009C, r24


	URBuff[UQEnd]=data;
     138:	80 91 9c 00 	lds	r24, 0x009C
     13c:	99 27       	eor	r25, r25
     13e:	87 fd       	sbrc	r24, 7
     140:	90 95       	com	r25
     142:	83 56       	subi	r24, 0x63	; 99
     144:	9f 4f       	sbci	r25, 0xFF	; 255
     146:	29 81       	ldd	r18, Y+1	; 0x01
     148:	fc 01       	movw	r30, r24
     14a:	20 83       	st	Z, r18

	if(UQFront==-1) UQFront=0;
     14c:	80 91 9b 00 	lds	r24, 0x009B
     150:	8f 3f       	cpi	r24, 0xFF	; 255
     152:	11 f4       	brne	.+4      	; 0x158 <__stack+0x79>
     154:	10 92 9b 00 	sts	0x009B, r1

}
     158:	0f 90       	pop	r0
     15a:	cf 91       	pop	r28
     15c:	df 91       	pop	r29
     15e:	ff 91       	pop	r31
     160:	ef 91       	pop	r30
     162:	9f 91       	pop	r25
     164:	8f 91       	pop	r24
     166:	3f 91       	pop	r19
     168:	2f 91       	pop	r18
     16a:	0f 90       	pop	r0
     16c:	0f be       	out	0x3f, r0	; 63
     16e:	0f 90       	pop	r0
     170:	1f 90       	pop	r1
     172:	18 95       	reti

00000174 <UReadData>:

uint8_t UReadData()
{
     174:	df 93       	push	r29
     176:	cf 93       	push	r28
     178:	0f 92       	push	r0
     17a:	cd b7       	in	r28, 0x3d	; 61
     17c:	de b7       	in	r29, 0x3e	; 62
	uint8_t data;
	
	//Check if q is empty
	if(UQFront==-1)
     17e:	80 91 9b 00 	lds	r24, 0x009B
     182:	8f 3f       	cpi	r24, 0xFF	; 255
     184:	11 f4       	brne	.+4      	; 0x18a <UReadData+0x16>
		return 0;
     186:	80 e0       	ldi	r24, 0x00	; 0
     188:	24 c0       	rjmp	.+72     	; 0x1d2 <UReadData+0x5e>
	
	data=URBuff[UQFront];
     18a:	80 91 9b 00 	lds	r24, 0x009B
     18e:	99 27       	eor	r25, r25
     190:	87 fd       	sbrc	r24, 7
     192:	90 95       	com	r25
     194:	83 56       	subi	r24, 0x63	; 99
     196:	9f 4f       	sbci	r25, 0xFF	; 255
     198:	fc 01       	movw	r30, r24
     19a:	80 81       	ld	r24, Z
     19c:	89 83       	std	Y+1, r24	; 0x01
	
	if(UQFront==UQEnd)
     19e:	90 91 9b 00 	lds	r25, 0x009B
     1a2:	80 91 9c 00 	lds	r24, 0x009C
     1a6:	98 17       	cp	r25, r24
     1a8:	41 f4       	brne	.+16     	; 0x1ba <UReadData+0x46>
	{
	//If single data is left
	//So empty q
	UQFront=UQEnd=-1;
     1aa:	8f ef       	ldi	r24, 0xFF	; 255
     1ac:	80 93 9c 00 	sts	0x009C, r24
     1b0:	80 91 9c 00 	lds	r24, 0x009C
     1b4:	80 93 9b 00 	sts	0x009B, r24
     1b8:	0b c0       	rjmp	.+22     	; 0x1d0 <UReadData+0x5c>
	}
	else
	{
		UQFront++;
     1ba:	80 91 9b 00 	lds	r24, 0x009B
     1be:	8f 5f       	subi	r24, 0xFF	; 255
     1c0:	80 93 9b 00 	sts	0x009B, r24

		if(UQFront==RECEIVE_BUFF_SIZE)
     1c4:	80 91 9b 00 	lds	r24, 0x009B
     1c8:	80 34       	cpi	r24, 0x40	; 64
     1ca:	11 f4       	brne	.+4      	; 0x1d0 <UReadData+0x5c>
		UQFront=0;
     1cc:	10 92 9b 00 	sts	0x009B, r1
	}

	return data;
     1d0:	89 81       	ldd	r24, Y+1	; 0x01
}
     1d2:	0f 90       	pop	r0
     1d4:	cf 91       	pop	r28
     1d6:	df 91       	pop	r29
     1d8:	08 95       	ret

000001da <UWriteData>:

void UWriteData(uint8_t data)
{
     1da:	0f 93       	push	r16
     1dc:	1f 93       	push	r17
     1de:	df 93       	push	r29
     1e0:	cf 93       	push	r28
     1e2:	cd b7       	in	r28, 0x3d	; 61
     1e4:	de b7       	in	r29, 0x3e	; 62
     1e6:	cf 50       	subi	r28, 0x0F	; 15
     1e8:	cd bf       	out	0x3d, r28	; 61
     1ea:	8f 87       	std	Y+15, r24	; 0x0f
	//Wait For Transmitter to become ready
	while(!(UCSRA & (1<<UDRE)));
     1ec:	00 00       	nop
     1ee:	8b e2       	ldi	r24, 0x2B	; 43
     1f0:	90 e0       	ldi	r25, 0x00	; 0
     1f2:	fc 01       	movw	r30, r24
     1f4:	80 81       	ld	r24, Z
     1f6:	88 2f       	mov	r24, r24
     1f8:	90 e0       	ldi	r25, 0x00	; 0
     1fa:	80 72       	andi	r24, 0x20	; 32
     1fc:	90 70       	andi	r25, 0x00	; 0
     1fe:	00 97       	sbiw	r24, 0x00	; 0
     200:	b1 f3       	breq	.-20     	; 0x1ee <UWriteData+0x14>

	//Now write
	UDR=data;
     202:	8c e2       	ldi	r24, 0x2C	; 44
     204:	90 e0       	ldi	r25, 0x00	; 0
     206:	2f 85       	ldd	r18, Y+15	; 0x0f
     208:	fc 01       	movw	r30, r24
     20a:	20 83       	st	Z, r18
     20c:	80 e0       	ldi	r24, 0x00	; 0
     20e:	90 e0       	ldi	r25, 0x00	; 0
     210:	a0 e8       	ldi	r26, 0x80	; 128
     212:	bf e3       	ldi	r27, 0x3F	; 63
     214:	89 83       	std	Y+1, r24	; 0x01
     216:	9a 83       	std	Y+2, r25	; 0x02
     218:	ab 83       	std	Y+3, r26	; 0x03
     21a:	bc 83       	std	Y+4, r27	; 0x04
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

#elif !__HAS_DELAY_CYCLES || (__HAS_DELAY_CYCLES && !defined(__OPTIMIZE__)) || defined (__DELAY_BACKWARD_COMPATIBLE__)
	__tmp = ((F_CPU) / 4e3) * __ms;
     21c:	69 81       	ldd	r22, Y+1	; 0x01
     21e:	7a 81       	ldd	r23, Y+2	; 0x02
     220:	8b 81       	ldd	r24, Y+3	; 0x03
     222:	9c 81       	ldd	r25, Y+4	; 0x04
     224:	20 e0       	ldi	r18, 0x00	; 0
     226:	30 e0       	ldi	r19, 0x00	; 0
     228:	4a ef       	ldi	r20, 0xFA	; 250
     22a:	54 e4       	ldi	r21, 0x44	; 68
     22c:	08 d4       	rcall	.+2064   	; 0xa3e <__mulsf3>
     22e:	dc 01       	movw	r26, r24
     230:	cb 01       	movw	r24, r22
     232:	8d 83       	std	Y+5, r24	; 0x05
     234:	9e 83       	std	Y+6, r25	; 0x06
     236:	af 83       	std	Y+7, r26	; 0x07
     238:	b8 87       	std	Y+8, r27	; 0x08
	if (__tmp < 1.0)
     23a:	11 e0       	ldi	r17, 0x01	; 1
     23c:	6d 81       	ldd	r22, Y+5	; 0x05
     23e:	7e 81       	ldd	r23, Y+6	; 0x06
     240:	8f 81       	ldd	r24, Y+7	; 0x07
     242:	98 85       	ldd	r25, Y+8	; 0x08
     244:	20 e0       	ldi	r18, 0x00	; 0
     246:	30 e0       	ldi	r19, 0x00	; 0
     248:	40 e8       	ldi	r20, 0x80	; 128
     24a:	5f e3       	ldi	r21, 0x3F	; 63
     24c:	43 d5       	rcall	.+2694   	; 0xcd4 <__ltsf2>
     24e:	88 23       	and	r24, r24
     250:	0c f0       	brlt	.+2      	; 0x254 <UWriteData+0x7a>
     252:	10 e0       	ldi	r17, 0x00	; 0
     254:	11 23       	and	r17, r17
     256:	29 f0       	breq	.+10     	; 0x262 <UWriteData+0x88>
		__ticks = 1;
     258:	81 e0       	ldi	r24, 0x01	; 1
     25a:	90 e0       	ldi	r25, 0x00	; 0
     25c:	9a 87       	std	Y+10, r25	; 0x0a
     25e:	89 87       	std	Y+9, r24	; 0x09
     260:	42 c0       	rjmp	.+132    	; 0x2e6 <UWriteData+0x10c>
	else if (__tmp > 65535)
     262:	11 e0       	ldi	r17, 0x01	; 1
     264:	6d 81       	ldd	r22, Y+5	; 0x05
     266:	7e 81       	ldd	r23, Y+6	; 0x06
     268:	8f 81       	ldd	r24, Y+7	; 0x07
     26a:	98 85       	ldd	r25, Y+8	; 0x08
     26c:	20 e0       	ldi	r18, 0x00	; 0
     26e:	3f ef       	ldi	r19, 0xFF	; 255
     270:	4f e7       	ldi	r20, 0x7F	; 127
     272:	57 e4       	ldi	r21, 0x47	; 71
     274:	d9 d4       	rcall	.+2482   	; 0xc28 <__gtsf2>
     276:	18 16       	cp	r1, r24
     278:	0c f0       	brlt	.+2      	; 0x27c <UWriteData+0xa2>
     27a:	10 e0       	ldi	r17, 0x00	; 0
     27c:	11 23       	and	r17, r17
     27e:	51 f1       	breq	.+84     	; 0x2d4 <UWriteData+0xfa>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     280:	69 81       	ldd	r22, Y+1	; 0x01
     282:	7a 81       	ldd	r23, Y+2	; 0x02
     284:	8b 81       	ldd	r24, Y+3	; 0x03
     286:	9c 81       	ldd	r25, Y+4	; 0x04
     288:	20 e0       	ldi	r18, 0x00	; 0
     28a:	30 e0       	ldi	r19, 0x00	; 0
     28c:	40 e2       	ldi	r20, 0x20	; 32
     28e:	51 e4       	ldi	r21, 0x41	; 65
     290:	d6 d3       	rcall	.+1964   	; 0xa3e <__mulsf3>
     292:	dc 01       	movw	r26, r24
     294:	cb 01       	movw	r24, r22
     296:	bc 01       	movw	r22, r24
     298:	cd 01       	movw	r24, r26
     29a:	0f d2       	rcall	.+1054   	; 0x6ba <__fixunssfsi>
     29c:	dc 01       	movw	r26, r24
     29e:	cb 01       	movw	r24, r22
     2a0:	9a 87       	std	Y+10, r25	; 0x0a
     2a2:	89 87       	std	Y+9, r24	; 0x09
     2a4:	12 c0       	rjmp	.+36     	; 0x2ca <UWriteData+0xf0>
     2a6:	88 ec       	ldi	r24, 0xC8	; 200
     2a8:	90 e0       	ldi	r25, 0x00	; 0
     2aa:	9c 87       	std	Y+12, r25	; 0x0c
     2ac:	8b 87       	std	Y+11, r24	; 0x0b
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
     2ae:	8b 85       	ldd	r24, Y+11	; 0x0b
     2b0:	9c 85       	ldd	r25, Y+12	; 0x0c
     2b2:	8c 01       	movw	r16, r24
     2b4:	c8 01       	movw	r24, r16
     2b6:	01 97       	sbiw	r24, 0x01	; 1
     2b8:	f1 f7       	brne	.-4      	; 0x2b6 <UWriteData+0xdc>
     2ba:	8c 01       	movw	r16, r24
     2bc:	1c 87       	std	Y+12, r17	; 0x0c
     2be:	0b 87       	std	Y+11, r16	; 0x0b
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     2c0:	89 85       	ldd	r24, Y+9	; 0x09
     2c2:	9a 85       	ldd	r25, Y+10	; 0x0a
     2c4:	01 97       	sbiw	r24, 0x01	; 1
     2c6:	9a 87       	std	Y+10, r25	; 0x0a
     2c8:	89 87       	std	Y+9, r24	; 0x09
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     2ca:	89 85       	ldd	r24, Y+9	; 0x09
     2cc:	9a 85       	ldd	r25, Y+10	; 0x0a
     2ce:	00 97       	sbiw	r24, 0x00	; 0
     2d0:	51 f7       	brne	.-44     	; 0x2a6 <UWriteData+0xcc>
     2d2:	16 c0       	rjmp	.+44     	; 0x300 <UWriteData+0x126>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     2d4:	6d 81       	ldd	r22, Y+5	; 0x05
     2d6:	7e 81       	ldd	r23, Y+6	; 0x06
     2d8:	8f 81       	ldd	r24, Y+7	; 0x07
     2da:	98 85       	ldd	r25, Y+8	; 0x08
     2dc:	ee d1       	rcall	.+988    	; 0x6ba <__fixunssfsi>
     2de:	dc 01       	movw	r26, r24
     2e0:	cb 01       	movw	r24, r22
     2e2:	9a 87       	std	Y+10, r25	; 0x0a
     2e4:	89 87       	std	Y+9, r24	; 0x09
     2e6:	89 85       	ldd	r24, Y+9	; 0x09
     2e8:	9a 85       	ldd	r25, Y+10	; 0x0a
     2ea:	9e 87       	std	Y+14, r25	; 0x0e
     2ec:	8d 87       	std	Y+13, r24	; 0x0d
     2ee:	8d 85       	ldd	r24, Y+13	; 0x0d
     2f0:	9e 85       	ldd	r25, Y+14	; 0x0e
     2f2:	8c 01       	movw	r16, r24
     2f4:	f8 01       	movw	r30, r16
     2f6:	31 97       	sbiw	r30, 0x01	; 1
     2f8:	f1 f7       	brne	.-4      	; 0x2f6 <UWriteData+0x11c>
     2fa:	8f 01       	movw	r16, r30
     2fc:	1e 87       	std	Y+14, r17	; 0x0e
     2fe:	0d 87       	std	Y+13, r16	; 0x0d
	_delay_ms(1);
}
     300:	c1 5f       	subi	r28, 0xF1	; 241
     302:	cd bf       	out	0x3d, r28	; 61
     304:	cf 91       	pop	r28
     306:	df 91       	pop	r29
     308:	1f 91       	pop	r17
     30a:	0f 91       	pop	r16
     30c:	08 95       	ret

0000030e <UDataAvailable>:

uint8_t UDataAvailable()
{
     30e:	df 93       	push	r29
     310:	cf 93       	push	r28
     312:	cd b7       	in	r28, 0x3d	; 61
     314:	de b7       	in	r29, 0x3e	; 62
	if(UQFront==-1) return 0;
     316:	80 91 9b 00 	lds	r24, 0x009B
     31a:	8f 3f       	cpi	r24, 0xFF	; 255
     31c:	11 f4       	brne	.+4      	; 0x322 <UDataAvailable+0x14>
     31e:	80 e0       	ldi	r24, 0x00	; 0
     320:	21 c0       	rjmp	.+66     	; 0x364 <UDataAvailable+0x56>
	if(UQFront<UQEnd)
     322:	90 91 9b 00 	lds	r25, 0x009B
     326:	80 91 9c 00 	lds	r24, 0x009C
     32a:	98 17       	cp	r25, r24
     32c:	54 f4       	brge	.+20     	; 0x342 <UDataAvailable+0x34>
		return(UQEnd-UQFront+1);
     32e:	80 91 9c 00 	lds	r24, 0x009C
     332:	98 2f       	mov	r25, r24
     334:	80 91 9b 00 	lds	r24, 0x009B
     338:	29 2f       	mov	r18, r25
     33a:	28 1b       	sub	r18, r24
     33c:	82 2f       	mov	r24, r18
     33e:	8f 5f       	subi	r24, 0xFF	; 255
     340:	11 c0       	rjmp	.+34     	; 0x364 <UDataAvailable+0x56>
	else if(UQFront>UQEnd)
     342:	90 91 9b 00 	lds	r25, 0x009B
     346:	80 91 9c 00 	lds	r24, 0x009C
     34a:	89 17       	cp	r24, r25
     34c:	54 f4       	brge	.+20     	; 0x362 <UDataAvailable+0x54>
		return (RECEIVE_BUFF_SIZE-UQFront+UQEnd+1);
     34e:	80 91 9c 00 	lds	r24, 0x009C
     352:	98 2f       	mov	r25, r24
     354:	80 91 9b 00 	lds	r24, 0x009B
     358:	29 2f       	mov	r18, r25
     35a:	28 1b       	sub	r18, r24
     35c:	82 2f       	mov	r24, r18
     35e:	8f 5b       	subi	r24, 0xBF	; 191
     360:	01 c0       	rjmp	.+2      	; 0x364 <UDataAvailable+0x56>
	else
		return 1;
     362:	81 e0       	ldi	r24, 0x01	; 1
}
     364:	cf 91       	pop	r28
     366:	df 91       	pop	r29
     368:	08 95       	ret

0000036a <UWriteString>:

void UWriteString(uint8_t *str)
{
     36a:	df 93       	push	r29
     36c:	cf 93       	push	r28
     36e:	00 d0       	rcall	.+0      	; 0x370 <UWriteString+0x6>
     370:	cd b7       	in	r28, 0x3d	; 61
     372:	de b7       	in	r29, 0x3e	; 62
     374:	9a 83       	std	Y+2, r25	; 0x02
     376:	89 83       	std	Y+1, r24	; 0x01
	while((*str)!='\0')
     378:	0a c0       	rjmp	.+20     	; 0x38e <UWriteString+0x24>
	{
		UWriteData(*str);
     37a:	89 81       	ldd	r24, Y+1	; 0x01
     37c:	9a 81       	ldd	r25, Y+2	; 0x02
     37e:	fc 01       	movw	r30, r24
     380:	80 81       	ld	r24, Z
     382:	2b df       	rcall	.-426    	; 0x1da <UWriteData>
		str++;
     384:	89 81       	ldd	r24, Y+1	; 0x01
     386:	9a 81       	ldd	r25, Y+2	; 0x02
     388:	01 96       	adiw	r24, 0x01	; 1
     38a:	9a 83       	std	Y+2, r25	; 0x02
     38c:	89 83       	std	Y+1, r24	; 0x01
		return 1;
}

void UWriteString(uint8_t *str)
{
	while((*str)!='\0')
     38e:	89 81       	ldd	r24, Y+1	; 0x01
     390:	9a 81       	ldd	r25, Y+2	; 0x02
     392:	fc 01       	movw	r30, r24
     394:	80 81       	ld	r24, Z
     396:	88 23       	and	r24, r24
     398:	81 f7       	brne	.-32     	; 0x37a <UWriteString+0x10>
		UWriteData(*str);
		str++;
	}

	//UWriteData('\0');
}
     39a:	ce 5f       	subi	r28, 0xFE	; 254
     39c:	cd bf       	out	0x3d, r28	; 61
     39e:	cf 91       	pop	r28
     3a0:	df 91       	pop	r29
     3a2:	08 95       	ret

000003a4 <Command_Display>:
uint8_t first_Pause = 0; 



void Command_Display(uint8_t command)
{
     3a4:	df 93       	push	r29
     3a6:	cf 93       	push	r28
     3a8:	0f 92       	push	r0
     3aa:	cd b7       	in	r28, 0x3d	; 61
     3ac:	de b7       	in	r29, 0x3e	; 62
     3ae:	89 83       	std	Y+1, r24	; 0x01
	UWriteData(CMD);
     3b0:	8e ef       	ldi	r24, 0xFE	; 254
     3b2:	13 df       	rcall	.-474    	; 0x1da <UWriteData>
	UWriteData(command);
     3b4:	89 81       	ldd	r24, Y+1	; 0x01
     3b6:	11 df       	rcall	.-478    	; 0x1da <UWriteData>
}
     3b8:	0f 90       	pop	r0
     3ba:	cf 91       	pop	r28
     3bc:	df 91       	pop	r29
     3be:	08 95       	ret

000003c0 <Change_Baudrate>:

void Change_Baudrate(uint8_t speed)
{	
     3c0:	df 93       	push	r29
     3c2:	cf 93       	push	r28
     3c4:	0f 92       	push	r0
     3c6:	cd b7       	in	r28, 0x3d	; 61
     3c8:	de b7       	in	r29, 0x3e	; 62
     3ca:	89 83       	std	Y+1, r24	; 0x01
	UWriteData(CMD);
     3cc:	8e ef       	ldi	r24, 0xFE	; 254
     3ce:	05 df       	rcall	.-502    	; 0x1da <UWriteData>
	UWriteData(Bauderate);
     3d0:	89 e3       	ldi	r24, 0x39	; 57
     3d2:	03 df       	rcall	.-506    	; 0x1da <UWriteData>
	UWriteData(speed);
     3d4:	89 81       	ldd	r24, Y+1	; 0x01
     3d6:	01 df       	rcall	.-510    	; 0x1da <UWriteData>
}
     3d8:	0f 90       	pop	r0
     3da:	cf 91       	pop	r28
     3dc:	df 91       	pop	r29
     3de:	08 95       	ret

000003e0 <Set_Cursor_Position>:

void Set_Cursor_Position(uint8_t column, uint8_t row)
{	
     3e0:	df 93       	push	r29
     3e2:	cf 93       	push	r28
     3e4:	00 d0       	rcall	.+0      	; 0x3e6 <Set_Cursor_Position+0x6>
     3e6:	cd b7       	in	r28, 0x3d	; 61
     3e8:	de b7       	in	r29, 0x3e	; 62
     3ea:	89 83       	std	Y+1, r24	; 0x01
     3ec:	6a 83       	std	Y+2, r22	; 0x02
	UWriteData(CMD);
     3ee:	8e ef       	ldi	r24, 0xFE	; 254
     3f0:	f4 de       	rcall	.-536    	; 0x1da <UWriteData>
	UWriteData(71);
     3f2:	87 e4       	ldi	r24, 0x47	; 71
     3f4:	f2 de       	rcall	.-540    	; 0x1da <UWriteData>
	UWriteData(column);
     3f6:	89 81       	ldd	r24, Y+1	; 0x01
     3f8:	f0 de       	rcall	.-544    	; 0x1da <UWriteData>
	UWriteData(row);
     3fa:	8a 81       	ldd	r24, Y+2	; 0x02
     3fc:	ee de       	rcall	.-548    	; 0x1da <UWriteData>
}
     3fe:	ce 5f       	subi	r28, 0xFE	; 254
     400:	cd bf       	out	0x3d, r28	; 61
     402:	cf 91       	pop	r28
     404:	df 91       	pop	r29
     406:	08 95       	ret

00000408 <SystemInit>:
	PORTD = (0<<PD7) | (0<<PD6) | (0<<PD5) | (0<<PD4) | (0<<PD3) | (0<<PD2) | (0<<PD1) | (0<<PD0); // set all pins we are using high 
	 
}
*/
void SystemInit(void) // Power on variable initialization 
{
     408:	df 93       	push	r29
     40a:	cf 93       	push	r28
     40c:	cd b7       	in	r28, 0x3d	; 61
     40e:	de b7       	in	r29, 0x3e	; 62
	USARTInit(UBRRVAL);
     410:	89 e1       	ldi	r24, 0x19	; 25
     412:	90 e0       	ldi	r25, 0x00	; 0
     414:	22 de       	rcall	.-956    	; 0x5a <USARTInit>
	rotation_Count = 0; // 0 
     416:	10 92 6e 00 	sts	0x006E, r1
     41a:	10 92 6f 00 	sts	0x006F, r1
     41e:	10 92 70 00 	sts	0x0070, r1
     422:	10 92 71 00 	sts	0x0071, r1
	Change_Baudrate(51); // 19200
     426:	83 e3       	ldi	r24, 0x33	; 51
     428:	cb df       	rcall	.-106    	; 0x3c0 <Change_Baudrate>
	Command_Display(Clear_Screen);
     42a:	88 e5       	ldi	r24, 0x58	; 88
     42c:	bb df       	rcall	.-138    	; 0x3a4 <Command_Display>
	Command_Display(Go_Home);
     42e:	88 e4       	ldi	r24, 0x48	; 72
     430:	b9 df       	rcall	.-142    	; 0x3a4 <Command_Display>
	//Change_Baudrate(83); // 1200
	
}
     432:	cf 91       	pop	r28
     434:	df 91       	pop	r29
     436:	08 95       	ret

00000438 <start_Test>:

void start_Test (void)
{
     438:	df 93       	push	r29
     43a:	cf 93       	push	r28
     43c:	cd b7       	in	r28, 0x3d	; 61
     43e:	de b7       	in	r29, 0x3e	; 62
	Command_Display(Clear_Screen);
     440:	88 e5       	ldi	r24, 0x58	; 88
     442:	b0 df       	rcall	.-160    	; 0x3a4 <Command_Display>
	Command_Display(Go_Home);
     444:	88 e4       	ldi	r24, 0x48	; 72
     446:	ae df       	rcall	.-164    	; 0x3a4 <Command_Display>
	UWriteString(Label);
     448:	80 e6       	ldi	r24, 0x60	; 96
     44a:	90 e0       	ldi	r25, 0x00	; 0
     44c:	8e df       	rcall	.-228    	; 0x36a <UWriteString>
	Set_Cursor_Position(1,2);
     44e:	81 e0       	ldi	r24, 0x01	; 1
     450:	62 e0       	ldi	r22, 0x02	; 2
     452:	c6 df       	rcall	.-116    	; 0x3e0 <Set_Cursor_Position>
	UWriteString(Label);
     454:	80 e6       	ldi	r24, 0x60	; 96
     456:	90 e0       	ldi	r25, 0x00	; 0
     458:	88 df       	rcall	.-240    	; 0x36a <UWriteString>
}
     45a:	cf 91       	pop	r28
     45c:	df 91       	pop	r29
     45e:	08 95       	ret

00000460 <pause_Test>:

void pause_Test (void)
{
     460:	df 93       	push	r29
     462:	cf 93       	push	r28
     464:	cd b7       	in	r28, 0x3d	; 61
     466:	de b7       	in	r29, 0x3e	; 62
	Command_Display(Clear_Screen);	
     468:	88 e5       	ldi	r24, 0x58	; 88
     46a:	9c df       	rcall	.-200    	; 0x3a4 <Command_Display>
	Command_Display(Go_Home);
     46c:	88 e4       	ldi	r24, 0x48	; 72
     46e:	9a df       	rcall	.-204    	; 0x3a4 <Command_Display>
	UWriteString(aNumberAsString);	
     470:	83 e7       	ldi	r24, 0x73	; 115
     472:	90 e0       	ldi	r25, 0x00	; 0
     474:	7a df       	rcall	.-268    	; 0x36a <UWriteString>
	Set_Cursor_Position(1,2);
     476:	81 e0       	ldi	r24, 0x01	; 1
     478:	62 e0       	ldi	r22, 0x02	; 2
     47a:	b2 df       	rcall	.-156    	; 0x3e0 <Set_Cursor_Position>
	UWriteString(Label);
     47c:	80 e6       	ldi	r24, 0x60	; 96
     47e:	90 e0       	ldi	r25, 0x00	; 0
     480:	74 df       	rcall	.-280    	; 0x36a <UWriteString>
}
     482:	cf 91       	pop	r28
     484:	df 91       	pop	r29
     486:	08 95       	ret

00000488 <main>:

int main(void) 
{
     488:	0f 93       	push	r16
     48a:	1f 93       	push	r17
     48c:	df 93       	push	r29
     48e:	cf 93       	push	r28
     490:	cd b7       	in	r28, 0x3d	; 61
     492:	de b7       	in	r29, 0x3e	; 62
     494:	cc 51       	subi	r28, 0x1C	; 28
     496:	cd bf       	out	0x3d, r28	; 61
	//timer0_init(); // timer 0 initialize 
	SystemInit(); // system variables and state initialize
     498:	b7 df       	rcall	.-146    	; 0x408 <SystemInit>
     49a:	80 e0       	ldi	r24, 0x00	; 0
     49c:	90 e0       	ldi	r25, 0x00	; 0
     49e:	aa ef       	ldi	r26, 0xFA	; 250
     4a0:	b3 e4       	ldi	r27, 0x43	; 67
     4a2:	89 83       	std	Y+1, r24	; 0x01
     4a4:	9a 83       	std	Y+2, r25	; 0x02
     4a6:	ab 83       	std	Y+3, r26	; 0x03
     4a8:	bc 83       	std	Y+4, r27	; 0x04
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

#elif !__HAS_DELAY_CYCLES || (__HAS_DELAY_CYCLES && !defined(__OPTIMIZE__)) || defined (__DELAY_BACKWARD_COMPATIBLE__)
	__tmp = ((F_CPU) / 4e3) * __ms;
     4aa:	69 81       	ldd	r22, Y+1	; 0x01
     4ac:	7a 81       	ldd	r23, Y+2	; 0x02
     4ae:	8b 81       	ldd	r24, Y+3	; 0x03
     4b0:	9c 81       	ldd	r25, Y+4	; 0x04
     4b2:	20 e0       	ldi	r18, 0x00	; 0
     4b4:	30 e0       	ldi	r19, 0x00	; 0
     4b6:	4a ef       	ldi	r20, 0xFA	; 250
     4b8:	54 e4       	ldi	r21, 0x44	; 68
     4ba:	c1 d2       	rcall	.+1410   	; 0xa3e <__mulsf3>
     4bc:	dc 01       	movw	r26, r24
     4be:	cb 01       	movw	r24, r22
     4c0:	8d 83       	std	Y+5, r24	; 0x05
     4c2:	9e 83       	std	Y+6, r25	; 0x06
     4c4:	af 83       	std	Y+7, r26	; 0x07
     4c6:	b8 87       	std	Y+8, r27	; 0x08
	if (__tmp < 1.0)
     4c8:	11 e0       	ldi	r17, 0x01	; 1
     4ca:	6d 81       	ldd	r22, Y+5	; 0x05
     4cc:	7e 81       	ldd	r23, Y+6	; 0x06
     4ce:	8f 81       	ldd	r24, Y+7	; 0x07
     4d0:	98 85       	ldd	r25, Y+8	; 0x08
     4d2:	20 e0       	ldi	r18, 0x00	; 0
     4d4:	30 e0       	ldi	r19, 0x00	; 0
     4d6:	40 e8       	ldi	r20, 0x80	; 128
     4d8:	5f e3       	ldi	r21, 0x3F	; 63
     4da:	fc d3       	rcall	.+2040   	; 0xcd4 <__ltsf2>
     4dc:	88 23       	and	r24, r24
     4de:	0c f0       	brlt	.+2      	; 0x4e2 <main+0x5a>
     4e0:	10 e0       	ldi	r17, 0x00	; 0
     4e2:	11 23       	and	r17, r17
     4e4:	29 f0       	breq	.+10     	; 0x4f0 <main+0x68>
		__ticks = 1;
     4e6:	81 e0       	ldi	r24, 0x01	; 1
     4e8:	90 e0       	ldi	r25, 0x00	; 0
     4ea:	9a 87       	std	Y+10, r25	; 0x0a
     4ec:	89 87       	std	Y+9, r24	; 0x09
     4ee:	42 c0       	rjmp	.+132    	; 0x574 <main+0xec>
	else if (__tmp > 65535)
     4f0:	11 e0       	ldi	r17, 0x01	; 1
     4f2:	6d 81       	ldd	r22, Y+5	; 0x05
     4f4:	7e 81       	ldd	r23, Y+6	; 0x06
     4f6:	8f 81       	ldd	r24, Y+7	; 0x07
     4f8:	98 85       	ldd	r25, Y+8	; 0x08
     4fa:	20 e0       	ldi	r18, 0x00	; 0
     4fc:	3f ef       	ldi	r19, 0xFF	; 255
     4fe:	4f e7       	ldi	r20, 0x7F	; 127
     500:	57 e4       	ldi	r21, 0x47	; 71
     502:	92 d3       	rcall	.+1828   	; 0xc28 <__gtsf2>
     504:	18 16       	cp	r1, r24
     506:	0c f0       	brlt	.+2      	; 0x50a <main+0x82>
     508:	10 e0       	ldi	r17, 0x00	; 0
     50a:	11 23       	and	r17, r17
     50c:	51 f1       	breq	.+84     	; 0x562 <main+0xda>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     50e:	69 81       	ldd	r22, Y+1	; 0x01
     510:	7a 81       	ldd	r23, Y+2	; 0x02
     512:	8b 81       	ldd	r24, Y+3	; 0x03
     514:	9c 81       	ldd	r25, Y+4	; 0x04
     516:	20 e0       	ldi	r18, 0x00	; 0
     518:	30 e0       	ldi	r19, 0x00	; 0
     51a:	40 e2       	ldi	r20, 0x20	; 32
     51c:	51 e4       	ldi	r21, 0x41	; 65
     51e:	8f d2       	rcall	.+1310   	; 0xa3e <__mulsf3>
     520:	dc 01       	movw	r26, r24
     522:	cb 01       	movw	r24, r22
     524:	bc 01       	movw	r22, r24
     526:	cd 01       	movw	r24, r26
     528:	c8 d0       	rcall	.+400    	; 0x6ba <__fixunssfsi>
     52a:	dc 01       	movw	r26, r24
     52c:	cb 01       	movw	r24, r22
     52e:	9a 87       	std	Y+10, r25	; 0x0a
     530:	89 87       	std	Y+9, r24	; 0x09
     532:	12 c0       	rjmp	.+36     	; 0x558 <main+0xd0>
     534:	88 ec       	ldi	r24, 0xC8	; 200
     536:	90 e0       	ldi	r25, 0x00	; 0
     538:	9c 87       	std	Y+12, r25	; 0x0c
     53a:	8b 87       	std	Y+11, r24	; 0x0b
     53c:	8b 85       	ldd	r24, Y+11	; 0x0b
     53e:	9c 85       	ldd	r25, Y+12	; 0x0c
     540:	8c 01       	movw	r16, r24
     542:	c8 01       	movw	r24, r16
     544:	01 97       	sbiw	r24, 0x01	; 1
     546:	f1 f7       	brne	.-4      	; 0x544 <main+0xbc>
     548:	8c 01       	movw	r16, r24
     54a:	1c 87       	std	Y+12, r17	; 0x0c
     54c:	0b 87       	std	Y+11, r16	; 0x0b
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     54e:	89 85       	ldd	r24, Y+9	; 0x09
     550:	9a 85       	ldd	r25, Y+10	; 0x0a
     552:	01 97       	sbiw	r24, 0x01	; 1
     554:	9a 87       	std	Y+10, r25	; 0x0a
     556:	89 87       	std	Y+9, r24	; 0x09
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     558:	89 85       	ldd	r24, Y+9	; 0x09
     55a:	9a 85       	ldd	r25, Y+10	; 0x0a
     55c:	00 97       	sbiw	r24, 0x00	; 0
     55e:	51 f7       	brne	.-44     	; 0x534 <main+0xac>
     560:	16 c0       	rjmp	.+44     	; 0x58e <main+0x106>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     562:	6d 81       	ldd	r22, Y+5	; 0x05
     564:	7e 81       	ldd	r23, Y+6	; 0x06
     566:	8f 81       	ldd	r24, Y+7	; 0x07
     568:	98 85       	ldd	r25, Y+8	; 0x08
     56a:	a7 d0       	rcall	.+334    	; 0x6ba <__fixunssfsi>
     56c:	dc 01       	movw	r26, r24
     56e:	cb 01       	movw	r24, r22
     570:	9a 87       	std	Y+10, r25	; 0x0a
     572:	89 87       	std	Y+9, r24	; 0x09
     574:	89 85       	ldd	r24, Y+9	; 0x09
     576:	9a 85       	ldd	r25, Y+10	; 0x0a
     578:	9e 87       	std	Y+14, r25	; 0x0e
     57a:	8d 87       	std	Y+13, r24	; 0x0d
     57c:	8d 85       	ldd	r24, Y+13	; 0x0d
     57e:	9e 85       	ldd	r25, Y+14	; 0x0e
     580:	8c 01       	movw	r16, r24
     582:	f8 01       	movw	r30, r16
     584:	31 97       	sbiw	r30, 0x01	; 1
     586:	f1 f7       	brne	.-4      	; 0x584 <main+0xfc>
     588:	8f 01       	movw	r16, r30
     58a:	1e 87       	std	Y+14, r17	; 0x0e
     58c:	0d 87       	std	Y+13, r16	; 0x0d
	//PortInit(); // inputs and outputs initialize
	_delay_ms(500);
	start_Test();
     58e:	54 df       	rcall	.-344    	; 0x438 <start_Test>
     590:	80 e0       	ldi	r24, 0x00	; 0
     592:	90 e4       	ldi	r25, 0x40	; 64
     594:	ac e9       	ldi	r26, 0x9C	; 156
     596:	b5 e4       	ldi	r27, 0x45	; 69
     598:	8f 87       	std	Y+15, r24	; 0x0f
     59a:	98 8b       	std	Y+16, r25	; 0x10
     59c:	a9 8b       	std	Y+17, r26	; 0x11
     59e:	ba 8b       	std	Y+18, r27	; 0x12
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

#elif !__HAS_DELAY_CYCLES || (__HAS_DELAY_CYCLES && !defined(__OPTIMIZE__)) || defined (__DELAY_BACKWARD_COMPATIBLE__)
	__tmp = ((F_CPU) / 4e3) * __ms;
     5a0:	6f 85       	ldd	r22, Y+15	; 0x0f
     5a2:	78 89       	ldd	r23, Y+16	; 0x10
     5a4:	89 89       	ldd	r24, Y+17	; 0x11
     5a6:	9a 89       	ldd	r25, Y+18	; 0x12
     5a8:	20 e0       	ldi	r18, 0x00	; 0
     5aa:	30 e0       	ldi	r19, 0x00	; 0
     5ac:	4a ef       	ldi	r20, 0xFA	; 250
     5ae:	54 e4       	ldi	r21, 0x44	; 68
     5b0:	46 d2       	rcall	.+1164   	; 0xa3e <__mulsf3>
     5b2:	dc 01       	movw	r26, r24
     5b4:	cb 01       	movw	r24, r22
     5b6:	8b 8b       	std	Y+19, r24	; 0x13
     5b8:	9c 8b       	std	Y+20, r25	; 0x14
     5ba:	ad 8b       	std	Y+21, r26	; 0x15
     5bc:	be 8b       	std	Y+22, r27	; 0x16
	if (__tmp < 1.0)
     5be:	11 e0       	ldi	r17, 0x01	; 1
     5c0:	6b 89       	ldd	r22, Y+19	; 0x13
     5c2:	7c 89       	ldd	r23, Y+20	; 0x14
     5c4:	8d 89       	ldd	r24, Y+21	; 0x15
     5c6:	9e 89       	ldd	r25, Y+22	; 0x16
     5c8:	20 e0       	ldi	r18, 0x00	; 0
     5ca:	30 e0       	ldi	r19, 0x00	; 0
     5cc:	40 e8       	ldi	r20, 0x80	; 128
     5ce:	5f e3       	ldi	r21, 0x3F	; 63
     5d0:	81 d3       	rcall	.+1794   	; 0xcd4 <__ltsf2>
     5d2:	88 23       	and	r24, r24
     5d4:	0c f0       	brlt	.+2      	; 0x5d8 <main+0x150>
     5d6:	10 e0       	ldi	r17, 0x00	; 0
     5d8:	11 23       	and	r17, r17
     5da:	29 f0       	breq	.+10     	; 0x5e6 <main+0x15e>
		__ticks = 1;
     5dc:	81 e0       	ldi	r24, 0x01	; 1
     5de:	90 e0       	ldi	r25, 0x00	; 0
     5e0:	98 8f       	std	Y+24, r25	; 0x18
     5e2:	8f 8b       	std	Y+23, r24	; 0x17
     5e4:	42 c0       	rjmp	.+132    	; 0x66a <main+0x1e2>
	else if (__tmp > 65535)
     5e6:	11 e0       	ldi	r17, 0x01	; 1
     5e8:	6b 89       	ldd	r22, Y+19	; 0x13
     5ea:	7c 89       	ldd	r23, Y+20	; 0x14
     5ec:	8d 89       	ldd	r24, Y+21	; 0x15
     5ee:	9e 89       	ldd	r25, Y+22	; 0x16
     5f0:	20 e0       	ldi	r18, 0x00	; 0
     5f2:	3f ef       	ldi	r19, 0xFF	; 255
     5f4:	4f e7       	ldi	r20, 0x7F	; 127
     5f6:	57 e4       	ldi	r21, 0x47	; 71
     5f8:	17 d3       	rcall	.+1582   	; 0xc28 <__gtsf2>
     5fa:	18 16       	cp	r1, r24
     5fc:	0c f0       	brlt	.+2      	; 0x600 <main+0x178>
     5fe:	10 e0       	ldi	r17, 0x00	; 0
     600:	11 23       	and	r17, r17
     602:	51 f1       	breq	.+84     	; 0x658 <main+0x1d0>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     604:	6f 85       	ldd	r22, Y+15	; 0x0f
     606:	78 89       	ldd	r23, Y+16	; 0x10
     608:	89 89       	ldd	r24, Y+17	; 0x11
     60a:	9a 89       	ldd	r25, Y+18	; 0x12
     60c:	20 e0       	ldi	r18, 0x00	; 0
     60e:	30 e0       	ldi	r19, 0x00	; 0
     610:	40 e2       	ldi	r20, 0x20	; 32
     612:	51 e4       	ldi	r21, 0x41	; 65
     614:	14 d2       	rcall	.+1064   	; 0xa3e <__mulsf3>
     616:	dc 01       	movw	r26, r24
     618:	cb 01       	movw	r24, r22
     61a:	bc 01       	movw	r22, r24
     61c:	cd 01       	movw	r24, r26
     61e:	4d d0       	rcall	.+154    	; 0x6ba <__fixunssfsi>
     620:	dc 01       	movw	r26, r24
     622:	cb 01       	movw	r24, r22
     624:	98 8f       	std	Y+24, r25	; 0x18
     626:	8f 8b       	std	Y+23, r24	; 0x17
     628:	12 c0       	rjmp	.+36     	; 0x64e <main+0x1c6>
     62a:	88 ec       	ldi	r24, 0xC8	; 200
     62c:	90 e0       	ldi	r25, 0x00	; 0
     62e:	9a 8f       	std	Y+26, r25	; 0x1a
     630:	89 8f       	std	Y+25, r24	; 0x19
     632:	89 8d       	ldd	r24, Y+25	; 0x19
     634:	9a 8d       	ldd	r25, Y+26	; 0x1a
     636:	8c 01       	movw	r16, r24
     638:	c8 01       	movw	r24, r16
     63a:	01 97       	sbiw	r24, 0x01	; 1
     63c:	f1 f7       	brne	.-4      	; 0x63a <main+0x1b2>
     63e:	8c 01       	movw	r16, r24
     640:	1a 8f       	std	Y+26, r17	; 0x1a
     642:	09 8f       	std	Y+25, r16	; 0x19
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     644:	8f 89       	ldd	r24, Y+23	; 0x17
     646:	98 8d       	ldd	r25, Y+24	; 0x18
     648:	01 97       	sbiw	r24, 0x01	; 1
     64a:	98 8f       	std	Y+24, r25	; 0x18
     64c:	8f 8b       	std	Y+23, r24	; 0x17
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     64e:	8f 89       	ldd	r24, Y+23	; 0x17
     650:	98 8d       	ldd	r25, Y+24	; 0x18
     652:	00 97       	sbiw	r24, 0x00	; 0
     654:	51 f7       	brne	.-44     	; 0x62a <main+0x1a2>
     656:	16 c0       	rjmp	.+44     	; 0x684 <main+0x1fc>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     658:	6b 89       	ldd	r22, Y+19	; 0x13
     65a:	7c 89       	ldd	r23, Y+20	; 0x14
     65c:	8d 89       	ldd	r24, Y+21	; 0x15
     65e:	9e 89       	ldd	r25, Y+22	; 0x16
     660:	2c d0       	rcall	.+88     	; 0x6ba <__fixunssfsi>
     662:	dc 01       	movw	r26, r24
     664:	cb 01       	movw	r24, r22
     666:	98 8f       	std	Y+24, r25	; 0x18
     668:	8f 8b       	std	Y+23, r24	; 0x17
     66a:	8f 89       	ldd	r24, Y+23	; 0x17
     66c:	98 8d       	ldd	r25, Y+24	; 0x18
     66e:	9c 8f       	std	Y+28, r25	; 0x1c
     670:	8b 8f       	std	Y+27, r24	; 0x1b
     672:	8b 8d       	ldd	r24, Y+27	; 0x1b
     674:	9c 8d       	ldd	r25, Y+28	; 0x1c
     676:	8c 01       	movw	r16, r24
     678:	f8 01       	movw	r30, r16
     67a:	31 97       	sbiw	r30, 0x01	; 1
     67c:	f1 f7       	brne	.-4      	; 0x67a <main+0x1f2>
     67e:	8f 01       	movw	r16, r30
     680:	1c 8f       	std	Y+28, r17	; 0x1c
     682:	0b 8f       	std	Y+27, r16	; 0x1b
	_delay_ms(5000);
	while(1)
	{
		if(is_high(PINB,PB7))
     684:	86 e3       	ldi	r24, 0x36	; 54
     686:	90 e0       	ldi	r25, 0x00	; 0
     688:	fc 01       	movw	r30, r24
     68a:	80 81       	ld	r24, Z
     68c:	88 23       	and	r24, r24
     68e:	9c f4       	brge	.+38     	; 0x6b6 <main+0x22e>
		{
				Command_Display(Clear_Screen);	
     690:	88 e5       	ldi	r24, 0x58	; 88
     692:	88 de       	rcall	.-752    	; 0x3a4 <Command_Display>
				Command_Display(Go_Home);
     694:	88 e4       	ldi	r24, 0x48	; 72
     696:	86 de       	rcall	.-756    	; 0x3a4 <Command_Display>
				UWriteString(aNumberAsString);	
     698:	83 e7       	ldi	r24, 0x73	; 115
     69a:	90 e0       	ldi	r25, 0x00	; 0
     69c:	66 de       	rcall	.-820    	; 0x36a <UWriteString>
				Set_Cursor_Position(1,2);
     69e:	81 e0       	ldi	r24, 0x01	; 1
     6a0:	62 e0       	ldi	r22, 0x02	; 2
     6a2:	9e de       	rcall	.-708    	; 0x3e0 <Set_Cursor_Position>
				UWriteString(Label);
     6a4:	80 e6       	ldi	r24, 0x60	; 96
     6a6:	90 e0       	ldi	r25, 0x00	; 0
     6a8:	60 de       	rcall	.-832    	; 0x36a <UWriteString>
				first_Pause++;
     6aa:	80 91 72 00 	lds	r24, 0x0072
     6ae:	8f 5f       	subi	r24, 0xFF	; 255
     6b0:	80 93 72 00 	sts	0x0072, r24
		}
		else
		{
			start_Test();
		}
	}
     6b4:	e7 cf       	rjmp	.-50     	; 0x684 <main+0x1fc>
				UWriteString(Label);
				first_Pause++;
		}
		else
		{
			start_Test();
     6b6:	c0 de       	rcall	.-640    	; 0x438 <start_Test>
		}
	}
     6b8:	e5 cf       	rjmp	.-54     	; 0x684 <main+0x1fc>

000006ba <__fixunssfsi>:
     6ba:	ef 92       	push	r14
     6bc:	ff 92       	push	r15
     6be:	0f 93       	push	r16
     6c0:	1f 93       	push	r17
     6c2:	7b 01       	movw	r14, r22
     6c4:	8c 01       	movw	r16, r24
     6c6:	20 e0       	ldi	r18, 0x00	; 0
     6c8:	30 e0       	ldi	r19, 0x00	; 0
     6ca:	40 e0       	ldi	r20, 0x00	; 0
     6cc:	5f e4       	ldi	r21, 0x4F	; 79
     6ce:	d7 d2       	rcall	.+1454   	; 0xc7e <__gesf2>
     6d0:	87 fd       	sbrc	r24, 7
     6d2:	0f c0       	rjmp	.+30     	; 0x6f2 <__fixunssfsi+0x38>
     6d4:	c8 01       	movw	r24, r16
     6d6:	b7 01       	movw	r22, r14
     6d8:	20 e0       	ldi	r18, 0x00	; 0
     6da:	30 e0       	ldi	r19, 0x00	; 0
     6dc:	40 e0       	ldi	r20, 0x00	; 0
     6de:	5f e4       	ldi	r21, 0x4F	; 79
     6e0:	83 d1       	rcall	.+774    	; 0x9e8 <__subsf3>
     6e2:	23 d3       	rcall	.+1606   	; 0xd2a <__fixsfsi>
     6e4:	9b 01       	movw	r18, r22
     6e6:	ac 01       	movw	r20, r24
     6e8:	20 50       	subi	r18, 0x00	; 0
     6ea:	30 40       	sbci	r19, 0x00	; 0
     6ec:	40 40       	sbci	r20, 0x00	; 0
     6ee:	50 48       	sbci	r21, 0x80	; 128
     6f0:	05 c0       	rjmp	.+10     	; 0x6fc <__fixunssfsi+0x42>
     6f2:	c8 01       	movw	r24, r16
     6f4:	b7 01       	movw	r22, r14
     6f6:	19 d3       	rcall	.+1586   	; 0xd2a <__fixsfsi>
     6f8:	9b 01       	movw	r18, r22
     6fa:	ac 01       	movw	r20, r24
     6fc:	b9 01       	movw	r22, r18
     6fe:	ca 01       	movw	r24, r20
     700:	1f 91       	pop	r17
     702:	0f 91       	pop	r16
     704:	ff 90       	pop	r15
     706:	ef 90       	pop	r14
     708:	08 95       	ret

0000070a <_fpadd_parts>:
     70a:	a0 e0       	ldi	r26, 0x00	; 0
     70c:	b0 e0       	ldi	r27, 0x00	; 0
     70e:	ea e8       	ldi	r30, 0x8A	; 138
     710:	f3 e0       	ldi	r31, 0x03	; 3
     712:	ed c4       	rjmp	.+2522   	; 0x10ee <__prologue_saves__+0x8>
     714:	fc 01       	movw	r30, r24
     716:	ea 01       	movw	r28, r20
     718:	80 81       	ld	r24, Z
     71a:	82 30       	cpi	r24, 0x02	; 2
     71c:	08 f4       	brcc	.+2      	; 0x720 <_fpadd_parts+0x16>
     71e:	38 c1       	rjmp	.+624    	; 0x990 <_fpadd_parts+0x286>
     720:	db 01       	movw	r26, r22
     722:	9c 91       	ld	r25, X
     724:	92 30       	cpi	r25, 0x02	; 2
     726:	08 f4       	brcc	.+2      	; 0x72a <_fpadd_parts+0x20>
     728:	30 c1       	rjmp	.+608    	; 0x98a <_fpadd_parts+0x280>
     72a:	84 30       	cpi	r24, 0x04	; 4
     72c:	59 f4       	brne	.+22     	; 0x744 <_fpadd_parts+0x3a>
     72e:	94 30       	cpi	r25, 0x04	; 4
     730:	09 f0       	breq	.+2      	; 0x734 <_fpadd_parts+0x2a>
     732:	2e c1       	rjmp	.+604    	; 0x990 <_fpadd_parts+0x286>
     734:	91 81       	ldd	r25, Z+1	; 0x01
     736:	11 96       	adiw	r26, 0x01	; 1
     738:	8c 91       	ld	r24, X
     73a:	11 97       	sbiw	r26, 0x01	; 1
     73c:	98 17       	cp	r25, r24
     73e:	09 f0       	breq	.+2      	; 0x742 <_fpadd_parts+0x38>
     740:	21 c1       	rjmp	.+578    	; 0x984 <_fpadd_parts+0x27a>
     742:	26 c1       	rjmp	.+588    	; 0x990 <_fpadd_parts+0x286>
     744:	94 30       	cpi	r25, 0x04	; 4
     746:	09 f4       	brne	.+2      	; 0x74a <_fpadd_parts+0x40>
     748:	20 c1       	rjmp	.+576    	; 0x98a <_fpadd_parts+0x280>
     74a:	92 30       	cpi	r25, 0x02	; 2
     74c:	b1 f4       	brne	.+44     	; 0x77a <_fpadd_parts+0x70>
     74e:	82 30       	cpi	r24, 0x02	; 2
     750:	09 f0       	breq	.+2      	; 0x754 <_fpadd_parts+0x4a>
     752:	1e c1       	rjmp	.+572    	; 0x990 <_fpadd_parts+0x286>
     754:	ca 01       	movw	r24, r20
     756:	af 01       	movw	r20, r30
     758:	28 e0       	ldi	r18, 0x08	; 8
     75a:	da 01       	movw	r26, r20
     75c:	0d 90       	ld	r0, X+
     75e:	ad 01       	movw	r20, r26
     760:	dc 01       	movw	r26, r24
     762:	0d 92       	st	X+, r0
     764:	cd 01       	movw	r24, r26
     766:	21 50       	subi	r18, 0x01	; 1
     768:	c1 f7       	brne	.-16     	; 0x75a <_fpadd_parts+0x50>
     76a:	db 01       	movw	r26, r22
     76c:	11 96       	adiw	r26, 0x01	; 1
     76e:	8c 91       	ld	r24, X
     770:	11 97       	sbiw	r26, 0x01	; 1
     772:	91 81       	ldd	r25, Z+1	; 0x01
     774:	89 23       	and	r24, r25
     776:	89 83       	std	Y+1, r24	; 0x01
     778:	0a c1       	rjmp	.+532    	; 0x98e <_fpadd_parts+0x284>
     77a:	82 30       	cpi	r24, 0x02	; 2
     77c:	09 f4       	brne	.+2      	; 0x780 <_fpadd_parts+0x76>
     77e:	05 c1       	rjmp	.+522    	; 0x98a <_fpadd_parts+0x280>
     780:	c2 80       	ldd	r12, Z+2	; 0x02
     782:	d3 80       	ldd	r13, Z+3	; 0x03
     784:	db 01       	movw	r26, r22
     786:	12 96       	adiw	r26, 0x02	; 2
     788:	6d 90       	ld	r6, X+
     78a:	7c 90       	ld	r7, X
     78c:	13 97       	sbiw	r26, 0x03	; 3
     78e:	24 81       	ldd	r18, Z+4	; 0x04
     790:	35 81       	ldd	r19, Z+5	; 0x05
     792:	46 81       	ldd	r20, Z+6	; 0x06
     794:	57 81       	ldd	r21, Z+7	; 0x07
     796:	14 96       	adiw	r26, 0x04	; 4
     798:	ed 90       	ld	r14, X+
     79a:	fd 90       	ld	r15, X+
     79c:	0d 91       	ld	r16, X+
     79e:	1c 91       	ld	r17, X
     7a0:	17 97       	sbiw	r26, 0x07	; 7
     7a2:	c6 01       	movw	r24, r12
     7a4:	86 19       	sub	r24, r6
     7a6:	97 09       	sbc	r25, r7
     7a8:	5c 01       	movw	r10, r24
     7aa:	97 ff       	sbrs	r25, 7
     7ac:	04 c0       	rjmp	.+8      	; 0x7b6 <_fpadd_parts+0xac>
     7ae:	aa 24       	eor	r10, r10
     7b0:	bb 24       	eor	r11, r11
     7b2:	a8 1a       	sub	r10, r24
     7b4:	b9 0a       	sbc	r11, r25
     7b6:	b0 e2       	ldi	r27, 0x20	; 32
     7b8:	ab 16       	cp	r10, r27
     7ba:	b1 04       	cpc	r11, r1
     7bc:	0c f0       	brlt	.+2      	; 0x7c0 <_fpadd_parts+0xb6>
     7be:	61 c0       	rjmp	.+194    	; 0x882 <_fpadd_parts+0x178>
     7c0:	18 16       	cp	r1, r24
     7c2:	19 06       	cpc	r1, r25
     7c4:	6c f5       	brge	.+90     	; 0x820 <_fpadd_parts+0x116>
     7c6:	37 01       	movw	r6, r14
     7c8:	48 01       	movw	r8, r16
     7ca:	0a 2c       	mov	r0, r10
     7cc:	04 c0       	rjmp	.+8      	; 0x7d6 <_fpadd_parts+0xcc>
     7ce:	96 94       	lsr	r9
     7d0:	87 94       	ror	r8
     7d2:	77 94       	ror	r7
     7d4:	67 94       	ror	r6
     7d6:	0a 94       	dec	r0
     7d8:	d2 f7       	brpl	.-12     	; 0x7ce <_fpadd_parts+0xc4>
     7da:	81 e0       	ldi	r24, 0x01	; 1
     7dc:	90 e0       	ldi	r25, 0x00	; 0
     7de:	a0 e0       	ldi	r26, 0x00	; 0
     7e0:	b0 e0       	ldi	r27, 0x00	; 0
     7e2:	0a 2c       	mov	r0, r10
     7e4:	04 c0       	rjmp	.+8      	; 0x7ee <_fpadd_parts+0xe4>
     7e6:	88 0f       	add	r24, r24
     7e8:	99 1f       	adc	r25, r25
     7ea:	aa 1f       	adc	r26, r26
     7ec:	bb 1f       	adc	r27, r27
     7ee:	0a 94       	dec	r0
     7f0:	d2 f7       	brpl	.-12     	; 0x7e6 <_fpadd_parts+0xdc>
     7f2:	01 97       	sbiw	r24, 0x01	; 1
     7f4:	a1 09       	sbc	r26, r1
     7f6:	b1 09       	sbc	r27, r1
     7f8:	8e 21       	and	r24, r14
     7fa:	9f 21       	and	r25, r15
     7fc:	a0 23       	and	r26, r16
     7fe:	b1 23       	and	r27, r17
     800:	ee 24       	eor	r14, r14
     802:	ff 24       	eor	r15, r15
     804:	87 01       	movw	r16, r14
     806:	e3 94       	inc	r14
     808:	00 97       	sbiw	r24, 0x00	; 0
     80a:	a1 05       	cpc	r26, r1
     80c:	b1 05       	cpc	r27, r1
     80e:	19 f4       	brne	.+6      	; 0x816 <_fpadd_parts+0x10c>
     810:	ee 24       	eor	r14, r14
     812:	ff 24       	eor	r15, r15
     814:	87 01       	movw	r16, r14
     816:	e6 28       	or	r14, r6
     818:	f7 28       	or	r15, r7
     81a:	08 29       	or	r16, r8
     81c:	19 29       	or	r17, r9
     81e:	3c c0       	rjmp	.+120    	; 0x898 <_fpadd_parts+0x18e>
     820:	00 97       	sbiw	r24, 0x00	; 0
     822:	d1 f1       	breq	.+116    	; 0x898 <_fpadd_parts+0x18e>
     824:	ca 0c       	add	r12, r10
     826:	db 1c       	adc	r13, r11
     828:	39 01       	movw	r6, r18
     82a:	4a 01       	movw	r8, r20
     82c:	0a 2c       	mov	r0, r10
     82e:	04 c0       	rjmp	.+8      	; 0x838 <_fpadd_parts+0x12e>
     830:	96 94       	lsr	r9
     832:	87 94       	ror	r8
     834:	77 94       	ror	r7
     836:	67 94       	ror	r6
     838:	0a 94       	dec	r0
     83a:	d2 f7       	brpl	.-12     	; 0x830 <_fpadd_parts+0x126>
     83c:	81 e0       	ldi	r24, 0x01	; 1
     83e:	90 e0       	ldi	r25, 0x00	; 0
     840:	a0 e0       	ldi	r26, 0x00	; 0
     842:	b0 e0       	ldi	r27, 0x00	; 0
     844:	0a 2c       	mov	r0, r10
     846:	04 c0       	rjmp	.+8      	; 0x850 <_fpadd_parts+0x146>
     848:	88 0f       	add	r24, r24
     84a:	99 1f       	adc	r25, r25
     84c:	aa 1f       	adc	r26, r26
     84e:	bb 1f       	adc	r27, r27
     850:	0a 94       	dec	r0
     852:	d2 f7       	brpl	.-12     	; 0x848 <_fpadd_parts+0x13e>
     854:	01 97       	sbiw	r24, 0x01	; 1
     856:	a1 09       	sbc	r26, r1
     858:	b1 09       	sbc	r27, r1
     85a:	82 23       	and	r24, r18
     85c:	93 23       	and	r25, r19
     85e:	a4 23       	and	r26, r20
     860:	b5 23       	and	r27, r21
     862:	21 e0       	ldi	r18, 0x01	; 1
     864:	30 e0       	ldi	r19, 0x00	; 0
     866:	40 e0       	ldi	r20, 0x00	; 0
     868:	50 e0       	ldi	r21, 0x00	; 0
     86a:	00 97       	sbiw	r24, 0x00	; 0
     86c:	a1 05       	cpc	r26, r1
     86e:	b1 05       	cpc	r27, r1
     870:	19 f4       	brne	.+6      	; 0x878 <_fpadd_parts+0x16e>
     872:	20 e0       	ldi	r18, 0x00	; 0
     874:	30 e0       	ldi	r19, 0x00	; 0
     876:	a9 01       	movw	r20, r18
     878:	26 29       	or	r18, r6
     87a:	37 29       	or	r19, r7
     87c:	48 29       	or	r20, r8
     87e:	59 29       	or	r21, r9
     880:	0b c0       	rjmp	.+22     	; 0x898 <_fpadd_parts+0x18e>
     882:	6c 14       	cp	r6, r12
     884:	7d 04       	cpc	r7, r13
     886:	24 f4       	brge	.+8      	; 0x890 <_fpadd_parts+0x186>
     888:	ee 24       	eor	r14, r14
     88a:	ff 24       	eor	r15, r15
     88c:	87 01       	movw	r16, r14
     88e:	04 c0       	rjmp	.+8      	; 0x898 <_fpadd_parts+0x18e>
     890:	63 01       	movw	r12, r6
     892:	20 e0       	ldi	r18, 0x00	; 0
     894:	30 e0       	ldi	r19, 0x00	; 0
     896:	a9 01       	movw	r20, r18
     898:	81 81       	ldd	r24, Z+1	; 0x01
     89a:	fb 01       	movw	r30, r22
     89c:	91 81       	ldd	r25, Z+1	; 0x01
     89e:	89 17       	cp	r24, r25
     8a0:	09 f4       	brne	.+2      	; 0x8a4 <_fpadd_parts+0x19a>
     8a2:	45 c0       	rjmp	.+138    	; 0x92e <_fpadd_parts+0x224>
     8a4:	88 23       	and	r24, r24
     8a6:	49 f0       	breq	.+18     	; 0x8ba <_fpadd_parts+0x1b0>
     8a8:	d8 01       	movw	r26, r16
     8aa:	c7 01       	movw	r24, r14
     8ac:	82 1b       	sub	r24, r18
     8ae:	93 0b       	sbc	r25, r19
     8b0:	a4 0b       	sbc	r26, r20
     8b2:	b5 0b       	sbc	r27, r21
     8b4:	9c 01       	movw	r18, r24
     8b6:	ad 01       	movw	r20, r26
     8b8:	04 c0       	rjmp	.+8      	; 0x8c2 <_fpadd_parts+0x1b8>
     8ba:	2e 19       	sub	r18, r14
     8bc:	3f 09       	sbc	r19, r15
     8be:	40 0b       	sbc	r20, r16
     8c0:	51 0b       	sbc	r21, r17
     8c2:	57 fd       	sbrc	r21, 7
     8c4:	04 c0       	rjmp	.+8      	; 0x8ce <_fpadd_parts+0x1c4>
     8c6:	19 82       	std	Y+1, r1	; 0x01
     8c8:	db 82       	std	Y+3, r13	; 0x03
     8ca:	ca 82       	std	Y+2, r12	; 0x02
     8cc:	0b c0       	rjmp	.+22     	; 0x8e4 <_fpadd_parts+0x1da>
     8ce:	81 e0       	ldi	r24, 0x01	; 1
     8d0:	89 83       	std	Y+1, r24	; 0x01
     8d2:	db 82       	std	Y+3, r13	; 0x03
     8d4:	ca 82       	std	Y+2, r12	; 0x02
     8d6:	50 95       	com	r21
     8d8:	40 95       	com	r20
     8da:	30 95       	com	r19
     8dc:	21 95       	neg	r18
     8de:	3f 4f       	sbci	r19, 0xFF	; 255
     8e0:	4f 4f       	sbci	r20, 0xFF	; 255
     8e2:	5f 4f       	sbci	r21, 0xFF	; 255
     8e4:	2c 83       	std	Y+4, r18	; 0x04
     8e6:	3d 83       	std	Y+5, r19	; 0x05
     8e8:	4e 83       	std	Y+6, r20	; 0x06
     8ea:	5f 83       	std	Y+7, r21	; 0x07
     8ec:	0d c0       	rjmp	.+26     	; 0x908 <_fpadd_parts+0x1fe>
     8ee:	88 0f       	add	r24, r24
     8f0:	99 1f       	adc	r25, r25
     8f2:	aa 1f       	adc	r26, r26
     8f4:	bb 1f       	adc	r27, r27
     8f6:	8c 83       	std	Y+4, r24	; 0x04
     8f8:	9d 83       	std	Y+5, r25	; 0x05
     8fa:	ae 83       	std	Y+6, r26	; 0x06
     8fc:	bf 83       	std	Y+7, r27	; 0x07
     8fe:	8a 81       	ldd	r24, Y+2	; 0x02
     900:	9b 81       	ldd	r25, Y+3	; 0x03
     902:	01 97       	sbiw	r24, 0x01	; 1
     904:	9b 83       	std	Y+3, r25	; 0x03
     906:	8a 83       	std	Y+2, r24	; 0x02
     908:	8c 81       	ldd	r24, Y+4	; 0x04
     90a:	9d 81       	ldd	r25, Y+5	; 0x05
     90c:	ae 81       	ldd	r26, Y+6	; 0x06
     90e:	bf 81       	ldd	r27, Y+7	; 0x07
     910:	9c 01       	movw	r18, r24
     912:	ad 01       	movw	r20, r26
     914:	21 50       	subi	r18, 0x01	; 1
     916:	30 40       	sbci	r19, 0x00	; 0
     918:	40 40       	sbci	r20, 0x00	; 0
     91a:	50 40       	sbci	r21, 0x00	; 0
     91c:	2f 3f       	cpi	r18, 0xFF	; 255
     91e:	ef ef       	ldi	r30, 0xFF	; 255
     920:	3e 07       	cpc	r19, r30
     922:	ef ef       	ldi	r30, 0xFF	; 255
     924:	4e 07       	cpc	r20, r30
     926:	ef e3       	ldi	r30, 0x3F	; 63
     928:	5e 07       	cpc	r21, r30
     92a:	08 f3       	brcs	.-62     	; 0x8ee <_fpadd_parts+0x1e4>
     92c:	0b c0       	rjmp	.+22     	; 0x944 <_fpadd_parts+0x23a>
     92e:	89 83       	std	Y+1, r24	; 0x01
     930:	db 82       	std	Y+3, r13	; 0x03
     932:	ca 82       	std	Y+2, r12	; 0x02
     934:	2e 0d       	add	r18, r14
     936:	3f 1d       	adc	r19, r15
     938:	40 1f       	adc	r20, r16
     93a:	51 1f       	adc	r21, r17
     93c:	2c 83       	std	Y+4, r18	; 0x04
     93e:	3d 83       	std	Y+5, r19	; 0x05
     940:	4e 83       	std	Y+6, r20	; 0x06
     942:	5f 83       	std	Y+7, r21	; 0x07
     944:	83 e0       	ldi	r24, 0x03	; 3
     946:	88 83       	st	Y, r24
     948:	2c 81       	ldd	r18, Y+4	; 0x04
     94a:	3d 81       	ldd	r19, Y+5	; 0x05
     94c:	4e 81       	ldd	r20, Y+6	; 0x06
     94e:	5f 81       	ldd	r21, Y+7	; 0x07
     950:	57 ff       	sbrs	r21, 7
     952:	1d c0       	rjmp	.+58     	; 0x98e <_fpadd_parts+0x284>
     954:	da 01       	movw	r26, r20
     956:	c9 01       	movw	r24, r18
     958:	81 70       	andi	r24, 0x01	; 1
     95a:	90 70       	andi	r25, 0x00	; 0
     95c:	a0 70       	andi	r26, 0x00	; 0
     95e:	b0 70       	andi	r27, 0x00	; 0
     960:	56 95       	lsr	r21
     962:	47 95       	ror	r20
     964:	37 95       	ror	r19
     966:	27 95       	ror	r18
     968:	82 2b       	or	r24, r18
     96a:	93 2b       	or	r25, r19
     96c:	a4 2b       	or	r26, r20
     96e:	b5 2b       	or	r27, r21
     970:	8c 83       	std	Y+4, r24	; 0x04
     972:	9d 83       	std	Y+5, r25	; 0x05
     974:	ae 83       	std	Y+6, r26	; 0x06
     976:	bf 83       	std	Y+7, r27	; 0x07
     978:	8a 81       	ldd	r24, Y+2	; 0x02
     97a:	9b 81       	ldd	r25, Y+3	; 0x03
     97c:	01 96       	adiw	r24, 0x01	; 1
     97e:	9b 83       	std	Y+3, r25	; 0x03
     980:	8a 83       	std	Y+2, r24	; 0x02
     982:	05 c0       	rjmp	.+10     	; 0x98e <_fpadd_parts+0x284>
     984:	e5 e6       	ldi	r30, 0x65	; 101
     986:	f0 e0       	ldi	r31, 0x00	; 0
     988:	03 c0       	rjmp	.+6      	; 0x990 <_fpadd_parts+0x286>
     98a:	fb 01       	movw	r30, r22
     98c:	01 c0       	rjmp	.+2      	; 0x990 <_fpadd_parts+0x286>
     98e:	fe 01       	movw	r30, r28
     990:	cf 01       	movw	r24, r30
     992:	cd b7       	in	r28, 0x3d	; 61
     994:	de b7       	in	r29, 0x3e	; 62
     996:	ee e0       	ldi	r30, 0x0E	; 14
     998:	c6 c3       	rjmp	.+1932   	; 0x1126 <__epilogue_restores__+0x8>

0000099a <__addsf3>:
     99a:	a0 e2       	ldi	r26, 0x20	; 32
     99c:	b0 e0       	ldi	r27, 0x00	; 0
     99e:	e2 ed       	ldi	r30, 0xD2	; 210
     9a0:	f4 e0       	ldi	r31, 0x04	; 4
     9a2:	ad c3       	rjmp	.+1882   	; 0x10fe <__prologue_saves__+0x18>
     9a4:	69 83       	std	Y+1, r22	; 0x01
     9a6:	7a 83       	std	Y+2, r23	; 0x02
     9a8:	8b 83       	std	Y+3, r24	; 0x03
     9aa:	9c 83       	std	Y+4, r25	; 0x04
     9ac:	2d 83       	std	Y+5, r18	; 0x05
     9ae:	3e 83       	std	Y+6, r19	; 0x06
     9b0:	4f 83       	std	Y+7, r20	; 0x07
     9b2:	58 87       	std	Y+8, r21	; 0x08
     9b4:	89 e0       	ldi	r24, 0x09	; 9
     9b6:	e8 2e       	mov	r14, r24
     9b8:	f1 2c       	mov	r15, r1
     9ba:	ec 0e       	add	r14, r28
     9bc:	fd 1e       	adc	r15, r29
     9be:	ce 01       	movw	r24, r28
     9c0:	01 96       	adiw	r24, 0x01	; 1
     9c2:	b7 01       	movw	r22, r14
     9c4:	ce d2       	rcall	.+1436   	; 0xf62 <__unpack_f>
     9c6:	8e 01       	movw	r16, r28
     9c8:	0f 5e       	subi	r16, 0xEF	; 239
     9ca:	1f 4f       	sbci	r17, 0xFF	; 255
     9cc:	ce 01       	movw	r24, r28
     9ce:	05 96       	adiw	r24, 0x05	; 5
     9d0:	b8 01       	movw	r22, r16
     9d2:	c7 d2       	rcall	.+1422   	; 0xf62 <__unpack_f>
     9d4:	c7 01       	movw	r24, r14
     9d6:	b8 01       	movw	r22, r16
     9d8:	ae 01       	movw	r20, r28
     9da:	47 5e       	subi	r20, 0xE7	; 231
     9dc:	5f 4f       	sbci	r21, 0xFF	; 255
     9de:	95 de       	rcall	.-726    	; 0x70a <_fpadd_parts>
     9e0:	f3 d1       	rcall	.+998    	; 0xdc8 <__pack_f>
     9e2:	a0 96       	adiw	r28, 0x20	; 32
     9e4:	e6 e0       	ldi	r30, 0x06	; 6
     9e6:	a7 c3       	rjmp	.+1870   	; 0x1136 <__epilogue_restores__+0x18>

000009e8 <__subsf3>:
     9e8:	a0 e2       	ldi	r26, 0x20	; 32
     9ea:	b0 e0       	ldi	r27, 0x00	; 0
     9ec:	e9 ef       	ldi	r30, 0xF9	; 249
     9ee:	f4 e0       	ldi	r31, 0x04	; 4
     9f0:	86 c3       	rjmp	.+1804   	; 0x10fe <__prologue_saves__+0x18>
     9f2:	69 83       	std	Y+1, r22	; 0x01
     9f4:	7a 83       	std	Y+2, r23	; 0x02
     9f6:	8b 83       	std	Y+3, r24	; 0x03
     9f8:	9c 83       	std	Y+4, r25	; 0x04
     9fa:	2d 83       	std	Y+5, r18	; 0x05
     9fc:	3e 83       	std	Y+6, r19	; 0x06
     9fe:	4f 83       	std	Y+7, r20	; 0x07
     a00:	58 87       	std	Y+8, r21	; 0x08
     a02:	8e 01       	movw	r16, r28
     a04:	07 5f       	subi	r16, 0xF7	; 247
     a06:	1f 4f       	sbci	r17, 0xFF	; 255
     a08:	ce 01       	movw	r24, r28
     a0a:	01 96       	adiw	r24, 0x01	; 1
     a0c:	b8 01       	movw	r22, r16
     a0e:	a9 d2       	rcall	.+1362   	; 0xf62 <__unpack_f>
     a10:	91 e1       	ldi	r25, 0x11	; 17
     a12:	e9 2e       	mov	r14, r25
     a14:	f1 2c       	mov	r15, r1
     a16:	ec 0e       	add	r14, r28
     a18:	fd 1e       	adc	r15, r29
     a1a:	ce 01       	movw	r24, r28
     a1c:	05 96       	adiw	r24, 0x05	; 5
     a1e:	b7 01       	movw	r22, r14
     a20:	a0 d2       	rcall	.+1344   	; 0xf62 <__unpack_f>
     a22:	8a 89       	ldd	r24, Y+18	; 0x12
     a24:	91 e0       	ldi	r25, 0x01	; 1
     a26:	89 27       	eor	r24, r25
     a28:	8a 8b       	std	Y+18, r24	; 0x12
     a2a:	c8 01       	movw	r24, r16
     a2c:	b7 01       	movw	r22, r14
     a2e:	ae 01       	movw	r20, r28
     a30:	47 5e       	subi	r20, 0xE7	; 231
     a32:	5f 4f       	sbci	r21, 0xFF	; 255
     a34:	6a de       	rcall	.-812    	; 0x70a <_fpadd_parts>
     a36:	c8 d1       	rcall	.+912    	; 0xdc8 <__pack_f>
     a38:	a0 96       	adiw	r28, 0x20	; 32
     a3a:	e6 e0       	ldi	r30, 0x06	; 6
     a3c:	7c c3       	rjmp	.+1784   	; 0x1136 <__epilogue_restores__+0x18>

00000a3e <__mulsf3>:
     a3e:	a0 e2       	ldi	r26, 0x20	; 32
     a40:	b0 e0       	ldi	r27, 0x00	; 0
     a42:	e4 e2       	ldi	r30, 0x24	; 36
     a44:	f5 e0       	ldi	r31, 0x05	; 5
     a46:	4f c3       	rjmp	.+1694   	; 0x10e6 <__prologue_saves__>
     a48:	69 83       	std	Y+1, r22	; 0x01
     a4a:	7a 83       	std	Y+2, r23	; 0x02
     a4c:	8b 83       	std	Y+3, r24	; 0x03
     a4e:	9c 83       	std	Y+4, r25	; 0x04
     a50:	2d 83       	std	Y+5, r18	; 0x05
     a52:	3e 83       	std	Y+6, r19	; 0x06
     a54:	4f 83       	std	Y+7, r20	; 0x07
     a56:	58 87       	std	Y+8, r21	; 0x08
     a58:	ce 01       	movw	r24, r28
     a5a:	01 96       	adiw	r24, 0x01	; 1
     a5c:	be 01       	movw	r22, r28
     a5e:	67 5f       	subi	r22, 0xF7	; 247
     a60:	7f 4f       	sbci	r23, 0xFF	; 255
     a62:	7f d2       	rcall	.+1278   	; 0xf62 <__unpack_f>
     a64:	ce 01       	movw	r24, r28
     a66:	05 96       	adiw	r24, 0x05	; 5
     a68:	be 01       	movw	r22, r28
     a6a:	6f 5e       	subi	r22, 0xEF	; 239
     a6c:	7f 4f       	sbci	r23, 0xFF	; 255
     a6e:	79 d2       	rcall	.+1266   	; 0xf62 <__unpack_f>
     a70:	99 85       	ldd	r25, Y+9	; 0x09
     a72:	92 30       	cpi	r25, 0x02	; 2
     a74:	78 f0       	brcs	.+30     	; 0xa94 <__mulsf3+0x56>
     a76:	89 89       	ldd	r24, Y+17	; 0x11
     a78:	82 30       	cpi	r24, 0x02	; 2
     a7a:	c0 f0       	brcs	.+48     	; 0xaac <__mulsf3+0x6e>
     a7c:	94 30       	cpi	r25, 0x04	; 4
     a7e:	19 f4       	brne	.+6      	; 0xa86 <__mulsf3+0x48>
     a80:	82 30       	cpi	r24, 0x02	; 2
     a82:	41 f4       	brne	.+16     	; 0xa94 <__mulsf3+0x56>
     a84:	cb c0       	rjmp	.+406    	; 0xc1c <__mulsf3+0x1de>
     a86:	84 30       	cpi	r24, 0x04	; 4
     a88:	19 f4       	brne	.+6      	; 0xa90 <__mulsf3+0x52>
     a8a:	92 30       	cpi	r25, 0x02	; 2
     a8c:	79 f4       	brne	.+30     	; 0xaac <__mulsf3+0x6e>
     a8e:	c6 c0       	rjmp	.+396    	; 0xc1c <__mulsf3+0x1de>
     a90:	92 30       	cpi	r25, 0x02	; 2
     a92:	51 f4       	brne	.+20     	; 0xaa8 <__mulsf3+0x6a>
     a94:	81 e0       	ldi	r24, 0x01	; 1
     a96:	2a 85       	ldd	r18, Y+10	; 0x0a
     a98:	9a 89       	ldd	r25, Y+18	; 0x12
     a9a:	29 17       	cp	r18, r25
     a9c:	09 f4       	brne	.+2      	; 0xaa0 <__mulsf3+0x62>
     a9e:	80 e0       	ldi	r24, 0x00	; 0
     aa0:	8a 87       	std	Y+10, r24	; 0x0a
     aa2:	ce 01       	movw	r24, r28
     aa4:	09 96       	adiw	r24, 0x09	; 9
     aa6:	bc c0       	rjmp	.+376    	; 0xc20 <__mulsf3+0x1e2>
     aa8:	82 30       	cpi	r24, 0x02	; 2
     aaa:	51 f4       	brne	.+20     	; 0xac0 <__mulsf3+0x82>
     aac:	81 e0       	ldi	r24, 0x01	; 1
     aae:	2a 85       	ldd	r18, Y+10	; 0x0a
     ab0:	9a 89       	ldd	r25, Y+18	; 0x12
     ab2:	29 17       	cp	r18, r25
     ab4:	09 f4       	brne	.+2      	; 0xab8 <__mulsf3+0x7a>
     ab6:	80 e0       	ldi	r24, 0x00	; 0
     ab8:	8a 8b       	std	Y+18, r24	; 0x12
     aba:	ce 01       	movw	r24, r28
     abc:	41 96       	adiw	r24, 0x11	; 17
     abe:	b0 c0       	rjmp	.+352    	; 0xc20 <__mulsf3+0x1e2>
     ac0:	6d 84       	ldd	r6, Y+13	; 0x0d
     ac2:	7e 84       	ldd	r7, Y+14	; 0x0e
     ac4:	8f 84       	ldd	r8, Y+15	; 0x0f
     ac6:	98 88       	ldd	r9, Y+16	; 0x10
     ac8:	ed 88       	ldd	r14, Y+21	; 0x15
     aca:	fe 88       	ldd	r15, Y+22	; 0x16
     acc:	0f 89       	ldd	r16, Y+23	; 0x17
     ace:	18 8d       	ldd	r17, Y+24	; 0x18
     ad0:	e0 e2       	ldi	r30, 0x20	; 32
     ad2:	f0 e0       	ldi	r31, 0x00	; 0
     ad4:	80 e0       	ldi	r24, 0x00	; 0
     ad6:	90 e0       	ldi	r25, 0x00	; 0
     ad8:	dc 01       	movw	r26, r24
     ada:	aa 24       	eor	r10, r10
     adc:	bb 24       	eor	r11, r11
     ade:	65 01       	movw	r12, r10
     ae0:	20 e0       	ldi	r18, 0x00	; 0
     ae2:	30 e0       	ldi	r19, 0x00	; 0
     ae4:	a9 01       	movw	r20, r18
     ae6:	b3 01       	movw	r22, r6
     ae8:	61 70       	andi	r22, 0x01	; 1
     aea:	70 70       	andi	r23, 0x00	; 0
     aec:	61 15       	cp	r22, r1
     aee:	71 05       	cpc	r23, r1
     af0:	d1 f0       	breq	.+52     	; 0xb26 <__mulsf3+0xe8>
     af2:	2e 0d       	add	r18, r14
     af4:	3f 1d       	adc	r19, r15
     af6:	40 1f       	adc	r20, r16
     af8:	51 1f       	adc	r21, r17
     afa:	15 01       	movw	r2, r10
     afc:	26 01       	movw	r4, r12
     afe:	28 0e       	add	r2, r24
     b00:	39 1e       	adc	r3, r25
     b02:	4a 1e       	adc	r4, r26
     b04:	5b 1e       	adc	r5, r27
     b06:	81 e0       	ldi	r24, 0x01	; 1
     b08:	90 e0       	ldi	r25, 0x00	; 0
     b0a:	a0 e0       	ldi	r26, 0x00	; 0
     b0c:	b0 e0       	ldi	r27, 0x00	; 0
     b0e:	2e 15       	cp	r18, r14
     b10:	3f 05       	cpc	r19, r15
     b12:	40 07       	cpc	r20, r16
     b14:	51 07       	cpc	r21, r17
     b16:	18 f0       	brcs	.+6      	; 0xb1e <__mulsf3+0xe0>
     b18:	80 e0       	ldi	r24, 0x00	; 0
     b1a:	90 e0       	ldi	r25, 0x00	; 0
     b1c:	dc 01       	movw	r26, r24
     b1e:	82 0d       	add	r24, r2
     b20:	93 1d       	adc	r25, r3
     b22:	a4 1d       	adc	r26, r4
     b24:	b5 1d       	adc	r27, r5
     b26:	aa 0c       	add	r10, r10
     b28:	bb 1c       	adc	r11, r11
     b2a:	cc 1c       	adc	r12, r12
     b2c:	dd 1c       	adc	r13, r13
     b2e:	17 ff       	sbrs	r17, 7
     b30:	09 c0       	rjmp	.+18     	; 0xb44 <__mulsf3+0x106>
     b32:	61 e0       	ldi	r22, 0x01	; 1
     b34:	26 2e       	mov	r2, r22
     b36:	31 2c       	mov	r3, r1
     b38:	41 2c       	mov	r4, r1
     b3a:	51 2c       	mov	r5, r1
     b3c:	a2 28       	or	r10, r2
     b3e:	b3 28       	or	r11, r3
     b40:	c4 28       	or	r12, r4
     b42:	d5 28       	or	r13, r5
     b44:	31 97       	sbiw	r30, 0x01	; 1
     b46:	49 f0       	breq	.+18     	; 0xb5a <__mulsf3+0x11c>
     b48:	ee 0c       	add	r14, r14
     b4a:	ff 1c       	adc	r15, r15
     b4c:	00 1f       	adc	r16, r16
     b4e:	11 1f       	adc	r17, r17
     b50:	96 94       	lsr	r9
     b52:	87 94       	ror	r8
     b54:	77 94       	ror	r7
     b56:	67 94       	ror	r6
     b58:	c6 cf       	rjmp	.-116    	; 0xae6 <__mulsf3+0xa8>
     b5a:	6b 89       	ldd	r22, Y+19	; 0x13
     b5c:	7c 89       	ldd	r23, Y+20	; 0x14
     b5e:	eb 85       	ldd	r30, Y+11	; 0x0b
     b60:	fc 85       	ldd	r31, Y+12	; 0x0c
     b62:	6e 0f       	add	r22, r30
     b64:	7f 1f       	adc	r23, r31
     b66:	6e 5f       	subi	r22, 0xFE	; 254
     b68:	7f 4f       	sbci	r23, 0xFF	; 255
     b6a:	7c 8f       	std	Y+28, r23	; 0x1c
     b6c:	6b 8f       	std	Y+27, r22	; 0x1b
     b6e:	61 e0       	ldi	r22, 0x01	; 1
     b70:	ea 85       	ldd	r30, Y+10	; 0x0a
     b72:	7a 89       	ldd	r23, Y+18	; 0x12
     b74:	e7 17       	cp	r30, r23
     b76:	09 f4       	brne	.+2      	; 0xb7a <__mulsf3+0x13c>
     b78:	60 e0       	ldi	r22, 0x00	; 0
     b7a:	6a 8f       	std	Y+26, r22	; 0x1a
     b7c:	6b 8d       	ldd	r22, Y+27	; 0x1b
     b7e:	7c 8d       	ldd	r23, Y+28	; 0x1c
     b80:	10 c0       	rjmp	.+32     	; 0xba2 <__mulsf3+0x164>
     b82:	fc 01       	movw	r30, r24
     b84:	e1 70       	andi	r30, 0x01	; 1
     b86:	f0 70       	andi	r31, 0x00	; 0
     b88:	30 97       	sbiw	r30, 0x00	; 0
     b8a:	29 f0       	breq	.+10     	; 0xb96 <__mulsf3+0x158>
     b8c:	56 95       	lsr	r21
     b8e:	47 95       	ror	r20
     b90:	37 95       	ror	r19
     b92:	27 95       	ror	r18
     b94:	50 68       	ori	r21, 0x80	; 128
     b96:	b6 95       	lsr	r27
     b98:	a7 95       	ror	r26
     b9a:	97 95       	ror	r25
     b9c:	87 95       	ror	r24
     b9e:	6f 5f       	subi	r22, 0xFF	; 255
     ba0:	7f 4f       	sbci	r23, 0xFF	; 255
     ba2:	b7 fd       	sbrc	r27, 7
     ba4:	ee cf       	rjmp	.-36     	; 0xb82 <__mulsf3+0x144>
     ba6:	0c c0       	rjmp	.+24     	; 0xbc0 <__mulsf3+0x182>
     ba8:	88 0f       	add	r24, r24
     baa:	99 1f       	adc	r25, r25
     bac:	aa 1f       	adc	r26, r26
     bae:	bb 1f       	adc	r27, r27
     bb0:	57 fd       	sbrc	r21, 7
     bb2:	81 60       	ori	r24, 0x01	; 1
     bb4:	22 0f       	add	r18, r18
     bb6:	33 1f       	adc	r19, r19
     bb8:	44 1f       	adc	r20, r20
     bba:	55 1f       	adc	r21, r21
     bbc:	61 50       	subi	r22, 0x01	; 1
     bbe:	70 40       	sbci	r23, 0x00	; 0
     bc0:	80 30       	cpi	r24, 0x00	; 0
     bc2:	e0 e0       	ldi	r30, 0x00	; 0
     bc4:	9e 07       	cpc	r25, r30
     bc6:	e0 e0       	ldi	r30, 0x00	; 0
     bc8:	ae 07       	cpc	r26, r30
     bca:	e0 e4       	ldi	r30, 0x40	; 64
     bcc:	be 07       	cpc	r27, r30
     bce:	60 f3       	brcs	.-40     	; 0xba8 <__mulsf3+0x16a>
     bd0:	6b 8f       	std	Y+27, r22	; 0x1b
     bd2:	7c 8f       	std	Y+28, r23	; 0x1c
     bd4:	6f e7       	ldi	r22, 0x7F	; 127
     bd6:	e6 2e       	mov	r14, r22
     bd8:	f1 2c       	mov	r15, r1
     bda:	01 2d       	mov	r16, r1
     bdc:	11 2d       	mov	r17, r1
     bde:	e8 22       	and	r14, r24
     be0:	f9 22       	and	r15, r25
     be2:	0a 23       	and	r16, r26
     be4:	1b 23       	and	r17, r27
     be6:	60 e4       	ldi	r22, 0x40	; 64
     be8:	e6 16       	cp	r14, r22
     bea:	f1 04       	cpc	r15, r1
     bec:	01 05       	cpc	r16, r1
     bee:	11 05       	cpc	r17, r1
     bf0:	61 f4       	brne	.+24     	; 0xc0a <__mulsf3+0x1cc>
     bf2:	87 fd       	sbrc	r24, 7
     bf4:	0a c0       	rjmp	.+20     	; 0xc0a <__mulsf3+0x1cc>
     bf6:	21 15       	cp	r18, r1
     bf8:	31 05       	cpc	r19, r1
     bfa:	41 05       	cpc	r20, r1
     bfc:	51 05       	cpc	r21, r1
     bfe:	29 f0       	breq	.+10     	; 0xc0a <__mulsf3+0x1cc>
     c00:	80 5c       	subi	r24, 0xC0	; 192
     c02:	9f 4f       	sbci	r25, 0xFF	; 255
     c04:	af 4f       	sbci	r26, 0xFF	; 255
     c06:	bf 4f       	sbci	r27, 0xFF	; 255
     c08:	80 78       	andi	r24, 0x80	; 128
     c0a:	8d 8f       	std	Y+29, r24	; 0x1d
     c0c:	9e 8f       	std	Y+30, r25	; 0x1e
     c0e:	af 8f       	std	Y+31, r26	; 0x1f
     c10:	b8 a3       	std	Y+32, r27	; 0x20
     c12:	83 e0       	ldi	r24, 0x03	; 3
     c14:	89 8f       	std	Y+25, r24	; 0x19
     c16:	ce 01       	movw	r24, r28
     c18:	49 96       	adiw	r24, 0x19	; 25
     c1a:	02 c0       	rjmp	.+4      	; 0xc20 <__mulsf3+0x1e2>
     c1c:	85 e6       	ldi	r24, 0x65	; 101
     c1e:	90 e0       	ldi	r25, 0x00	; 0
     c20:	d3 d0       	rcall	.+422    	; 0xdc8 <__pack_f>
     c22:	a0 96       	adiw	r28, 0x20	; 32
     c24:	e2 e1       	ldi	r30, 0x12	; 18
     c26:	7b c2       	rjmp	.+1270   	; 0x111e <__epilogue_restores__>

00000c28 <__gtsf2>:
     c28:	a8 e1       	ldi	r26, 0x18	; 24
     c2a:	b0 e0       	ldi	r27, 0x00	; 0
     c2c:	e9 e1       	ldi	r30, 0x19	; 25
     c2e:	f6 e0       	ldi	r31, 0x06	; 6
     c30:	66 c2       	rjmp	.+1228   	; 0x10fe <__prologue_saves__+0x18>
     c32:	69 83       	std	Y+1, r22	; 0x01
     c34:	7a 83       	std	Y+2, r23	; 0x02
     c36:	8b 83       	std	Y+3, r24	; 0x03
     c38:	9c 83       	std	Y+4, r25	; 0x04
     c3a:	2d 83       	std	Y+5, r18	; 0x05
     c3c:	3e 83       	std	Y+6, r19	; 0x06
     c3e:	4f 83       	std	Y+7, r20	; 0x07
     c40:	58 87       	std	Y+8, r21	; 0x08
     c42:	8e 01       	movw	r16, r28
     c44:	07 5f       	subi	r16, 0xF7	; 247
     c46:	1f 4f       	sbci	r17, 0xFF	; 255
     c48:	ce 01       	movw	r24, r28
     c4a:	01 96       	adiw	r24, 0x01	; 1
     c4c:	b8 01       	movw	r22, r16
     c4e:	89 d1       	rcall	.+786    	; 0xf62 <__unpack_f>
     c50:	81 e1       	ldi	r24, 0x11	; 17
     c52:	e8 2e       	mov	r14, r24
     c54:	f1 2c       	mov	r15, r1
     c56:	ec 0e       	add	r14, r28
     c58:	fd 1e       	adc	r15, r29
     c5a:	ce 01       	movw	r24, r28
     c5c:	05 96       	adiw	r24, 0x05	; 5
     c5e:	b7 01       	movw	r22, r14
     c60:	80 d1       	rcall	.+768    	; 0xf62 <__unpack_f>
     c62:	89 85       	ldd	r24, Y+9	; 0x09
     c64:	82 30       	cpi	r24, 0x02	; 2
     c66:	38 f0       	brcs	.+14     	; 0xc76 <__gtsf2+0x4e>
     c68:	89 89       	ldd	r24, Y+17	; 0x11
     c6a:	82 30       	cpi	r24, 0x02	; 2
     c6c:	20 f0       	brcs	.+8      	; 0xc76 <__gtsf2+0x4e>
     c6e:	c8 01       	movw	r24, r16
     c70:	b7 01       	movw	r22, r14
     c72:	e0 d1       	rcall	.+960    	; 0x1034 <__fpcmp_parts_f>
     c74:	01 c0       	rjmp	.+2      	; 0xc78 <__gtsf2+0x50>
     c76:	8f ef       	ldi	r24, 0xFF	; 255
     c78:	68 96       	adiw	r28, 0x18	; 24
     c7a:	e6 e0       	ldi	r30, 0x06	; 6
     c7c:	5c c2       	rjmp	.+1208   	; 0x1136 <__epilogue_restores__+0x18>

00000c7e <__gesf2>:
     c7e:	a8 e1       	ldi	r26, 0x18	; 24
     c80:	b0 e0       	ldi	r27, 0x00	; 0
     c82:	e4 e4       	ldi	r30, 0x44	; 68
     c84:	f6 e0       	ldi	r31, 0x06	; 6
     c86:	3b c2       	rjmp	.+1142   	; 0x10fe <__prologue_saves__+0x18>
     c88:	69 83       	std	Y+1, r22	; 0x01
     c8a:	7a 83       	std	Y+2, r23	; 0x02
     c8c:	8b 83       	std	Y+3, r24	; 0x03
     c8e:	9c 83       	std	Y+4, r25	; 0x04
     c90:	2d 83       	std	Y+5, r18	; 0x05
     c92:	3e 83       	std	Y+6, r19	; 0x06
     c94:	4f 83       	std	Y+7, r20	; 0x07
     c96:	58 87       	std	Y+8, r21	; 0x08
     c98:	8e 01       	movw	r16, r28
     c9a:	07 5f       	subi	r16, 0xF7	; 247
     c9c:	1f 4f       	sbci	r17, 0xFF	; 255
     c9e:	ce 01       	movw	r24, r28
     ca0:	01 96       	adiw	r24, 0x01	; 1
     ca2:	b8 01       	movw	r22, r16
     ca4:	5e d1       	rcall	.+700    	; 0xf62 <__unpack_f>
     ca6:	81 e1       	ldi	r24, 0x11	; 17
     ca8:	e8 2e       	mov	r14, r24
     caa:	f1 2c       	mov	r15, r1
     cac:	ec 0e       	add	r14, r28
     cae:	fd 1e       	adc	r15, r29
     cb0:	ce 01       	movw	r24, r28
     cb2:	05 96       	adiw	r24, 0x05	; 5
     cb4:	b7 01       	movw	r22, r14
     cb6:	55 d1       	rcall	.+682    	; 0xf62 <__unpack_f>
     cb8:	89 85       	ldd	r24, Y+9	; 0x09
     cba:	82 30       	cpi	r24, 0x02	; 2
     cbc:	38 f0       	brcs	.+14     	; 0xccc <__gesf2+0x4e>
     cbe:	89 89       	ldd	r24, Y+17	; 0x11
     cc0:	82 30       	cpi	r24, 0x02	; 2
     cc2:	20 f0       	brcs	.+8      	; 0xccc <__gesf2+0x4e>
     cc4:	c8 01       	movw	r24, r16
     cc6:	b7 01       	movw	r22, r14
     cc8:	b5 d1       	rcall	.+874    	; 0x1034 <__fpcmp_parts_f>
     cca:	01 c0       	rjmp	.+2      	; 0xcce <__gesf2+0x50>
     ccc:	8f ef       	ldi	r24, 0xFF	; 255
     cce:	68 96       	adiw	r28, 0x18	; 24
     cd0:	e6 e0       	ldi	r30, 0x06	; 6
     cd2:	31 c2       	rjmp	.+1122   	; 0x1136 <__epilogue_restores__+0x18>

00000cd4 <__ltsf2>:
     cd4:	a8 e1       	ldi	r26, 0x18	; 24
     cd6:	b0 e0       	ldi	r27, 0x00	; 0
     cd8:	ef e6       	ldi	r30, 0x6F	; 111
     cda:	f6 e0       	ldi	r31, 0x06	; 6
     cdc:	10 c2       	rjmp	.+1056   	; 0x10fe <__prologue_saves__+0x18>
     cde:	69 83       	std	Y+1, r22	; 0x01
     ce0:	7a 83       	std	Y+2, r23	; 0x02
     ce2:	8b 83       	std	Y+3, r24	; 0x03
     ce4:	9c 83       	std	Y+4, r25	; 0x04
     ce6:	2d 83       	std	Y+5, r18	; 0x05
     ce8:	3e 83       	std	Y+6, r19	; 0x06
     cea:	4f 83       	std	Y+7, r20	; 0x07
     cec:	58 87       	std	Y+8, r21	; 0x08
     cee:	8e 01       	movw	r16, r28
     cf0:	07 5f       	subi	r16, 0xF7	; 247
     cf2:	1f 4f       	sbci	r17, 0xFF	; 255
     cf4:	ce 01       	movw	r24, r28
     cf6:	01 96       	adiw	r24, 0x01	; 1
     cf8:	b8 01       	movw	r22, r16
     cfa:	33 d1       	rcall	.+614    	; 0xf62 <__unpack_f>
     cfc:	81 e1       	ldi	r24, 0x11	; 17
     cfe:	e8 2e       	mov	r14, r24
     d00:	f1 2c       	mov	r15, r1
     d02:	ec 0e       	add	r14, r28
     d04:	fd 1e       	adc	r15, r29
     d06:	ce 01       	movw	r24, r28
     d08:	05 96       	adiw	r24, 0x05	; 5
     d0a:	b7 01       	movw	r22, r14
     d0c:	2a d1       	rcall	.+596    	; 0xf62 <__unpack_f>
     d0e:	89 85       	ldd	r24, Y+9	; 0x09
     d10:	82 30       	cpi	r24, 0x02	; 2
     d12:	38 f0       	brcs	.+14     	; 0xd22 <__ltsf2+0x4e>
     d14:	89 89       	ldd	r24, Y+17	; 0x11
     d16:	82 30       	cpi	r24, 0x02	; 2
     d18:	20 f0       	brcs	.+8      	; 0xd22 <__ltsf2+0x4e>
     d1a:	c8 01       	movw	r24, r16
     d1c:	b7 01       	movw	r22, r14
     d1e:	8a d1       	rcall	.+788    	; 0x1034 <__fpcmp_parts_f>
     d20:	01 c0       	rjmp	.+2      	; 0xd24 <__ltsf2+0x50>
     d22:	81 e0       	ldi	r24, 0x01	; 1
     d24:	68 96       	adiw	r28, 0x18	; 24
     d26:	e6 e0       	ldi	r30, 0x06	; 6
     d28:	06 c2       	rjmp	.+1036   	; 0x1136 <__epilogue_restores__+0x18>

00000d2a <__fixsfsi>:
     d2a:	ac e0       	ldi	r26, 0x0C	; 12
     d2c:	b0 e0       	ldi	r27, 0x00	; 0
     d2e:	ea e9       	ldi	r30, 0x9A	; 154
     d30:	f6 e0       	ldi	r31, 0x06	; 6
     d32:	e9 c1       	rjmp	.+978    	; 0x1106 <__prologue_saves__+0x20>
     d34:	69 83       	std	Y+1, r22	; 0x01
     d36:	7a 83       	std	Y+2, r23	; 0x02
     d38:	8b 83       	std	Y+3, r24	; 0x03
     d3a:	9c 83       	std	Y+4, r25	; 0x04
     d3c:	ce 01       	movw	r24, r28
     d3e:	01 96       	adiw	r24, 0x01	; 1
     d40:	be 01       	movw	r22, r28
     d42:	6b 5f       	subi	r22, 0xFB	; 251
     d44:	7f 4f       	sbci	r23, 0xFF	; 255
     d46:	0d d1       	rcall	.+538    	; 0xf62 <__unpack_f>
     d48:	8d 81       	ldd	r24, Y+5	; 0x05
     d4a:	82 30       	cpi	r24, 0x02	; 2
     d4c:	81 f1       	breq	.+96     	; 0xdae <__fixsfsi+0x84>
     d4e:	82 30       	cpi	r24, 0x02	; 2
     d50:	70 f1       	brcs	.+92     	; 0xdae <__fixsfsi+0x84>
     d52:	84 30       	cpi	r24, 0x04	; 4
     d54:	21 f4       	brne	.+8      	; 0xd5e <__fixsfsi+0x34>
     d56:	8e 81       	ldd	r24, Y+6	; 0x06
     d58:	88 23       	and	r24, r24
     d5a:	69 f1       	breq	.+90     	; 0xdb6 <__fixsfsi+0x8c>
     d5c:	0a c0       	rjmp	.+20     	; 0xd72 <__fixsfsi+0x48>
     d5e:	2f 81       	ldd	r18, Y+7	; 0x07
     d60:	38 85       	ldd	r19, Y+8	; 0x08
     d62:	37 fd       	sbrc	r19, 7
     d64:	24 c0       	rjmp	.+72     	; 0xdae <__fixsfsi+0x84>
     d66:	6e 81       	ldd	r22, Y+6	; 0x06
     d68:	2f 31       	cpi	r18, 0x1F	; 31
     d6a:	31 05       	cpc	r19, r1
     d6c:	3c f0       	brlt	.+14     	; 0xd7c <__fixsfsi+0x52>
     d6e:	66 23       	and	r22, r22
     d70:	11 f1       	breq	.+68     	; 0xdb6 <__fixsfsi+0x8c>
     d72:	20 e0       	ldi	r18, 0x00	; 0
     d74:	30 e0       	ldi	r19, 0x00	; 0
     d76:	40 e0       	ldi	r20, 0x00	; 0
     d78:	50 e8       	ldi	r21, 0x80	; 128
     d7a:	21 c0       	rjmp	.+66     	; 0xdbe <__fixsfsi+0x94>
     d7c:	8e e1       	ldi	r24, 0x1E	; 30
     d7e:	90 e0       	ldi	r25, 0x00	; 0
     d80:	82 1b       	sub	r24, r18
     d82:	93 0b       	sbc	r25, r19
     d84:	29 85       	ldd	r18, Y+9	; 0x09
     d86:	3a 85       	ldd	r19, Y+10	; 0x0a
     d88:	4b 85       	ldd	r20, Y+11	; 0x0b
     d8a:	5c 85       	ldd	r21, Y+12	; 0x0c
     d8c:	04 c0       	rjmp	.+8      	; 0xd96 <__fixsfsi+0x6c>
     d8e:	56 95       	lsr	r21
     d90:	47 95       	ror	r20
     d92:	37 95       	ror	r19
     d94:	27 95       	ror	r18
     d96:	8a 95       	dec	r24
     d98:	d2 f7       	brpl	.-12     	; 0xd8e <__fixsfsi+0x64>
     d9a:	66 23       	and	r22, r22
     d9c:	81 f0       	breq	.+32     	; 0xdbe <__fixsfsi+0x94>
     d9e:	50 95       	com	r21
     da0:	40 95       	com	r20
     da2:	30 95       	com	r19
     da4:	21 95       	neg	r18
     da6:	3f 4f       	sbci	r19, 0xFF	; 255
     da8:	4f 4f       	sbci	r20, 0xFF	; 255
     daa:	5f 4f       	sbci	r21, 0xFF	; 255
     dac:	08 c0       	rjmp	.+16     	; 0xdbe <__fixsfsi+0x94>
     dae:	20 e0       	ldi	r18, 0x00	; 0
     db0:	30 e0       	ldi	r19, 0x00	; 0
     db2:	a9 01       	movw	r20, r18
     db4:	04 c0       	rjmp	.+8      	; 0xdbe <__fixsfsi+0x94>
     db6:	2f ef       	ldi	r18, 0xFF	; 255
     db8:	3f ef       	ldi	r19, 0xFF	; 255
     dba:	4f ef       	ldi	r20, 0xFF	; 255
     dbc:	5f e7       	ldi	r21, 0x7F	; 127
     dbe:	b9 01       	movw	r22, r18
     dc0:	ca 01       	movw	r24, r20
     dc2:	2c 96       	adiw	r28, 0x0c	; 12
     dc4:	e2 e0       	ldi	r30, 0x02	; 2
     dc6:	bb c1       	rjmp	.+886    	; 0x113e <__epilogue_restores__+0x20>

00000dc8 <__pack_f>:
     dc8:	ef 92       	push	r14
     dca:	ff 92       	push	r15
     dcc:	0f 93       	push	r16
     dce:	1f 93       	push	r17
     dd0:	cf 93       	push	r28
     dd2:	df 93       	push	r29
     dd4:	fc 01       	movw	r30, r24
     dd6:	24 81       	ldd	r18, Z+4	; 0x04
     dd8:	35 81       	ldd	r19, Z+5	; 0x05
     dda:	46 81       	ldd	r20, Z+6	; 0x06
     ddc:	57 81       	ldd	r21, Z+7	; 0x07
     dde:	61 81       	ldd	r22, Z+1	; 0x01
     de0:	80 81       	ld	r24, Z
     de2:	82 30       	cpi	r24, 0x02	; 2
     de4:	20 f4       	brcc	.+8      	; 0xdee <__pack_f+0x26>
     de6:	40 61       	ori	r20, 0x10	; 16
     de8:	ef ef       	ldi	r30, 0xFF	; 255
     dea:	f0 e0       	ldi	r31, 0x00	; 0
     dec:	a3 c0       	rjmp	.+326    	; 0xf34 <__pack_f+0x16c>
     dee:	84 30       	cpi	r24, 0x04	; 4
     df0:	09 f4       	brne	.+2      	; 0xdf4 <__pack_f+0x2c>
     df2:	9b c0       	rjmp	.+310    	; 0xf2a <__pack_f+0x162>
     df4:	82 30       	cpi	r24, 0x02	; 2
     df6:	09 f4       	brne	.+2      	; 0xdfa <__pack_f+0x32>
     df8:	92 c0       	rjmp	.+292    	; 0xf1e <__pack_f+0x156>
     dfa:	21 15       	cp	r18, r1
     dfc:	31 05       	cpc	r19, r1
     dfe:	41 05       	cpc	r20, r1
     e00:	51 05       	cpc	r21, r1
     e02:	09 f4       	brne	.+2      	; 0xe06 <__pack_f+0x3e>
     e04:	8f c0       	rjmp	.+286    	; 0xf24 <__pack_f+0x15c>
     e06:	02 80       	ldd	r0, Z+2	; 0x02
     e08:	f3 81       	ldd	r31, Z+3	; 0x03
     e0a:	e0 2d       	mov	r30, r0
     e0c:	8f ef       	ldi	r24, 0xFF	; 255
     e0e:	e2 38       	cpi	r30, 0x82	; 130
     e10:	f8 07       	cpc	r31, r24
     e12:	0c f0       	brlt	.+2      	; 0xe16 <__pack_f+0x4e>
     e14:	5a c0       	rjmp	.+180    	; 0xeca <__pack_f+0x102>
     e16:	c2 e8       	ldi	r28, 0x82	; 130
     e18:	df ef       	ldi	r29, 0xFF	; 255
     e1a:	ce 1b       	sub	r28, r30
     e1c:	df 0b       	sbc	r29, r31
     e1e:	ca 31       	cpi	r28, 0x1A	; 26
     e20:	d1 05       	cpc	r29, r1
     e22:	6c f5       	brge	.+90     	; 0xe7e <__pack_f+0xb6>
     e24:	79 01       	movw	r14, r18
     e26:	8a 01       	movw	r16, r20
     e28:	0c 2e       	mov	r0, r28
     e2a:	04 c0       	rjmp	.+8      	; 0xe34 <__pack_f+0x6c>
     e2c:	16 95       	lsr	r17
     e2e:	07 95       	ror	r16
     e30:	f7 94       	ror	r15
     e32:	e7 94       	ror	r14
     e34:	0a 94       	dec	r0
     e36:	d2 f7       	brpl	.-12     	; 0xe2c <__pack_f+0x64>
     e38:	81 e0       	ldi	r24, 0x01	; 1
     e3a:	90 e0       	ldi	r25, 0x00	; 0
     e3c:	a0 e0       	ldi	r26, 0x00	; 0
     e3e:	b0 e0       	ldi	r27, 0x00	; 0
     e40:	0c 2e       	mov	r0, r28
     e42:	04 c0       	rjmp	.+8      	; 0xe4c <__pack_f+0x84>
     e44:	88 0f       	add	r24, r24
     e46:	99 1f       	adc	r25, r25
     e48:	aa 1f       	adc	r26, r26
     e4a:	bb 1f       	adc	r27, r27
     e4c:	0a 94       	dec	r0
     e4e:	d2 f7       	brpl	.-12     	; 0xe44 <__pack_f+0x7c>
     e50:	01 97       	sbiw	r24, 0x01	; 1
     e52:	a1 09       	sbc	r26, r1
     e54:	b1 09       	sbc	r27, r1
     e56:	82 23       	and	r24, r18
     e58:	93 23       	and	r25, r19
     e5a:	a4 23       	and	r26, r20
     e5c:	b5 23       	and	r27, r21
     e5e:	21 e0       	ldi	r18, 0x01	; 1
     e60:	30 e0       	ldi	r19, 0x00	; 0
     e62:	40 e0       	ldi	r20, 0x00	; 0
     e64:	50 e0       	ldi	r21, 0x00	; 0
     e66:	00 97       	sbiw	r24, 0x00	; 0
     e68:	a1 05       	cpc	r26, r1
     e6a:	b1 05       	cpc	r27, r1
     e6c:	19 f4       	brne	.+6      	; 0xe74 <__pack_f+0xac>
     e6e:	20 e0       	ldi	r18, 0x00	; 0
     e70:	30 e0       	ldi	r19, 0x00	; 0
     e72:	a9 01       	movw	r20, r18
     e74:	2e 29       	or	r18, r14
     e76:	3f 29       	or	r19, r15
     e78:	40 2b       	or	r20, r16
     e7a:	51 2b       	or	r21, r17
     e7c:	03 c0       	rjmp	.+6      	; 0xe84 <__pack_f+0xbc>
     e7e:	20 e0       	ldi	r18, 0x00	; 0
     e80:	30 e0       	ldi	r19, 0x00	; 0
     e82:	a9 01       	movw	r20, r18
     e84:	da 01       	movw	r26, r20
     e86:	c9 01       	movw	r24, r18
     e88:	8f 77       	andi	r24, 0x7F	; 127
     e8a:	90 70       	andi	r25, 0x00	; 0
     e8c:	a0 70       	andi	r26, 0x00	; 0
     e8e:	b0 70       	andi	r27, 0x00	; 0
     e90:	80 34       	cpi	r24, 0x40	; 64
     e92:	91 05       	cpc	r25, r1
     e94:	a1 05       	cpc	r26, r1
     e96:	b1 05       	cpc	r27, r1
     e98:	39 f4       	brne	.+14     	; 0xea8 <__pack_f+0xe0>
     e9a:	27 ff       	sbrs	r18, 7
     e9c:	09 c0       	rjmp	.+18     	; 0xeb0 <__pack_f+0xe8>
     e9e:	20 5c       	subi	r18, 0xC0	; 192
     ea0:	3f 4f       	sbci	r19, 0xFF	; 255
     ea2:	4f 4f       	sbci	r20, 0xFF	; 255
     ea4:	5f 4f       	sbci	r21, 0xFF	; 255
     ea6:	04 c0       	rjmp	.+8      	; 0xeb0 <__pack_f+0xe8>
     ea8:	21 5c       	subi	r18, 0xC1	; 193
     eaa:	3f 4f       	sbci	r19, 0xFF	; 255
     eac:	4f 4f       	sbci	r20, 0xFF	; 255
     eae:	5f 4f       	sbci	r21, 0xFF	; 255
     eb0:	e1 e0       	ldi	r30, 0x01	; 1
     eb2:	f0 e0       	ldi	r31, 0x00	; 0
     eb4:	20 30       	cpi	r18, 0x00	; 0
     eb6:	80 e0       	ldi	r24, 0x00	; 0
     eb8:	38 07       	cpc	r19, r24
     eba:	80 e0       	ldi	r24, 0x00	; 0
     ebc:	48 07       	cpc	r20, r24
     ebe:	80 e4       	ldi	r24, 0x40	; 64
     ec0:	58 07       	cpc	r21, r24
     ec2:	28 f5       	brcc	.+74     	; 0xf0e <__pack_f+0x146>
     ec4:	e0 e0       	ldi	r30, 0x00	; 0
     ec6:	f0 e0       	ldi	r31, 0x00	; 0
     ec8:	22 c0       	rjmp	.+68     	; 0xf0e <__pack_f+0x146>
     eca:	e0 38       	cpi	r30, 0x80	; 128
     ecc:	f1 05       	cpc	r31, r1
     ece:	6c f5       	brge	.+90     	; 0xf2a <__pack_f+0x162>
     ed0:	e1 58       	subi	r30, 0x81	; 129
     ed2:	ff 4f       	sbci	r31, 0xFF	; 255
     ed4:	da 01       	movw	r26, r20
     ed6:	c9 01       	movw	r24, r18
     ed8:	8f 77       	andi	r24, 0x7F	; 127
     eda:	90 70       	andi	r25, 0x00	; 0
     edc:	a0 70       	andi	r26, 0x00	; 0
     ede:	b0 70       	andi	r27, 0x00	; 0
     ee0:	80 34       	cpi	r24, 0x40	; 64
     ee2:	91 05       	cpc	r25, r1
     ee4:	a1 05       	cpc	r26, r1
     ee6:	b1 05       	cpc	r27, r1
     ee8:	39 f4       	brne	.+14     	; 0xef8 <__pack_f+0x130>
     eea:	27 ff       	sbrs	r18, 7
     eec:	09 c0       	rjmp	.+18     	; 0xf00 <__pack_f+0x138>
     eee:	20 5c       	subi	r18, 0xC0	; 192
     ef0:	3f 4f       	sbci	r19, 0xFF	; 255
     ef2:	4f 4f       	sbci	r20, 0xFF	; 255
     ef4:	5f 4f       	sbci	r21, 0xFF	; 255
     ef6:	04 c0       	rjmp	.+8      	; 0xf00 <__pack_f+0x138>
     ef8:	21 5c       	subi	r18, 0xC1	; 193
     efa:	3f 4f       	sbci	r19, 0xFF	; 255
     efc:	4f 4f       	sbci	r20, 0xFF	; 255
     efe:	5f 4f       	sbci	r21, 0xFF	; 255
     f00:	57 ff       	sbrs	r21, 7
     f02:	05 c0       	rjmp	.+10     	; 0xf0e <__pack_f+0x146>
     f04:	56 95       	lsr	r21
     f06:	47 95       	ror	r20
     f08:	37 95       	ror	r19
     f0a:	27 95       	ror	r18
     f0c:	31 96       	adiw	r30, 0x01	; 1
     f0e:	87 e0       	ldi	r24, 0x07	; 7
     f10:	56 95       	lsr	r21
     f12:	47 95       	ror	r20
     f14:	37 95       	ror	r19
     f16:	27 95       	ror	r18
     f18:	8a 95       	dec	r24
     f1a:	d1 f7       	brne	.-12     	; 0xf10 <__pack_f+0x148>
     f1c:	0b c0       	rjmp	.+22     	; 0xf34 <__pack_f+0x16c>
     f1e:	e0 e0       	ldi	r30, 0x00	; 0
     f20:	f0 e0       	ldi	r31, 0x00	; 0
     f22:	05 c0       	rjmp	.+10     	; 0xf2e <__pack_f+0x166>
     f24:	e0 e0       	ldi	r30, 0x00	; 0
     f26:	f0 e0       	ldi	r31, 0x00	; 0
     f28:	05 c0       	rjmp	.+10     	; 0xf34 <__pack_f+0x16c>
     f2a:	ef ef       	ldi	r30, 0xFF	; 255
     f2c:	f0 e0       	ldi	r31, 0x00	; 0
     f2e:	20 e0       	ldi	r18, 0x00	; 0
     f30:	30 e0       	ldi	r19, 0x00	; 0
     f32:	a9 01       	movw	r20, r18
     f34:	8e 2f       	mov	r24, r30
     f36:	87 95       	ror	r24
     f38:	88 27       	eor	r24, r24
     f3a:	87 95       	ror	r24
     f3c:	94 2f       	mov	r25, r20
     f3e:	9f 77       	andi	r25, 0x7F	; 127
     f40:	67 95       	ror	r22
     f42:	66 27       	eor	r22, r22
     f44:	67 95       	ror	r22
     f46:	e6 95       	lsr	r30
     f48:	e2 2e       	mov	r14, r18
     f4a:	a9 2f       	mov	r26, r25
     f4c:	a8 2b       	or	r26, r24
     f4e:	fe 2f       	mov	r31, r30
     f50:	f6 2b       	or	r31, r22
     f52:	62 2f       	mov	r22, r18
     f54:	73 2f       	mov	r23, r19
     f56:	8a 2f       	mov	r24, r26
     f58:	9f 2f       	mov	r25, r31
     f5a:	cd b7       	in	r28, 0x3d	; 61
     f5c:	de b7       	in	r29, 0x3e	; 62
     f5e:	e6 e0       	ldi	r30, 0x06	; 6
     f60:	ea c0       	rjmp	.+468    	; 0x1136 <__epilogue_restores__+0x18>

00000f62 <__unpack_f>:
     f62:	dc 01       	movw	r26, r24
     f64:	fb 01       	movw	r30, r22
     f66:	2c 91       	ld	r18, X
     f68:	11 96       	adiw	r26, 0x01	; 1
     f6a:	3c 91       	ld	r19, X
     f6c:	11 97       	sbiw	r26, 0x01	; 1
     f6e:	12 96       	adiw	r26, 0x02	; 2
     f70:	8c 91       	ld	r24, X
     f72:	12 97       	sbiw	r26, 0x02	; 2
     f74:	48 2f       	mov	r20, r24
     f76:	4f 77       	andi	r20, 0x7F	; 127
     f78:	50 e0       	ldi	r21, 0x00	; 0
     f7a:	98 2f       	mov	r25, r24
     f7c:	99 1f       	adc	r25, r25
     f7e:	99 27       	eor	r25, r25
     f80:	99 1f       	adc	r25, r25
     f82:	13 96       	adiw	r26, 0x03	; 3
     f84:	6c 91       	ld	r22, X
     f86:	13 97       	sbiw	r26, 0x03	; 3
     f88:	86 2f       	mov	r24, r22
     f8a:	88 0f       	add	r24, r24
     f8c:	89 2b       	or	r24, r25
     f8e:	90 e0       	ldi	r25, 0x00	; 0
     f90:	66 1f       	adc	r22, r22
     f92:	66 27       	eor	r22, r22
     f94:	66 1f       	adc	r22, r22
     f96:	61 83       	std	Z+1, r22	; 0x01
     f98:	00 97       	sbiw	r24, 0x00	; 0
     f9a:	39 f5       	brne	.+78     	; 0xfea <__unpack_f+0x88>
     f9c:	21 15       	cp	r18, r1
     f9e:	31 05       	cpc	r19, r1
     fa0:	41 05       	cpc	r20, r1
     fa2:	51 05       	cpc	r21, r1
     fa4:	11 f4       	brne	.+4      	; 0xfaa <__unpack_f+0x48>
     fa6:	82 e0       	ldi	r24, 0x02	; 2
     fa8:	29 c0       	rjmp	.+82     	; 0xffc <__unpack_f+0x9a>
     faa:	82 e8       	ldi	r24, 0x82	; 130
     fac:	9f ef       	ldi	r25, 0xFF	; 255
     fae:	93 83       	std	Z+3, r25	; 0x03
     fb0:	82 83       	std	Z+2, r24	; 0x02
     fb2:	67 e0       	ldi	r22, 0x07	; 7
     fb4:	22 0f       	add	r18, r18
     fb6:	33 1f       	adc	r19, r19
     fb8:	44 1f       	adc	r20, r20
     fba:	55 1f       	adc	r21, r21
     fbc:	6a 95       	dec	r22
     fbe:	d1 f7       	brne	.-12     	; 0xfb4 <__unpack_f+0x52>
     fc0:	83 e0       	ldi	r24, 0x03	; 3
     fc2:	80 83       	st	Z, r24
     fc4:	09 c0       	rjmp	.+18     	; 0xfd8 <__unpack_f+0x76>
     fc6:	22 0f       	add	r18, r18
     fc8:	33 1f       	adc	r19, r19
     fca:	44 1f       	adc	r20, r20
     fcc:	55 1f       	adc	r21, r21
     fce:	82 81       	ldd	r24, Z+2	; 0x02
     fd0:	93 81       	ldd	r25, Z+3	; 0x03
     fd2:	01 97       	sbiw	r24, 0x01	; 1
     fd4:	93 83       	std	Z+3, r25	; 0x03
     fd6:	82 83       	std	Z+2, r24	; 0x02
     fd8:	20 30       	cpi	r18, 0x00	; 0
     fda:	80 e0       	ldi	r24, 0x00	; 0
     fdc:	38 07       	cpc	r19, r24
     fde:	80 e0       	ldi	r24, 0x00	; 0
     fe0:	48 07       	cpc	r20, r24
     fe2:	80 e4       	ldi	r24, 0x40	; 64
     fe4:	58 07       	cpc	r21, r24
     fe6:	78 f3       	brcs	.-34     	; 0xfc6 <__unpack_f+0x64>
     fe8:	20 c0       	rjmp	.+64     	; 0x102a <__unpack_f+0xc8>
     fea:	8f 3f       	cpi	r24, 0xFF	; 255
     fec:	91 05       	cpc	r25, r1
     fee:	79 f4       	brne	.+30     	; 0x100e <__unpack_f+0xac>
     ff0:	21 15       	cp	r18, r1
     ff2:	31 05       	cpc	r19, r1
     ff4:	41 05       	cpc	r20, r1
     ff6:	51 05       	cpc	r21, r1
     ff8:	19 f4       	brne	.+6      	; 0x1000 <__unpack_f+0x9e>
     ffa:	84 e0       	ldi	r24, 0x04	; 4
     ffc:	80 83       	st	Z, r24
     ffe:	08 95       	ret
    1000:	44 ff       	sbrs	r20, 4
    1002:	03 c0       	rjmp	.+6      	; 0x100a <__unpack_f+0xa8>
    1004:	81 e0       	ldi	r24, 0x01	; 1
    1006:	80 83       	st	Z, r24
    1008:	10 c0       	rjmp	.+32     	; 0x102a <__unpack_f+0xc8>
    100a:	10 82       	st	Z, r1
    100c:	0e c0       	rjmp	.+28     	; 0x102a <__unpack_f+0xc8>
    100e:	8f 57       	subi	r24, 0x7F	; 127
    1010:	90 40       	sbci	r25, 0x00	; 0
    1012:	93 83       	std	Z+3, r25	; 0x03
    1014:	82 83       	std	Z+2, r24	; 0x02
    1016:	83 e0       	ldi	r24, 0x03	; 3
    1018:	80 83       	st	Z, r24
    101a:	87 e0       	ldi	r24, 0x07	; 7
    101c:	22 0f       	add	r18, r18
    101e:	33 1f       	adc	r19, r19
    1020:	44 1f       	adc	r20, r20
    1022:	55 1f       	adc	r21, r21
    1024:	8a 95       	dec	r24
    1026:	d1 f7       	brne	.-12     	; 0x101c <__unpack_f+0xba>
    1028:	50 64       	ori	r21, 0x40	; 64
    102a:	24 83       	std	Z+4, r18	; 0x04
    102c:	35 83       	std	Z+5, r19	; 0x05
    102e:	46 83       	std	Z+6, r20	; 0x06
    1030:	57 83       	std	Z+7, r21	; 0x07
    1032:	08 95       	ret

00001034 <__fpcmp_parts_f>:
    1034:	fc 01       	movw	r30, r24
    1036:	db 01       	movw	r26, r22
    1038:	90 81       	ld	r25, Z
    103a:	92 30       	cpi	r25, 0x02	; 2
    103c:	08 f4       	brcc	.+2      	; 0x1040 <__fpcmp_parts_f+0xc>
    103e:	49 c0       	rjmp	.+146    	; 0x10d2 <__fpcmp_parts_f+0x9e>
    1040:	8c 91       	ld	r24, X
    1042:	82 30       	cpi	r24, 0x02	; 2
    1044:	08 f4       	brcc	.+2      	; 0x1048 <__fpcmp_parts_f+0x14>
    1046:	45 c0       	rjmp	.+138    	; 0x10d2 <__fpcmp_parts_f+0x9e>
    1048:	94 30       	cpi	r25, 0x04	; 4
    104a:	51 f4       	brne	.+20     	; 0x1060 <__fpcmp_parts_f+0x2c>
    104c:	61 81       	ldd	r22, Z+1	; 0x01
    104e:	84 30       	cpi	r24, 0x04	; 4
    1050:	b1 f5       	brne	.+108    	; 0x10be <__fpcmp_parts_f+0x8a>
    1052:	11 96       	adiw	r26, 0x01	; 1
    1054:	2c 91       	ld	r18, X
    1056:	11 97       	sbiw	r26, 0x01	; 1
    1058:	30 e0       	ldi	r19, 0x00	; 0
    105a:	26 1b       	sub	r18, r22
    105c:	31 09       	sbc	r19, r1
    105e:	41 c0       	rjmp	.+130    	; 0x10e2 <__fpcmp_parts_f+0xae>
    1060:	84 30       	cpi	r24, 0x04	; 4
    1062:	21 f0       	breq	.+8      	; 0x106c <__fpcmp_parts_f+0x38>
    1064:	92 30       	cpi	r25, 0x02	; 2
    1066:	41 f4       	brne	.+16     	; 0x1078 <__fpcmp_parts_f+0x44>
    1068:	82 30       	cpi	r24, 0x02	; 2
    106a:	b1 f1       	breq	.+108    	; 0x10d8 <__fpcmp_parts_f+0xa4>
    106c:	11 96       	adiw	r26, 0x01	; 1
    106e:	8c 91       	ld	r24, X
    1070:	11 97       	sbiw	r26, 0x01	; 1
    1072:	88 23       	and	r24, r24
    1074:	a1 f1       	breq	.+104    	; 0x10de <__fpcmp_parts_f+0xaa>
    1076:	2d c0       	rjmp	.+90     	; 0x10d2 <__fpcmp_parts_f+0x9e>
    1078:	61 81       	ldd	r22, Z+1	; 0x01
    107a:	82 30       	cpi	r24, 0x02	; 2
    107c:	01 f1       	breq	.+64     	; 0x10be <__fpcmp_parts_f+0x8a>
    107e:	11 96       	adiw	r26, 0x01	; 1
    1080:	8c 91       	ld	r24, X
    1082:	11 97       	sbiw	r26, 0x01	; 1
    1084:	68 17       	cp	r22, r24
    1086:	d9 f4       	brne	.+54     	; 0x10be <__fpcmp_parts_f+0x8a>
    1088:	22 81       	ldd	r18, Z+2	; 0x02
    108a:	33 81       	ldd	r19, Z+3	; 0x03
    108c:	12 96       	adiw	r26, 0x02	; 2
    108e:	8d 91       	ld	r24, X+
    1090:	9c 91       	ld	r25, X
    1092:	13 97       	sbiw	r26, 0x03	; 3
    1094:	82 17       	cp	r24, r18
    1096:	93 07       	cpc	r25, r19
    1098:	94 f0       	brlt	.+36     	; 0x10be <__fpcmp_parts_f+0x8a>
    109a:	28 17       	cp	r18, r24
    109c:	39 07       	cpc	r19, r25
    109e:	bc f0       	brlt	.+46     	; 0x10ce <__fpcmp_parts_f+0x9a>
    10a0:	24 81       	ldd	r18, Z+4	; 0x04
    10a2:	35 81       	ldd	r19, Z+5	; 0x05
    10a4:	46 81       	ldd	r20, Z+6	; 0x06
    10a6:	57 81       	ldd	r21, Z+7	; 0x07
    10a8:	14 96       	adiw	r26, 0x04	; 4
    10aa:	8d 91       	ld	r24, X+
    10ac:	9d 91       	ld	r25, X+
    10ae:	0d 90       	ld	r0, X+
    10b0:	bc 91       	ld	r27, X
    10b2:	a0 2d       	mov	r26, r0
    10b4:	82 17       	cp	r24, r18
    10b6:	93 07       	cpc	r25, r19
    10b8:	a4 07       	cpc	r26, r20
    10ba:	b5 07       	cpc	r27, r21
    10bc:	18 f4       	brcc	.+6      	; 0x10c4 <__fpcmp_parts_f+0x90>
    10be:	66 23       	and	r22, r22
    10c0:	41 f0       	breq	.+16     	; 0x10d2 <__fpcmp_parts_f+0x9e>
    10c2:	0d c0       	rjmp	.+26     	; 0x10de <__fpcmp_parts_f+0xaa>
    10c4:	28 17       	cp	r18, r24
    10c6:	39 07       	cpc	r19, r25
    10c8:	4a 07       	cpc	r20, r26
    10ca:	5b 07       	cpc	r21, r27
    10cc:	28 f4       	brcc	.+10     	; 0x10d8 <__fpcmp_parts_f+0xa4>
    10ce:	66 23       	and	r22, r22
    10d0:	31 f0       	breq	.+12     	; 0x10de <__fpcmp_parts_f+0xaa>
    10d2:	21 e0       	ldi	r18, 0x01	; 1
    10d4:	30 e0       	ldi	r19, 0x00	; 0
    10d6:	05 c0       	rjmp	.+10     	; 0x10e2 <__fpcmp_parts_f+0xae>
    10d8:	20 e0       	ldi	r18, 0x00	; 0
    10da:	30 e0       	ldi	r19, 0x00	; 0
    10dc:	02 c0       	rjmp	.+4      	; 0x10e2 <__fpcmp_parts_f+0xae>
    10de:	2f ef       	ldi	r18, 0xFF	; 255
    10e0:	3f ef       	ldi	r19, 0xFF	; 255
    10e2:	c9 01       	movw	r24, r18
    10e4:	08 95       	ret

000010e6 <__prologue_saves__>:
    10e6:	2f 92       	push	r2
    10e8:	3f 92       	push	r3
    10ea:	4f 92       	push	r4
    10ec:	5f 92       	push	r5
    10ee:	6f 92       	push	r6
    10f0:	7f 92       	push	r7
    10f2:	8f 92       	push	r8
    10f4:	9f 92       	push	r9
    10f6:	af 92       	push	r10
    10f8:	bf 92       	push	r11
    10fa:	cf 92       	push	r12
    10fc:	df 92       	push	r13
    10fe:	ef 92       	push	r14
    1100:	ff 92       	push	r15
    1102:	0f 93       	push	r16
    1104:	1f 93       	push	r17
    1106:	cf 93       	push	r28
    1108:	df 93       	push	r29
    110a:	cd b7       	in	r28, 0x3d	; 61
    110c:	de b7       	in	r29, 0x3e	; 62
    110e:	ca 1b       	sub	r28, r26
    1110:	db 0b       	sbc	r29, r27
    1112:	0f b6       	in	r0, 0x3f	; 63
    1114:	f8 94       	cli
    1116:	de bf       	out	0x3e, r29	; 62
    1118:	0f be       	out	0x3f, r0	; 63
    111a:	cd bf       	out	0x3d, r28	; 61
    111c:	09 94       	ijmp

0000111e <__epilogue_restores__>:
    111e:	2a 88       	ldd	r2, Y+18	; 0x12
    1120:	39 88       	ldd	r3, Y+17	; 0x11
    1122:	48 88       	ldd	r4, Y+16	; 0x10
    1124:	5f 84       	ldd	r5, Y+15	; 0x0f
    1126:	6e 84       	ldd	r6, Y+14	; 0x0e
    1128:	7d 84       	ldd	r7, Y+13	; 0x0d
    112a:	8c 84       	ldd	r8, Y+12	; 0x0c
    112c:	9b 84       	ldd	r9, Y+11	; 0x0b
    112e:	aa 84       	ldd	r10, Y+10	; 0x0a
    1130:	b9 84       	ldd	r11, Y+9	; 0x09
    1132:	c8 84       	ldd	r12, Y+8	; 0x08
    1134:	df 80       	ldd	r13, Y+7	; 0x07
    1136:	ee 80       	ldd	r14, Y+6	; 0x06
    1138:	fd 80       	ldd	r15, Y+5	; 0x05
    113a:	0c 81       	ldd	r16, Y+4	; 0x04
    113c:	1b 81       	ldd	r17, Y+3	; 0x03
    113e:	aa 81       	ldd	r26, Y+2	; 0x02
    1140:	b9 81       	ldd	r27, Y+1	; 0x01
    1142:	ce 0f       	add	r28, r30
    1144:	d1 1d       	adc	r29, r1
    1146:	0f b6       	in	r0, 0x3f	; 63
    1148:	f8 94       	cli
    114a:	de bf       	out	0x3e, r29	; 62
    114c:	0f be       	out	0x3f, r0	; 63
    114e:	cd bf       	out	0x3d, r28	; 61
    1150:	ed 01       	movw	r28, r26
    1152:	08 95       	ret

00001154 <_exit>:
    1154:	f8 94       	cli

00001156 <__stop_program>:
    1156:	ff cf       	rjmp	.-2      	; 0x1156 <__stop_program>
