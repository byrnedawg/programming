
BiPolarStepper.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00001768  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000008  00800060  00001768  000017fc  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000001  00800068  00800068  00001804  2**0
                  ALLOC
  3 .stab         000006cc  00000000  00000000  00001804  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      00000085  00000000  00000000  00001ed0  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_aranges 00000160  00000000  00000000  00001f55  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_pubnames 000001c7  00000000  00000000  000020b5  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_info   00002159  00000000  00000000  0000227c  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 00000ef6  00000000  00000000  000043d5  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   00001797  00000000  00000000  000052cb  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_frame  000001a0  00000000  00000000  00006a64  2**2
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    000003f5  00000000  00000000  00006c04  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_loc    00000a79  00000000  00000000  00006ff9  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_pubtypes 00000588  00000000  00000000  00007a72  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_ranges 00000030  00000000  00000000  00007ffa  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	12 c0       	rjmp	.+36     	; 0x26 <__ctors_end>
       2:	2c c0       	rjmp	.+88     	; 0x5c <__bad_interrupt>
       4:	2b c0       	rjmp	.+86     	; 0x5c <__bad_interrupt>
       6:	2a c0       	rjmp	.+84     	; 0x5c <__bad_interrupt>
       8:	29 c0       	rjmp	.+82     	; 0x5c <__bad_interrupt>
       a:	28 c0       	rjmp	.+80     	; 0x5c <__bad_interrupt>
       c:	27 c0       	rjmp	.+78     	; 0x5c <__bad_interrupt>
       e:	26 c0       	rjmp	.+76     	; 0x5c <__bad_interrupt>
      10:	25 c0       	rjmp	.+74     	; 0x5c <__bad_interrupt>
      12:	24 c0       	rjmp	.+72     	; 0x5c <__bad_interrupt>
      14:	23 c0       	rjmp	.+70     	; 0x5c <__bad_interrupt>
      16:	22 c0       	rjmp	.+68     	; 0x5c <__bad_interrupt>
      18:	21 c0       	rjmp	.+66     	; 0x5c <__bad_interrupt>
      1a:	20 c0       	rjmp	.+64     	; 0x5c <__bad_interrupt>
      1c:	1f c0       	rjmp	.+62     	; 0x5c <__bad_interrupt>
      1e:	1e c0       	rjmp	.+60     	; 0x5c <__bad_interrupt>
      20:	1d c0       	rjmp	.+58     	; 0x5c <__bad_interrupt>
      22:	1c c0       	rjmp	.+56     	; 0x5c <__bad_interrupt>
      24:	1b c0       	rjmp	.+54     	; 0x5c <__bad_interrupt>

00000026 <__ctors_end>:
      26:	11 24       	eor	r1, r1
      28:	1f be       	out	0x3f, r1	; 63
      2a:	cf e5       	ldi	r28, 0x5F	; 95
      2c:	d4 e0       	ldi	r29, 0x04	; 4
      2e:	de bf       	out	0x3e, r29	; 62
      30:	cd bf       	out	0x3d, r28	; 61

00000032 <__do_clear_bss>:
      32:	10 e0       	ldi	r17, 0x00	; 0
      34:	a8 e6       	ldi	r26, 0x68	; 104
      36:	b0 e0       	ldi	r27, 0x00	; 0
      38:	01 c0       	rjmp	.+2      	; 0x3c <.do_clear_bss_start>

0000003a <.do_clear_bss_loop>:
      3a:	1d 92       	st	X+, r1

0000003c <.do_clear_bss_start>:
      3c:	a9 36       	cpi	r26, 0x69	; 105
      3e:	b1 07       	cpc	r27, r17
      40:	e1 f7       	brne	.-8      	; 0x3a <.do_clear_bss_loop>

00000042 <__do_copy_data>:
      42:	10 e0       	ldi	r17, 0x00	; 0
      44:	a0 e6       	ldi	r26, 0x60	; 96
      46:	b0 e0       	ldi	r27, 0x00	; 0
      48:	e8 e6       	ldi	r30, 0x68	; 104
      4a:	f7 e1       	ldi	r31, 0x17	; 23
      4c:	02 c0       	rjmp	.+4      	; 0x52 <__do_copy_data+0x10>
      4e:	05 90       	lpm	r0, Z+
      50:	0d 92       	st	X+, r0
      52:	a8 36       	cpi	r26, 0x68	; 104
      54:	b1 07       	cpc	r27, r17
      56:	d9 f7       	brne	.-10     	; 0x4e <__do_copy_data+0xc>
      58:	f8 d4       	rcall	.+2544   	; 0xa4a <main>
      5a:	84 cb       	rjmp	.-2296   	; 0xfffff764 <__eeprom_end+0xff7ef764>

0000005c <__bad_interrupt>:
      5c:	d1 cf       	rjmp	.-94     	; 0x0 <__vectors>

0000005e <rotate_RI_Counter_CW>:
#define TOGGLE ^=

uint8_t stepper_state = 0;

void rotate_RI_Counter_CW(uint16_t steps)
{
      5e:	0f 93       	push	r16
      60:	1f 93       	push	r17
      62:	df 93       	push	r29
      64:	cf 93       	push	r28
      66:	cd b7       	in	r28, 0x3d	; 61
      68:	de b7       	in	r29, 0x3e	; 62
      6a:	ea 97       	sbiw	r28, 0x3a	; 58
      6c:	0f b6       	in	r0, 0x3f	; 63
      6e:	f8 94       	cli
      70:	de bf       	out	0x3e, r29	; 62
      72:	0f be       	out	0x3f, r0	; 63
      74:	cd bf       	out	0x3d, r28	; 61
      76:	9a af       	std	Y+58, r25	; 0x3a
      78:	89 af       	std	Y+57, r24	; 0x39
	while(steps > 0)
      7a:	5c c2       	rjmp	.+1208   	; 0x534 <__stack+0xd5>
	{
		if(steps > 0 && stepper_state == 0)
      7c:	89 ad       	ldd	r24, Y+57	; 0x39
      7e:	9a ad       	ldd	r25, Y+58	; 0x3a
      80:	00 97       	sbiw	r24, 0x00	; 0
      82:	09 f4       	brne	.+2      	; 0x86 <rotate_RI_Counter_CW+0x28>
      84:	92 c0       	rjmp	.+292    	; 0x1aa <rotate_RI_Counter_CW+0x14c>
      86:	80 91 68 00 	lds	r24, 0x0068
      8a:	88 23       	and	r24, r24
      8c:	09 f0       	breq	.+2      	; 0x90 <rotate_RI_Counter_CW+0x32>
      8e:	8d c0       	rjmp	.+282    	; 0x1aa <rotate_RI_Counter_CW+0x14c>
		{	
			PORTB = (1<<PB2) | (1<<PB1) | (1<<PB0); 
      90:	88 e3       	ldi	r24, 0x38	; 56
      92:	90 e0       	ldi	r25, 0x00	; 0
      94:	27 e0       	ldi	r18, 0x07	; 7
      96:	fc 01       	movw	r30, r24
      98:	20 83       	st	Z, r18
			PORTD = (0<<PD7) | (0<<PD6) | (0<<PD5);
      9a:	82 e3       	ldi	r24, 0x32	; 50
      9c:	90 e0       	ldi	r25, 0x00	; 0
      9e:	fc 01       	movw	r30, r24
      a0:	10 82       	st	Z, r1
      a2:	80 e0       	ldi	r24, 0x00	; 0
      a4:	90 e0       	ldi	r25, 0x00	; 0
      a6:	a0 e7       	ldi	r26, 0x70	; 112
      a8:	b1 e4       	ldi	r27, 0x41	; 65
      aa:	89 83       	std	Y+1, r24	; 0x01
      ac:	9a 83       	std	Y+2, r25	; 0x02
      ae:	ab 83       	std	Y+3, r26	; 0x03
      b0:	bc 83       	std	Y+4, r27	; 0x04
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

#elif !__HAS_DELAY_CYCLES || (__HAS_DELAY_CYCLES && !defined(__OPTIMIZE__)) || defined (__DELAY_BACKWARD_COMPATIBLE__)
	__tmp = ((F_CPU) / 4e3) * __ms;
      b2:	69 81       	ldd	r22, Y+1	; 0x01
      b4:	7a 81       	ldd	r23, Y+2	; 0x02
      b6:	8b 81       	ldd	r24, Y+3	; 0x03
      b8:	9c 81       	ldd	r25, Y+4	; 0x04
      ba:	20 e0       	ldi	r18, 0x00	; 0
      bc:	30 e0       	ldi	r19, 0x00	; 0
      be:	4a ef       	ldi	r20, 0xFA	; 250
      c0:	54 e4       	ldi	r21, 0x44	; 68
      c2:	c5 d7       	rcall	.+3978   	; 0x104e <__mulsf3>
      c4:	dc 01       	movw	r26, r24
      c6:	cb 01       	movw	r24, r22
      c8:	8d 83       	std	Y+5, r24	; 0x05
      ca:	9e 83       	std	Y+6, r25	; 0x06
      cc:	af 83       	std	Y+7, r26	; 0x07
      ce:	b8 87       	std	Y+8, r27	; 0x08
	if (__tmp < 1.0)
      d0:	11 e0       	ldi	r17, 0x01	; 1
      d2:	6d 81       	ldd	r22, Y+5	; 0x05
      d4:	7e 81       	ldd	r23, Y+6	; 0x06
      d6:	8f 81       	ldd	r24, Y+7	; 0x07
      d8:	98 85       	ldd	r25, Y+8	; 0x08
      da:	20 e0       	ldi	r18, 0x00	; 0
      dc:	30 e0       	ldi	r19, 0x00	; 0
      de:	40 e8       	ldi	r20, 0x80	; 128
      e0:	5f e3       	ldi	r21, 0x3F	; 63
      e2:	00 d9       	rcall	.-3584   	; 0xfffff2e4 <__eeprom_end+0xff7ef2e4>
      e4:	88 23       	and	r24, r24
      e6:	0c f0       	brlt	.+2      	; 0xea <rotate_RI_Counter_CW+0x8c>
      e8:	10 e0       	ldi	r17, 0x00	; 0
      ea:	11 23       	and	r17, r17
      ec:	29 f0       	breq	.+10     	; 0xf8 <rotate_RI_Counter_CW+0x9a>
		__ticks = 1;
      ee:	81 e0       	ldi	r24, 0x01	; 1
      f0:	90 e0       	ldi	r25, 0x00	; 0
      f2:	9a 87       	std	Y+10, r25	; 0x0a
      f4:	89 87       	std	Y+9, r24	; 0x09
      f6:	42 c0       	rjmp	.+132    	; 0x17c <rotate_RI_Counter_CW+0x11e>
	else if (__tmp > 65535)
      f8:	11 e0       	ldi	r17, 0x01	; 1
      fa:	6d 81       	ldd	r22, Y+5	; 0x05
      fc:	7e 81       	ldd	r23, Y+6	; 0x06
      fe:	8f 81       	ldd	r24, Y+7	; 0x07
     100:	98 85       	ldd	r25, Y+8	; 0x08
     102:	20 e0       	ldi	r18, 0x00	; 0
     104:	3f ef       	ldi	r19, 0xFF	; 255
     106:	4f e7       	ldi	r20, 0x7F	; 127
     108:	57 e4       	ldi	r21, 0x47	; 71
     10a:	96 d8       	rcall	.-3796   	; 0xfffff238 <__eeprom_end+0xff7ef238>
     10c:	18 16       	cp	r1, r24
     10e:	0c f0       	brlt	.+2      	; 0x112 <rotate_RI_Counter_CW+0xb4>
     110:	10 e0       	ldi	r17, 0x00	; 0
     112:	11 23       	and	r17, r17
     114:	51 f1       	breq	.+84     	; 0x16a <rotate_RI_Counter_CW+0x10c>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     116:	69 81       	ldd	r22, Y+1	; 0x01
     118:	7a 81       	ldd	r23, Y+2	; 0x02
     11a:	8b 81       	ldd	r24, Y+3	; 0x03
     11c:	9c 81       	ldd	r25, Y+4	; 0x04
     11e:	20 e0       	ldi	r18, 0x00	; 0
     120:	30 e0       	ldi	r19, 0x00	; 0
     122:	40 e2       	ldi	r20, 0x20	; 32
     124:	51 e4       	ldi	r21, 0x41	; 65
     126:	93 d7       	rcall	.+3878   	; 0x104e <__mulsf3>
     128:	dc 01       	movw	r26, r24
     12a:	cb 01       	movw	r24, r22
     12c:	bc 01       	movw	r22, r24
     12e:	cd 01       	movw	r24, r26
     130:	cc d5       	rcall	.+2968   	; 0xcca <__fixunssfsi>
     132:	dc 01       	movw	r26, r24
     134:	cb 01       	movw	r24, r22
     136:	9a 87       	std	Y+10, r25	; 0x0a
     138:	89 87       	std	Y+9, r24	; 0x09
     13a:	12 c0       	rjmp	.+36     	; 0x160 <rotate_RI_Counter_CW+0x102>
     13c:	88 ec       	ldi	r24, 0xC8	; 200
     13e:	90 e0       	ldi	r25, 0x00	; 0
     140:	9c 87       	std	Y+12, r25	; 0x0c
     142:	8b 87       	std	Y+11, r24	; 0x0b
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
     144:	8b 85       	ldd	r24, Y+11	; 0x0b
     146:	9c 85       	ldd	r25, Y+12	; 0x0c
     148:	8c 01       	movw	r16, r24
     14a:	c8 01       	movw	r24, r16
     14c:	01 97       	sbiw	r24, 0x01	; 1
     14e:	f1 f7       	brne	.-4      	; 0x14c <rotate_RI_Counter_CW+0xee>
     150:	8c 01       	movw	r16, r24
     152:	1c 87       	std	Y+12, r17	; 0x0c
     154:	0b 87       	std	Y+11, r16	; 0x0b
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     156:	89 85       	ldd	r24, Y+9	; 0x09
     158:	9a 85       	ldd	r25, Y+10	; 0x0a
     15a:	01 97       	sbiw	r24, 0x01	; 1
     15c:	9a 87       	std	Y+10, r25	; 0x0a
     15e:	89 87       	std	Y+9, r24	; 0x09
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     160:	89 85       	ldd	r24, Y+9	; 0x09
     162:	9a 85       	ldd	r25, Y+10	; 0x0a
     164:	00 97       	sbiw	r24, 0x00	; 0
     166:	51 f7       	brne	.-44     	; 0x13c <rotate_RI_Counter_CW+0xde>
     168:	16 c0       	rjmp	.+44     	; 0x196 <rotate_RI_Counter_CW+0x138>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     16a:	6d 81       	ldd	r22, Y+5	; 0x05
     16c:	7e 81       	ldd	r23, Y+6	; 0x06
     16e:	8f 81       	ldd	r24, Y+7	; 0x07
     170:	98 85       	ldd	r25, Y+8	; 0x08
     172:	ab d5       	rcall	.+2902   	; 0xcca <__fixunssfsi>
     174:	dc 01       	movw	r26, r24
     176:	cb 01       	movw	r24, r22
     178:	9a 87       	std	Y+10, r25	; 0x0a
     17a:	89 87       	std	Y+9, r24	; 0x09
     17c:	89 85       	ldd	r24, Y+9	; 0x09
     17e:	9a 85       	ldd	r25, Y+10	; 0x0a
     180:	9e 87       	std	Y+14, r25	; 0x0e
     182:	8d 87       	std	Y+13, r24	; 0x0d
     184:	8d 85       	ldd	r24, Y+13	; 0x0d
     186:	9e 85       	ldd	r25, Y+14	; 0x0e
     188:	8c 01       	movw	r16, r24
     18a:	f8 01       	movw	r30, r16
     18c:	31 97       	sbiw	r30, 0x01	; 1
     18e:	f1 f7       	brne	.-4      	; 0x18c <rotate_RI_Counter_CW+0x12e>
     190:	8f 01       	movw	r16, r30
     192:	1e 87       	std	Y+14, r17	; 0x0e
     194:	0d 87       	std	Y+13, r16	; 0x0d
			_delay_ms(15);       // wait
			steps--;
     196:	89 ad       	ldd	r24, Y+57	; 0x39
     198:	9a ad       	ldd	r25, Y+58	; 0x3a
     19a:	01 97       	sbiw	r24, 0x01	; 1
     19c:	9a af       	std	Y+58, r25	; 0x3a
     19e:	89 af       	std	Y+57, r24	; 0x39
			stepper_state++;
     1a0:	80 91 68 00 	lds	r24, 0x0068
     1a4:	8f 5f       	subi	r24, 0xFF	; 255
     1a6:	80 93 68 00 	sts	0x0068, r24
		}

		if(steps > 0 && stepper_state == 1)
     1aa:	89 ad       	ldd	r24, Y+57	; 0x39
     1ac:	9a ad       	ldd	r25, Y+58	; 0x3a
     1ae:	00 97       	sbiw	r24, 0x00	; 0
     1b0:	09 f4       	brne	.+2      	; 0x1b4 <rotate_RI_Counter_CW+0x156>
     1b2:	93 c0       	rjmp	.+294    	; 0x2da <rotate_RI_Counter_CW+0x27c>
     1b4:	80 91 68 00 	lds	r24, 0x0068
     1b8:	81 30       	cpi	r24, 0x01	; 1
     1ba:	09 f0       	breq	.+2      	; 0x1be <rotate_RI_Counter_CW+0x160>
     1bc:	8e c0       	rjmp	.+284    	; 0x2da <rotate_RI_Counter_CW+0x27c>
		{
			PORTB = (1<<PB2) | (1<<PB1) | (0<<PB0);// 6
     1be:	88 e3       	ldi	r24, 0x38	; 56
     1c0:	90 e0       	ldi	r25, 0x00	; 0
     1c2:	26 e0       	ldi	r18, 0x06	; 6
     1c4:	fc 01       	movw	r30, r24
     1c6:	20 83       	st	Z, r18
			PORTD = (0<<PD7) | (1<<PD6) | (0<<PD5); //64
     1c8:	82 e3       	ldi	r24, 0x32	; 50
     1ca:	90 e0       	ldi	r25, 0x00	; 0
     1cc:	20 e4       	ldi	r18, 0x40	; 64
     1ce:	fc 01       	movw	r30, r24
     1d0:	20 83       	st	Z, r18
     1d2:	80 e0       	ldi	r24, 0x00	; 0
     1d4:	90 e0       	ldi	r25, 0x00	; 0
     1d6:	a0 e7       	ldi	r26, 0x70	; 112
     1d8:	b1 e4       	ldi	r27, 0x41	; 65
     1da:	8f 87       	std	Y+15, r24	; 0x0f
     1dc:	98 8b       	std	Y+16, r25	; 0x10
     1de:	a9 8b       	std	Y+17, r26	; 0x11
     1e0:	ba 8b       	std	Y+18, r27	; 0x12
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

#elif !__HAS_DELAY_CYCLES || (__HAS_DELAY_CYCLES && !defined(__OPTIMIZE__)) || defined (__DELAY_BACKWARD_COMPATIBLE__)
	__tmp = ((F_CPU) / 4e3) * __ms;
     1e2:	6f 85       	ldd	r22, Y+15	; 0x0f
     1e4:	78 89       	ldd	r23, Y+16	; 0x10
     1e6:	89 89       	ldd	r24, Y+17	; 0x11
     1e8:	9a 89       	ldd	r25, Y+18	; 0x12
     1ea:	20 e0       	ldi	r18, 0x00	; 0
     1ec:	30 e0       	ldi	r19, 0x00	; 0
     1ee:	4a ef       	ldi	r20, 0xFA	; 250
     1f0:	54 e4       	ldi	r21, 0x44	; 68
     1f2:	2d d7       	rcall	.+3674   	; 0x104e <__mulsf3>
     1f4:	dc 01       	movw	r26, r24
     1f6:	cb 01       	movw	r24, r22
     1f8:	8b 8b       	std	Y+19, r24	; 0x13
     1fa:	9c 8b       	std	Y+20, r25	; 0x14
     1fc:	ad 8b       	std	Y+21, r26	; 0x15
     1fe:	be 8b       	std	Y+22, r27	; 0x16
	if (__tmp < 1.0)
     200:	11 e0       	ldi	r17, 0x01	; 1
     202:	6b 89       	ldd	r22, Y+19	; 0x13
     204:	7c 89       	ldd	r23, Y+20	; 0x14
     206:	8d 89       	ldd	r24, Y+21	; 0x15
     208:	9e 89       	ldd	r25, Y+22	; 0x16
     20a:	20 e0       	ldi	r18, 0x00	; 0
     20c:	30 e0       	ldi	r19, 0x00	; 0
     20e:	40 e8       	ldi	r20, 0x80	; 128
     210:	5f e3       	ldi	r21, 0x3F	; 63
     212:	68 d8       	rcall	.-3888   	; 0xfffff2e4 <__eeprom_end+0xff7ef2e4>
     214:	88 23       	and	r24, r24
     216:	0c f0       	brlt	.+2      	; 0x21a <rotate_RI_Counter_CW+0x1bc>
     218:	10 e0       	ldi	r17, 0x00	; 0
     21a:	11 23       	and	r17, r17
     21c:	29 f0       	breq	.+10     	; 0x228 <rotate_RI_Counter_CW+0x1ca>
		__ticks = 1;
     21e:	81 e0       	ldi	r24, 0x01	; 1
     220:	90 e0       	ldi	r25, 0x00	; 0
     222:	98 8f       	std	Y+24, r25	; 0x18
     224:	8f 8b       	std	Y+23, r24	; 0x17
     226:	42 c0       	rjmp	.+132    	; 0x2ac <rotate_RI_Counter_CW+0x24e>
	else if (__tmp > 65535)
     228:	11 e0       	ldi	r17, 0x01	; 1
     22a:	6b 89       	ldd	r22, Y+19	; 0x13
     22c:	7c 89       	ldd	r23, Y+20	; 0x14
     22e:	8d 89       	ldd	r24, Y+21	; 0x15
     230:	9e 89       	ldd	r25, Y+22	; 0x16
     232:	20 e0       	ldi	r18, 0x00	; 0
     234:	3f ef       	ldi	r19, 0xFF	; 255
     236:	4f e7       	ldi	r20, 0x7F	; 127
     238:	57 e4       	ldi	r21, 0x47	; 71
     23a:	fe d7       	rcall	.+4092   	; 0x1238 <__gtsf2>
     23c:	18 16       	cp	r1, r24
     23e:	0c f0       	brlt	.+2      	; 0x242 <rotate_RI_Counter_CW+0x1e4>
     240:	10 e0       	ldi	r17, 0x00	; 0
     242:	11 23       	and	r17, r17
     244:	51 f1       	breq	.+84     	; 0x29a <rotate_RI_Counter_CW+0x23c>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     246:	6f 85       	ldd	r22, Y+15	; 0x0f
     248:	78 89       	ldd	r23, Y+16	; 0x10
     24a:	89 89       	ldd	r24, Y+17	; 0x11
     24c:	9a 89       	ldd	r25, Y+18	; 0x12
     24e:	20 e0       	ldi	r18, 0x00	; 0
     250:	30 e0       	ldi	r19, 0x00	; 0
     252:	40 e2       	ldi	r20, 0x20	; 32
     254:	51 e4       	ldi	r21, 0x41	; 65
     256:	fb d6       	rcall	.+3574   	; 0x104e <__mulsf3>
     258:	dc 01       	movw	r26, r24
     25a:	cb 01       	movw	r24, r22
     25c:	bc 01       	movw	r22, r24
     25e:	cd 01       	movw	r24, r26
     260:	34 d5       	rcall	.+2664   	; 0xcca <__fixunssfsi>
     262:	dc 01       	movw	r26, r24
     264:	cb 01       	movw	r24, r22
     266:	98 8f       	std	Y+24, r25	; 0x18
     268:	8f 8b       	std	Y+23, r24	; 0x17
     26a:	12 c0       	rjmp	.+36     	; 0x290 <rotate_RI_Counter_CW+0x232>
     26c:	88 ec       	ldi	r24, 0xC8	; 200
     26e:	90 e0       	ldi	r25, 0x00	; 0
     270:	9a 8f       	std	Y+26, r25	; 0x1a
     272:	89 8f       	std	Y+25, r24	; 0x19
     274:	89 8d       	ldd	r24, Y+25	; 0x19
     276:	9a 8d       	ldd	r25, Y+26	; 0x1a
     278:	8c 01       	movw	r16, r24
     27a:	c8 01       	movw	r24, r16
     27c:	01 97       	sbiw	r24, 0x01	; 1
     27e:	f1 f7       	brne	.-4      	; 0x27c <rotate_RI_Counter_CW+0x21e>
     280:	8c 01       	movw	r16, r24
     282:	1a 8f       	std	Y+26, r17	; 0x1a
     284:	09 8f       	std	Y+25, r16	; 0x19
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     286:	8f 89       	ldd	r24, Y+23	; 0x17
     288:	98 8d       	ldd	r25, Y+24	; 0x18
     28a:	01 97       	sbiw	r24, 0x01	; 1
     28c:	98 8f       	std	Y+24, r25	; 0x18
     28e:	8f 8b       	std	Y+23, r24	; 0x17
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     290:	8f 89       	ldd	r24, Y+23	; 0x17
     292:	98 8d       	ldd	r25, Y+24	; 0x18
     294:	00 97       	sbiw	r24, 0x00	; 0
     296:	51 f7       	brne	.-44     	; 0x26c <rotate_RI_Counter_CW+0x20e>
     298:	16 c0       	rjmp	.+44     	; 0x2c6 <rotate_RI_Counter_CW+0x268>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     29a:	6b 89       	ldd	r22, Y+19	; 0x13
     29c:	7c 89       	ldd	r23, Y+20	; 0x14
     29e:	8d 89       	ldd	r24, Y+21	; 0x15
     2a0:	9e 89       	ldd	r25, Y+22	; 0x16
     2a2:	13 d5       	rcall	.+2598   	; 0xcca <__fixunssfsi>
     2a4:	dc 01       	movw	r26, r24
     2a6:	cb 01       	movw	r24, r22
     2a8:	98 8f       	std	Y+24, r25	; 0x18
     2aa:	8f 8b       	std	Y+23, r24	; 0x17
     2ac:	8f 89       	ldd	r24, Y+23	; 0x17
     2ae:	98 8d       	ldd	r25, Y+24	; 0x18
     2b0:	9c 8f       	std	Y+28, r25	; 0x1c
     2b2:	8b 8f       	std	Y+27, r24	; 0x1b
     2b4:	8b 8d       	ldd	r24, Y+27	; 0x1b
     2b6:	9c 8d       	ldd	r25, Y+28	; 0x1c
     2b8:	8c 01       	movw	r16, r24
     2ba:	f8 01       	movw	r30, r16
     2bc:	31 97       	sbiw	r30, 0x01	; 1
     2be:	f1 f7       	brne	.-4      	; 0x2bc <rotate_RI_Counter_CW+0x25e>
     2c0:	8f 01       	movw	r16, r30
     2c2:	1c 8f       	std	Y+28, r17	; 0x1c
     2c4:	0b 8f       	std	Y+27, r16	; 0x1b
			_delay_ms(15);       //Wait
			steps--;
     2c6:	89 ad       	ldd	r24, Y+57	; 0x39
     2c8:	9a ad       	ldd	r25, Y+58	; 0x3a
     2ca:	01 97       	sbiw	r24, 0x01	; 1
     2cc:	9a af       	std	Y+58, r25	; 0x3a
     2ce:	89 af       	std	Y+57, r24	; 0x39
			stepper_state++;
     2d0:	80 91 68 00 	lds	r24, 0x0068
     2d4:	8f 5f       	subi	r24, 0xFF	; 255
     2d6:	80 93 68 00 	sts	0x0068, r24
		}
				
		if(steps > 0 && stepper_state == 2)
     2da:	89 ad       	ldd	r24, Y+57	; 0x39
     2dc:	9a ad       	ldd	r25, Y+58	; 0x3a
     2de:	00 97       	sbiw	r24, 0x00	; 0
     2e0:	09 f4       	brne	.+2      	; 0x2e4 <rotate_RI_Counter_CW+0x286>
     2e2:	93 c0       	rjmp	.+294    	; 0x40a <rotate_RI_Counter_CW+0x3ac>
     2e4:	80 91 68 00 	lds	r24, 0x0068
     2e8:	82 30       	cpi	r24, 0x02	; 2
     2ea:	09 f0       	breq	.+2      	; 0x2ee <rotate_RI_Counter_CW+0x290>
     2ec:	8e c0       	rjmp	.+284    	; 0x40a <rotate_RI_Counter_CW+0x3ac>
		{
			PORTB = (1<<PB2) | (1<<PB1) | (0<<PB0); //6
     2ee:	88 e3       	ldi	r24, 0x38	; 56
     2f0:	90 e0       	ldi	r25, 0x00	; 0
     2f2:	26 e0       	ldi	r18, 0x06	; 6
     2f4:	fc 01       	movw	r30, r24
     2f6:	20 83       	st	Z, r18
			PORTD = (1<<PD7) | (0<<PD6) | (0<<PD5); //128
     2f8:	82 e3       	ldi	r24, 0x32	; 50
     2fa:	90 e0       	ldi	r25, 0x00	; 0
     2fc:	20 e8       	ldi	r18, 0x80	; 128
     2fe:	fc 01       	movw	r30, r24
     300:	20 83       	st	Z, r18
     302:	80 e0       	ldi	r24, 0x00	; 0
     304:	90 e0       	ldi	r25, 0x00	; 0
     306:	a0 e7       	ldi	r26, 0x70	; 112
     308:	b1 e4       	ldi	r27, 0x41	; 65
     30a:	8d 8f       	std	Y+29, r24	; 0x1d
     30c:	9e 8f       	std	Y+30, r25	; 0x1e
     30e:	af 8f       	std	Y+31, r26	; 0x1f
     310:	b8 a3       	std	Y+32, r27	; 0x20
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

#elif !__HAS_DELAY_CYCLES || (__HAS_DELAY_CYCLES && !defined(__OPTIMIZE__)) || defined (__DELAY_BACKWARD_COMPATIBLE__)
	__tmp = ((F_CPU) / 4e3) * __ms;
     312:	6d 8d       	ldd	r22, Y+29	; 0x1d
     314:	7e 8d       	ldd	r23, Y+30	; 0x1e
     316:	8f 8d       	ldd	r24, Y+31	; 0x1f
     318:	98 a1       	ldd	r25, Y+32	; 0x20
     31a:	20 e0       	ldi	r18, 0x00	; 0
     31c:	30 e0       	ldi	r19, 0x00	; 0
     31e:	4a ef       	ldi	r20, 0xFA	; 250
     320:	54 e4       	ldi	r21, 0x44	; 68
     322:	95 d6       	rcall	.+3370   	; 0x104e <__mulsf3>
     324:	dc 01       	movw	r26, r24
     326:	cb 01       	movw	r24, r22
     328:	89 a3       	std	Y+33, r24	; 0x21
     32a:	9a a3       	std	Y+34, r25	; 0x22
     32c:	ab a3       	std	Y+35, r26	; 0x23
     32e:	bc a3       	std	Y+36, r27	; 0x24
	if (__tmp < 1.0)
     330:	11 e0       	ldi	r17, 0x01	; 1
     332:	69 a1       	ldd	r22, Y+33	; 0x21
     334:	7a a1       	ldd	r23, Y+34	; 0x22
     336:	8b a1       	ldd	r24, Y+35	; 0x23
     338:	9c a1       	ldd	r25, Y+36	; 0x24
     33a:	20 e0       	ldi	r18, 0x00	; 0
     33c:	30 e0       	ldi	r19, 0x00	; 0
     33e:	40 e8       	ldi	r20, 0x80	; 128
     340:	5f e3       	ldi	r21, 0x3F	; 63
     342:	d0 d7       	rcall	.+4000   	; 0x12e4 <__ltsf2>
     344:	88 23       	and	r24, r24
     346:	0c f0       	brlt	.+2      	; 0x34a <rotate_RI_Counter_CW+0x2ec>
     348:	10 e0       	ldi	r17, 0x00	; 0
     34a:	11 23       	and	r17, r17
     34c:	29 f0       	breq	.+10     	; 0x358 <rotate_RI_Counter_CW+0x2fa>
		__ticks = 1;
     34e:	81 e0       	ldi	r24, 0x01	; 1
     350:	90 e0       	ldi	r25, 0x00	; 0
     352:	9e a3       	std	Y+38, r25	; 0x26
     354:	8d a3       	std	Y+37, r24	; 0x25
     356:	42 c0       	rjmp	.+132    	; 0x3dc <rotate_RI_Counter_CW+0x37e>
	else if (__tmp > 65535)
     358:	11 e0       	ldi	r17, 0x01	; 1
     35a:	69 a1       	ldd	r22, Y+33	; 0x21
     35c:	7a a1       	ldd	r23, Y+34	; 0x22
     35e:	8b a1       	ldd	r24, Y+35	; 0x23
     360:	9c a1       	ldd	r25, Y+36	; 0x24
     362:	20 e0       	ldi	r18, 0x00	; 0
     364:	3f ef       	ldi	r19, 0xFF	; 255
     366:	4f e7       	ldi	r20, 0x7F	; 127
     368:	57 e4       	ldi	r21, 0x47	; 71
     36a:	66 d7       	rcall	.+3788   	; 0x1238 <__gtsf2>
     36c:	18 16       	cp	r1, r24
     36e:	0c f0       	brlt	.+2      	; 0x372 <rotate_RI_Counter_CW+0x314>
     370:	10 e0       	ldi	r17, 0x00	; 0
     372:	11 23       	and	r17, r17
     374:	51 f1       	breq	.+84     	; 0x3ca <rotate_RI_Counter_CW+0x36c>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     376:	6d 8d       	ldd	r22, Y+29	; 0x1d
     378:	7e 8d       	ldd	r23, Y+30	; 0x1e
     37a:	8f 8d       	ldd	r24, Y+31	; 0x1f
     37c:	98 a1       	ldd	r25, Y+32	; 0x20
     37e:	20 e0       	ldi	r18, 0x00	; 0
     380:	30 e0       	ldi	r19, 0x00	; 0
     382:	40 e2       	ldi	r20, 0x20	; 32
     384:	51 e4       	ldi	r21, 0x41	; 65
     386:	63 d6       	rcall	.+3270   	; 0x104e <__mulsf3>
     388:	dc 01       	movw	r26, r24
     38a:	cb 01       	movw	r24, r22
     38c:	bc 01       	movw	r22, r24
     38e:	cd 01       	movw	r24, r26
     390:	9c d4       	rcall	.+2360   	; 0xcca <__fixunssfsi>
     392:	dc 01       	movw	r26, r24
     394:	cb 01       	movw	r24, r22
     396:	9e a3       	std	Y+38, r25	; 0x26
     398:	8d a3       	std	Y+37, r24	; 0x25
     39a:	12 c0       	rjmp	.+36     	; 0x3c0 <rotate_RI_Counter_CW+0x362>
     39c:	88 ec       	ldi	r24, 0xC8	; 200
     39e:	90 e0       	ldi	r25, 0x00	; 0
     3a0:	98 a7       	std	Y+40, r25	; 0x28
     3a2:	8f a3       	std	Y+39, r24	; 0x27
     3a4:	8f a1       	ldd	r24, Y+39	; 0x27
     3a6:	98 a5       	ldd	r25, Y+40	; 0x28
     3a8:	8c 01       	movw	r16, r24
     3aa:	c8 01       	movw	r24, r16
     3ac:	01 97       	sbiw	r24, 0x01	; 1
     3ae:	f1 f7       	brne	.-4      	; 0x3ac <rotate_RI_Counter_CW+0x34e>
     3b0:	8c 01       	movw	r16, r24
     3b2:	18 a7       	std	Y+40, r17	; 0x28
     3b4:	0f a3       	std	Y+39, r16	; 0x27
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     3b6:	8d a1       	ldd	r24, Y+37	; 0x25
     3b8:	9e a1       	ldd	r25, Y+38	; 0x26
     3ba:	01 97       	sbiw	r24, 0x01	; 1
     3bc:	9e a3       	std	Y+38, r25	; 0x26
     3be:	8d a3       	std	Y+37, r24	; 0x25
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     3c0:	8d a1       	ldd	r24, Y+37	; 0x25
     3c2:	9e a1       	ldd	r25, Y+38	; 0x26
     3c4:	00 97       	sbiw	r24, 0x00	; 0
     3c6:	51 f7       	brne	.-44     	; 0x39c <rotate_RI_Counter_CW+0x33e>
     3c8:	16 c0       	rjmp	.+44     	; 0x3f6 <rotate_RI_Counter_CW+0x398>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     3ca:	69 a1       	ldd	r22, Y+33	; 0x21
     3cc:	7a a1       	ldd	r23, Y+34	; 0x22
     3ce:	8b a1       	ldd	r24, Y+35	; 0x23
     3d0:	9c a1       	ldd	r25, Y+36	; 0x24
     3d2:	7b d4       	rcall	.+2294   	; 0xcca <__fixunssfsi>
     3d4:	dc 01       	movw	r26, r24
     3d6:	cb 01       	movw	r24, r22
     3d8:	9e a3       	std	Y+38, r25	; 0x26
     3da:	8d a3       	std	Y+37, r24	; 0x25
     3dc:	8d a1       	ldd	r24, Y+37	; 0x25
     3de:	9e a1       	ldd	r25, Y+38	; 0x26
     3e0:	9a a7       	std	Y+42, r25	; 0x2a
     3e2:	89 a7       	std	Y+41, r24	; 0x29
     3e4:	89 a5       	ldd	r24, Y+41	; 0x29
     3e6:	9a a5       	ldd	r25, Y+42	; 0x2a
     3e8:	8c 01       	movw	r16, r24
     3ea:	f8 01       	movw	r30, r16
     3ec:	31 97       	sbiw	r30, 0x01	; 1
     3ee:	f1 f7       	brne	.-4      	; 0x3ec <rotate_RI_Counter_CW+0x38e>
     3f0:	8f 01       	movw	r16, r30
     3f2:	1a a7       	std	Y+42, r17	; 0x2a
     3f4:	09 a7       	std	Y+41, r16	; 0x29
			_delay_ms(15);       //Wait
			steps--;
     3f6:	89 ad       	ldd	r24, Y+57	; 0x39
     3f8:	9a ad       	ldd	r25, Y+58	; 0x3a
     3fa:	01 97       	sbiw	r24, 0x01	; 1
     3fc:	9a af       	std	Y+58, r25	; 0x3a
     3fe:	89 af       	std	Y+57, r24	; 0x39
			stepper_state++;
     400:	80 91 68 00 	lds	r24, 0x0068
     404:	8f 5f       	subi	r24, 0xFF	; 255
     406:	80 93 68 00 	sts	0x0068, r24
		}	
			
		if(steps > 0 && stepper_state == 3)
     40a:	89 ad       	ldd	r24, Y+57	; 0x39
     40c:	9a ad       	ldd	r25, Y+58	; 0x3a
     40e:	00 97       	sbiw	r24, 0x00	; 0
     410:	09 f4       	brne	.+2      	; 0x414 <rotate_RI_Counter_CW+0x3b6>
     412:	90 c0       	rjmp	.+288    	; 0x534 <__stack+0xd5>
     414:	80 91 68 00 	lds	r24, 0x0068
     418:	83 30       	cpi	r24, 0x03	; 3
     41a:	09 f0       	breq	.+2      	; 0x41e <rotate_RI_Counter_CW+0x3c0>
     41c:	8b c0       	rjmp	.+278    	; 0x534 <__stack+0xd5>
		{
			PORTB = (1<<PB2) | (1<<PB1) | (0<<PB0); 
     41e:	88 e3       	ldi	r24, 0x38	; 56
     420:	90 e0       	ldi	r25, 0x00	; 0
     422:	26 e0       	ldi	r18, 0x06	; 6
     424:	fc 01       	movw	r30, r24
     426:	20 83       	st	Z, r18
			PORTD = (0<<PD7) | (0<<PD6) | (1<<PD5);
     428:	82 e3       	ldi	r24, 0x32	; 50
     42a:	90 e0       	ldi	r25, 0x00	; 0
     42c:	20 e2       	ldi	r18, 0x20	; 32
     42e:	fc 01       	movw	r30, r24
     430:	20 83       	st	Z, r18
     432:	80 e0       	ldi	r24, 0x00	; 0
     434:	90 e0       	ldi	r25, 0x00	; 0
     436:	a0 e7       	ldi	r26, 0x70	; 112
     438:	b1 e4       	ldi	r27, 0x41	; 65
     43a:	8b a7       	std	Y+43, r24	; 0x2b
     43c:	9c a7       	std	Y+44, r25	; 0x2c
     43e:	ad a7       	std	Y+45, r26	; 0x2d
     440:	be a7       	std	Y+46, r27	; 0x2e
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

#elif !__HAS_DELAY_CYCLES || (__HAS_DELAY_CYCLES && !defined(__OPTIMIZE__)) || defined (__DELAY_BACKWARD_COMPATIBLE__)
	__tmp = ((F_CPU) / 4e3) * __ms;
     442:	6b a5       	ldd	r22, Y+43	; 0x2b
     444:	7c a5       	ldd	r23, Y+44	; 0x2c
     446:	8d a5       	ldd	r24, Y+45	; 0x2d
     448:	9e a5       	ldd	r25, Y+46	; 0x2e
     44a:	20 e0       	ldi	r18, 0x00	; 0
     44c:	30 e0       	ldi	r19, 0x00	; 0
     44e:	4a ef       	ldi	r20, 0xFA	; 250
     450:	54 e4       	ldi	r21, 0x44	; 68
     452:	fd d5       	rcall	.+3066   	; 0x104e <__mulsf3>
     454:	dc 01       	movw	r26, r24
     456:	cb 01       	movw	r24, r22
     458:	8f a7       	std	Y+47, r24	; 0x2f
     45a:	98 ab       	std	Y+48, r25	; 0x30
     45c:	a9 ab       	std	Y+49, r26	; 0x31
     45e:	ba ab       	std	Y+50, r27	; 0x32
	if (__tmp < 1.0)
     460:	11 e0       	ldi	r17, 0x01	; 1
     462:	6f a5       	ldd	r22, Y+47	; 0x2f
     464:	78 a9       	ldd	r23, Y+48	; 0x30
     466:	89 a9       	ldd	r24, Y+49	; 0x31
     468:	9a a9       	ldd	r25, Y+50	; 0x32
     46a:	20 e0       	ldi	r18, 0x00	; 0
     46c:	30 e0       	ldi	r19, 0x00	; 0
     46e:	40 e8       	ldi	r20, 0x80	; 128
     470:	5f e3       	ldi	r21, 0x3F	; 63
     472:	38 d7       	rcall	.+3696   	; 0x12e4 <__ltsf2>
     474:	88 23       	and	r24, r24
     476:	0c f0       	brlt	.+2      	; 0x47a <__stack+0x1b>
     478:	10 e0       	ldi	r17, 0x00	; 0
     47a:	11 23       	and	r17, r17
     47c:	29 f0       	breq	.+10     	; 0x488 <__stack+0x29>
		__ticks = 1;
     47e:	81 e0       	ldi	r24, 0x01	; 1
     480:	90 e0       	ldi	r25, 0x00	; 0
     482:	9c ab       	std	Y+52, r25	; 0x34
     484:	8b ab       	std	Y+51, r24	; 0x33
     486:	42 c0       	rjmp	.+132    	; 0x50c <__stack+0xad>
	else if (__tmp > 65535)
     488:	11 e0       	ldi	r17, 0x01	; 1
     48a:	6f a5       	ldd	r22, Y+47	; 0x2f
     48c:	78 a9       	ldd	r23, Y+48	; 0x30
     48e:	89 a9       	ldd	r24, Y+49	; 0x31
     490:	9a a9       	ldd	r25, Y+50	; 0x32
     492:	20 e0       	ldi	r18, 0x00	; 0
     494:	3f ef       	ldi	r19, 0xFF	; 255
     496:	4f e7       	ldi	r20, 0x7F	; 127
     498:	57 e4       	ldi	r21, 0x47	; 71
     49a:	ce d6       	rcall	.+3484   	; 0x1238 <__gtsf2>
     49c:	18 16       	cp	r1, r24
     49e:	0c f0       	brlt	.+2      	; 0x4a2 <__stack+0x43>
     4a0:	10 e0       	ldi	r17, 0x00	; 0
     4a2:	11 23       	and	r17, r17
     4a4:	51 f1       	breq	.+84     	; 0x4fa <__stack+0x9b>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     4a6:	6b a5       	ldd	r22, Y+43	; 0x2b
     4a8:	7c a5       	ldd	r23, Y+44	; 0x2c
     4aa:	8d a5       	ldd	r24, Y+45	; 0x2d
     4ac:	9e a5       	ldd	r25, Y+46	; 0x2e
     4ae:	20 e0       	ldi	r18, 0x00	; 0
     4b0:	30 e0       	ldi	r19, 0x00	; 0
     4b2:	40 e2       	ldi	r20, 0x20	; 32
     4b4:	51 e4       	ldi	r21, 0x41	; 65
     4b6:	cb d5       	rcall	.+2966   	; 0x104e <__mulsf3>
     4b8:	dc 01       	movw	r26, r24
     4ba:	cb 01       	movw	r24, r22
     4bc:	bc 01       	movw	r22, r24
     4be:	cd 01       	movw	r24, r26
     4c0:	04 d4       	rcall	.+2056   	; 0xcca <__fixunssfsi>
     4c2:	dc 01       	movw	r26, r24
     4c4:	cb 01       	movw	r24, r22
     4c6:	9c ab       	std	Y+52, r25	; 0x34
     4c8:	8b ab       	std	Y+51, r24	; 0x33
     4ca:	12 c0       	rjmp	.+36     	; 0x4f0 <__stack+0x91>
     4cc:	88 ec       	ldi	r24, 0xC8	; 200
     4ce:	90 e0       	ldi	r25, 0x00	; 0
     4d0:	9e ab       	std	Y+54, r25	; 0x36
     4d2:	8d ab       	std	Y+53, r24	; 0x35
     4d4:	8d a9       	ldd	r24, Y+53	; 0x35
     4d6:	9e a9       	ldd	r25, Y+54	; 0x36
     4d8:	8c 01       	movw	r16, r24
     4da:	c8 01       	movw	r24, r16
     4dc:	01 97       	sbiw	r24, 0x01	; 1
     4de:	f1 f7       	brne	.-4      	; 0x4dc <__stack+0x7d>
     4e0:	8c 01       	movw	r16, r24
     4e2:	1e ab       	std	Y+54, r17	; 0x36
     4e4:	0d ab       	std	Y+53, r16	; 0x35
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     4e6:	8b a9       	ldd	r24, Y+51	; 0x33
     4e8:	9c a9       	ldd	r25, Y+52	; 0x34
     4ea:	01 97       	sbiw	r24, 0x01	; 1
     4ec:	9c ab       	std	Y+52, r25	; 0x34
     4ee:	8b ab       	std	Y+51, r24	; 0x33
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     4f0:	8b a9       	ldd	r24, Y+51	; 0x33
     4f2:	9c a9       	ldd	r25, Y+52	; 0x34
     4f4:	00 97       	sbiw	r24, 0x00	; 0
     4f6:	51 f7       	brne	.-44     	; 0x4cc <__stack+0x6d>
     4f8:	16 c0       	rjmp	.+44     	; 0x526 <__stack+0xc7>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     4fa:	6f a5       	ldd	r22, Y+47	; 0x2f
     4fc:	78 a9       	ldd	r23, Y+48	; 0x30
     4fe:	89 a9       	ldd	r24, Y+49	; 0x31
     500:	9a a9       	ldd	r25, Y+50	; 0x32
     502:	e3 d3       	rcall	.+1990   	; 0xcca <__fixunssfsi>
     504:	dc 01       	movw	r26, r24
     506:	cb 01       	movw	r24, r22
     508:	9c ab       	std	Y+52, r25	; 0x34
     50a:	8b ab       	std	Y+51, r24	; 0x33
     50c:	8b a9       	ldd	r24, Y+51	; 0x33
     50e:	9c a9       	ldd	r25, Y+52	; 0x34
     510:	98 af       	std	Y+56, r25	; 0x38
     512:	8f ab       	std	Y+55, r24	; 0x37
     514:	8f a9       	ldd	r24, Y+55	; 0x37
     516:	98 ad       	ldd	r25, Y+56	; 0x38
     518:	8c 01       	movw	r16, r24
     51a:	f8 01       	movw	r30, r16
     51c:	31 97       	sbiw	r30, 0x01	; 1
     51e:	f1 f7       	brne	.-4      	; 0x51c <__stack+0xbd>
     520:	8f 01       	movw	r16, r30
     522:	18 af       	std	Y+56, r17	; 0x38
     524:	0f ab       	std	Y+55, r16	; 0x37
			_delay_ms(15);       //Wait
			steps--;
     526:	89 ad       	ldd	r24, Y+57	; 0x39
     528:	9a ad       	ldd	r25, Y+58	; 0x3a
     52a:	01 97       	sbiw	r24, 0x01	; 1
     52c:	9a af       	std	Y+58, r25	; 0x3a
     52e:	89 af       	std	Y+57, r24	; 0x39
			stepper_state = 0;
     530:	10 92 68 00 	sts	0x0068, r1

uint8_t stepper_state = 0;

void rotate_RI_Counter_CW(uint16_t steps)
{
	while(steps > 0)
     534:	89 ad       	ldd	r24, Y+57	; 0x39
     536:	9a ad       	ldd	r25, Y+58	; 0x3a
     538:	00 97       	sbiw	r24, 0x00	; 0
     53a:	09 f0       	breq	.+2      	; 0x53e <__stack+0xdf>
     53c:	9f cd       	rjmp	.-1218   	; 0x7c <rotate_RI_Counter_CW+0x1e>
			steps--;
			stepper_state = 0;
		}			
		
	}
}		
     53e:	ea 96       	adiw	r28, 0x3a	; 58
     540:	0f b6       	in	r0, 0x3f	; 63
     542:	f8 94       	cli
     544:	de bf       	out	0x3e, r29	; 62
     546:	0f be       	out	0x3f, r0	; 63
     548:	cd bf       	out	0x3d, r28	; 61
     54a:	cf 91       	pop	r28
     54c:	df 91       	pop	r29
     54e:	1f 91       	pop	r17
     550:	0f 91       	pop	r16
     552:	08 95       	ret

00000554 <rotate_RI_CW>:



void rotate_RI_CW(uint16_t steps)
{
     554:	0f 93       	push	r16
     556:	1f 93       	push	r17
     558:	df 93       	push	r29
     55a:	cf 93       	push	r28
     55c:	cd b7       	in	r28, 0x3d	; 61
     55e:	de b7       	in	r29, 0x3e	; 62
     560:	ea 97       	sbiw	r28, 0x3a	; 58
     562:	0f b6       	in	r0, 0x3f	; 63
     564:	f8 94       	cli
     566:	de bf       	out	0x3e, r29	; 62
     568:	0f be       	out	0x3f, r0	; 63
     56a:	cd bf       	out	0x3d, r28	; 61
     56c:	9a af       	std	Y+58, r25	; 0x3a
     56e:	89 af       	std	Y+57, r24	; 0x39
	while(steps > 0)
     570:	5c c2       	rjmp	.+1208   	; 0xa2a <rotate_RI_CW+0x4d6>
	{
		if(steps > 0 && stepper_state == 0)
     572:	89 ad       	ldd	r24, Y+57	; 0x39
     574:	9a ad       	ldd	r25, Y+58	; 0x3a
     576:	00 97       	sbiw	r24, 0x00	; 0
     578:	09 f4       	brne	.+2      	; 0x57c <rotate_RI_CW+0x28>
     57a:	93 c0       	rjmp	.+294    	; 0x6a2 <rotate_RI_CW+0x14e>
     57c:	80 91 68 00 	lds	r24, 0x0068
     580:	88 23       	and	r24, r24
     582:	09 f0       	breq	.+2      	; 0x586 <rotate_RI_CW+0x32>
     584:	8e c0       	rjmp	.+284    	; 0x6a2 <rotate_RI_CW+0x14e>
		{	
			PORTB = (1<<PB2) | (1<<PB1) | (0<<PB0); 
     586:	88 e3       	ldi	r24, 0x38	; 56
     588:	90 e0       	ldi	r25, 0x00	; 0
     58a:	26 e0       	ldi	r18, 0x06	; 6
     58c:	fc 01       	movw	r30, r24
     58e:	20 83       	st	Z, r18
			PORTD = (0<<PD7) | (0<<PD6) | (1<<PD5);
     590:	82 e3       	ldi	r24, 0x32	; 50
     592:	90 e0       	ldi	r25, 0x00	; 0
     594:	20 e2       	ldi	r18, 0x20	; 32
     596:	fc 01       	movw	r30, r24
     598:	20 83       	st	Z, r18
     59a:	80 e0       	ldi	r24, 0x00	; 0
     59c:	90 e0       	ldi	r25, 0x00	; 0
     59e:	a0 e7       	ldi	r26, 0x70	; 112
     5a0:	b1 e4       	ldi	r27, 0x41	; 65
     5a2:	89 83       	std	Y+1, r24	; 0x01
     5a4:	9a 83       	std	Y+2, r25	; 0x02
     5a6:	ab 83       	std	Y+3, r26	; 0x03
     5a8:	bc 83       	std	Y+4, r27	; 0x04
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

#elif !__HAS_DELAY_CYCLES || (__HAS_DELAY_CYCLES && !defined(__OPTIMIZE__)) || defined (__DELAY_BACKWARD_COMPATIBLE__)
	__tmp = ((F_CPU) / 4e3) * __ms;
     5aa:	69 81       	ldd	r22, Y+1	; 0x01
     5ac:	7a 81       	ldd	r23, Y+2	; 0x02
     5ae:	8b 81       	ldd	r24, Y+3	; 0x03
     5b0:	9c 81       	ldd	r25, Y+4	; 0x04
     5b2:	20 e0       	ldi	r18, 0x00	; 0
     5b4:	30 e0       	ldi	r19, 0x00	; 0
     5b6:	4a ef       	ldi	r20, 0xFA	; 250
     5b8:	54 e4       	ldi	r21, 0x44	; 68
     5ba:	49 d5       	rcall	.+2706   	; 0x104e <__mulsf3>
     5bc:	dc 01       	movw	r26, r24
     5be:	cb 01       	movw	r24, r22
     5c0:	8d 83       	std	Y+5, r24	; 0x05
     5c2:	9e 83       	std	Y+6, r25	; 0x06
     5c4:	af 83       	std	Y+7, r26	; 0x07
     5c6:	b8 87       	std	Y+8, r27	; 0x08
	if (__tmp < 1.0)
     5c8:	11 e0       	ldi	r17, 0x01	; 1
     5ca:	6d 81       	ldd	r22, Y+5	; 0x05
     5cc:	7e 81       	ldd	r23, Y+6	; 0x06
     5ce:	8f 81       	ldd	r24, Y+7	; 0x07
     5d0:	98 85       	ldd	r25, Y+8	; 0x08
     5d2:	20 e0       	ldi	r18, 0x00	; 0
     5d4:	30 e0       	ldi	r19, 0x00	; 0
     5d6:	40 e8       	ldi	r20, 0x80	; 128
     5d8:	5f e3       	ldi	r21, 0x3F	; 63
     5da:	84 d6       	rcall	.+3336   	; 0x12e4 <__ltsf2>
     5dc:	88 23       	and	r24, r24
     5de:	0c f0       	brlt	.+2      	; 0x5e2 <rotate_RI_CW+0x8e>
     5e0:	10 e0       	ldi	r17, 0x00	; 0
     5e2:	11 23       	and	r17, r17
     5e4:	29 f0       	breq	.+10     	; 0x5f0 <rotate_RI_CW+0x9c>
		__ticks = 1;
     5e6:	81 e0       	ldi	r24, 0x01	; 1
     5e8:	90 e0       	ldi	r25, 0x00	; 0
     5ea:	9a 87       	std	Y+10, r25	; 0x0a
     5ec:	89 87       	std	Y+9, r24	; 0x09
     5ee:	42 c0       	rjmp	.+132    	; 0x674 <rotate_RI_CW+0x120>
	else if (__tmp > 65535)
     5f0:	11 e0       	ldi	r17, 0x01	; 1
     5f2:	6d 81       	ldd	r22, Y+5	; 0x05
     5f4:	7e 81       	ldd	r23, Y+6	; 0x06
     5f6:	8f 81       	ldd	r24, Y+7	; 0x07
     5f8:	98 85       	ldd	r25, Y+8	; 0x08
     5fa:	20 e0       	ldi	r18, 0x00	; 0
     5fc:	3f ef       	ldi	r19, 0xFF	; 255
     5fe:	4f e7       	ldi	r20, 0x7F	; 127
     600:	57 e4       	ldi	r21, 0x47	; 71
     602:	1a d6       	rcall	.+3124   	; 0x1238 <__gtsf2>
     604:	18 16       	cp	r1, r24
     606:	0c f0       	brlt	.+2      	; 0x60a <rotate_RI_CW+0xb6>
     608:	10 e0       	ldi	r17, 0x00	; 0
     60a:	11 23       	and	r17, r17
     60c:	51 f1       	breq	.+84     	; 0x662 <rotate_RI_CW+0x10e>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     60e:	69 81       	ldd	r22, Y+1	; 0x01
     610:	7a 81       	ldd	r23, Y+2	; 0x02
     612:	8b 81       	ldd	r24, Y+3	; 0x03
     614:	9c 81       	ldd	r25, Y+4	; 0x04
     616:	20 e0       	ldi	r18, 0x00	; 0
     618:	30 e0       	ldi	r19, 0x00	; 0
     61a:	40 e2       	ldi	r20, 0x20	; 32
     61c:	51 e4       	ldi	r21, 0x41	; 65
     61e:	17 d5       	rcall	.+2606   	; 0x104e <__mulsf3>
     620:	dc 01       	movw	r26, r24
     622:	cb 01       	movw	r24, r22
     624:	bc 01       	movw	r22, r24
     626:	cd 01       	movw	r24, r26
     628:	50 d3       	rcall	.+1696   	; 0xcca <__fixunssfsi>
     62a:	dc 01       	movw	r26, r24
     62c:	cb 01       	movw	r24, r22
     62e:	9a 87       	std	Y+10, r25	; 0x0a
     630:	89 87       	std	Y+9, r24	; 0x09
     632:	12 c0       	rjmp	.+36     	; 0x658 <rotate_RI_CW+0x104>
     634:	88 ec       	ldi	r24, 0xC8	; 200
     636:	90 e0       	ldi	r25, 0x00	; 0
     638:	9c 87       	std	Y+12, r25	; 0x0c
     63a:	8b 87       	std	Y+11, r24	; 0x0b
     63c:	8b 85       	ldd	r24, Y+11	; 0x0b
     63e:	9c 85       	ldd	r25, Y+12	; 0x0c
     640:	8c 01       	movw	r16, r24
     642:	c8 01       	movw	r24, r16
     644:	01 97       	sbiw	r24, 0x01	; 1
     646:	f1 f7       	brne	.-4      	; 0x644 <rotate_RI_CW+0xf0>
     648:	8c 01       	movw	r16, r24
     64a:	1c 87       	std	Y+12, r17	; 0x0c
     64c:	0b 87       	std	Y+11, r16	; 0x0b
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     64e:	89 85       	ldd	r24, Y+9	; 0x09
     650:	9a 85       	ldd	r25, Y+10	; 0x0a
     652:	01 97       	sbiw	r24, 0x01	; 1
     654:	9a 87       	std	Y+10, r25	; 0x0a
     656:	89 87       	std	Y+9, r24	; 0x09
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     658:	89 85       	ldd	r24, Y+9	; 0x09
     65a:	9a 85       	ldd	r25, Y+10	; 0x0a
     65c:	00 97       	sbiw	r24, 0x00	; 0
     65e:	51 f7       	brne	.-44     	; 0x634 <rotate_RI_CW+0xe0>
     660:	16 c0       	rjmp	.+44     	; 0x68e <rotate_RI_CW+0x13a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     662:	6d 81       	ldd	r22, Y+5	; 0x05
     664:	7e 81       	ldd	r23, Y+6	; 0x06
     666:	8f 81       	ldd	r24, Y+7	; 0x07
     668:	98 85       	ldd	r25, Y+8	; 0x08
     66a:	2f d3       	rcall	.+1630   	; 0xcca <__fixunssfsi>
     66c:	dc 01       	movw	r26, r24
     66e:	cb 01       	movw	r24, r22
     670:	9a 87       	std	Y+10, r25	; 0x0a
     672:	89 87       	std	Y+9, r24	; 0x09
     674:	89 85       	ldd	r24, Y+9	; 0x09
     676:	9a 85       	ldd	r25, Y+10	; 0x0a
     678:	9e 87       	std	Y+14, r25	; 0x0e
     67a:	8d 87       	std	Y+13, r24	; 0x0d
     67c:	8d 85       	ldd	r24, Y+13	; 0x0d
     67e:	9e 85       	ldd	r25, Y+14	; 0x0e
     680:	8c 01       	movw	r16, r24
     682:	f8 01       	movw	r30, r16
     684:	31 97       	sbiw	r30, 0x01	; 1
     686:	f1 f7       	brne	.-4      	; 0x684 <rotate_RI_CW+0x130>
     688:	8f 01       	movw	r16, r30
     68a:	1e 87       	std	Y+14, r17	; 0x0e
     68c:	0d 87       	std	Y+13, r16	; 0x0d
			_delay_ms(15);       //Wait
			steps--;
     68e:	89 ad       	ldd	r24, Y+57	; 0x39
     690:	9a ad       	ldd	r25, Y+58	; 0x3a
     692:	01 97       	sbiw	r24, 0x01	; 1
     694:	9a af       	std	Y+58, r25	; 0x3a
     696:	89 af       	std	Y+57, r24	; 0x39
			stepper_state++;
     698:	80 91 68 00 	lds	r24, 0x0068
     69c:	8f 5f       	subi	r24, 0xFF	; 255
     69e:	80 93 68 00 	sts	0x0068, r24
		}			
		
		if(steps > 0 && stepper_state == 1)
     6a2:	89 ad       	ldd	r24, Y+57	; 0x39
     6a4:	9a ad       	ldd	r25, Y+58	; 0x3a
     6a6:	00 97       	sbiw	r24, 0x00	; 0
     6a8:	09 f4       	brne	.+2      	; 0x6ac <rotate_RI_CW+0x158>
     6aa:	93 c0       	rjmp	.+294    	; 0x7d2 <rotate_RI_CW+0x27e>
     6ac:	80 91 68 00 	lds	r24, 0x0068
     6b0:	81 30       	cpi	r24, 0x01	; 1
     6b2:	09 f0       	breq	.+2      	; 0x6b6 <rotate_RI_CW+0x162>
     6b4:	8e c0       	rjmp	.+284    	; 0x7d2 <rotate_RI_CW+0x27e>
		{	
			PORTB = (1<<PB2) | (1<<PB1) | (0<<PB0); 
     6b6:	88 e3       	ldi	r24, 0x38	; 56
     6b8:	90 e0       	ldi	r25, 0x00	; 0
     6ba:	26 e0       	ldi	r18, 0x06	; 6
     6bc:	fc 01       	movw	r30, r24
     6be:	20 83       	st	Z, r18
			PORTD = (1<<PD7) | (0<<PD6) | (0<<PD5);
     6c0:	82 e3       	ldi	r24, 0x32	; 50
     6c2:	90 e0       	ldi	r25, 0x00	; 0
     6c4:	20 e8       	ldi	r18, 0x80	; 128
     6c6:	fc 01       	movw	r30, r24
     6c8:	20 83       	st	Z, r18
     6ca:	80 e0       	ldi	r24, 0x00	; 0
     6cc:	90 e0       	ldi	r25, 0x00	; 0
     6ce:	a0 e7       	ldi	r26, 0x70	; 112
     6d0:	b1 e4       	ldi	r27, 0x41	; 65
     6d2:	8f 87       	std	Y+15, r24	; 0x0f
     6d4:	98 8b       	std	Y+16, r25	; 0x10
     6d6:	a9 8b       	std	Y+17, r26	; 0x11
     6d8:	ba 8b       	std	Y+18, r27	; 0x12
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

#elif !__HAS_DELAY_CYCLES || (__HAS_DELAY_CYCLES && !defined(__OPTIMIZE__)) || defined (__DELAY_BACKWARD_COMPATIBLE__)
	__tmp = ((F_CPU) / 4e3) * __ms;
     6da:	6f 85       	ldd	r22, Y+15	; 0x0f
     6dc:	78 89       	ldd	r23, Y+16	; 0x10
     6de:	89 89       	ldd	r24, Y+17	; 0x11
     6e0:	9a 89       	ldd	r25, Y+18	; 0x12
     6e2:	20 e0       	ldi	r18, 0x00	; 0
     6e4:	30 e0       	ldi	r19, 0x00	; 0
     6e6:	4a ef       	ldi	r20, 0xFA	; 250
     6e8:	54 e4       	ldi	r21, 0x44	; 68
     6ea:	b1 d4       	rcall	.+2402   	; 0x104e <__mulsf3>
     6ec:	dc 01       	movw	r26, r24
     6ee:	cb 01       	movw	r24, r22
     6f0:	8b 8b       	std	Y+19, r24	; 0x13
     6f2:	9c 8b       	std	Y+20, r25	; 0x14
     6f4:	ad 8b       	std	Y+21, r26	; 0x15
     6f6:	be 8b       	std	Y+22, r27	; 0x16
	if (__tmp < 1.0)
     6f8:	11 e0       	ldi	r17, 0x01	; 1
     6fa:	6b 89       	ldd	r22, Y+19	; 0x13
     6fc:	7c 89       	ldd	r23, Y+20	; 0x14
     6fe:	8d 89       	ldd	r24, Y+21	; 0x15
     700:	9e 89       	ldd	r25, Y+22	; 0x16
     702:	20 e0       	ldi	r18, 0x00	; 0
     704:	30 e0       	ldi	r19, 0x00	; 0
     706:	40 e8       	ldi	r20, 0x80	; 128
     708:	5f e3       	ldi	r21, 0x3F	; 63
     70a:	ec d5       	rcall	.+3032   	; 0x12e4 <__ltsf2>
     70c:	88 23       	and	r24, r24
     70e:	0c f0       	brlt	.+2      	; 0x712 <rotate_RI_CW+0x1be>
     710:	10 e0       	ldi	r17, 0x00	; 0
     712:	11 23       	and	r17, r17
     714:	29 f0       	breq	.+10     	; 0x720 <rotate_RI_CW+0x1cc>
		__ticks = 1;
     716:	81 e0       	ldi	r24, 0x01	; 1
     718:	90 e0       	ldi	r25, 0x00	; 0
     71a:	98 8f       	std	Y+24, r25	; 0x18
     71c:	8f 8b       	std	Y+23, r24	; 0x17
     71e:	42 c0       	rjmp	.+132    	; 0x7a4 <rotate_RI_CW+0x250>
	else if (__tmp > 65535)
     720:	11 e0       	ldi	r17, 0x01	; 1
     722:	6b 89       	ldd	r22, Y+19	; 0x13
     724:	7c 89       	ldd	r23, Y+20	; 0x14
     726:	8d 89       	ldd	r24, Y+21	; 0x15
     728:	9e 89       	ldd	r25, Y+22	; 0x16
     72a:	20 e0       	ldi	r18, 0x00	; 0
     72c:	3f ef       	ldi	r19, 0xFF	; 255
     72e:	4f e7       	ldi	r20, 0x7F	; 127
     730:	57 e4       	ldi	r21, 0x47	; 71
     732:	82 d5       	rcall	.+2820   	; 0x1238 <__gtsf2>
     734:	18 16       	cp	r1, r24
     736:	0c f0       	brlt	.+2      	; 0x73a <rotate_RI_CW+0x1e6>
     738:	10 e0       	ldi	r17, 0x00	; 0
     73a:	11 23       	and	r17, r17
     73c:	51 f1       	breq	.+84     	; 0x792 <rotate_RI_CW+0x23e>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     73e:	6f 85       	ldd	r22, Y+15	; 0x0f
     740:	78 89       	ldd	r23, Y+16	; 0x10
     742:	89 89       	ldd	r24, Y+17	; 0x11
     744:	9a 89       	ldd	r25, Y+18	; 0x12
     746:	20 e0       	ldi	r18, 0x00	; 0
     748:	30 e0       	ldi	r19, 0x00	; 0
     74a:	40 e2       	ldi	r20, 0x20	; 32
     74c:	51 e4       	ldi	r21, 0x41	; 65
     74e:	7f d4       	rcall	.+2302   	; 0x104e <__mulsf3>
     750:	dc 01       	movw	r26, r24
     752:	cb 01       	movw	r24, r22
     754:	bc 01       	movw	r22, r24
     756:	cd 01       	movw	r24, r26
     758:	b8 d2       	rcall	.+1392   	; 0xcca <__fixunssfsi>
     75a:	dc 01       	movw	r26, r24
     75c:	cb 01       	movw	r24, r22
     75e:	98 8f       	std	Y+24, r25	; 0x18
     760:	8f 8b       	std	Y+23, r24	; 0x17
     762:	12 c0       	rjmp	.+36     	; 0x788 <rotate_RI_CW+0x234>
     764:	88 ec       	ldi	r24, 0xC8	; 200
     766:	90 e0       	ldi	r25, 0x00	; 0
     768:	9a 8f       	std	Y+26, r25	; 0x1a
     76a:	89 8f       	std	Y+25, r24	; 0x19
     76c:	89 8d       	ldd	r24, Y+25	; 0x19
     76e:	9a 8d       	ldd	r25, Y+26	; 0x1a
     770:	8c 01       	movw	r16, r24
     772:	c8 01       	movw	r24, r16
     774:	01 97       	sbiw	r24, 0x01	; 1
     776:	f1 f7       	brne	.-4      	; 0x774 <rotate_RI_CW+0x220>
     778:	8c 01       	movw	r16, r24
     77a:	1a 8f       	std	Y+26, r17	; 0x1a
     77c:	09 8f       	std	Y+25, r16	; 0x19
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     77e:	8f 89       	ldd	r24, Y+23	; 0x17
     780:	98 8d       	ldd	r25, Y+24	; 0x18
     782:	01 97       	sbiw	r24, 0x01	; 1
     784:	98 8f       	std	Y+24, r25	; 0x18
     786:	8f 8b       	std	Y+23, r24	; 0x17
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     788:	8f 89       	ldd	r24, Y+23	; 0x17
     78a:	98 8d       	ldd	r25, Y+24	; 0x18
     78c:	00 97       	sbiw	r24, 0x00	; 0
     78e:	51 f7       	brne	.-44     	; 0x764 <rotate_RI_CW+0x210>
     790:	16 c0       	rjmp	.+44     	; 0x7be <rotate_RI_CW+0x26a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     792:	6b 89       	ldd	r22, Y+19	; 0x13
     794:	7c 89       	ldd	r23, Y+20	; 0x14
     796:	8d 89       	ldd	r24, Y+21	; 0x15
     798:	9e 89       	ldd	r25, Y+22	; 0x16
     79a:	97 d2       	rcall	.+1326   	; 0xcca <__fixunssfsi>
     79c:	dc 01       	movw	r26, r24
     79e:	cb 01       	movw	r24, r22
     7a0:	98 8f       	std	Y+24, r25	; 0x18
     7a2:	8f 8b       	std	Y+23, r24	; 0x17
     7a4:	8f 89       	ldd	r24, Y+23	; 0x17
     7a6:	98 8d       	ldd	r25, Y+24	; 0x18
     7a8:	9c 8f       	std	Y+28, r25	; 0x1c
     7aa:	8b 8f       	std	Y+27, r24	; 0x1b
     7ac:	8b 8d       	ldd	r24, Y+27	; 0x1b
     7ae:	9c 8d       	ldd	r25, Y+28	; 0x1c
     7b0:	8c 01       	movw	r16, r24
     7b2:	f8 01       	movw	r30, r16
     7b4:	31 97       	sbiw	r30, 0x01	; 1
     7b6:	f1 f7       	brne	.-4      	; 0x7b4 <rotate_RI_CW+0x260>
     7b8:	8f 01       	movw	r16, r30
     7ba:	1c 8f       	std	Y+28, r17	; 0x1c
     7bc:	0b 8f       	std	Y+27, r16	; 0x1b
			_delay_ms(15);       //Wait
			steps--;
     7be:	89 ad       	ldd	r24, Y+57	; 0x39
     7c0:	9a ad       	ldd	r25, Y+58	; 0x3a
     7c2:	01 97       	sbiw	r24, 0x01	; 1
     7c4:	9a af       	std	Y+58, r25	; 0x3a
     7c6:	89 af       	std	Y+57, r24	; 0x39
			stepper_state++;
     7c8:	80 91 68 00 	lds	r24, 0x0068
     7cc:	8f 5f       	subi	r24, 0xFF	; 255
     7ce:	80 93 68 00 	sts	0x0068, r24
		}			
		
		if(steps > 0 && stepper_state == 2)
     7d2:	89 ad       	ldd	r24, Y+57	; 0x39
     7d4:	9a ad       	ldd	r25, Y+58	; 0x3a
     7d6:	00 97       	sbiw	r24, 0x00	; 0
     7d8:	09 f4       	brne	.+2      	; 0x7dc <rotate_RI_CW+0x288>
     7da:	93 c0       	rjmp	.+294    	; 0x902 <rotate_RI_CW+0x3ae>
     7dc:	80 91 68 00 	lds	r24, 0x0068
     7e0:	82 30       	cpi	r24, 0x02	; 2
     7e2:	09 f0       	breq	.+2      	; 0x7e6 <rotate_RI_CW+0x292>
     7e4:	8e c0       	rjmp	.+284    	; 0x902 <rotate_RI_CW+0x3ae>
		{	
			PORTB = (1<<PB2) | (1<<PB1) | (0<<PB0); 
     7e6:	88 e3       	ldi	r24, 0x38	; 56
     7e8:	90 e0       	ldi	r25, 0x00	; 0
     7ea:	26 e0       	ldi	r18, 0x06	; 6
     7ec:	fc 01       	movw	r30, r24
     7ee:	20 83       	st	Z, r18
			PORTD = (0<<PD7) | (1<<PD6) | (0<<PD5);
     7f0:	82 e3       	ldi	r24, 0x32	; 50
     7f2:	90 e0       	ldi	r25, 0x00	; 0
     7f4:	20 e4       	ldi	r18, 0x40	; 64
     7f6:	fc 01       	movw	r30, r24
     7f8:	20 83       	st	Z, r18
     7fa:	80 e0       	ldi	r24, 0x00	; 0
     7fc:	90 e0       	ldi	r25, 0x00	; 0
     7fe:	a0 e7       	ldi	r26, 0x70	; 112
     800:	b1 e4       	ldi	r27, 0x41	; 65
     802:	8d 8f       	std	Y+29, r24	; 0x1d
     804:	9e 8f       	std	Y+30, r25	; 0x1e
     806:	af 8f       	std	Y+31, r26	; 0x1f
     808:	b8 a3       	std	Y+32, r27	; 0x20
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

#elif !__HAS_DELAY_CYCLES || (__HAS_DELAY_CYCLES && !defined(__OPTIMIZE__)) || defined (__DELAY_BACKWARD_COMPATIBLE__)
	__tmp = ((F_CPU) / 4e3) * __ms;
     80a:	6d 8d       	ldd	r22, Y+29	; 0x1d
     80c:	7e 8d       	ldd	r23, Y+30	; 0x1e
     80e:	8f 8d       	ldd	r24, Y+31	; 0x1f
     810:	98 a1       	ldd	r25, Y+32	; 0x20
     812:	20 e0       	ldi	r18, 0x00	; 0
     814:	30 e0       	ldi	r19, 0x00	; 0
     816:	4a ef       	ldi	r20, 0xFA	; 250
     818:	54 e4       	ldi	r21, 0x44	; 68
     81a:	19 d4       	rcall	.+2098   	; 0x104e <__mulsf3>
     81c:	dc 01       	movw	r26, r24
     81e:	cb 01       	movw	r24, r22
     820:	89 a3       	std	Y+33, r24	; 0x21
     822:	9a a3       	std	Y+34, r25	; 0x22
     824:	ab a3       	std	Y+35, r26	; 0x23
     826:	bc a3       	std	Y+36, r27	; 0x24
	if (__tmp < 1.0)
     828:	11 e0       	ldi	r17, 0x01	; 1
     82a:	69 a1       	ldd	r22, Y+33	; 0x21
     82c:	7a a1       	ldd	r23, Y+34	; 0x22
     82e:	8b a1       	ldd	r24, Y+35	; 0x23
     830:	9c a1       	ldd	r25, Y+36	; 0x24
     832:	20 e0       	ldi	r18, 0x00	; 0
     834:	30 e0       	ldi	r19, 0x00	; 0
     836:	40 e8       	ldi	r20, 0x80	; 128
     838:	5f e3       	ldi	r21, 0x3F	; 63
     83a:	54 d5       	rcall	.+2728   	; 0x12e4 <__ltsf2>
     83c:	88 23       	and	r24, r24
     83e:	0c f0       	brlt	.+2      	; 0x842 <rotate_RI_CW+0x2ee>
     840:	10 e0       	ldi	r17, 0x00	; 0
     842:	11 23       	and	r17, r17
     844:	29 f0       	breq	.+10     	; 0x850 <rotate_RI_CW+0x2fc>
		__ticks = 1;
     846:	81 e0       	ldi	r24, 0x01	; 1
     848:	90 e0       	ldi	r25, 0x00	; 0
     84a:	9e a3       	std	Y+38, r25	; 0x26
     84c:	8d a3       	std	Y+37, r24	; 0x25
     84e:	42 c0       	rjmp	.+132    	; 0x8d4 <rotate_RI_CW+0x380>
	else if (__tmp > 65535)
     850:	11 e0       	ldi	r17, 0x01	; 1
     852:	69 a1       	ldd	r22, Y+33	; 0x21
     854:	7a a1       	ldd	r23, Y+34	; 0x22
     856:	8b a1       	ldd	r24, Y+35	; 0x23
     858:	9c a1       	ldd	r25, Y+36	; 0x24
     85a:	20 e0       	ldi	r18, 0x00	; 0
     85c:	3f ef       	ldi	r19, 0xFF	; 255
     85e:	4f e7       	ldi	r20, 0x7F	; 127
     860:	57 e4       	ldi	r21, 0x47	; 71
     862:	ea d4       	rcall	.+2516   	; 0x1238 <__gtsf2>
     864:	18 16       	cp	r1, r24
     866:	0c f0       	brlt	.+2      	; 0x86a <rotate_RI_CW+0x316>
     868:	10 e0       	ldi	r17, 0x00	; 0
     86a:	11 23       	and	r17, r17
     86c:	51 f1       	breq	.+84     	; 0x8c2 <rotate_RI_CW+0x36e>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     86e:	6d 8d       	ldd	r22, Y+29	; 0x1d
     870:	7e 8d       	ldd	r23, Y+30	; 0x1e
     872:	8f 8d       	ldd	r24, Y+31	; 0x1f
     874:	98 a1       	ldd	r25, Y+32	; 0x20
     876:	20 e0       	ldi	r18, 0x00	; 0
     878:	30 e0       	ldi	r19, 0x00	; 0
     87a:	40 e2       	ldi	r20, 0x20	; 32
     87c:	51 e4       	ldi	r21, 0x41	; 65
     87e:	e7 d3       	rcall	.+1998   	; 0x104e <__mulsf3>
     880:	dc 01       	movw	r26, r24
     882:	cb 01       	movw	r24, r22
     884:	bc 01       	movw	r22, r24
     886:	cd 01       	movw	r24, r26
     888:	20 d2       	rcall	.+1088   	; 0xcca <__fixunssfsi>
     88a:	dc 01       	movw	r26, r24
     88c:	cb 01       	movw	r24, r22
     88e:	9e a3       	std	Y+38, r25	; 0x26
     890:	8d a3       	std	Y+37, r24	; 0x25
     892:	12 c0       	rjmp	.+36     	; 0x8b8 <rotate_RI_CW+0x364>
     894:	88 ec       	ldi	r24, 0xC8	; 200
     896:	90 e0       	ldi	r25, 0x00	; 0
     898:	98 a7       	std	Y+40, r25	; 0x28
     89a:	8f a3       	std	Y+39, r24	; 0x27
     89c:	8f a1       	ldd	r24, Y+39	; 0x27
     89e:	98 a5       	ldd	r25, Y+40	; 0x28
     8a0:	8c 01       	movw	r16, r24
     8a2:	c8 01       	movw	r24, r16
     8a4:	01 97       	sbiw	r24, 0x01	; 1
     8a6:	f1 f7       	brne	.-4      	; 0x8a4 <rotate_RI_CW+0x350>
     8a8:	8c 01       	movw	r16, r24
     8aa:	18 a7       	std	Y+40, r17	; 0x28
     8ac:	0f a3       	std	Y+39, r16	; 0x27
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     8ae:	8d a1       	ldd	r24, Y+37	; 0x25
     8b0:	9e a1       	ldd	r25, Y+38	; 0x26
     8b2:	01 97       	sbiw	r24, 0x01	; 1
     8b4:	9e a3       	std	Y+38, r25	; 0x26
     8b6:	8d a3       	std	Y+37, r24	; 0x25
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     8b8:	8d a1       	ldd	r24, Y+37	; 0x25
     8ba:	9e a1       	ldd	r25, Y+38	; 0x26
     8bc:	00 97       	sbiw	r24, 0x00	; 0
     8be:	51 f7       	brne	.-44     	; 0x894 <rotate_RI_CW+0x340>
     8c0:	16 c0       	rjmp	.+44     	; 0x8ee <rotate_RI_CW+0x39a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     8c2:	69 a1       	ldd	r22, Y+33	; 0x21
     8c4:	7a a1       	ldd	r23, Y+34	; 0x22
     8c6:	8b a1       	ldd	r24, Y+35	; 0x23
     8c8:	9c a1       	ldd	r25, Y+36	; 0x24
     8ca:	ff d1       	rcall	.+1022   	; 0xcca <__fixunssfsi>
     8cc:	dc 01       	movw	r26, r24
     8ce:	cb 01       	movw	r24, r22
     8d0:	9e a3       	std	Y+38, r25	; 0x26
     8d2:	8d a3       	std	Y+37, r24	; 0x25
     8d4:	8d a1       	ldd	r24, Y+37	; 0x25
     8d6:	9e a1       	ldd	r25, Y+38	; 0x26
     8d8:	9a a7       	std	Y+42, r25	; 0x2a
     8da:	89 a7       	std	Y+41, r24	; 0x29
     8dc:	89 a5       	ldd	r24, Y+41	; 0x29
     8de:	9a a5       	ldd	r25, Y+42	; 0x2a
     8e0:	8c 01       	movw	r16, r24
     8e2:	f8 01       	movw	r30, r16
     8e4:	31 97       	sbiw	r30, 0x01	; 1
     8e6:	f1 f7       	brne	.-4      	; 0x8e4 <rotate_RI_CW+0x390>
     8e8:	8f 01       	movw	r16, r30
     8ea:	1a a7       	std	Y+42, r17	; 0x2a
     8ec:	09 a7       	std	Y+41, r16	; 0x29
			_delay_ms(15);       //Wait
			steps--;
     8ee:	89 ad       	ldd	r24, Y+57	; 0x39
     8f0:	9a ad       	ldd	r25, Y+58	; 0x3a
     8f2:	01 97       	sbiw	r24, 0x01	; 1
     8f4:	9a af       	std	Y+58, r25	; 0x3a
     8f6:	89 af       	std	Y+57, r24	; 0x39
			stepper_state++;
     8f8:	80 91 68 00 	lds	r24, 0x0068
     8fc:	8f 5f       	subi	r24, 0xFF	; 255
     8fe:	80 93 68 00 	sts	0x0068, r24
		}			
		
		if(steps > 0 && stepper_state == 3)
     902:	89 ad       	ldd	r24, Y+57	; 0x39
     904:	9a ad       	ldd	r25, Y+58	; 0x3a
     906:	00 97       	sbiw	r24, 0x00	; 0
     908:	09 f4       	brne	.+2      	; 0x90c <rotate_RI_CW+0x3b8>
     90a:	8f c0       	rjmp	.+286    	; 0xa2a <rotate_RI_CW+0x4d6>
     90c:	80 91 68 00 	lds	r24, 0x0068
     910:	83 30       	cpi	r24, 0x03	; 3
     912:	09 f0       	breq	.+2      	; 0x916 <rotate_RI_CW+0x3c2>
     914:	8a c0       	rjmp	.+276    	; 0xa2a <rotate_RI_CW+0x4d6>
		{	
			PORTB = (1<<PB2) | (1<<PB1) | (1<<PB0); 
     916:	88 e3       	ldi	r24, 0x38	; 56
     918:	90 e0       	ldi	r25, 0x00	; 0
     91a:	27 e0       	ldi	r18, 0x07	; 7
     91c:	fc 01       	movw	r30, r24
     91e:	20 83       	st	Z, r18
			PORTD = (0<<PD7) | (0<<PD6) | (0<<PD5);
     920:	82 e3       	ldi	r24, 0x32	; 50
     922:	90 e0       	ldi	r25, 0x00	; 0
     924:	fc 01       	movw	r30, r24
     926:	10 82       	st	Z, r1
     928:	80 e0       	ldi	r24, 0x00	; 0
     92a:	90 e0       	ldi	r25, 0x00	; 0
     92c:	a0 e7       	ldi	r26, 0x70	; 112
     92e:	b1 e4       	ldi	r27, 0x41	; 65
     930:	8b a7       	std	Y+43, r24	; 0x2b
     932:	9c a7       	std	Y+44, r25	; 0x2c
     934:	ad a7       	std	Y+45, r26	; 0x2d
     936:	be a7       	std	Y+46, r27	; 0x2e
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

#elif !__HAS_DELAY_CYCLES || (__HAS_DELAY_CYCLES && !defined(__OPTIMIZE__)) || defined (__DELAY_BACKWARD_COMPATIBLE__)
	__tmp = ((F_CPU) / 4e3) * __ms;
     938:	6b a5       	ldd	r22, Y+43	; 0x2b
     93a:	7c a5       	ldd	r23, Y+44	; 0x2c
     93c:	8d a5       	ldd	r24, Y+45	; 0x2d
     93e:	9e a5       	ldd	r25, Y+46	; 0x2e
     940:	20 e0       	ldi	r18, 0x00	; 0
     942:	30 e0       	ldi	r19, 0x00	; 0
     944:	4a ef       	ldi	r20, 0xFA	; 250
     946:	54 e4       	ldi	r21, 0x44	; 68
     948:	82 d3       	rcall	.+1796   	; 0x104e <__mulsf3>
     94a:	dc 01       	movw	r26, r24
     94c:	cb 01       	movw	r24, r22
     94e:	8f a7       	std	Y+47, r24	; 0x2f
     950:	98 ab       	std	Y+48, r25	; 0x30
     952:	a9 ab       	std	Y+49, r26	; 0x31
     954:	ba ab       	std	Y+50, r27	; 0x32
	if (__tmp < 1.0)
     956:	11 e0       	ldi	r17, 0x01	; 1
     958:	6f a5       	ldd	r22, Y+47	; 0x2f
     95a:	78 a9       	ldd	r23, Y+48	; 0x30
     95c:	89 a9       	ldd	r24, Y+49	; 0x31
     95e:	9a a9       	ldd	r25, Y+50	; 0x32
     960:	20 e0       	ldi	r18, 0x00	; 0
     962:	30 e0       	ldi	r19, 0x00	; 0
     964:	40 e8       	ldi	r20, 0x80	; 128
     966:	5f e3       	ldi	r21, 0x3F	; 63
     968:	bd d4       	rcall	.+2426   	; 0x12e4 <__ltsf2>
     96a:	88 23       	and	r24, r24
     96c:	0c f0       	brlt	.+2      	; 0x970 <rotate_RI_CW+0x41c>
     96e:	10 e0       	ldi	r17, 0x00	; 0
     970:	11 23       	and	r17, r17
     972:	29 f0       	breq	.+10     	; 0x97e <rotate_RI_CW+0x42a>
		__ticks = 1;
     974:	81 e0       	ldi	r24, 0x01	; 1
     976:	90 e0       	ldi	r25, 0x00	; 0
     978:	9c ab       	std	Y+52, r25	; 0x34
     97a:	8b ab       	std	Y+51, r24	; 0x33
     97c:	42 c0       	rjmp	.+132    	; 0xa02 <rotate_RI_CW+0x4ae>
	else if (__tmp > 65535)
     97e:	11 e0       	ldi	r17, 0x01	; 1
     980:	6f a5       	ldd	r22, Y+47	; 0x2f
     982:	78 a9       	ldd	r23, Y+48	; 0x30
     984:	89 a9       	ldd	r24, Y+49	; 0x31
     986:	9a a9       	ldd	r25, Y+50	; 0x32
     988:	20 e0       	ldi	r18, 0x00	; 0
     98a:	3f ef       	ldi	r19, 0xFF	; 255
     98c:	4f e7       	ldi	r20, 0x7F	; 127
     98e:	57 e4       	ldi	r21, 0x47	; 71
     990:	53 d4       	rcall	.+2214   	; 0x1238 <__gtsf2>
     992:	18 16       	cp	r1, r24
     994:	0c f0       	brlt	.+2      	; 0x998 <rotate_RI_CW+0x444>
     996:	10 e0       	ldi	r17, 0x00	; 0
     998:	11 23       	and	r17, r17
     99a:	51 f1       	breq	.+84     	; 0x9f0 <rotate_RI_CW+0x49c>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     99c:	6b a5       	ldd	r22, Y+43	; 0x2b
     99e:	7c a5       	ldd	r23, Y+44	; 0x2c
     9a0:	8d a5       	ldd	r24, Y+45	; 0x2d
     9a2:	9e a5       	ldd	r25, Y+46	; 0x2e
     9a4:	20 e0       	ldi	r18, 0x00	; 0
     9a6:	30 e0       	ldi	r19, 0x00	; 0
     9a8:	40 e2       	ldi	r20, 0x20	; 32
     9aa:	51 e4       	ldi	r21, 0x41	; 65
     9ac:	50 d3       	rcall	.+1696   	; 0x104e <__mulsf3>
     9ae:	dc 01       	movw	r26, r24
     9b0:	cb 01       	movw	r24, r22
     9b2:	bc 01       	movw	r22, r24
     9b4:	cd 01       	movw	r24, r26
     9b6:	89 d1       	rcall	.+786    	; 0xcca <__fixunssfsi>
     9b8:	dc 01       	movw	r26, r24
     9ba:	cb 01       	movw	r24, r22
     9bc:	9c ab       	std	Y+52, r25	; 0x34
     9be:	8b ab       	std	Y+51, r24	; 0x33
     9c0:	12 c0       	rjmp	.+36     	; 0x9e6 <rotate_RI_CW+0x492>
     9c2:	88 ec       	ldi	r24, 0xC8	; 200
     9c4:	90 e0       	ldi	r25, 0x00	; 0
     9c6:	9e ab       	std	Y+54, r25	; 0x36
     9c8:	8d ab       	std	Y+53, r24	; 0x35
     9ca:	8d a9       	ldd	r24, Y+53	; 0x35
     9cc:	9e a9       	ldd	r25, Y+54	; 0x36
     9ce:	8c 01       	movw	r16, r24
     9d0:	c8 01       	movw	r24, r16
     9d2:	01 97       	sbiw	r24, 0x01	; 1
     9d4:	f1 f7       	brne	.-4      	; 0x9d2 <rotate_RI_CW+0x47e>
     9d6:	8c 01       	movw	r16, r24
     9d8:	1e ab       	std	Y+54, r17	; 0x36
     9da:	0d ab       	std	Y+53, r16	; 0x35
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     9dc:	8b a9       	ldd	r24, Y+51	; 0x33
     9de:	9c a9       	ldd	r25, Y+52	; 0x34
     9e0:	01 97       	sbiw	r24, 0x01	; 1
     9e2:	9c ab       	std	Y+52, r25	; 0x34
     9e4:	8b ab       	std	Y+51, r24	; 0x33
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     9e6:	8b a9       	ldd	r24, Y+51	; 0x33
     9e8:	9c a9       	ldd	r25, Y+52	; 0x34
     9ea:	00 97       	sbiw	r24, 0x00	; 0
     9ec:	51 f7       	brne	.-44     	; 0x9c2 <rotate_RI_CW+0x46e>
     9ee:	16 c0       	rjmp	.+44     	; 0xa1c <rotate_RI_CW+0x4c8>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     9f0:	6f a5       	ldd	r22, Y+47	; 0x2f
     9f2:	78 a9       	ldd	r23, Y+48	; 0x30
     9f4:	89 a9       	ldd	r24, Y+49	; 0x31
     9f6:	9a a9       	ldd	r25, Y+50	; 0x32
     9f8:	68 d1       	rcall	.+720    	; 0xcca <__fixunssfsi>
     9fa:	dc 01       	movw	r26, r24
     9fc:	cb 01       	movw	r24, r22
     9fe:	9c ab       	std	Y+52, r25	; 0x34
     a00:	8b ab       	std	Y+51, r24	; 0x33
     a02:	8b a9       	ldd	r24, Y+51	; 0x33
     a04:	9c a9       	ldd	r25, Y+52	; 0x34
     a06:	98 af       	std	Y+56, r25	; 0x38
     a08:	8f ab       	std	Y+55, r24	; 0x37
     a0a:	8f a9       	ldd	r24, Y+55	; 0x37
     a0c:	98 ad       	ldd	r25, Y+56	; 0x38
     a0e:	8c 01       	movw	r16, r24
     a10:	f8 01       	movw	r30, r16
     a12:	31 97       	sbiw	r30, 0x01	; 1
     a14:	f1 f7       	brne	.-4      	; 0xa12 <rotate_RI_CW+0x4be>
     a16:	8f 01       	movw	r16, r30
     a18:	18 af       	std	Y+56, r17	; 0x38
     a1a:	0f ab       	std	Y+55, r16	; 0x37
			_delay_ms(15);       // wait
			steps--;
     a1c:	89 ad       	ldd	r24, Y+57	; 0x39
     a1e:	9a ad       	ldd	r25, Y+58	; 0x3a
     a20:	01 97       	sbiw	r24, 0x01	; 1
     a22:	9a af       	std	Y+58, r25	; 0x3a
     a24:	89 af       	std	Y+57, r24	; 0x39
			stepper_state = 0;
     a26:	10 92 68 00 	sts	0x0068, r1



void rotate_RI_CW(uint16_t steps)
{
	while(steps > 0)
     a2a:	89 ad       	ldd	r24, Y+57	; 0x39
     a2c:	9a ad       	ldd	r25, Y+58	; 0x3a
     a2e:	00 97       	sbiw	r24, 0x00	; 0
     a30:	09 f0       	breq	.+2      	; 0xa34 <rotate_RI_CW+0x4e0>
     a32:	9f cd       	rjmp	.-1218   	; 0x572 <rotate_RI_CW+0x1e>
			_delay_ms(15);       // wait
			steps--;
			stepper_state = 0;
		}			
	}
}			
     a34:	ea 96       	adiw	r28, 0x3a	; 58
     a36:	0f b6       	in	r0, 0x3f	; 63
     a38:	f8 94       	cli
     a3a:	de bf       	out	0x3e, r29	; 62
     a3c:	0f be       	out	0x3f, r0	; 63
     a3e:	cd bf       	out	0x3d, r28	; 61
     a40:	cf 91       	pop	r28
     a42:	df 91       	pop	r29
     a44:	1f 91       	pop	r17
     a46:	0f 91       	pop	r16
     a48:	08 95       	ret

00000a4a <main>:

int main(void)
{
     a4a:	0f 93       	push	r16
     a4c:	1f 93       	push	r17
     a4e:	df 93       	push	r29
     a50:	cf 93       	push	r28
     a52:	cd b7       	in	r28, 0x3d	; 61
     a54:	de b7       	in	r29, 0x3e	; 62
     a56:	a0 97       	sbiw	r28, 0x20	; 32
     a58:	0f b6       	in	r0, 0x3f	; 63
     a5a:	f8 94       	cli
     a5c:	de bf       	out	0x3e, r29	; 62
     a5e:	0f be       	out	0x3f, r0	; 63
     a60:	cd bf       	out	0x3d, r28	; 61
	//int i;
	//DDRC =0xFF; //PA5=ENB ,PA4=ENA ,PA3=IN4,PA2=IN3,PA1=IN2,PA0=IN1
	//DDRB = 0xFF;
	DDRB = (0<<DDB7) | (0<<DDB6) | (0<<DDB5) | (0<<DDB4) | (0<<DDB3) | (1<<DDB2) | (1<<DDB1) | (1<<DDB0);// set PB1  PB2 Enable pins on L298n PB0 motor drive  
     a62:	87 e3       	ldi	r24, 0x37	; 55
     a64:	90 e0       	ldi	r25, 0x00	; 0
     a66:	27 e0       	ldi	r18, 0x07	; 7
     a68:	fc 01       	movw	r30, r24
     a6a:	20 83       	st	Z, r18
	PORTB = (0<<PB7) | (0<<PB6) | (0<<PB5) | (0<<PB4) | (0<<PB3) | (0<<PB2) | (0<<PB1) | (0<<PB0); // set all pins we are using high
     a6c:	88 e3       	ldi	r24, 0x38	; 56
     a6e:	90 e0       	ldi	r25, 0x00	; 0
     a70:	fc 01       	movw	r30, r24
     a72:	10 82       	st	Z, r1
	
	DDRD = 0xFF;
     a74:	81 e3       	ldi	r24, 0x31	; 49
     a76:	90 e0       	ldi	r25, 0x00	; 0
     a78:	2f ef       	ldi	r18, 0xFF	; 255
     a7a:	fc 01       	movw	r30, r24
     a7c:	20 83       	st	Z, r18
	DDRD = (1<<DDD7) | (1<<DDD6) | (1<<DDD5) | (0<<DDD4) | (0<<DDD3) | (0<<DDD2) | (0<<DDD1) | (0<<DDD0);// set PD7 - PD5 motor drive  
     a7e:	81 e3       	ldi	r24, 0x31	; 49
     a80:	90 e0       	ldi	r25, 0x00	; 0
     a82:	20 ee       	ldi	r18, 0xE0	; 224
     a84:	fc 01       	movw	r30, r24
     a86:	20 83       	st	Z, r18
	PORTD = (0<<PD7) | (0<<PD6) | (0<<PD5) | (0<<PD4) | (0<<PD3) | (0<<PD2) | (0<<PD1) | (0<<PD0); // set all pins we are using high
     a88:	82 e3       	ldi	r24, 0x32	; 50
     a8a:	90 e0       	ldi	r25, 0x00	; 0
     a8c:	fc 01       	movw	r30, r24
     a8e:	10 82       	st	Z, r1
	
	while (1) //loop forever
	{
		for(int i=0; i<5; i++)
     a90:	1a 82       	std	Y+2, r1	; 0x02
     a92:	19 82       	std	Y+1, r1	; 0x01
     a94:	82 c0       	rjmp	.+260    	; 0xb9a <main+0x150>
		{
			rotate_RI_Counter_CW(50);
     a96:	82 e3       	ldi	r24, 0x32	; 50
     a98:	90 e0       	ldi	r25, 0x00	; 0
     a9a:	e1 da       	rcall	.-2622   	; 0x5e <rotate_RI_Counter_CW>
     a9c:	80 e0       	ldi	r24, 0x00	; 0
     a9e:	90 e0       	ldi	r25, 0x00	; 0
     aa0:	aa e7       	ldi	r26, 0x7A	; 122
     aa2:	b4 e4       	ldi	r27, 0x44	; 68
     aa4:	8d 83       	std	Y+5, r24	; 0x05
     aa6:	9e 83       	std	Y+6, r25	; 0x06
     aa8:	af 83       	std	Y+7, r26	; 0x07
     aaa:	b8 87       	std	Y+8, r27	; 0x08
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

#elif !__HAS_DELAY_CYCLES || (__HAS_DELAY_CYCLES && !defined(__OPTIMIZE__)) || defined (__DELAY_BACKWARD_COMPATIBLE__)
	__tmp = ((F_CPU) / 4e3) * __ms;
     aac:	6d 81       	ldd	r22, Y+5	; 0x05
     aae:	7e 81       	ldd	r23, Y+6	; 0x06
     ab0:	8f 81       	ldd	r24, Y+7	; 0x07
     ab2:	98 85       	ldd	r25, Y+8	; 0x08
     ab4:	20 e0       	ldi	r18, 0x00	; 0
     ab6:	30 e0       	ldi	r19, 0x00	; 0
     ab8:	4a ef       	ldi	r20, 0xFA	; 250
     aba:	54 e4       	ldi	r21, 0x44	; 68
     abc:	c8 d2       	rcall	.+1424   	; 0x104e <__mulsf3>
     abe:	dc 01       	movw	r26, r24
     ac0:	cb 01       	movw	r24, r22
     ac2:	89 87       	std	Y+9, r24	; 0x09
     ac4:	9a 87       	std	Y+10, r25	; 0x0a
     ac6:	ab 87       	std	Y+11, r26	; 0x0b
     ac8:	bc 87       	std	Y+12, r27	; 0x0c
	if (__tmp < 1.0)
     aca:	11 e0       	ldi	r17, 0x01	; 1
     acc:	69 85       	ldd	r22, Y+9	; 0x09
     ace:	7a 85       	ldd	r23, Y+10	; 0x0a
     ad0:	8b 85       	ldd	r24, Y+11	; 0x0b
     ad2:	9c 85       	ldd	r25, Y+12	; 0x0c
     ad4:	20 e0       	ldi	r18, 0x00	; 0
     ad6:	30 e0       	ldi	r19, 0x00	; 0
     ad8:	40 e8       	ldi	r20, 0x80	; 128
     ada:	5f e3       	ldi	r21, 0x3F	; 63
     adc:	03 d4       	rcall	.+2054   	; 0x12e4 <__ltsf2>
     ade:	88 23       	and	r24, r24
     ae0:	0c f0       	brlt	.+2      	; 0xae4 <main+0x9a>
     ae2:	10 e0       	ldi	r17, 0x00	; 0
     ae4:	11 23       	and	r17, r17
     ae6:	29 f0       	breq	.+10     	; 0xaf2 <main+0xa8>
		__ticks = 1;
     ae8:	81 e0       	ldi	r24, 0x01	; 1
     aea:	90 e0       	ldi	r25, 0x00	; 0
     aec:	9e 87       	std	Y+14, r25	; 0x0e
     aee:	8d 87       	std	Y+13, r24	; 0x0d
     af0:	42 c0       	rjmp	.+132    	; 0xb76 <main+0x12c>
	else if (__tmp > 65535)
     af2:	11 e0       	ldi	r17, 0x01	; 1
     af4:	69 85       	ldd	r22, Y+9	; 0x09
     af6:	7a 85       	ldd	r23, Y+10	; 0x0a
     af8:	8b 85       	ldd	r24, Y+11	; 0x0b
     afa:	9c 85       	ldd	r25, Y+12	; 0x0c
     afc:	20 e0       	ldi	r18, 0x00	; 0
     afe:	3f ef       	ldi	r19, 0xFF	; 255
     b00:	4f e7       	ldi	r20, 0x7F	; 127
     b02:	57 e4       	ldi	r21, 0x47	; 71
     b04:	99 d3       	rcall	.+1842   	; 0x1238 <__gtsf2>
     b06:	18 16       	cp	r1, r24
     b08:	0c f0       	brlt	.+2      	; 0xb0c <main+0xc2>
     b0a:	10 e0       	ldi	r17, 0x00	; 0
     b0c:	11 23       	and	r17, r17
     b0e:	51 f1       	breq	.+84     	; 0xb64 <main+0x11a>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     b10:	6d 81       	ldd	r22, Y+5	; 0x05
     b12:	7e 81       	ldd	r23, Y+6	; 0x06
     b14:	8f 81       	ldd	r24, Y+7	; 0x07
     b16:	98 85       	ldd	r25, Y+8	; 0x08
     b18:	20 e0       	ldi	r18, 0x00	; 0
     b1a:	30 e0       	ldi	r19, 0x00	; 0
     b1c:	40 e2       	ldi	r20, 0x20	; 32
     b1e:	51 e4       	ldi	r21, 0x41	; 65
     b20:	96 d2       	rcall	.+1324   	; 0x104e <__mulsf3>
     b22:	dc 01       	movw	r26, r24
     b24:	cb 01       	movw	r24, r22
     b26:	bc 01       	movw	r22, r24
     b28:	cd 01       	movw	r24, r26
     b2a:	cf d0       	rcall	.+414    	; 0xcca <__fixunssfsi>
     b2c:	dc 01       	movw	r26, r24
     b2e:	cb 01       	movw	r24, r22
     b30:	9e 87       	std	Y+14, r25	; 0x0e
     b32:	8d 87       	std	Y+13, r24	; 0x0d
     b34:	12 c0       	rjmp	.+36     	; 0xb5a <main+0x110>
     b36:	88 ec       	ldi	r24, 0xC8	; 200
     b38:	90 e0       	ldi	r25, 0x00	; 0
     b3a:	98 8b       	std	Y+16, r25	; 0x10
     b3c:	8f 87       	std	Y+15, r24	; 0x0f
     b3e:	8f 85       	ldd	r24, Y+15	; 0x0f
     b40:	98 89       	ldd	r25, Y+16	; 0x10
     b42:	8c 01       	movw	r16, r24
     b44:	c8 01       	movw	r24, r16
     b46:	01 97       	sbiw	r24, 0x01	; 1
     b48:	f1 f7       	brne	.-4      	; 0xb46 <main+0xfc>
     b4a:	8c 01       	movw	r16, r24
     b4c:	18 8b       	std	Y+16, r17	; 0x10
     b4e:	0f 87       	std	Y+15, r16	; 0x0f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     b50:	8d 85       	ldd	r24, Y+13	; 0x0d
     b52:	9e 85       	ldd	r25, Y+14	; 0x0e
     b54:	01 97       	sbiw	r24, 0x01	; 1
     b56:	9e 87       	std	Y+14, r25	; 0x0e
     b58:	8d 87       	std	Y+13, r24	; 0x0d
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     b5a:	8d 85       	ldd	r24, Y+13	; 0x0d
     b5c:	9e 85       	ldd	r25, Y+14	; 0x0e
     b5e:	00 97       	sbiw	r24, 0x00	; 0
     b60:	51 f7       	brne	.-44     	; 0xb36 <main+0xec>
     b62:	16 c0       	rjmp	.+44     	; 0xb90 <main+0x146>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     b64:	69 85       	ldd	r22, Y+9	; 0x09
     b66:	7a 85       	ldd	r23, Y+10	; 0x0a
     b68:	8b 85       	ldd	r24, Y+11	; 0x0b
     b6a:	9c 85       	ldd	r25, Y+12	; 0x0c
     b6c:	ae d0       	rcall	.+348    	; 0xcca <__fixunssfsi>
     b6e:	dc 01       	movw	r26, r24
     b70:	cb 01       	movw	r24, r22
     b72:	9e 87       	std	Y+14, r25	; 0x0e
     b74:	8d 87       	std	Y+13, r24	; 0x0d
     b76:	8d 85       	ldd	r24, Y+13	; 0x0d
     b78:	9e 85       	ldd	r25, Y+14	; 0x0e
     b7a:	9a 8b       	std	Y+18, r25	; 0x12
     b7c:	89 8b       	std	Y+17, r24	; 0x11
     b7e:	89 89       	ldd	r24, Y+17	; 0x11
     b80:	9a 89       	ldd	r25, Y+18	; 0x12
     b82:	8c 01       	movw	r16, r24
     b84:	f8 01       	movw	r30, r16
     b86:	31 97       	sbiw	r30, 0x01	; 1
     b88:	f1 f7       	brne	.-4      	; 0xb86 <main+0x13c>
     b8a:	8f 01       	movw	r16, r30
     b8c:	1a 8b       	std	Y+18, r17	; 0x12
     b8e:	09 8b       	std	Y+17, r16	; 0x11
	DDRD = (1<<DDD7) | (1<<DDD6) | (1<<DDD5) | (0<<DDD4) | (0<<DDD3) | (0<<DDD2) | (0<<DDD1) | (0<<DDD0);// set PD7 - PD5 motor drive  
	PORTD = (0<<PD7) | (0<<PD6) | (0<<PD5) | (0<<PD4) | (0<<PD3) | (0<<PD2) | (0<<PD1) | (0<<PD0); // set all pins we are using high
	
	while (1) //loop forever
	{
		for(int i=0; i<5; i++)
     b90:	89 81       	ldd	r24, Y+1	; 0x01
     b92:	9a 81       	ldd	r25, Y+2	; 0x02
     b94:	01 96       	adiw	r24, 0x01	; 1
     b96:	9a 83       	std	Y+2, r25	; 0x02
     b98:	89 83       	std	Y+1, r24	; 0x01
     b9a:	89 81       	ldd	r24, Y+1	; 0x01
     b9c:	9a 81       	ldd	r25, Y+2	; 0x02
     b9e:	85 30       	cpi	r24, 0x05	; 5
     ba0:	91 05       	cpc	r25, r1
     ba2:	0c f4       	brge	.+2      	; 0xba6 <main+0x15c>
     ba4:	78 cf       	rjmp	.-272    	; 0xa96 <main+0x4c>
		{
			rotate_RI_Counter_CW(50);
		
			_delay_ms(1000);
		}
		for(int i=0; i<5; i++)
     ba6:	1c 82       	std	Y+4, r1	; 0x04
     ba8:	1b 82       	std	Y+3, r1	; 0x03
     baa:	82 c0       	rjmp	.+260    	; 0xcb0 <main+0x266>
		{
			rotate_RI_CW(50);
     bac:	82 e3       	ldi	r24, 0x32	; 50
     bae:	90 e0       	ldi	r25, 0x00	; 0
     bb0:	d1 dc       	rcall	.-1630   	; 0x554 <rotate_RI_CW>
     bb2:	80 e0       	ldi	r24, 0x00	; 0
     bb4:	90 e0       	ldi	r25, 0x00	; 0
     bb6:	aa e7       	ldi	r26, 0x7A	; 122
     bb8:	b4 e4       	ldi	r27, 0x44	; 68
     bba:	8b 8b       	std	Y+19, r24	; 0x13
     bbc:	9c 8b       	std	Y+20, r25	; 0x14
     bbe:	ad 8b       	std	Y+21, r26	; 0x15
     bc0:	be 8b       	std	Y+22, r27	; 0x16
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

#elif !__HAS_DELAY_CYCLES || (__HAS_DELAY_CYCLES && !defined(__OPTIMIZE__)) || defined (__DELAY_BACKWARD_COMPATIBLE__)
	__tmp = ((F_CPU) / 4e3) * __ms;
     bc2:	6b 89       	ldd	r22, Y+19	; 0x13
     bc4:	7c 89       	ldd	r23, Y+20	; 0x14
     bc6:	8d 89       	ldd	r24, Y+21	; 0x15
     bc8:	9e 89       	ldd	r25, Y+22	; 0x16
     bca:	20 e0       	ldi	r18, 0x00	; 0
     bcc:	30 e0       	ldi	r19, 0x00	; 0
     bce:	4a ef       	ldi	r20, 0xFA	; 250
     bd0:	54 e4       	ldi	r21, 0x44	; 68
     bd2:	3d d2       	rcall	.+1146   	; 0x104e <__mulsf3>
     bd4:	dc 01       	movw	r26, r24
     bd6:	cb 01       	movw	r24, r22
     bd8:	8f 8b       	std	Y+23, r24	; 0x17
     bda:	98 8f       	std	Y+24, r25	; 0x18
     bdc:	a9 8f       	std	Y+25, r26	; 0x19
     bde:	ba 8f       	std	Y+26, r27	; 0x1a
	if (__tmp < 1.0)
     be0:	11 e0       	ldi	r17, 0x01	; 1
     be2:	6f 89       	ldd	r22, Y+23	; 0x17
     be4:	78 8d       	ldd	r23, Y+24	; 0x18
     be6:	89 8d       	ldd	r24, Y+25	; 0x19
     be8:	9a 8d       	ldd	r25, Y+26	; 0x1a
     bea:	20 e0       	ldi	r18, 0x00	; 0
     bec:	30 e0       	ldi	r19, 0x00	; 0
     bee:	40 e8       	ldi	r20, 0x80	; 128
     bf0:	5f e3       	ldi	r21, 0x3F	; 63
     bf2:	78 d3       	rcall	.+1776   	; 0x12e4 <__ltsf2>
     bf4:	88 23       	and	r24, r24
     bf6:	0c f0       	brlt	.+2      	; 0xbfa <main+0x1b0>
     bf8:	10 e0       	ldi	r17, 0x00	; 0
     bfa:	11 23       	and	r17, r17
     bfc:	29 f0       	breq	.+10     	; 0xc08 <main+0x1be>
		__ticks = 1;
     bfe:	81 e0       	ldi	r24, 0x01	; 1
     c00:	90 e0       	ldi	r25, 0x00	; 0
     c02:	9c 8f       	std	Y+28, r25	; 0x1c
     c04:	8b 8f       	std	Y+27, r24	; 0x1b
     c06:	42 c0       	rjmp	.+132    	; 0xc8c <main+0x242>
	else if (__tmp > 65535)
     c08:	11 e0       	ldi	r17, 0x01	; 1
     c0a:	6f 89       	ldd	r22, Y+23	; 0x17
     c0c:	78 8d       	ldd	r23, Y+24	; 0x18
     c0e:	89 8d       	ldd	r24, Y+25	; 0x19
     c10:	9a 8d       	ldd	r25, Y+26	; 0x1a
     c12:	20 e0       	ldi	r18, 0x00	; 0
     c14:	3f ef       	ldi	r19, 0xFF	; 255
     c16:	4f e7       	ldi	r20, 0x7F	; 127
     c18:	57 e4       	ldi	r21, 0x47	; 71
     c1a:	0e d3       	rcall	.+1564   	; 0x1238 <__gtsf2>
     c1c:	18 16       	cp	r1, r24
     c1e:	0c f0       	brlt	.+2      	; 0xc22 <main+0x1d8>
     c20:	10 e0       	ldi	r17, 0x00	; 0
     c22:	11 23       	and	r17, r17
     c24:	51 f1       	breq	.+84     	; 0xc7a <main+0x230>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     c26:	6b 89       	ldd	r22, Y+19	; 0x13
     c28:	7c 89       	ldd	r23, Y+20	; 0x14
     c2a:	8d 89       	ldd	r24, Y+21	; 0x15
     c2c:	9e 89       	ldd	r25, Y+22	; 0x16
     c2e:	20 e0       	ldi	r18, 0x00	; 0
     c30:	30 e0       	ldi	r19, 0x00	; 0
     c32:	40 e2       	ldi	r20, 0x20	; 32
     c34:	51 e4       	ldi	r21, 0x41	; 65
     c36:	0b d2       	rcall	.+1046   	; 0x104e <__mulsf3>
     c38:	dc 01       	movw	r26, r24
     c3a:	cb 01       	movw	r24, r22
     c3c:	bc 01       	movw	r22, r24
     c3e:	cd 01       	movw	r24, r26
     c40:	44 d0       	rcall	.+136    	; 0xcca <__fixunssfsi>
     c42:	dc 01       	movw	r26, r24
     c44:	cb 01       	movw	r24, r22
     c46:	9c 8f       	std	Y+28, r25	; 0x1c
     c48:	8b 8f       	std	Y+27, r24	; 0x1b
     c4a:	12 c0       	rjmp	.+36     	; 0xc70 <main+0x226>
     c4c:	88 ec       	ldi	r24, 0xC8	; 200
     c4e:	90 e0       	ldi	r25, 0x00	; 0
     c50:	9e 8f       	std	Y+30, r25	; 0x1e
     c52:	8d 8f       	std	Y+29, r24	; 0x1d
     c54:	8d 8d       	ldd	r24, Y+29	; 0x1d
     c56:	9e 8d       	ldd	r25, Y+30	; 0x1e
     c58:	8c 01       	movw	r16, r24
     c5a:	c8 01       	movw	r24, r16
     c5c:	01 97       	sbiw	r24, 0x01	; 1
     c5e:	f1 f7       	brne	.-4      	; 0xc5c <main+0x212>
     c60:	8c 01       	movw	r16, r24
     c62:	1e 8f       	std	Y+30, r17	; 0x1e
     c64:	0d 8f       	std	Y+29, r16	; 0x1d
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     c66:	8b 8d       	ldd	r24, Y+27	; 0x1b
     c68:	9c 8d       	ldd	r25, Y+28	; 0x1c
     c6a:	01 97       	sbiw	r24, 0x01	; 1
     c6c:	9c 8f       	std	Y+28, r25	; 0x1c
     c6e:	8b 8f       	std	Y+27, r24	; 0x1b
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     c70:	8b 8d       	ldd	r24, Y+27	; 0x1b
     c72:	9c 8d       	ldd	r25, Y+28	; 0x1c
     c74:	00 97       	sbiw	r24, 0x00	; 0
     c76:	51 f7       	brne	.-44     	; 0xc4c <main+0x202>
     c78:	16 c0       	rjmp	.+44     	; 0xca6 <main+0x25c>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     c7a:	6f 89       	ldd	r22, Y+23	; 0x17
     c7c:	78 8d       	ldd	r23, Y+24	; 0x18
     c7e:	89 8d       	ldd	r24, Y+25	; 0x19
     c80:	9a 8d       	ldd	r25, Y+26	; 0x1a
     c82:	23 d0       	rcall	.+70     	; 0xcca <__fixunssfsi>
     c84:	dc 01       	movw	r26, r24
     c86:	cb 01       	movw	r24, r22
     c88:	9c 8f       	std	Y+28, r25	; 0x1c
     c8a:	8b 8f       	std	Y+27, r24	; 0x1b
     c8c:	8b 8d       	ldd	r24, Y+27	; 0x1b
     c8e:	9c 8d       	ldd	r25, Y+28	; 0x1c
     c90:	98 a3       	std	Y+32, r25	; 0x20
     c92:	8f 8f       	std	Y+31, r24	; 0x1f
     c94:	8f 8d       	ldd	r24, Y+31	; 0x1f
     c96:	98 a1       	ldd	r25, Y+32	; 0x20
     c98:	8c 01       	movw	r16, r24
     c9a:	f8 01       	movw	r30, r16
     c9c:	31 97       	sbiw	r30, 0x01	; 1
     c9e:	f1 f7       	brne	.-4      	; 0xc9c <main+0x252>
     ca0:	8f 01       	movw	r16, r30
     ca2:	18 a3       	std	Y+32, r17	; 0x20
     ca4:	0f 8f       	std	Y+31, r16	; 0x1f
		{
			rotate_RI_Counter_CW(50);
		
			_delay_ms(1000);
		}
		for(int i=0; i<5; i++)
     ca6:	8b 81       	ldd	r24, Y+3	; 0x03
     ca8:	9c 81       	ldd	r25, Y+4	; 0x04
     caa:	01 96       	adiw	r24, 0x01	; 1
     cac:	9c 83       	std	Y+4, r25	; 0x04
     cae:	8b 83       	std	Y+3, r24	; 0x03
     cb0:	8b 81       	ldd	r24, Y+3	; 0x03
     cb2:	9c 81       	ldd	r25, Y+4	; 0x04
     cb4:	85 30       	cpi	r24, 0x05	; 5
     cb6:	91 05       	cpc	r25, r1
     cb8:	0c f4       	brge	.+2      	; 0xcbc <main+0x272>
     cba:	78 cf       	rjmp	.-272    	; 0xbac <main+0x162>
			rotate_RI_CW(50);
			
			_delay_ms(1000);
		}
		
		rotate_RI_Counter_CW(150);
     cbc:	86 e9       	ldi	r24, 0x96	; 150
     cbe:	90 e0       	ldi	r25, 0x00	; 0
     cc0:	ce d9       	rcall	.-3172   	; 0x5e <rotate_RI_Counter_CW>
		
		rotate_RI_CW(200);
     cc2:	88 ec       	ldi	r24, 0xC8	; 200
     cc4:	90 e0       	ldi	r25, 0x00	; 0
     cc6:	46 dc       	rcall	.-1908   	; 0x554 <rotate_RI_CW>
	}
     cc8:	e3 ce       	rjmp	.-570    	; 0xa90 <main+0x46>

00000cca <__fixunssfsi>:
     cca:	ef 92       	push	r14
     ccc:	ff 92       	push	r15
     cce:	0f 93       	push	r16
     cd0:	1f 93       	push	r17
     cd2:	7b 01       	movw	r14, r22
     cd4:	8c 01       	movw	r16, r24
     cd6:	20 e0       	ldi	r18, 0x00	; 0
     cd8:	30 e0       	ldi	r19, 0x00	; 0
     cda:	40 e0       	ldi	r20, 0x00	; 0
     cdc:	5f e4       	ldi	r21, 0x4F	; 79
     cde:	d7 d2       	rcall	.+1454   	; 0x128e <__gesf2>
     ce0:	87 fd       	sbrc	r24, 7
     ce2:	0f c0       	rjmp	.+30     	; 0xd02 <__fixunssfsi+0x38>
     ce4:	c8 01       	movw	r24, r16
     ce6:	b7 01       	movw	r22, r14
     ce8:	20 e0       	ldi	r18, 0x00	; 0
     cea:	30 e0       	ldi	r19, 0x00	; 0
     cec:	40 e0       	ldi	r20, 0x00	; 0
     cee:	5f e4       	ldi	r21, 0x4F	; 79
     cf0:	83 d1       	rcall	.+774    	; 0xff8 <__subsf3>
     cf2:	23 d3       	rcall	.+1606   	; 0x133a <__fixsfsi>
     cf4:	9b 01       	movw	r18, r22
     cf6:	ac 01       	movw	r20, r24
     cf8:	20 50       	subi	r18, 0x00	; 0
     cfa:	30 40       	sbci	r19, 0x00	; 0
     cfc:	40 40       	sbci	r20, 0x00	; 0
     cfe:	50 48       	sbci	r21, 0x80	; 128
     d00:	05 c0       	rjmp	.+10     	; 0xd0c <__fixunssfsi+0x42>
     d02:	c8 01       	movw	r24, r16
     d04:	b7 01       	movw	r22, r14
     d06:	19 d3       	rcall	.+1586   	; 0x133a <__fixsfsi>
     d08:	9b 01       	movw	r18, r22
     d0a:	ac 01       	movw	r20, r24
     d0c:	b9 01       	movw	r22, r18
     d0e:	ca 01       	movw	r24, r20
     d10:	1f 91       	pop	r17
     d12:	0f 91       	pop	r16
     d14:	ff 90       	pop	r15
     d16:	ef 90       	pop	r14
     d18:	08 95       	ret

00000d1a <_fpadd_parts>:
     d1a:	a0 e0       	ldi	r26, 0x00	; 0
     d1c:	b0 e0       	ldi	r27, 0x00	; 0
     d1e:	e2 e9       	ldi	r30, 0x92	; 146
     d20:	f6 e0       	ldi	r31, 0x06	; 6
     d22:	ed c4       	rjmp	.+2522   	; 0x16fe <__prologue_saves__+0x8>
     d24:	fc 01       	movw	r30, r24
     d26:	ea 01       	movw	r28, r20
     d28:	80 81       	ld	r24, Z
     d2a:	82 30       	cpi	r24, 0x02	; 2
     d2c:	08 f4       	brcc	.+2      	; 0xd30 <_fpadd_parts+0x16>
     d2e:	38 c1       	rjmp	.+624    	; 0xfa0 <_fpadd_parts+0x286>
     d30:	db 01       	movw	r26, r22
     d32:	9c 91       	ld	r25, X
     d34:	92 30       	cpi	r25, 0x02	; 2
     d36:	08 f4       	brcc	.+2      	; 0xd3a <_fpadd_parts+0x20>
     d38:	30 c1       	rjmp	.+608    	; 0xf9a <_fpadd_parts+0x280>
     d3a:	84 30       	cpi	r24, 0x04	; 4
     d3c:	59 f4       	brne	.+22     	; 0xd54 <_fpadd_parts+0x3a>
     d3e:	94 30       	cpi	r25, 0x04	; 4
     d40:	09 f0       	breq	.+2      	; 0xd44 <_fpadd_parts+0x2a>
     d42:	2e c1       	rjmp	.+604    	; 0xfa0 <_fpadd_parts+0x286>
     d44:	91 81       	ldd	r25, Z+1	; 0x01
     d46:	11 96       	adiw	r26, 0x01	; 1
     d48:	8c 91       	ld	r24, X
     d4a:	11 97       	sbiw	r26, 0x01	; 1
     d4c:	98 17       	cp	r25, r24
     d4e:	09 f0       	breq	.+2      	; 0xd52 <_fpadd_parts+0x38>
     d50:	21 c1       	rjmp	.+578    	; 0xf94 <_fpadd_parts+0x27a>
     d52:	26 c1       	rjmp	.+588    	; 0xfa0 <_fpadd_parts+0x286>
     d54:	94 30       	cpi	r25, 0x04	; 4
     d56:	09 f4       	brne	.+2      	; 0xd5a <_fpadd_parts+0x40>
     d58:	20 c1       	rjmp	.+576    	; 0xf9a <_fpadd_parts+0x280>
     d5a:	92 30       	cpi	r25, 0x02	; 2
     d5c:	b1 f4       	brne	.+44     	; 0xd8a <_fpadd_parts+0x70>
     d5e:	82 30       	cpi	r24, 0x02	; 2
     d60:	09 f0       	breq	.+2      	; 0xd64 <_fpadd_parts+0x4a>
     d62:	1e c1       	rjmp	.+572    	; 0xfa0 <_fpadd_parts+0x286>
     d64:	ca 01       	movw	r24, r20
     d66:	af 01       	movw	r20, r30
     d68:	28 e0       	ldi	r18, 0x08	; 8
     d6a:	da 01       	movw	r26, r20
     d6c:	0d 90       	ld	r0, X+
     d6e:	ad 01       	movw	r20, r26
     d70:	dc 01       	movw	r26, r24
     d72:	0d 92       	st	X+, r0
     d74:	cd 01       	movw	r24, r26
     d76:	21 50       	subi	r18, 0x01	; 1
     d78:	c1 f7       	brne	.-16     	; 0xd6a <_fpadd_parts+0x50>
     d7a:	db 01       	movw	r26, r22
     d7c:	11 96       	adiw	r26, 0x01	; 1
     d7e:	8c 91       	ld	r24, X
     d80:	11 97       	sbiw	r26, 0x01	; 1
     d82:	91 81       	ldd	r25, Z+1	; 0x01
     d84:	89 23       	and	r24, r25
     d86:	89 83       	std	Y+1, r24	; 0x01
     d88:	0a c1       	rjmp	.+532    	; 0xf9e <_fpadd_parts+0x284>
     d8a:	82 30       	cpi	r24, 0x02	; 2
     d8c:	09 f4       	brne	.+2      	; 0xd90 <_fpadd_parts+0x76>
     d8e:	05 c1       	rjmp	.+522    	; 0xf9a <_fpadd_parts+0x280>
     d90:	c2 80       	ldd	r12, Z+2	; 0x02
     d92:	d3 80       	ldd	r13, Z+3	; 0x03
     d94:	db 01       	movw	r26, r22
     d96:	12 96       	adiw	r26, 0x02	; 2
     d98:	6d 90       	ld	r6, X+
     d9a:	7c 90       	ld	r7, X
     d9c:	13 97       	sbiw	r26, 0x03	; 3
     d9e:	24 81       	ldd	r18, Z+4	; 0x04
     da0:	35 81       	ldd	r19, Z+5	; 0x05
     da2:	46 81       	ldd	r20, Z+6	; 0x06
     da4:	57 81       	ldd	r21, Z+7	; 0x07
     da6:	14 96       	adiw	r26, 0x04	; 4
     da8:	ed 90       	ld	r14, X+
     daa:	fd 90       	ld	r15, X+
     dac:	0d 91       	ld	r16, X+
     dae:	1c 91       	ld	r17, X
     db0:	17 97       	sbiw	r26, 0x07	; 7
     db2:	c6 01       	movw	r24, r12
     db4:	86 19       	sub	r24, r6
     db6:	97 09       	sbc	r25, r7
     db8:	5c 01       	movw	r10, r24
     dba:	97 ff       	sbrs	r25, 7
     dbc:	04 c0       	rjmp	.+8      	; 0xdc6 <_fpadd_parts+0xac>
     dbe:	aa 24       	eor	r10, r10
     dc0:	bb 24       	eor	r11, r11
     dc2:	a8 1a       	sub	r10, r24
     dc4:	b9 0a       	sbc	r11, r25
     dc6:	b0 e2       	ldi	r27, 0x20	; 32
     dc8:	ab 16       	cp	r10, r27
     dca:	b1 04       	cpc	r11, r1
     dcc:	0c f0       	brlt	.+2      	; 0xdd0 <_fpadd_parts+0xb6>
     dce:	61 c0       	rjmp	.+194    	; 0xe92 <_fpadd_parts+0x178>
     dd0:	18 16       	cp	r1, r24
     dd2:	19 06       	cpc	r1, r25
     dd4:	6c f5       	brge	.+90     	; 0xe30 <_fpadd_parts+0x116>
     dd6:	37 01       	movw	r6, r14
     dd8:	48 01       	movw	r8, r16
     dda:	0a 2c       	mov	r0, r10
     ddc:	04 c0       	rjmp	.+8      	; 0xde6 <_fpadd_parts+0xcc>
     dde:	96 94       	lsr	r9
     de0:	87 94       	ror	r8
     de2:	77 94       	ror	r7
     de4:	67 94       	ror	r6
     de6:	0a 94       	dec	r0
     de8:	d2 f7       	brpl	.-12     	; 0xdde <_fpadd_parts+0xc4>
     dea:	81 e0       	ldi	r24, 0x01	; 1
     dec:	90 e0       	ldi	r25, 0x00	; 0
     dee:	a0 e0       	ldi	r26, 0x00	; 0
     df0:	b0 e0       	ldi	r27, 0x00	; 0
     df2:	0a 2c       	mov	r0, r10
     df4:	04 c0       	rjmp	.+8      	; 0xdfe <_fpadd_parts+0xe4>
     df6:	88 0f       	add	r24, r24
     df8:	99 1f       	adc	r25, r25
     dfa:	aa 1f       	adc	r26, r26
     dfc:	bb 1f       	adc	r27, r27
     dfe:	0a 94       	dec	r0
     e00:	d2 f7       	brpl	.-12     	; 0xdf6 <_fpadd_parts+0xdc>
     e02:	01 97       	sbiw	r24, 0x01	; 1
     e04:	a1 09       	sbc	r26, r1
     e06:	b1 09       	sbc	r27, r1
     e08:	8e 21       	and	r24, r14
     e0a:	9f 21       	and	r25, r15
     e0c:	a0 23       	and	r26, r16
     e0e:	b1 23       	and	r27, r17
     e10:	ee 24       	eor	r14, r14
     e12:	ff 24       	eor	r15, r15
     e14:	87 01       	movw	r16, r14
     e16:	e3 94       	inc	r14
     e18:	00 97       	sbiw	r24, 0x00	; 0
     e1a:	a1 05       	cpc	r26, r1
     e1c:	b1 05       	cpc	r27, r1
     e1e:	19 f4       	brne	.+6      	; 0xe26 <_fpadd_parts+0x10c>
     e20:	ee 24       	eor	r14, r14
     e22:	ff 24       	eor	r15, r15
     e24:	87 01       	movw	r16, r14
     e26:	e6 28       	or	r14, r6
     e28:	f7 28       	or	r15, r7
     e2a:	08 29       	or	r16, r8
     e2c:	19 29       	or	r17, r9
     e2e:	3c c0       	rjmp	.+120    	; 0xea8 <_fpadd_parts+0x18e>
     e30:	00 97       	sbiw	r24, 0x00	; 0
     e32:	d1 f1       	breq	.+116    	; 0xea8 <_fpadd_parts+0x18e>
     e34:	ca 0c       	add	r12, r10
     e36:	db 1c       	adc	r13, r11
     e38:	39 01       	movw	r6, r18
     e3a:	4a 01       	movw	r8, r20
     e3c:	0a 2c       	mov	r0, r10
     e3e:	04 c0       	rjmp	.+8      	; 0xe48 <_fpadd_parts+0x12e>
     e40:	96 94       	lsr	r9
     e42:	87 94       	ror	r8
     e44:	77 94       	ror	r7
     e46:	67 94       	ror	r6
     e48:	0a 94       	dec	r0
     e4a:	d2 f7       	brpl	.-12     	; 0xe40 <_fpadd_parts+0x126>
     e4c:	81 e0       	ldi	r24, 0x01	; 1
     e4e:	90 e0       	ldi	r25, 0x00	; 0
     e50:	a0 e0       	ldi	r26, 0x00	; 0
     e52:	b0 e0       	ldi	r27, 0x00	; 0
     e54:	0a 2c       	mov	r0, r10
     e56:	04 c0       	rjmp	.+8      	; 0xe60 <_fpadd_parts+0x146>
     e58:	88 0f       	add	r24, r24
     e5a:	99 1f       	adc	r25, r25
     e5c:	aa 1f       	adc	r26, r26
     e5e:	bb 1f       	adc	r27, r27
     e60:	0a 94       	dec	r0
     e62:	d2 f7       	brpl	.-12     	; 0xe58 <_fpadd_parts+0x13e>
     e64:	01 97       	sbiw	r24, 0x01	; 1
     e66:	a1 09       	sbc	r26, r1
     e68:	b1 09       	sbc	r27, r1
     e6a:	82 23       	and	r24, r18
     e6c:	93 23       	and	r25, r19
     e6e:	a4 23       	and	r26, r20
     e70:	b5 23       	and	r27, r21
     e72:	21 e0       	ldi	r18, 0x01	; 1
     e74:	30 e0       	ldi	r19, 0x00	; 0
     e76:	40 e0       	ldi	r20, 0x00	; 0
     e78:	50 e0       	ldi	r21, 0x00	; 0
     e7a:	00 97       	sbiw	r24, 0x00	; 0
     e7c:	a1 05       	cpc	r26, r1
     e7e:	b1 05       	cpc	r27, r1
     e80:	19 f4       	brne	.+6      	; 0xe88 <_fpadd_parts+0x16e>
     e82:	20 e0       	ldi	r18, 0x00	; 0
     e84:	30 e0       	ldi	r19, 0x00	; 0
     e86:	a9 01       	movw	r20, r18
     e88:	26 29       	or	r18, r6
     e8a:	37 29       	or	r19, r7
     e8c:	48 29       	or	r20, r8
     e8e:	59 29       	or	r21, r9
     e90:	0b c0       	rjmp	.+22     	; 0xea8 <_fpadd_parts+0x18e>
     e92:	6c 14       	cp	r6, r12
     e94:	7d 04       	cpc	r7, r13
     e96:	24 f4       	brge	.+8      	; 0xea0 <_fpadd_parts+0x186>
     e98:	ee 24       	eor	r14, r14
     e9a:	ff 24       	eor	r15, r15
     e9c:	87 01       	movw	r16, r14
     e9e:	04 c0       	rjmp	.+8      	; 0xea8 <_fpadd_parts+0x18e>
     ea0:	63 01       	movw	r12, r6
     ea2:	20 e0       	ldi	r18, 0x00	; 0
     ea4:	30 e0       	ldi	r19, 0x00	; 0
     ea6:	a9 01       	movw	r20, r18
     ea8:	81 81       	ldd	r24, Z+1	; 0x01
     eaa:	fb 01       	movw	r30, r22
     eac:	91 81       	ldd	r25, Z+1	; 0x01
     eae:	89 17       	cp	r24, r25
     eb0:	09 f4       	brne	.+2      	; 0xeb4 <_fpadd_parts+0x19a>
     eb2:	45 c0       	rjmp	.+138    	; 0xf3e <_fpadd_parts+0x224>
     eb4:	88 23       	and	r24, r24
     eb6:	49 f0       	breq	.+18     	; 0xeca <_fpadd_parts+0x1b0>
     eb8:	d8 01       	movw	r26, r16
     eba:	c7 01       	movw	r24, r14
     ebc:	82 1b       	sub	r24, r18
     ebe:	93 0b       	sbc	r25, r19
     ec0:	a4 0b       	sbc	r26, r20
     ec2:	b5 0b       	sbc	r27, r21
     ec4:	9c 01       	movw	r18, r24
     ec6:	ad 01       	movw	r20, r26
     ec8:	04 c0       	rjmp	.+8      	; 0xed2 <_fpadd_parts+0x1b8>
     eca:	2e 19       	sub	r18, r14
     ecc:	3f 09       	sbc	r19, r15
     ece:	40 0b       	sbc	r20, r16
     ed0:	51 0b       	sbc	r21, r17
     ed2:	57 fd       	sbrc	r21, 7
     ed4:	04 c0       	rjmp	.+8      	; 0xede <_fpadd_parts+0x1c4>
     ed6:	19 82       	std	Y+1, r1	; 0x01
     ed8:	db 82       	std	Y+3, r13	; 0x03
     eda:	ca 82       	std	Y+2, r12	; 0x02
     edc:	0b c0       	rjmp	.+22     	; 0xef4 <_fpadd_parts+0x1da>
     ede:	81 e0       	ldi	r24, 0x01	; 1
     ee0:	89 83       	std	Y+1, r24	; 0x01
     ee2:	db 82       	std	Y+3, r13	; 0x03
     ee4:	ca 82       	std	Y+2, r12	; 0x02
     ee6:	50 95       	com	r21
     ee8:	40 95       	com	r20
     eea:	30 95       	com	r19
     eec:	21 95       	neg	r18
     eee:	3f 4f       	sbci	r19, 0xFF	; 255
     ef0:	4f 4f       	sbci	r20, 0xFF	; 255
     ef2:	5f 4f       	sbci	r21, 0xFF	; 255
     ef4:	2c 83       	std	Y+4, r18	; 0x04
     ef6:	3d 83       	std	Y+5, r19	; 0x05
     ef8:	4e 83       	std	Y+6, r20	; 0x06
     efa:	5f 83       	std	Y+7, r21	; 0x07
     efc:	0d c0       	rjmp	.+26     	; 0xf18 <_fpadd_parts+0x1fe>
     efe:	88 0f       	add	r24, r24
     f00:	99 1f       	adc	r25, r25
     f02:	aa 1f       	adc	r26, r26
     f04:	bb 1f       	adc	r27, r27
     f06:	8c 83       	std	Y+4, r24	; 0x04
     f08:	9d 83       	std	Y+5, r25	; 0x05
     f0a:	ae 83       	std	Y+6, r26	; 0x06
     f0c:	bf 83       	std	Y+7, r27	; 0x07
     f0e:	8a 81       	ldd	r24, Y+2	; 0x02
     f10:	9b 81       	ldd	r25, Y+3	; 0x03
     f12:	01 97       	sbiw	r24, 0x01	; 1
     f14:	9b 83       	std	Y+3, r25	; 0x03
     f16:	8a 83       	std	Y+2, r24	; 0x02
     f18:	8c 81       	ldd	r24, Y+4	; 0x04
     f1a:	9d 81       	ldd	r25, Y+5	; 0x05
     f1c:	ae 81       	ldd	r26, Y+6	; 0x06
     f1e:	bf 81       	ldd	r27, Y+7	; 0x07
     f20:	9c 01       	movw	r18, r24
     f22:	ad 01       	movw	r20, r26
     f24:	21 50       	subi	r18, 0x01	; 1
     f26:	30 40       	sbci	r19, 0x00	; 0
     f28:	40 40       	sbci	r20, 0x00	; 0
     f2a:	50 40       	sbci	r21, 0x00	; 0
     f2c:	2f 3f       	cpi	r18, 0xFF	; 255
     f2e:	ef ef       	ldi	r30, 0xFF	; 255
     f30:	3e 07       	cpc	r19, r30
     f32:	ef ef       	ldi	r30, 0xFF	; 255
     f34:	4e 07       	cpc	r20, r30
     f36:	ef e3       	ldi	r30, 0x3F	; 63
     f38:	5e 07       	cpc	r21, r30
     f3a:	08 f3       	brcs	.-62     	; 0xefe <_fpadd_parts+0x1e4>
     f3c:	0b c0       	rjmp	.+22     	; 0xf54 <_fpadd_parts+0x23a>
     f3e:	89 83       	std	Y+1, r24	; 0x01
     f40:	db 82       	std	Y+3, r13	; 0x03
     f42:	ca 82       	std	Y+2, r12	; 0x02
     f44:	2e 0d       	add	r18, r14
     f46:	3f 1d       	adc	r19, r15
     f48:	40 1f       	adc	r20, r16
     f4a:	51 1f       	adc	r21, r17
     f4c:	2c 83       	std	Y+4, r18	; 0x04
     f4e:	3d 83       	std	Y+5, r19	; 0x05
     f50:	4e 83       	std	Y+6, r20	; 0x06
     f52:	5f 83       	std	Y+7, r21	; 0x07
     f54:	83 e0       	ldi	r24, 0x03	; 3
     f56:	88 83       	st	Y, r24
     f58:	2c 81       	ldd	r18, Y+4	; 0x04
     f5a:	3d 81       	ldd	r19, Y+5	; 0x05
     f5c:	4e 81       	ldd	r20, Y+6	; 0x06
     f5e:	5f 81       	ldd	r21, Y+7	; 0x07
     f60:	57 ff       	sbrs	r21, 7
     f62:	1d c0       	rjmp	.+58     	; 0xf9e <_fpadd_parts+0x284>
     f64:	da 01       	movw	r26, r20
     f66:	c9 01       	movw	r24, r18
     f68:	81 70       	andi	r24, 0x01	; 1
     f6a:	90 70       	andi	r25, 0x00	; 0
     f6c:	a0 70       	andi	r26, 0x00	; 0
     f6e:	b0 70       	andi	r27, 0x00	; 0
     f70:	56 95       	lsr	r21
     f72:	47 95       	ror	r20
     f74:	37 95       	ror	r19
     f76:	27 95       	ror	r18
     f78:	82 2b       	or	r24, r18
     f7a:	93 2b       	or	r25, r19
     f7c:	a4 2b       	or	r26, r20
     f7e:	b5 2b       	or	r27, r21
     f80:	8c 83       	std	Y+4, r24	; 0x04
     f82:	9d 83       	std	Y+5, r25	; 0x05
     f84:	ae 83       	std	Y+6, r26	; 0x06
     f86:	bf 83       	std	Y+7, r27	; 0x07
     f88:	8a 81       	ldd	r24, Y+2	; 0x02
     f8a:	9b 81       	ldd	r25, Y+3	; 0x03
     f8c:	01 96       	adiw	r24, 0x01	; 1
     f8e:	9b 83       	std	Y+3, r25	; 0x03
     f90:	8a 83       	std	Y+2, r24	; 0x02
     f92:	05 c0       	rjmp	.+10     	; 0xf9e <_fpadd_parts+0x284>
     f94:	e0 e6       	ldi	r30, 0x60	; 96
     f96:	f0 e0       	ldi	r31, 0x00	; 0
     f98:	03 c0       	rjmp	.+6      	; 0xfa0 <_fpadd_parts+0x286>
     f9a:	fb 01       	movw	r30, r22
     f9c:	01 c0       	rjmp	.+2      	; 0xfa0 <_fpadd_parts+0x286>
     f9e:	fe 01       	movw	r30, r28
     fa0:	cf 01       	movw	r24, r30
     fa2:	cd b7       	in	r28, 0x3d	; 61
     fa4:	de b7       	in	r29, 0x3e	; 62
     fa6:	ee e0       	ldi	r30, 0x0E	; 14
     fa8:	c6 c3       	rjmp	.+1932   	; 0x1736 <__epilogue_restores__+0x8>

00000faa <__addsf3>:
     faa:	a0 e2       	ldi	r26, 0x20	; 32
     fac:	b0 e0       	ldi	r27, 0x00	; 0
     fae:	ea ed       	ldi	r30, 0xDA	; 218
     fb0:	f7 e0       	ldi	r31, 0x07	; 7
     fb2:	ad c3       	rjmp	.+1882   	; 0x170e <__prologue_saves__+0x18>
     fb4:	69 83       	std	Y+1, r22	; 0x01
     fb6:	7a 83       	std	Y+2, r23	; 0x02
     fb8:	8b 83       	std	Y+3, r24	; 0x03
     fba:	9c 83       	std	Y+4, r25	; 0x04
     fbc:	2d 83       	std	Y+5, r18	; 0x05
     fbe:	3e 83       	std	Y+6, r19	; 0x06
     fc0:	4f 83       	std	Y+7, r20	; 0x07
     fc2:	58 87       	std	Y+8, r21	; 0x08
     fc4:	89 e0       	ldi	r24, 0x09	; 9
     fc6:	e8 2e       	mov	r14, r24
     fc8:	f1 2c       	mov	r15, r1
     fca:	ec 0e       	add	r14, r28
     fcc:	fd 1e       	adc	r15, r29
     fce:	ce 01       	movw	r24, r28
     fd0:	01 96       	adiw	r24, 0x01	; 1
     fd2:	b7 01       	movw	r22, r14
     fd4:	ce d2       	rcall	.+1436   	; 0x1572 <__unpack_f>
     fd6:	8e 01       	movw	r16, r28
     fd8:	0f 5e       	subi	r16, 0xEF	; 239
     fda:	1f 4f       	sbci	r17, 0xFF	; 255
     fdc:	ce 01       	movw	r24, r28
     fde:	05 96       	adiw	r24, 0x05	; 5
     fe0:	b8 01       	movw	r22, r16
     fe2:	c7 d2       	rcall	.+1422   	; 0x1572 <__unpack_f>
     fe4:	c7 01       	movw	r24, r14
     fe6:	b8 01       	movw	r22, r16
     fe8:	ae 01       	movw	r20, r28
     fea:	47 5e       	subi	r20, 0xE7	; 231
     fec:	5f 4f       	sbci	r21, 0xFF	; 255
     fee:	95 de       	rcall	.-726    	; 0xd1a <_fpadd_parts>
     ff0:	f3 d1       	rcall	.+998    	; 0x13d8 <__pack_f>
     ff2:	a0 96       	adiw	r28, 0x20	; 32
     ff4:	e6 e0       	ldi	r30, 0x06	; 6
     ff6:	a7 c3       	rjmp	.+1870   	; 0x1746 <__epilogue_restores__+0x18>

00000ff8 <__subsf3>:
     ff8:	a0 e2       	ldi	r26, 0x20	; 32
     ffa:	b0 e0       	ldi	r27, 0x00	; 0
     ffc:	e1 e0       	ldi	r30, 0x01	; 1
     ffe:	f8 e0       	ldi	r31, 0x08	; 8
    1000:	86 c3       	rjmp	.+1804   	; 0x170e <__prologue_saves__+0x18>
    1002:	69 83       	std	Y+1, r22	; 0x01
    1004:	7a 83       	std	Y+2, r23	; 0x02
    1006:	8b 83       	std	Y+3, r24	; 0x03
    1008:	9c 83       	std	Y+4, r25	; 0x04
    100a:	2d 83       	std	Y+5, r18	; 0x05
    100c:	3e 83       	std	Y+6, r19	; 0x06
    100e:	4f 83       	std	Y+7, r20	; 0x07
    1010:	58 87       	std	Y+8, r21	; 0x08
    1012:	8e 01       	movw	r16, r28
    1014:	07 5f       	subi	r16, 0xF7	; 247
    1016:	1f 4f       	sbci	r17, 0xFF	; 255
    1018:	ce 01       	movw	r24, r28
    101a:	01 96       	adiw	r24, 0x01	; 1
    101c:	b8 01       	movw	r22, r16
    101e:	a9 d2       	rcall	.+1362   	; 0x1572 <__unpack_f>
    1020:	91 e1       	ldi	r25, 0x11	; 17
    1022:	e9 2e       	mov	r14, r25
    1024:	f1 2c       	mov	r15, r1
    1026:	ec 0e       	add	r14, r28
    1028:	fd 1e       	adc	r15, r29
    102a:	ce 01       	movw	r24, r28
    102c:	05 96       	adiw	r24, 0x05	; 5
    102e:	b7 01       	movw	r22, r14
    1030:	a0 d2       	rcall	.+1344   	; 0x1572 <__unpack_f>
    1032:	8a 89       	ldd	r24, Y+18	; 0x12
    1034:	91 e0       	ldi	r25, 0x01	; 1
    1036:	89 27       	eor	r24, r25
    1038:	8a 8b       	std	Y+18, r24	; 0x12
    103a:	c8 01       	movw	r24, r16
    103c:	b7 01       	movw	r22, r14
    103e:	ae 01       	movw	r20, r28
    1040:	47 5e       	subi	r20, 0xE7	; 231
    1042:	5f 4f       	sbci	r21, 0xFF	; 255
    1044:	6a de       	rcall	.-812    	; 0xd1a <_fpadd_parts>
    1046:	c8 d1       	rcall	.+912    	; 0x13d8 <__pack_f>
    1048:	a0 96       	adiw	r28, 0x20	; 32
    104a:	e6 e0       	ldi	r30, 0x06	; 6
    104c:	7c c3       	rjmp	.+1784   	; 0x1746 <__epilogue_restores__+0x18>

0000104e <__mulsf3>:
    104e:	a0 e2       	ldi	r26, 0x20	; 32
    1050:	b0 e0       	ldi	r27, 0x00	; 0
    1052:	ec e2       	ldi	r30, 0x2C	; 44
    1054:	f8 e0       	ldi	r31, 0x08	; 8
    1056:	4f c3       	rjmp	.+1694   	; 0x16f6 <__prologue_saves__>
    1058:	69 83       	std	Y+1, r22	; 0x01
    105a:	7a 83       	std	Y+2, r23	; 0x02
    105c:	8b 83       	std	Y+3, r24	; 0x03
    105e:	9c 83       	std	Y+4, r25	; 0x04
    1060:	2d 83       	std	Y+5, r18	; 0x05
    1062:	3e 83       	std	Y+6, r19	; 0x06
    1064:	4f 83       	std	Y+7, r20	; 0x07
    1066:	58 87       	std	Y+8, r21	; 0x08
    1068:	ce 01       	movw	r24, r28
    106a:	01 96       	adiw	r24, 0x01	; 1
    106c:	be 01       	movw	r22, r28
    106e:	67 5f       	subi	r22, 0xF7	; 247
    1070:	7f 4f       	sbci	r23, 0xFF	; 255
    1072:	7f d2       	rcall	.+1278   	; 0x1572 <__unpack_f>
    1074:	ce 01       	movw	r24, r28
    1076:	05 96       	adiw	r24, 0x05	; 5
    1078:	be 01       	movw	r22, r28
    107a:	6f 5e       	subi	r22, 0xEF	; 239
    107c:	7f 4f       	sbci	r23, 0xFF	; 255
    107e:	79 d2       	rcall	.+1266   	; 0x1572 <__unpack_f>
    1080:	99 85       	ldd	r25, Y+9	; 0x09
    1082:	92 30       	cpi	r25, 0x02	; 2
    1084:	78 f0       	brcs	.+30     	; 0x10a4 <__mulsf3+0x56>
    1086:	89 89       	ldd	r24, Y+17	; 0x11
    1088:	82 30       	cpi	r24, 0x02	; 2
    108a:	c0 f0       	brcs	.+48     	; 0x10bc <__mulsf3+0x6e>
    108c:	94 30       	cpi	r25, 0x04	; 4
    108e:	19 f4       	brne	.+6      	; 0x1096 <__mulsf3+0x48>
    1090:	82 30       	cpi	r24, 0x02	; 2
    1092:	41 f4       	brne	.+16     	; 0x10a4 <__mulsf3+0x56>
    1094:	cb c0       	rjmp	.+406    	; 0x122c <__mulsf3+0x1de>
    1096:	84 30       	cpi	r24, 0x04	; 4
    1098:	19 f4       	brne	.+6      	; 0x10a0 <__mulsf3+0x52>
    109a:	92 30       	cpi	r25, 0x02	; 2
    109c:	79 f4       	brne	.+30     	; 0x10bc <__mulsf3+0x6e>
    109e:	c6 c0       	rjmp	.+396    	; 0x122c <__mulsf3+0x1de>
    10a0:	92 30       	cpi	r25, 0x02	; 2
    10a2:	51 f4       	brne	.+20     	; 0x10b8 <__mulsf3+0x6a>
    10a4:	81 e0       	ldi	r24, 0x01	; 1
    10a6:	2a 85       	ldd	r18, Y+10	; 0x0a
    10a8:	9a 89       	ldd	r25, Y+18	; 0x12
    10aa:	29 17       	cp	r18, r25
    10ac:	09 f4       	brne	.+2      	; 0x10b0 <__mulsf3+0x62>
    10ae:	80 e0       	ldi	r24, 0x00	; 0
    10b0:	8a 87       	std	Y+10, r24	; 0x0a
    10b2:	ce 01       	movw	r24, r28
    10b4:	09 96       	adiw	r24, 0x09	; 9
    10b6:	bc c0       	rjmp	.+376    	; 0x1230 <__mulsf3+0x1e2>
    10b8:	82 30       	cpi	r24, 0x02	; 2
    10ba:	51 f4       	brne	.+20     	; 0x10d0 <__mulsf3+0x82>
    10bc:	81 e0       	ldi	r24, 0x01	; 1
    10be:	2a 85       	ldd	r18, Y+10	; 0x0a
    10c0:	9a 89       	ldd	r25, Y+18	; 0x12
    10c2:	29 17       	cp	r18, r25
    10c4:	09 f4       	brne	.+2      	; 0x10c8 <__mulsf3+0x7a>
    10c6:	80 e0       	ldi	r24, 0x00	; 0
    10c8:	8a 8b       	std	Y+18, r24	; 0x12
    10ca:	ce 01       	movw	r24, r28
    10cc:	41 96       	adiw	r24, 0x11	; 17
    10ce:	b0 c0       	rjmp	.+352    	; 0x1230 <__mulsf3+0x1e2>
    10d0:	6d 84       	ldd	r6, Y+13	; 0x0d
    10d2:	7e 84       	ldd	r7, Y+14	; 0x0e
    10d4:	8f 84       	ldd	r8, Y+15	; 0x0f
    10d6:	98 88       	ldd	r9, Y+16	; 0x10
    10d8:	ed 88       	ldd	r14, Y+21	; 0x15
    10da:	fe 88       	ldd	r15, Y+22	; 0x16
    10dc:	0f 89       	ldd	r16, Y+23	; 0x17
    10de:	18 8d       	ldd	r17, Y+24	; 0x18
    10e0:	e0 e2       	ldi	r30, 0x20	; 32
    10e2:	f0 e0       	ldi	r31, 0x00	; 0
    10e4:	80 e0       	ldi	r24, 0x00	; 0
    10e6:	90 e0       	ldi	r25, 0x00	; 0
    10e8:	dc 01       	movw	r26, r24
    10ea:	aa 24       	eor	r10, r10
    10ec:	bb 24       	eor	r11, r11
    10ee:	65 01       	movw	r12, r10
    10f0:	20 e0       	ldi	r18, 0x00	; 0
    10f2:	30 e0       	ldi	r19, 0x00	; 0
    10f4:	a9 01       	movw	r20, r18
    10f6:	b3 01       	movw	r22, r6
    10f8:	61 70       	andi	r22, 0x01	; 1
    10fa:	70 70       	andi	r23, 0x00	; 0
    10fc:	61 15       	cp	r22, r1
    10fe:	71 05       	cpc	r23, r1
    1100:	d1 f0       	breq	.+52     	; 0x1136 <__mulsf3+0xe8>
    1102:	2e 0d       	add	r18, r14
    1104:	3f 1d       	adc	r19, r15
    1106:	40 1f       	adc	r20, r16
    1108:	51 1f       	adc	r21, r17
    110a:	15 01       	movw	r2, r10
    110c:	26 01       	movw	r4, r12
    110e:	28 0e       	add	r2, r24
    1110:	39 1e       	adc	r3, r25
    1112:	4a 1e       	adc	r4, r26
    1114:	5b 1e       	adc	r5, r27
    1116:	81 e0       	ldi	r24, 0x01	; 1
    1118:	90 e0       	ldi	r25, 0x00	; 0
    111a:	a0 e0       	ldi	r26, 0x00	; 0
    111c:	b0 e0       	ldi	r27, 0x00	; 0
    111e:	2e 15       	cp	r18, r14
    1120:	3f 05       	cpc	r19, r15
    1122:	40 07       	cpc	r20, r16
    1124:	51 07       	cpc	r21, r17
    1126:	18 f0       	brcs	.+6      	; 0x112e <__mulsf3+0xe0>
    1128:	80 e0       	ldi	r24, 0x00	; 0
    112a:	90 e0       	ldi	r25, 0x00	; 0
    112c:	dc 01       	movw	r26, r24
    112e:	82 0d       	add	r24, r2
    1130:	93 1d       	adc	r25, r3
    1132:	a4 1d       	adc	r26, r4
    1134:	b5 1d       	adc	r27, r5
    1136:	aa 0c       	add	r10, r10
    1138:	bb 1c       	adc	r11, r11
    113a:	cc 1c       	adc	r12, r12
    113c:	dd 1c       	adc	r13, r13
    113e:	17 ff       	sbrs	r17, 7
    1140:	09 c0       	rjmp	.+18     	; 0x1154 <__mulsf3+0x106>
    1142:	61 e0       	ldi	r22, 0x01	; 1
    1144:	26 2e       	mov	r2, r22
    1146:	31 2c       	mov	r3, r1
    1148:	41 2c       	mov	r4, r1
    114a:	51 2c       	mov	r5, r1
    114c:	a2 28       	or	r10, r2
    114e:	b3 28       	or	r11, r3
    1150:	c4 28       	or	r12, r4
    1152:	d5 28       	or	r13, r5
    1154:	31 97       	sbiw	r30, 0x01	; 1
    1156:	49 f0       	breq	.+18     	; 0x116a <__mulsf3+0x11c>
    1158:	ee 0c       	add	r14, r14
    115a:	ff 1c       	adc	r15, r15
    115c:	00 1f       	adc	r16, r16
    115e:	11 1f       	adc	r17, r17
    1160:	96 94       	lsr	r9
    1162:	87 94       	ror	r8
    1164:	77 94       	ror	r7
    1166:	67 94       	ror	r6
    1168:	c6 cf       	rjmp	.-116    	; 0x10f6 <__mulsf3+0xa8>
    116a:	6b 89       	ldd	r22, Y+19	; 0x13
    116c:	7c 89       	ldd	r23, Y+20	; 0x14
    116e:	eb 85       	ldd	r30, Y+11	; 0x0b
    1170:	fc 85       	ldd	r31, Y+12	; 0x0c
    1172:	6e 0f       	add	r22, r30
    1174:	7f 1f       	adc	r23, r31
    1176:	6e 5f       	subi	r22, 0xFE	; 254
    1178:	7f 4f       	sbci	r23, 0xFF	; 255
    117a:	7c 8f       	std	Y+28, r23	; 0x1c
    117c:	6b 8f       	std	Y+27, r22	; 0x1b
    117e:	61 e0       	ldi	r22, 0x01	; 1
    1180:	ea 85       	ldd	r30, Y+10	; 0x0a
    1182:	7a 89       	ldd	r23, Y+18	; 0x12
    1184:	e7 17       	cp	r30, r23
    1186:	09 f4       	brne	.+2      	; 0x118a <__mulsf3+0x13c>
    1188:	60 e0       	ldi	r22, 0x00	; 0
    118a:	6a 8f       	std	Y+26, r22	; 0x1a
    118c:	6b 8d       	ldd	r22, Y+27	; 0x1b
    118e:	7c 8d       	ldd	r23, Y+28	; 0x1c
    1190:	10 c0       	rjmp	.+32     	; 0x11b2 <__mulsf3+0x164>
    1192:	fc 01       	movw	r30, r24
    1194:	e1 70       	andi	r30, 0x01	; 1
    1196:	f0 70       	andi	r31, 0x00	; 0
    1198:	30 97       	sbiw	r30, 0x00	; 0
    119a:	29 f0       	breq	.+10     	; 0x11a6 <__mulsf3+0x158>
    119c:	56 95       	lsr	r21
    119e:	47 95       	ror	r20
    11a0:	37 95       	ror	r19
    11a2:	27 95       	ror	r18
    11a4:	50 68       	ori	r21, 0x80	; 128
    11a6:	b6 95       	lsr	r27
    11a8:	a7 95       	ror	r26
    11aa:	97 95       	ror	r25
    11ac:	87 95       	ror	r24
    11ae:	6f 5f       	subi	r22, 0xFF	; 255
    11b0:	7f 4f       	sbci	r23, 0xFF	; 255
    11b2:	b7 fd       	sbrc	r27, 7
    11b4:	ee cf       	rjmp	.-36     	; 0x1192 <__mulsf3+0x144>
    11b6:	0c c0       	rjmp	.+24     	; 0x11d0 <__mulsf3+0x182>
    11b8:	88 0f       	add	r24, r24
    11ba:	99 1f       	adc	r25, r25
    11bc:	aa 1f       	adc	r26, r26
    11be:	bb 1f       	adc	r27, r27
    11c0:	57 fd       	sbrc	r21, 7
    11c2:	81 60       	ori	r24, 0x01	; 1
    11c4:	22 0f       	add	r18, r18
    11c6:	33 1f       	adc	r19, r19
    11c8:	44 1f       	adc	r20, r20
    11ca:	55 1f       	adc	r21, r21
    11cc:	61 50       	subi	r22, 0x01	; 1
    11ce:	70 40       	sbci	r23, 0x00	; 0
    11d0:	80 30       	cpi	r24, 0x00	; 0
    11d2:	e0 e0       	ldi	r30, 0x00	; 0
    11d4:	9e 07       	cpc	r25, r30
    11d6:	e0 e0       	ldi	r30, 0x00	; 0
    11d8:	ae 07       	cpc	r26, r30
    11da:	e0 e4       	ldi	r30, 0x40	; 64
    11dc:	be 07       	cpc	r27, r30
    11de:	60 f3       	brcs	.-40     	; 0x11b8 <__mulsf3+0x16a>
    11e0:	6b 8f       	std	Y+27, r22	; 0x1b
    11e2:	7c 8f       	std	Y+28, r23	; 0x1c
    11e4:	6f e7       	ldi	r22, 0x7F	; 127
    11e6:	e6 2e       	mov	r14, r22
    11e8:	f1 2c       	mov	r15, r1
    11ea:	01 2d       	mov	r16, r1
    11ec:	11 2d       	mov	r17, r1
    11ee:	e8 22       	and	r14, r24
    11f0:	f9 22       	and	r15, r25
    11f2:	0a 23       	and	r16, r26
    11f4:	1b 23       	and	r17, r27
    11f6:	60 e4       	ldi	r22, 0x40	; 64
    11f8:	e6 16       	cp	r14, r22
    11fa:	f1 04       	cpc	r15, r1
    11fc:	01 05       	cpc	r16, r1
    11fe:	11 05       	cpc	r17, r1
    1200:	61 f4       	brne	.+24     	; 0x121a <__mulsf3+0x1cc>
    1202:	87 fd       	sbrc	r24, 7
    1204:	0a c0       	rjmp	.+20     	; 0x121a <__mulsf3+0x1cc>
    1206:	21 15       	cp	r18, r1
    1208:	31 05       	cpc	r19, r1
    120a:	41 05       	cpc	r20, r1
    120c:	51 05       	cpc	r21, r1
    120e:	29 f0       	breq	.+10     	; 0x121a <__mulsf3+0x1cc>
    1210:	80 5c       	subi	r24, 0xC0	; 192
    1212:	9f 4f       	sbci	r25, 0xFF	; 255
    1214:	af 4f       	sbci	r26, 0xFF	; 255
    1216:	bf 4f       	sbci	r27, 0xFF	; 255
    1218:	80 78       	andi	r24, 0x80	; 128
    121a:	8d 8f       	std	Y+29, r24	; 0x1d
    121c:	9e 8f       	std	Y+30, r25	; 0x1e
    121e:	af 8f       	std	Y+31, r26	; 0x1f
    1220:	b8 a3       	std	Y+32, r27	; 0x20
    1222:	83 e0       	ldi	r24, 0x03	; 3
    1224:	89 8f       	std	Y+25, r24	; 0x19
    1226:	ce 01       	movw	r24, r28
    1228:	49 96       	adiw	r24, 0x19	; 25
    122a:	02 c0       	rjmp	.+4      	; 0x1230 <__mulsf3+0x1e2>
    122c:	80 e6       	ldi	r24, 0x60	; 96
    122e:	90 e0       	ldi	r25, 0x00	; 0
    1230:	d3 d0       	rcall	.+422    	; 0x13d8 <__pack_f>
    1232:	a0 96       	adiw	r28, 0x20	; 32
    1234:	e2 e1       	ldi	r30, 0x12	; 18
    1236:	7b c2       	rjmp	.+1270   	; 0x172e <__epilogue_restores__>

00001238 <__gtsf2>:
    1238:	a8 e1       	ldi	r26, 0x18	; 24
    123a:	b0 e0       	ldi	r27, 0x00	; 0
    123c:	e1 e2       	ldi	r30, 0x21	; 33
    123e:	f9 e0       	ldi	r31, 0x09	; 9
    1240:	66 c2       	rjmp	.+1228   	; 0x170e <__prologue_saves__+0x18>
    1242:	69 83       	std	Y+1, r22	; 0x01
    1244:	7a 83       	std	Y+2, r23	; 0x02
    1246:	8b 83       	std	Y+3, r24	; 0x03
    1248:	9c 83       	std	Y+4, r25	; 0x04
    124a:	2d 83       	std	Y+5, r18	; 0x05
    124c:	3e 83       	std	Y+6, r19	; 0x06
    124e:	4f 83       	std	Y+7, r20	; 0x07
    1250:	58 87       	std	Y+8, r21	; 0x08
    1252:	8e 01       	movw	r16, r28
    1254:	07 5f       	subi	r16, 0xF7	; 247
    1256:	1f 4f       	sbci	r17, 0xFF	; 255
    1258:	ce 01       	movw	r24, r28
    125a:	01 96       	adiw	r24, 0x01	; 1
    125c:	b8 01       	movw	r22, r16
    125e:	89 d1       	rcall	.+786    	; 0x1572 <__unpack_f>
    1260:	81 e1       	ldi	r24, 0x11	; 17
    1262:	e8 2e       	mov	r14, r24
    1264:	f1 2c       	mov	r15, r1
    1266:	ec 0e       	add	r14, r28
    1268:	fd 1e       	adc	r15, r29
    126a:	ce 01       	movw	r24, r28
    126c:	05 96       	adiw	r24, 0x05	; 5
    126e:	b7 01       	movw	r22, r14
    1270:	80 d1       	rcall	.+768    	; 0x1572 <__unpack_f>
    1272:	89 85       	ldd	r24, Y+9	; 0x09
    1274:	82 30       	cpi	r24, 0x02	; 2
    1276:	38 f0       	brcs	.+14     	; 0x1286 <__gtsf2+0x4e>
    1278:	89 89       	ldd	r24, Y+17	; 0x11
    127a:	82 30       	cpi	r24, 0x02	; 2
    127c:	20 f0       	brcs	.+8      	; 0x1286 <__gtsf2+0x4e>
    127e:	c8 01       	movw	r24, r16
    1280:	b7 01       	movw	r22, r14
    1282:	e0 d1       	rcall	.+960    	; 0x1644 <__fpcmp_parts_f>
    1284:	01 c0       	rjmp	.+2      	; 0x1288 <__gtsf2+0x50>
    1286:	8f ef       	ldi	r24, 0xFF	; 255
    1288:	68 96       	adiw	r28, 0x18	; 24
    128a:	e6 e0       	ldi	r30, 0x06	; 6
    128c:	5c c2       	rjmp	.+1208   	; 0x1746 <__epilogue_restores__+0x18>

0000128e <__gesf2>:
    128e:	a8 e1       	ldi	r26, 0x18	; 24
    1290:	b0 e0       	ldi	r27, 0x00	; 0
    1292:	ec e4       	ldi	r30, 0x4C	; 76
    1294:	f9 e0       	ldi	r31, 0x09	; 9
    1296:	3b c2       	rjmp	.+1142   	; 0x170e <__prologue_saves__+0x18>
    1298:	69 83       	std	Y+1, r22	; 0x01
    129a:	7a 83       	std	Y+2, r23	; 0x02
    129c:	8b 83       	std	Y+3, r24	; 0x03
    129e:	9c 83       	std	Y+4, r25	; 0x04
    12a0:	2d 83       	std	Y+5, r18	; 0x05
    12a2:	3e 83       	std	Y+6, r19	; 0x06
    12a4:	4f 83       	std	Y+7, r20	; 0x07
    12a6:	58 87       	std	Y+8, r21	; 0x08
    12a8:	8e 01       	movw	r16, r28
    12aa:	07 5f       	subi	r16, 0xF7	; 247
    12ac:	1f 4f       	sbci	r17, 0xFF	; 255
    12ae:	ce 01       	movw	r24, r28
    12b0:	01 96       	adiw	r24, 0x01	; 1
    12b2:	b8 01       	movw	r22, r16
    12b4:	5e d1       	rcall	.+700    	; 0x1572 <__unpack_f>
    12b6:	81 e1       	ldi	r24, 0x11	; 17
    12b8:	e8 2e       	mov	r14, r24
    12ba:	f1 2c       	mov	r15, r1
    12bc:	ec 0e       	add	r14, r28
    12be:	fd 1e       	adc	r15, r29
    12c0:	ce 01       	movw	r24, r28
    12c2:	05 96       	adiw	r24, 0x05	; 5
    12c4:	b7 01       	movw	r22, r14
    12c6:	55 d1       	rcall	.+682    	; 0x1572 <__unpack_f>
    12c8:	89 85       	ldd	r24, Y+9	; 0x09
    12ca:	82 30       	cpi	r24, 0x02	; 2
    12cc:	38 f0       	brcs	.+14     	; 0x12dc <__gesf2+0x4e>
    12ce:	89 89       	ldd	r24, Y+17	; 0x11
    12d0:	82 30       	cpi	r24, 0x02	; 2
    12d2:	20 f0       	brcs	.+8      	; 0x12dc <__gesf2+0x4e>
    12d4:	c8 01       	movw	r24, r16
    12d6:	b7 01       	movw	r22, r14
    12d8:	b5 d1       	rcall	.+874    	; 0x1644 <__fpcmp_parts_f>
    12da:	01 c0       	rjmp	.+2      	; 0x12de <__gesf2+0x50>
    12dc:	8f ef       	ldi	r24, 0xFF	; 255
    12de:	68 96       	adiw	r28, 0x18	; 24
    12e0:	e6 e0       	ldi	r30, 0x06	; 6
    12e2:	31 c2       	rjmp	.+1122   	; 0x1746 <__epilogue_restores__+0x18>

000012e4 <__ltsf2>:
    12e4:	a8 e1       	ldi	r26, 0x18	; 24
    12e6:	b0 e0       	ldi	r27, 0x00	; 0
    12e8:	e7 e7       	ldi	r30, 0x77	; 119
    12ea:	f9 e0       	ldi	r31, 0x09	; 9
    12ec:	10 c2       	rjmp	.+1056   	; 0x170e <__prologue_saves__+0x18>
    12ee:	69 83       	std	Y+1, r22	; 0x01
    12f0:	7a 83       	std	Y+2, r23	; 0x02
    12f2:	8b 83       	std	Y+3, r24	; 0x03
    12f4:	9c 83       	std	Y+4, r25	; 0x04
    12f6:	2d 83       	std	Y+5, r18	; 0x05
    12f8:	3e 83       	std	Y+6, r19	; 0x06
    12fa:	4f 83       	std	Y+7, r20	; 0x07
    12fc:	58 87       	std	Y+8, r21	; 0x08
    12fe:	8e 01       	movw	r16, r28
    1300:	07 5f       	subi	r16, 0xF7	; 247
    1302:	1f 4f       	sbci	r17, 0xFF	; 255
    1304:	ce 01       	movw	r24, r28
    1306:	01 96       	adiw	r24, 0x01	; 1
    1308:	b8 01       	movw	r22, r16
    130a:	33 d1       	rcall	.+614    	; 0x1572 <__unpack_f>
    130c:	81 e1       	ldi	r24, 0x11	; 17
    130e:	e8 2e       	mov	r14, r24
    1310:	f1 2c       	mov	r15, r1
    1312:	ec 0e       	add	r14, r28
    1314:	fd 1e       	adc	r15, r29
    1316:	ce 01       	movw	r24, r28
    1318:	05 96       	adiw	r24, 0x05	; 5
    131a:	b7 01       	movw	r22, r14
    131c:	2a d1       	rcall	.+596    	; 0x1572 <__unpack_f>
    131e:	89 85       	ldd	r24, Y+9	; 0x09
    1320:	82 30       	cpi	r24, 0x02	; 2
    1322:	38 f0       	brcs	.+14     	; 0x1332 <__ltsf2+0x4e>
    1324:	89 89       	ldd	r24, Y+17	; 0x11
    1326:	82 30       	cpi	r24, 0x02	; 2
    1328:	20 f0       	brcs	.+8      	; 0x1332 <__ltsf2+0x4e>
    132a:	c8 01       	movw	r24, r16
    132c:	b7 01       	movw	r22, r14
    132e:	8a d1       	rcall	.+788    	; 0x1644 <__fpcmp_parts_f>
    1330:	01 c0       	rjmp	.+2      	; 0x1334 <__ltsf2+0x50>
    1332:	81 e0       	ldi	r24, 0x01	; 1
    1334:	68 96       	adiw	r28, 0x18	; 24
    1336:	e6 e0       	ldi	r30, 0x06	; 6
    1338:	06 c2       	rjmp	.+1036   	; 0x1746 <__epilogue_restores__+0x18>

0000133a <__fixsfsi>:
    133a:	ac e0       	ldi	r26, 0x0C	; 12
    133c:	b0 e0       	ldi	r27, 0x00	; 0
    133e:	e2 ea       	ldi	r30, 0xA2	; 162
    1340:	f9 e0       	ldi	r31, 0x09	; 9
    1342:	e9 c1       	rjmp	.+978    	; 0x1716 <__prologue_saves__+0x20>
    1344:	69 83       	std	Y+1, r22	; 0x01
    1346:	7a 83       	std	Y+2, r23	; 0x02
    1348:	8b 83       	std	Y+3, r24	; 0x03
    134a:	9c 83       	std	Y+4, r25	; 0x04
    134c:	ce 01       	movw	r24, r28
    134e:	01 96       	adiw	r24, 0x01	; 1
    1350:	be 01       	movw	r22, r28
    1352:	6b 5f       	subi	r22, 0xFB	; 251
    1354:	7f 4f       	sbci	r23, 0xFF	; 255
    1356:	0d d1       	rcall	.+538    	; 0x1572 <__unpack_f>
    1358:	8d 81       	ldd	r24, Y+5	; 0x05
    135a:	82 30       	cpi	r24, 0x02	; 2
    135c:	81 f1       	breq	.+96     	; 0x13be <__fixsfsi+0x84>
    135e:	82 30       	cpi	r24, 0x02	; 2
    1360:	70 f1       	brcs	.+92     	; 0x13be <__fixsfsi+0x84>
    1362:	84 30       	cpi	r24, 0x04	; 4
    1364:	21 f4       	brne	.+8      	; 0x136e <__fixsfsi+0x34>
    1366:	8e 81       	ldd	r24, Y+6	; 0x06
    1368:	88 23       	and	r24, r24
    136a:	69 f1       	breq	.+90     	; 0x13c6 <__fixsfsi+0x8c>
    136c:	0a c0       	rjmp	.+20     	; 0x1382 <__fixsfsi+0x48>
    136e:	2f 81       	ldd	r18, Y+7	; 0x07
    1370:	38 85       	ldd	r19, Y+8	; 0x08
    1372:	37 fd       	sbrc	r19, 7
    1374:	24 c0       	rjmp	.+72     	; 0x13be <__fixsfsi+0x84>
    1376:	6e 81       	ldd	r22, Y+6	; 0x06
    1378:	2f 31       	cpi	r18, 0x1F	; 31
    137a:	31 05       	cpc	r19, r1
    137c:	3c f0       	brlt	.+14     	; 0x138c <__fixsfsi+0x52>
    137e:	66 23       	and	r22, r22
    1380:	11 f1       	breq	.+68     	; 0x13c6 <__fixsfsi+0x8c>
    1382:	20 e0       	ldi	r18, 0x00	; 0
    1384:	30 e0       	ldi	r19, 0x00	; 0
    1386:	40 e0       	ldi	r20, 0x00	; 0
    1388:	50 e8       	ldi	r21, 0x80	; 128
    138a:	21 c0       	rjmp	.+66     	; 0x13ce <__fixsfsi+0x94>
    138c:	8e e1       	ldi	r24, 0x1E	; 30
    138e:	90 e0       	ldi	r25, 0x00	; 0
    1390:	82 1b       	sub	r24, r18
    1392:	93 0b       	sbc	r25, r19
    1394:	29 85       	ldd	r18, Y+9	; 0x09
    1396:	3a 85       	ldd	r19, Y+10	; 0x0a
    1398:	4b 85       	ldd	r20, Y+11	; 0x0b
    139a:	5c 85       	ldd	r21, Y+12	; 0x0c
    139c:	04 c0       	rjmp	.+8      	; 0x13a6 <__fixsfsi+0x6c>
    139e:	56 95       	lsr	r21
    13a0:	47 95       	ror	r20
    13a2:	37 95       	ror	r19
    13a4:	27 95       	ror	r18
    13a6:	8a 95       	dec	r24
    13a8:	d2 f7       	brpl	.-12     	; 0x139e <__fixsfsi+0x64>
    13aa:	66 23       	and	r22, r22
    13ac:	81 f0       	breq	.+32     	; 0x13ce <__fixsfsi+0x94>
    13ae:	50 95       	com	r21
    13b0:	40 95       	com	r20
    13b2:	30 95       	com	r19
    13b4:	21 95       	neg	r18
    13b6:	3f 4f       	sbci	r19, 0xFF	; 255
    13b8:	4f 4f       	sbci	r20, 0xFF	; 255
    13ba:	5f 4f       	sbci	r21, 0xFF	; 255
    13bc:	08 c0       	rjmp	.+16     	; 0x13ce <__fixsfsi+0x94>
    13be:	20 e0       	ldi	r18, 0x00	; 0
    13c0:	30 e0       	ldi	r19, 0x00	; 0
    13c2:	a9 01       	movw	r20, r18
    13c4:	04 c0       	rjmp	.+8      	; 0x13ce <__fixsfsi+0x94>
    13c6:	2f ef       	ldi	r18, 0xFF	; 255
    13c8:	3f ef       	ldi	r19, 0xFF	; 255
    13ca:	4f ef       	ldi	r20, 0xFF	; 255
    13cc:	5f e7       	ldi	r21, 0x7F	; 127
    13ce:	b9 01       	movw	r22, r18
    13d0:	ca 01       	movw	r24, r20
    13d2:	2c 96       	adiw	r28, 0x0c	; 12
    13d4:	e2 e0       	ldi	r30, 0x02	; 2
    13d6:	bb c1       	rjmp	.+886    	; 0x174e <__epilogue_restores__+0x20>

000013d8 <__pack_f>:
    13d8:	ef 92       	push	r14
    13da:	ff 92       	push	r15
    13dc:	0f 93       	push	r16
    13de:	1f 93       	push	r17
    13e0:	cf 93       	push	r28
    13e2:	df 93       	push	r29
    13e4:	fc 01       	movw	r30, r24
    13e6:	24 81       	ldd	r18, Z+4	; 0x04
    13e8:	35 81       	ldd	r19, Z+5	; 0x05
    13ea:	46 81       	ldd	r20, Z+6	; 0x06
    13ec:	57 81       	ldd	r21, Z+7	; 0x07
    13ee:	61 81       	ldd	r22, Z+1	; 0x01
    13f0:	80 81       	ld	r24, Z
    13f2:	82 30       	cpi	r24, 0x02	; 2
    13f4:	20 f4       	brcc	.+8      	; 0x13fe <__pack_f+0x26>
    13f6:	40 61       	ori	r20, 0x10	; 16
    13f8:	ef ef       	ldi	r30, 0xFF	; 255
    13fa:	f0 e0       	ldi	r31, 0x00	; 0
    13fc:	a3 c0       	rjmp	.+326    	; 0x1544 <__pack_f+0x16c>
    13fe:	84 30       	cpi	r24, 0x04	; 4
    1400:	09 f4       	brne	.+2      	; 0x1404 <__pack_f+0x2c>
    1402:	9b c0       	rjmp	.+310    	; 0x153a <__pack_f+0x162>
    1404:	82 30       	cpi	r24, 0x02	; 2
    1406:	09 f4       	brne	.+2      	; 0x140a <__pack_f+0x32>
    1408:	92 c0       	rjmp	.+292    	; 0x152e <__pack_f+0x156>
    140a:	21 15       	cp	r18, r1
    140c:	31 05       	cpc	r19, r1
    140e:	41 05       	cpc	r20, r1
    1410:	51 05       	cpc	r21, r1
    1412:	09 f4       	brne	.+2      	; 0x1416 <__pack_f+0x3e>
    1414:	8f c0       	rjmp	.+286    	; 0x1534 <__pack_f+0x15c>
    1416:	02 80       	ldd	r0, Z+2	; 0x02
    1418:	f3 81       	ldd	r31, Z+3	; 0x03
    141a:	e0 2d       	mov	r30, r0
    141c:	8f ef       	ldi	r24, 0xFF	; 255
    141e:	e2 38       	cpi	r30, 0x82	; 130
    1420:	f8 07       	cpc	r31, r24
    1422:	0c f0       	brlt	.+2      	; 0x1426 <__pack_f+0x4e>
    1424:	5a c0       	rjmp	.+180    	; 0x14da <__pack_f+0x102>
    1426:	c2 e8       	ldi	r28, 0x82	; 130
    1428:	df ef       	ldi	r29, 0xFF	; 255
    142a:	ce 1b       	sub	r28, r30
    142c:	df 0b       	sbc	r29, r31
    142e:	ca 31       	cpi	r28, 0x1A	; 26
    1430:	d1 05       	cpc	r29, r1
    1432:	6c f5       	brge	.+90     	; 0x148e <__pack_f+0xb6>
    1434:	79 01       	movw	r14, r18
    1436:	8a 01       	movw	r16, r20
    1438:	0c 2e       	mov	r0, r28
    143a:	04 c0       	rjmp	.+8      	; 0x1444 <__pack_f+0x6c>
    143c:	16 95       	lsr	r17
    143e:	07 95       	ror	r16
    1440:	f7 94       	ror	r15
    1442:	e7 94       	ror	r14
    1444:	0a 94       	dec	r0
    1446:	d2 f7       	brpl	.-12     	; 0x143c <__pack_f+0x64>
    1448:	81 e0       	ldi	r24, 0x01	; 1
    144a:	90 e0       	ldi	r25, 0x00	; 0
    144c:	a0 e0       	ldi	r26, 0x00	; 0
    144e:	b0 e0       	ldi	r27, 0x00	; 0
    1450:	0c 2e       	mov	r0, r28
    1452:	04 c0       	rjmp	.+8      	; 0x145c <__pack_f+0x84>
    1454:	88 0f       	add	r24, r24
    1456:	99 1f       	adc	r25, r25
    1458:	aa 1f       	adc	r26, r26
    145a:	bb 1f       	adc	r27, r27
    145c:	0a 94       	dec	r0
    145e:	d2 f7       	brpl	.-12     	; 0x1454 <__pack_f+0x7c>
    1460:	01 97       	sbiw	r24, 0x01	; 1
    1462:	a1 09       	sbc	r26, r1
    1464:	b1 09       	sbc	r27, r1
    1466:	82 23       	and	r24, r18
    1468:	93 23       	and	r25, r19
    146a:	a4 23       	and	r26, r20
    146c:	b5 23       	and	r27, r21
    146e:	21 e0       	ldi	r18, 0x01	; 1
    1470:	30 e0       	ldi	r19, 0x00	; 0
    1472:	40 e0       	ldi	r20, 0x00	; 0
    1474:	50 e0       	ldi	r21, 0x00	; 0
    1476:	00 97       	sbiw	r24, 0x00	; 0
    1478:	a1 05       	cpc	r26, r1
    147a:	b1 05       	cpc	r27, r1
    147c:	19 f4       	brne	.+6      	; 0x1484 <__pack_f+0xac>
    147e:	20 e0       	ldi	r18, 0x00	; 0
    1480:	30 e0       	ldi	r19, 0x00	; 0
    1482:	a9 01       	movw	r20, r18
    1484:	2e 29       	or	r18, r14
    1486:	3f 29       	or	r19, r15
    1488:	40 2b       	or	r20, r16
    148a:	51 2b       	or	r21, r17
    148c:	03 c0       	rjmp	.+6      	; 0x1494 <__pack_f+0xbc>
    148e:	20 e0       	ldi	r18, 0x00	; 0
    1490:	30 e0       	ldi	r19, 0x00	; 0
    1492:	a9 01       	movw	r20, r18
    1494:	da 01       	movw	r26, r20
    1496:	c9 01       	movw	r24, r18
    1498:	8f 77       	andi	r24, 0x7F	; 127
    149a:	90 70       	andi	r25, 0x00	; 0
    149c:	a0 70       	andi	r26, 0x00	; 0
    149e:	b0 70       	andi	r27, 0x00	; 0
    14a0:	80 34       	cpi	r24, 0x40	; 64
    14a2:	91 05       	cpc	r25, r1
    14a4:	a1 05       	cpc	r26, r1
    14a6:	b1 05       	cpc	r27, r1
    14a8:	39 f4       	brne	.+14     	; 0x14b8 <__pack_f+0xe0>
    14aa:	27 ff       	sbrs	r18, 7
    14ac:	09 c0       	rjmp	.+18     	; 0x14c0 <__pack_f+0xe8>
    14ae:	20 5c       	subi	r18, 0xC0	; 192
    14b0:	3f 4f       	sbci	r19, 0xFF	; 255
    14b2:	4f 4f       	sbci	r20, 0xFF	; 255
    14b4:	5f 4f       	sbci	r21, 0xFF	; 255
    14b6:	04 c0       	rjmp	.+8      	; 0x14c0 <__pack_f+0xe8>
    14b8:	21 5c       	subi	r18, 0xC1	; 193
    14ba:	3f 4f       	sbci	r19, 0xFF	; 255
    14bc:	4f 4f       	sbci	r20, 0xFF	; 255
    14be:	5f 4f       	sbci	r21, 0xFF	; 255
    14c0:	e1 e0       	ldi	r30, 0x01	; 1
    14c2:	f0 e0       	ldi	r31, 0x00	; 0
    14c4:	20 30       	cpi	r18, 0x00	; 0
    14c6:	80 e0       	ldi	r24, 0x00	; 0
    14c8:	38 07       	cpc	r19, r24
    14ca:	80 e0       	ldi	r24, 0x00	; 0
    14cc:	48 07       	cpc	r20, r24
    14ce:	80 e4       	ldi	r24, 0x40	; 64
    14d0:	58 07       	cpc	r21, r24
    14d2:	28 f5       	brcc	.+74     	; 0x151e <__pack_f+0x146>
    14d4:	e0 e0       	ldi	r30, 0x00	; 0
    14d6:	f0 e0       	ldi	r31, 0x00	; 0
    14d8:	22 c0       	rjmp	.+68     	; 0x151e <__pack_f+0x146>
    14da:	e0 38       	cpi	r30, 0x80	; 128
    14dc:	f1 05       	cpc	r31, r1
    14de:	6c f5       	brge	.+90     	; 0x153a <__pack_f+0x162>
    14e0:	e1 58       	subi	r30, 0x81	; 129
    14e2:	ff 4f       	sbci	r31, 0xFF	; 255
    14e4:	da 01       	movw	r26, r20
    14e6:	c9 01       	movw	r24, r18
    14e8:	8f 77       	andi	r24, 0x7F	; 127
    14ea:	90 70       	andi	r25, 0x00	; 0
    14ec:	a0 70       	andi	r26, 0x00	; 0
    14ee:	b0 70       	andi	r27, 0x00	; 0
    14f0:	80 34       	cpi	r24, 0x40	; 64
    14f2:	91 05       	cpc	r25, r1
    14f4:	a1 05       	cpc	r26, r1
    14f6:	b1 05       	cpc	r27, r1
    14f8:	39 f4       	brne	.+14     	; 0x1508 <__pack_f+0x130>
    14fa:	27 ff       	sbrs	r18, 7
    14fc:	09 c0       	rjmp	.+18     	; 0x1510 <__pack_f+0x138>
    14fe:	20 5c       	subi	r18, 0xC0	; 192
    1500:	3f 4f       	sbci	r19, 0xFF	; 255
    1502:	4f 4f       	sbci	r20, 0xFF	; 255
    1504:	5f 4f       	sbci	r21, 0xFF	; 255
    1506:	04 c0       	rjmp	.+8      	; 0x1510 <__pack_f+0x138>
    1508:	21 5c       	subi	r18, 0xC1	; 193
    150a:	3f 4f       	sbci	r19, 0xFF	; 255
    150c:	4f 4f       	sbci	r20, 0xFF	; 255
    150e:	5f 4f       	sbci	r21, 0xFF	; 255
    1510:	57 ff       	sbrs	r21, 7
    1512:	05 c0       	rjmp	.+10     	; 0x151e <__pack_f+0x146>
    1514:	56 95       	lsr	r21
    1516:	47 95       	ror	r20
    1518:	37 95       	ror	r19
    151a:	27 95       	ror	r18
    151c:	31 96       	adiw	r30, 0x01	; 1
    151e:	87 e0       	ldi	r24, 0x07	; 7
    1520:	56 95       	lsr	r21
    1522:	47 95       	ror	r20
    1524:	37 95       	ror	r19
    1526:	27 95       	ror	r18
    1528:	8a 95       	dec	r24
    152a:	d1 f7       	brne	.-12     	; 0x1520 <__pack_f+0x148>
    152c:	0b c0       	rjmp	.+22     	; 0x1544 <__pack_f+0x16c>
    152e:	e0 e0       	ldi	r30, 0x00	; 0
    1530:	f0 e0       	ldi	r31, 0x00	; 0
    1532:	05 c0       	rjmp	.+10     	; 0x153e <__pack_f+0x166>
    1534:	e0 e0       	ldi	r30, 0x00	; 0
    1536:	f0 e0       	ldi	r31, 0x00	; 0
    1538:	05 c0       	rjmp	.+10     	; 0x1544 <__pack_f+0x16c>
    153a:	ef ef       	ldi	r30, 0xFF	; 255
    153c:	f0 e0       	ldi	r31, 0x00	; 0
    153e:	20 e0       	ldi	r18, 0x00	; 0
    1540:	30 e0       	ldi	r19, 0x00	; 0
    1542:	a9 01       	movw	r20, r18
    1544:	8e 2f       	mov	r24, r30
    1546:	87 95       	ror	r24
    1548:	88 27       	eor	r24, r24
    154a:	87 95       	ror	r24
    154c:	94 2f       	mov	r25, r20
    154e:	9f 77       	andi	r25, 0x7F	; 127
    1550:	67 95       	ror	r22
    1552:	66 27       	eor	r22, r22
    1554:	67 95       	ror	r22
    1556:	e6 95       	lsr	r30
    1558:	e2 2e       	mov	r14, r18
    155a:	a9 2f       	mov	r26, r25
    155c:	a8 2b       	or	r26, r24
    155e:	fe 2f       	mov	r31, r30
    1560:	f6 2b       	or	r31, r22
    1562:	62 2f       	mov	r22, r18
    1564:	73 2f       	mov	r23, r19
    1566:	8a 2f       	mov	r24, r26
    1568:	9f 2f       	mov	r25, r31
    156a:	cd b7       	in	r28, 0x3d	; 61
    156c:	de b7       	in	r29, 0x3e	; 62
    156e:	e6 e0       	ldi	r30, 0x06	; 6
    1570:	ea c0       	rjmp	.+468    	; 0x1746 <__epilogue_restores__+0x18>

00001572 <__unpack_f>:
    1572:	dc 01       	movw	r26, r24
    1574:	fb 01       	movw	r30, r22
    1576:	2c 91       	ld	r18, X
    1578:	11 96       	adiw	r26, 0x01	; 1
    157a:	3c 91       	ld	r19, X
    157c:	11 97       	sbiw	r26, 0x01	; 1
    157e:	12 96       	adiw	r26, 0x02	; 2
    1580:	8c 91       	ld	r24, X
    1582:	12 97       	sbiw	r26, 0x02	; 2
    1584:	48 2f       	mov	r20, r24
    1586:	4f 77       	andi	r20, 0x7F	; 127
    1588:	50 e0       	ldi	r21, 0x00	; 0
    158a:	98 2f       	mov	r25, r24
    158c:	99 1f       	adc	r25, r25
    158e:	99 27       	eor	r25, r25
    1590:	99 1f       	adc	r25, r25
    1592:	13 96       	adiw	r26, 0x03	; 3
    1594:	6c 91       	ld	r22, X
    1596:	13 97       	sbiw	r26, 0x03	; 3
    1598:	86 2f       	mov	r24, r22
    159a:	88 0f       	add	r24, r24
    159c:	89 2b       	or	r24, r25
    159e:	90 e0       	ldi	r25, 0x00	; 0
    15a0:	66 1f       	adc	r22, r22
    15a2:	66 27       	eor	r22, r22
    15a4:	66 1f       	adc	r22, r22
    15a6:	61 83       	std	Z+1, r22	; 0x01
    15a8:	00 97       	sbiw	r24, 0x00	; 0
    15aa:	39 f5       	brne	.+78     	; 0x15fa <__unpack_f+0x88>
    15ac:	21 15       	cp	r18, r1
    15ae:	31 05       	cpc	r19, r1
    15b0:	41 05       	cpc	r20, r1
    15b2:	51 05       	cpc	r21, r1
    15b4:	11 f4       	brne	.+4      	; 0x15ba <__unpack_f+0x48>
    15b6:	82 e0       	ldi	r24, 0x02	; 2
    15b8:	29 c0       	rjmp	.+82     	; 0x160c <__unpack_f+0x9a>
    15ba:	82 e8       	ldi	r24, 0x82	; 130
    15bc:	9f ef       	ldi	r25, 0xFF	; 255
    15be:	93 83       	std	Z+3, r25	; 0x03
    15c0:	82 83       	std	Z+2, r24	; 0x02
    15c2:	67 e0       	ldi	r22, 0x07	; 7
    15c4:	22 0f       	add	r18, r18
    15c6:	33 1f       	adc	r19, r19
    15c8:	44 1f       	adc	r20, r20
    15ca:	55 1f       	adc	r21, r21
    15cc:	6a 95       	dec	r22
    15ce:	d1 f7       	brne	.-12     	; 0x15c4 <__unpack_f+0x52>
    15d0:	83 e0       	ldi	r24, 0x03	; 3
    15d2:	80 83       	st	Z, r24
    15d4:	09 c0       	rjmp	.+18     	; 0x15e8 <__unpack_f+0x76>
    15d6:	22 0f       	add	r18, r18
    15d8:	33 1f       	adc	r19, r19
    15da:	44 1f       	adc	r20, r20
    15dc:	55 1f       	adc	r21, r21
    15de:	82 81       	ldd	r24, Z+2	; 0x02
    15e0:	93 81       	ldd	r25, Z+3	; 0x03
    15e2:	01 97       	sbiw	r24, 0x01	; 1
    15e4:	93 83       	std	Z+3, r25	; 0x03
    15e6:	82 83       	std	Z+2, r24	; 0x02
    15e8:	20 30       	cpi	r18, 0x00	; 0
    15ea:	80 e0       	ldi	r24, 0x00	; 0
    15ec:	38 07       	cpc	r19, r24
    15ee:	80 e0       	ldi	r24, 0x00	; 0
    15f0:	48 07       	cpc	r20, r24
    15f2:	80 e4       	ldi	r24, 0x40	; 64
    15f4:	58 07       	cpc	r21, r24
    15f6:	78 f3       	brcs	.-34     	; 0x15d6 <__unpack_f+0x64>
    15f8:	20 c0       	rjmp	.+64     	; 0x163a <__unpack_f+0xc8>
    15fa:	8f 3f       	cpi	r24, 0xFF	; 255
    15fc:	91 05       	cpc	r25, r1
    15fe:	79 f4       	brne	.+30     	; 0x161e <__unpack_f+0xac>
    1600:	21 15       	cp	r18, r1
    1602:	31 05       	cpc	r19, r1
    1604:	41 05       	cpc	r20, r1
    1606:	51 05       	cpc	r21, r1
    1608:	19 f4       	brne	.+6      	; 0x1610 <__unpack_f+0x9e>
    160a:	84 e0       	ldi	r24, 0x04	; 4
    160c:	80 83       	st	Z, r24
    160e:	08 95       	ret
    1610:	44 ff       	sbrs	r20, 4
    1612:	03 c0       	rjmp	.+6      	; 0x161a <__unpack_f+0xa8>
    1614:	81 e0       	ldi	r24, 0x01	; 1
    1616:	80 83       	st	Z, r24
    1618:	10 c0       	rjmp	.+32     	; 0x163a <__unpack_f+0xc8>
    161a:	10 82       	st	Z, r1
    161c:	0e c0       	rjmp	.+28     	; 0x163a <__unpack_f+0xc8>
    161e:	8f 57       	subi	r24, 0x7F	; 127
    1620:	90 40       	sbci	r25, 0x00	; 0
    1622:	93 83       	std	Z+3, r25	; 0x03
    1624:	82 83       	std	Z+2, r24	; 0x02
    1626:	83 e0       	ldi	r24, 0x03	; 3
    1628:	80 83       	st	Z, r24
    162a:	87 e0       	ldi	r24, 0x07	; 7
    162c:	22 0f       	add	r18, r18
    162e:	33 1f       	adc	r19, r19
    1630:	44 1f       	adc	r20, r20
    1632:	55 1f       	adc	r21, r21
    1634:	8a 95       	dec	r24
    1636:	d1 f7       	brne	.-12     	; 0x162c <__unpack_f+0xba>
    1638:	50 64       	ori	r21, 0x40	; 64
    163a:	24 83       	std	Z+4, r18	; 0x04
    163c:	35 83       	std	Z+5, r19	; 0x05
    163e:	46 83       	std	Z+6, r20	; 0x06
    1640:	57 83       	std	Z+7, r21	; 0x07
    1642:	08 95       	ret

00001644 <__fpcmp_parts_f>:
    1644:	fc 01       	movw	r30, r24
    1646:	db 01       	movw	r26, r22
    1648:	90 81       	ld	r25, Z
    164a:	92 30       	cpi	r25, 0x02	; 2
    164c:	08 f4       	brcc	.+2      	; 0x1650 <__fpcmp_parts_f+0xc>
    164e:	49 c0       	rjmp	.+146    	; 0x16e2 <__fpcmp_parts_f+0x9e>
    1650:	8c 91       	ld	r24, X
    1652:	82 30       	cpi	r24, 0x02	; 2
    1654:	08 f4       	brcc	.+2      	; 0x1658 <__fpcmp_parts_f+0x14>
    1656:	45 c0       	rjmp	.+138    	; 0x16e2 <__fpcmp_parts_f+0x9e>
    1658:	94 30       	cpi	r25, 0x04	; 4
    165a:	51 f4       	brne	.+20     	; 0x1670 <__fpcmp_parts_f+0x2c>
    165c:	61 81       	ldd	r22, Z+1	; 0x01
    165e:	84 30       	cpi	r24, 0x04	; 4
    1660:	b1 f5       	brne	.+108    	; 0x16ce <__fpcmp_parts_f+0x8a>
    1662:	11 96       	adiw	r26, 0x01	; 1
    1664:	2c 91       	ld	r18, X
    1666:	11 97       	sbiw	r26, 0x01	; 1
    1668:	30 e0       	ldi	r19, 0x00	; 0
    166a:	26 1b       	sub	r18, r22
    166c:	31 09       	sbc	r19, r1
    166e:	41 c0       	rjmp	.+130    	; 0x16f2 <__fpcmp_parts_f+0xae>
    1670:	84 30       	cpi	r24, 0x04	; 4
    1672:	21 f0       	breq	.+8      	; 0x167c <__fpcmp_parts_f+0x38>
    1674:	92 30       	cpi	r25, 0x02	; 2
    1676:	41 f4       	brne	.+16     	; 0x1688 <__fpcmp_parts_f+0x44>
    1678:	82 30       	cpi	r24, 0x02	; 2
    167a:	b1 f1       	breq	.+108    	; 0x16e8 <__fpcmp_parts_f+0xa4>
    167c:	11 96       	adiw	r26, 0x01	; 1
    167e:	8c 91       	ld	r24, X
    1680:	11 97       	sbiw	r26, 0x01	; 1
    1682:	88 23       	and	r24, r24
    1684:	a1 f1       	breq	.+104    	; 0x16ee <__fpcmp_parts_f+0xaa>
    1686:	2d c0       	rjmp	.+90     	; 0x16e2 <__fpcmp_parts_f+0x9e>
    1688:	61 81       	ldd	r22, Z+1	; 0x01
    168a:	82 30       	cpi	r24, 0x02	; 2
    168c:	01 f1       	breq	.+64     	; 0x16ce <__fpcmp_parts_f+0x8a>
    168e:	11 96       	adiw	r26, 0x01	; 1
    1690:	8c 91       	ld	r24, X
    1692:	11 97       	sbiw	r26, 0x01	; 1
    1694:	68 17       	cp	r22, r24
    1696:	d9 f4       	brne	.+54     	; 0x16ce <__fpcmp_parts_f+0x8a>
    1698:	22 81       	ldd	r18, Z+2	; 0x02
    169a:	33 81       	ldd	r19, Z+3	; 0x03
    169c:	12 96       	adiw	r26, 0x02	; 2
    169e:	8d 91       	ld	r24, X+
    16a0:	9c 91       	ld	r25, X
    16a2:	13 97       	sbiw	r26, 0x03	; 3
    16a4:	82 17       	cp	r24, r18
    16a6:	93 07       	cpc	r25, r19
    16a8:	94 f0       	brlt	.+36     	; 0x16ce <__fpcmp_parts_f+0x8a>
    16aa:	28 17       	cp	r18, r24
    16ac:	39 07       	cpc	r19, r25
    16ae:	bc f0       	brlt	.+46     	; 0x16de <__fpcmp_parts_f+0x9a>
    16b0:	24 81       	ldd	r18, Z+4	; 0x04
    16b2:	35 81       	ldd	r19, Z+5	; 0x05
    16b4:	46 81       	ldd	r20, Z+6	; 0x06
    16b6:	57 81       	ldd	r21, Z+7	; 0x07
    16b8:	14 96       	adiw	r26, 0x04	; 4
    16ba:	8d 91       	ld	r24, X+
    16bc:	9d 91       	ld	r25, X+
    16be:	0d 90       	ld	r0, X+
    16c0:	bc 91       	ld	r27, X
    16c2:	a0 2d       	mov	r26, r0
    16c4:	82 17       	cp	r24, r18
    16c6:	93 07       	cpc	r25, r19
    16c8:	a4 07       	cpc	r26, r20
    16ca:	b5 07       	cpc	r27, r21
    16cc:	18 f4       	brcc	.+6      	; 0x16d4 <__fpcmp_parts_f+0x90>
    16ce:	66 23       	and	r22, r22
    16d0:	41 f0       	breq	.+16     	; 0x16e2 <__fpcmp_parts_f+0x9e>
    16d2:	0d c0       	rjmp	.+26     	; 0x16ee <__fpcmp_parts_f+0xaa>
    16d4:	28 17       	cp	r18, r24
    16d6:	39 07       	cpc	r19, r25
    16d8:	4a 07       	cpc	r20, r26
    16da:	5b 07       	cpc	r21, r27
    16dc:	28 f4       	brcc	.+10     	; 0x16e8 <__fpcmp_parts_f+0xa4>
    16de:	66 23       	and	r22, r22
    16e0:	31 f0       	breq	.+12     	; 0x16ee <__fpcmp_parts_f+0xaa>
    16e2:	21 e0       	ldi	r18, 0x01	; 1
    16e4:	30 e0       	ldi	r19, 0x00	; 0
    16e6:	05 c0       	rjmp	.+10     	; 0x16f2 <__fpcmp_parts_f+0xae>
    16e8:	20 e0       	ldi	r18, 0x00	; 0
    16ea:	30 e0       	ldi	r19, 0x00	; 0
    16ec:	02 c0       	rjmp	.+4      	; 0x16f2 <__fpcmp_parts_f+0xae>
    16ee:	2f ef       	ldi	r18, 0xFF	; 255
    16f0:	3f ef       	ldi	r19, 0xFF	; 255
    16f2:	c9 01       	movw	r24, r18
    16f4:	08 95       	ret

000016f6 <__prologue_saves__>:
    16f6:	2f 92       	push	r2
    16f8:	3f 92       	push	r3
    16fa:	4f 92       	push	r4
    16fc:	5f 92       	push	r5
    16fe:	6f 92       	push	r6
    1700:	7f 92       	push	r7
    1702:	8f 92       	push	r8
    1704:	9f 92       	push	r9
    1706:	af 92       	push	r10
    1708:	bf 92       	push	r11
    170a:	cf 92       	push	r12
    170c:	df 92       	push	r13
    170e:	ef 92       	push	r14
    1710:	ff 92       	push	r15
    1712:	0f 93       	push	r16
    1714:	1f 93       	push	r17
    1716:	cf 93       	push	r28
    1718:	df 93       	push	r29
    171a:	cd b7       	in	r28, 0x3d	; 61
    171c:	de b7       	in	r29, 0x3e	; 62
    171e:	ca 1b       	sub	r28, r26
    1720:	db 0b       	sbc	r29, r27
    1722:	0f b6       	in	r0, 0x3f	; 63
    1724:	f8 94       	cli
    1726:	de bf       	out	0x3e, r29	; 62
    1728:	0f be       	out	0x3f, r0	; 63
    172a:	cd bf       	out	0x3d, r28	; 61
    172c:	09 94       	ijmp

0000172e <__epilogue_restores__>:
    172e:	2a 88       	ldd	r2, Y+18	; 0x12
    1730:	39 88       	ldd	r3, Y+17	; 0x11
    1732:	48 88       	ldd	r4, Y+16	; 0x10
    1734:	5f 84       	ldd	r5, Y+15	; 0x0f
    1736:	6e 84       	ldd	r6, Y+14	; 0x0e
    1738:	7d 84       	ldd	r7, Y+13	; 0x0d
    173a:	8c 84       	ldd	r8, Y+12	; 0x0c
    173c:	9b 84       	ldd	r9, Y+11	; 0x0b
    173e:	aa 84       	ldd	r10, Y+10	; 0x0a
    1740:	b9 84       	ldd	r11, Y+9	; 0x09
    1742:	c8 84       	ldd	r12, Y+8	; 0x08
    1744:	df 80       	ldd	r13, Y+7	; 0x07
    1746:	ee 80       	ldd	r14, Y+6	; 0x06
    1748:	fd 80       	ldd	r15, Y+5	; 0x05
    174a:	0c 81       	ldd	r16, Y+4	; 0x04
    174c:	1b 81       	ldd	r17, Y+3	; 0x03
    174e:	aa 81       	ldd	r26, Y+2	; 0x02
    1750:	b9 81       	ldd	r27, Y+1	; 0x01
    1752:	ce 0f       	add	r28, r30
    1754:	d1 1d       	adc	r29, r1
    1756:	0f b6       	in	r0, 0x3f	; 63
    1758:	f8 94       	cli
    175a:	de bf       	out	0x3e, r29	; 62
    175c:	0f be       	out	0x3f, r0	; 63
    175e:	cd bf       	out	0x3d, r28	; 61
    1760:	ed 01       	movw	r28, r26
    1762:	08 95       	ret

00001764 <_exit>:
    1764:	f8 94       	cli

00001766 <__stop_program>:
    1766:	ff cf       	rjmp	.-2      	; 0x1766 <__stop_program>
