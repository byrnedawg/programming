Archive member included because of file (symbol)

c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
                              c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o (exit)
c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_copy_data.o)
                              Touch_Screen.o (__do_copy_data)
c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_clear_bss.o)
                              Touch_Screen.o (__do_clear_bss)
c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a(itoa.o)
                              Touch_Screen.o (itoa)
c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a(strrev.o)
                              c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a(itoa.o) (strrev)
c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_udivmodhi4.o)
                              c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a(itoa.o) (__udivmodhi4)

Allocating common symbols
Common symbol       size              file

packet              0x4               Touch_Screen.o
message1            0x1               Touch_Screen.o
p_data              0x1               Touch_Screen.o
whole               0x2               Touch_Screen.o
adc_result          0x2               Touch_Screen.o
i                   0x1               Touch_Screen.o
message2            0x1               Touch_Screen.o
UQFront             0x1               Touch_Screen.o
data                0x1               Touch_Screen.o
UQEnd               0x1               Touch_Screen.o
URBuff              0x40              Touch_Screen.o
count               0x1               Touch_Screen.o
message3            0x1               Touch_Screen.o

Memory Configuration

Name             Origin             Length             Attributes
text             0x00000000         0x00020000         xr
data             0x00800060         0x0000ffa0         rw !x
eeprom           0x00810000         0x00010000         rw !x
fuse             0x00820000         0x00000400         rw !x
lock             0x00830000         0x00000400         rw !x
signature        0x00840000         0x00000400         rw !x
*default*        0x00000000         0xffffffff

Linker script and memory map

LOAD c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
LOAD Touch_Screen.o
LOAD USART.o
LOAD c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a
LOAD c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a
LOAD c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x00000000      0x906
 *(.vectors)
 .vectors       0x00000000       0x54 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
                0x00000000                __vectors
                0x00000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
 *(.progmem*)
                0x00000054                . = ALIGN (0x2)
                0x00000054                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x00000054        0x0 linker stubs
 *(.trampolines*)
                0x00000054                __trampolines_end = .
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x00000054                __ctors_start = .
 *(.ctors)
                0x00000054                __ctors_end = .
                0x00000054                __dtors_start = .
 *(.dtors)
                0x00000054                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x00000054        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
                0x00000054                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x00000054        0xc c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x00000060       0x16 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_copy_data.o)
                0x00000060                __do_copy_data
 .init4         0x00000076       0x10 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_clear_bss.o)
                0x00000076                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x00000086        0x8 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
 *(.init9)
 *(.text)
 .text          0x0000008e        0x4 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
                0x0000008e                __vector_12
                0x0000008e                __bad_interrupt
                0x0000008e                __vector_6
                0x0000008e                __vector_3
                0x0000008e                __vector_17
                0x0000008e                __vector_19
                0x0000008e                __vector_7
                0x0000008e                __vector_5
                0x0000008e                __vector_4
                0x0000008e                __vector_9
                0x0000008e                __vector_2
                0x0000008e                __vector_15
                0x0000008e                __vector_8
                0x0000008e                __vector_14
                0x0000008e                __vector_10
                0x0000008e                __vector_18
                0x0000008e                __vector_20
 .text          0x00000092      0x668 Touch_Screen.o
                0x000000f4                __vector_1
                0x00000402                InitDisplay
                0x00000154                Touch_Calibration
                0x00000278                Choose_Color
                0x00000242                Cursor_Pos
                0x000000a6                InitADC
                0x000000e0                RESET_vect
                0x00000122                Write_Blank
                0x000002b0                Draw_Line_At
                0x00000350                Draw_Solid_Rect
                0x0000042e                __vector_11
                0x00000262                Choose_Font
                0x000000b2                Wait
                0x000000c8                ReadADC
                0x00000394                Set_Touch_Region
                0x000002ea                Continue_Line_To
                0x00000554                main
                0x000003ec                Set_Touch_Mode
                0x00000108                WriteString
                0x0000030c                Draw_Rect_At
                0x00000140                Command_Display
                0x00000092                InitTimer
                0x0000028e                Draw_Pixel_At
                0x0000017e                __vector_16
                0x0000015e                Cursor_Coordinate
 .text          0x000006fa      0x17e USART.o
                0x000006fa                USARTInit
                0x00000718                __vector_13
                0x0000081a                UDataAvailable
                0x000007c0                UReadData
                0x0000085e                UWriteString
                0x00000812                UWriteData
 .text          0x00000878        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
 .text          0x00000878        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_copy_data.o)
 .text          0x00000878        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_clear_bss.o)
 .text          0x00000878        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a(itoa.o)
 .text          0x00000878        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a(strrev.o)
 .text          0x00000878        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_udivmodhi4.o)
                0x00000878                . = ALIGN (0x2)
 *(.text.*)
 .text.libgcc   0x00000878        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
 .text.libgcc   0x00000878        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_copy_data.o)
 .text.libgcc   0x00000878        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_clear_bss.o)
 .text.avr-libc
                0x00000878       0x42 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a(itoa.o)
                0x00000878                itoa
 .text.avr-libc
                0x000008ba       0x20 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a(strrev.o)
                0x000008ba                strrev
 .text.libgcc   0x000008da       0x28 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_udivmodhi4.o)
                0x000008da                __udivmodhi4
                0x00000902                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x00000902        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
                0x00000902                exit
                0x00000902                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x00000902        0x4 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
 *(.fini0)
                0x00000906                _etext = .

.data           0x00800060       0x76 load address 0x00000906
                0x00800060                PROVIDE (__data_start, .)
 *(.data)
 .data          0x00800060        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
 .data          0x00800060       0x75 Touch_Screen.o
                0x0080008f                Value
                0x008000ce                Empty
                0x00800096                Packet
                0x008000bc                Screen_Touched
                0x0080006a                Status
                0x00800060                Wulf
                0x008000a0                Button_Down
                0x008000d0                EL
                0x008000d4                color
                0x008000af                Button_Up
 .data          0x008000d5        0x0 USART.o
 .data          0x008000d5        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
 .data          0x008000d5        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_copy_data.o)
 .data          0x008000d5        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_clear_bss.o)
 .data          0x008000d5        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a(itoa.o)
 .data          0x008000d5        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a(strrev.o)
 .data          0x008000d5        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_udivmodhi4.o)
 *(.data*)
 *(.rodata)
 *(.rodata*)
 *(.gnu.linkonce.d*)
                0x008000d6                . = ALIGN (0x2)
 *fill*         0x008000d5        0x1 00
                0x008000d6                _edata = .
                0x008000d6                PROVIDE (__data_end, .)

.bss            0x008000d6       0x55
                0x008000d6                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x008000d6        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
 .bss           0x008000d6        0x4 Touch_Screen.o
                0x008000d9                draw_y
                0x008000d6                temp
                0x008000d8                draw_x
 .bss           0x008000da        0x0 USART.o
 .bss           0x008000da        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
 .bss           0x008000da        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_copy_data.o)
 .bss           0x008000da        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_clear_bss.o)
 .bss           0x008000da        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a(itoa.o)
 .bss           0x008000da        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a(strrev.o)
 .bss           0x008000da        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_udivmodhi4.o)
 *(.bss*)
 *(COMMON)
 COMMON         0x008000da       0x51 Touch_Screen.o
                0x008000da                packet
                0x008000de                message1
                0x008000df                p_data
                0x008000e0                whole
                0x008000e2                adc_result
                0x008000e4                i
                0x008000e5                message2
                0x008000e6                UQFront
                0x008000e7                data
                0x008000e8                UQEnd
                0x008000e9                URBuff
                0x00800129                count
                0x0080012a                message3
                0x0080012b                PROVIDE (__bss_end, .)
                0x00000906                __data_load_start = LOADADDR (.data)
                0x0000097c                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x0080012b        0x0
                0x0080012b                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x0080012b                PROVIDE (__noinit_end, .)
                0x0080012b                _end = .
                0x0080012b                PROVIDE (__heap_start, .)

.eeprom         0x00810000        0x0
 *(.eeprom*)
                0x00810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.stab
 *(.stab)

.stabstr
 *(.stabstr)

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment
 *(.comment)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges  0x00000000       0x40
 *(.debug_aranges)
 .debug_aranges
                0x00000000       0x20 Touch_Screen.o
 .debug_aranges
                0x00000020       0x20 USART.o

.debug_pubnames
                0x00000000      0x363
 *(.debug_pubnames)
 .debug_pubnames
                0x00000000      0x2d1 Touch_Screen.o
 .debug_pubnames
                0x000002d1       0x92 USART.o

.debug_info     0x00000000      0x9f1
 *(.debug_info)
 .debug_info    0x00000000      0x7f4 Touch_Screen.o
 .debug_info    0x000007f4      0x1fd USART.o
 *(.gnu.linkonce.wi.*)

.debug_abbrev   0x00000000      0x314
 *(.debug_abbrev)
 .debug_abbrev  0x00000000      0x1d2 Touch_Screen.o
 .debug_abbrev  0x000001d2      0x142 USART.o

.debug_line     0x00000000      0x9b6
 *(.debug_line)
 .debug_line    0x00000000      0x7a8 Touch_Screen.o
 .debug_line    0x000007a8      0x20e USART.o

.debug_frame    0x00000000      0x210
 *(.debug_frame)
 .debug_frame   0x00000000      0x1a0 Touch_Screen.o
 .debug_frame   0x000001a0       0x70 USART.o

.debug_str      0x00000000      0x35d
 *(.debug_str)
 .debug_str     0x00000000      0x2ff Touch_Screen.o
                                0x356 (size before relaxing)
 .debug_str     0x000002ff       0x5e USART.o
                                0x164 (size before relaxing)

.debug_loc      0x00000000      0x4c6
 *(.debug_loc)
 .debug_loc     0x00000000      0x455 Touch_Screen.o
 .debug_loc     0x00000455       0x71 USART.o

.debug_macinfo
 *(.debug_macinfo)
OUTPUT(Touch_Screen.elf elf32-avr)
LOAD linker stubs
