
RSAV_RX.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         000000a2  00800100  00003e2c  00003ec0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00003e2c  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          000002cf  008001a2  008001a2  00003f62  2**0
                  ALLOC
  3 .debug_aranges 00000378  00000000  00000000  00003f62  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_pubnames 00000ff5  00000000  00000000  000042da  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   0000c8f3  00000000  00000000  000052cf  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00002b24  00000000  00000000  00011bc2  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   0000417d  00000000  00000000  000146e6  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000a20  00000000  00000000  00018864  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00001d19  00000000  00000000  00019284  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00005aba  00000000  00000000  0001af9d  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000250  00000000  00000000  00020a57  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 30 01 	jmp	0x260	; 0x260 <__ctors_end>
       4:	0c 94 58 01 	jmp	0x2b0	; 0x2b0 <__bad_interrupt>
       8:	0c 94 58 01 	jmp	0x2b0	; 0x2b0 <__bad_interrupt>
       c:	0c 94 58 01 	jmp	0x2b0	; 0x2b0 <__bad_interrupt>
      10:	0c 94 58 01 	jmp	0x2b0	; 0x2b0 <__bad_interrupt>
      14:	0c 94 58 01 	jmp	0x2b0	; 0x2b0 <__bad_interrupt>
      18:	0c 94 58 01 	jmp	0x2b0	; 0x2b0 <__bad_interrupt>
      1c:	0c 94 48 1d 	jmp	0x3a90	; 0x3a90 <__vector_7>
      20:	0c 94 22 1d 	jmp	0x3a44	; 0x3a44 <__vector_8>
      24:	0c 94 06 1e 	jmp	0x3c0c	; 0x3c0c <__vector_9>
      28:	0c 94 78 1e 	jmp	0x3cf0	; 0x3cf0 <__vector_10>
      2c:	0c 94 94 1d 	jmp	0x3b28	; 0x3b28 <__vector_11>
      30:	0c 94 6e 1d 	jmp	0x3adc	; 0x3adc <__vector_12>
      34:	0c 94 2c 1e 	jmp	0x3c58	; 0x3c58 <__vector_13>
      38:	0c 94 e0 1d 	jmp	0x3bc0	; 0x3bc0 <__vector_14>
      3c:	0c 94 ba 1d 	jmp	0x3b74	; 0x3b74 <__vector_15>
      40:	0c 94 52 1e 	jmp	0x3ca4	; 0x3ca4 <__vector_16>
      44:	0c 94 58 01 	jmp	0x2b0	; 0x2b0 <__bad_interrupt>
      48:	0c 94 cb 1c 	jmp	0x3996	; 0x3996 <__vector_18>
      4c:	0c 94 58 01 	jmp	0x2b0	; 0x2b0 <__bad_interrupt>
      50:	0c 94 f6 1c 	jmp	0x39ec	; 0x39ec <__vector_20>
      54:	0c 94 24 18 	jmp	0x3048	; 0x3048 <__vector_21>
      58:	0c 94 58 01 	jmp	0x2b0	; 0x2b0 <__bad_interrupt>
      5c:	0c 94 58 01 	jmp	0x2b0	; 0x2b0 <__bad_interrupt>
      60:	0c 94 58 01 	jmp	0x2b0	; 0x2b0 <__bad_interrupt>
      64:	0c 94 58 01 	jmp	0x2b0	; 0x2b0 <__bad_interrupt>

00000068 <AVcc_MV>:
      68:	88 13                                               ..

0000006a <_PORTB>:
      6a:	25 00 24 00 23 00                                   %.$.#.

00000070 <_B0>:
      70:	6a 00 01                                            j..

00000073 <_B1>:
      73:	6a 00 02                                            j..

00000076 <_B2>:
      76:	6a 00 04                                            j..

00000079 <_B3>:
      79:	6a 00 08                                            j..

0000007c <_B4>:
      7c:	6a 00 10                                            j..

0000007f <_B5>:
      7f:	6a 00 20                                            j. 

00000082 <_B6>:
      82:	6a 00 40                                            j.@

00000085 <_B7>:
      85:	6a 00 80                                            j..

00000088 <_PORTC>:
      88:	28 00 27 00 26 00                                   (.'.&.

0000008e <_C0>:
      8e:	88 00 01                                            ...

00000091 <_C1>:
      91:	88 00 02                                            ...

00000094 <_C2>:
      94:	88 00 04                                            ...

00000097 <_C3>:
      97:	88 00 08                                            ...

0000009a <_C4>:
      9a:	88 00 10                                            ...

0000009d <_C5>:
      9d:	88 00 20                                            .. 

000000a0 <_C6>:
      a0:	88 00 40                                            ..@

000000a3 <_PORTD>:
      a3:	2b 00 2a 00 29 00                                   +.*.).

000000a9 <_D0>:
      a9:	a3 00 01                                            ...

000000ac <_D1>:
      ac:	a3 00 02                                            ...

000000af <_D2>:
      af:	a3 00 04                                            ...

000000b2 <_D3>:
      b2:	a3 00 08                                            ...

000000b5 <_D4>:
      b5:	a3 00 10                                            ...

000000b8 <_D5>:
      b8:	a3 00 20                                            .. 

000000bb <_D6>:
      bb:	a3 00 40                                            ..@

000000be <_D7>:
      be:	a3 00 80                                            ...

000000c1 <__timer0Compare>:
      c1:	b5 01 00 6e 00 02 47 00 35 00 02 44 00 06 bb 00     ...n..G.5..D....
      d1:	b9 01 00 6e 00 04 48 00 35 00 04 44 00 04 b8 00     ...n..H.5..D....

000000e1 <__timer1Compare>:
      e1:	c8 01 01 6f 00 02 88 00 36 00 02 80 00 06 73 00     ...o....6.....s.
      f1:	cc 01 01 6f 00 04 8a 00 36 00 04 80 00 04 76 00     ...o....6.....v.

00000101 <__timer2Compare>:
     101:	db 01 02 70 00 02 b3 00 37 00 02 b0 00 06 79 00     ...p....7.....y.
     111:	df 01 02 70 00 04 b4 00 37 00 04 b0 00 04 b2 00     ...p....7.......

00000121 <pgm_Timers>:
     121:	aa 01 46 00 45 00 07 00 02 33 88 44 00 01 44 00     ..F.E....3.D..D.
     131:	02 45 00 08 00 00 01 c1 00 6e 00 01 35 00 01 00     .E.......n..5...
     141:	00 00 00 01 00 00 01 00 00 01 00 00 df 01 bd 01     ................
     151:	84 00 81 00 07 ff 02 ff df 80 00 01 80 00 02 81     ................
     161:	00 08 81 00 10 e1 00 6f 00 01 36 00 01 86 00 6f     .......o..6....o
     171:	00 20 36 00 20 81 00 40 70 00 df 01 d0 01 b2 00     . 6. ..@p.......
     181:	b1 00 07 00 02 33 88 b0 00 01 b0 00 02 b1 00 08     .....3..........
     191:	00 00 01 01 01 70 00 01 37 00 01 00 00 00 00 01     .....p..7.......
     1a1:	00 00 01 00 00 01 00 00 ed 01                       ..........

000001ab <PCINT_PINS>:
     1ab:	70 00 73 00 76 00 79 00 7c 00 7f 00 82 00 85 00     p.s.v.y.|.......
     1bb:	8e 00 91 00 94 00 97 00 9a 00 9d 00 a0 00 00 00     ................
     1cb:	a9 00 ac 00 af 00 b2 00 b5 00 b8 00 bb 00 be 00     ................

000001db <onboard_motors>:
     1db:	3a 01 42 01                                         :.B.

000001df <prescaler_a>:
     1df:	06 00 00 00 01 00 08 00 40 00 00 01 00 04           ........@.....

000001ed <prescaler_b>:
     1ed:	08 00 00 00 01 00 08 00 20 00 40 00 80 00 00 01     ........ .@.....
     1fd:	00 04                                               ..

000001ff <c_motors>:
     1ff:	5a 01 ce 01                                         Z...

00000203 <HexChars>:
     203:	30 31 32 33 34 35 36 37 38 39 41 42 43 44 45 46     0123456789ABCDEF
	...

00000214 <c_Servos>:
     214:	18 09 00 00                                         ....

00000218 <__3bit_modes>:
     218:	00 01 ff ff 02 03 ff ff ff ff ff 05 ff ff ff 07     ................

00000228 <__2bit_modes>:
     228:	00 01 ff ff 02 03                                   ......

0000022e <__c.2526>:
     22e:	55 73 65 72 20 45 72 72 6f 72 3a 25 64 0a 00        User Error:%d..

0000023d <__c.2524>:
     23d:	57 65 62 62 6f 74 4c 69 62 20 45 72 72 6f 72 3a     WebbotLib Error:
     24d:	25 64 0a 00                                         %d..

00000251 <c_hw_uart>:
     251:	df 16 95 17 d3 17 6a 17 9c 17 80 17 00              ......j......

0000025e <__ctors_start>:
     25e:	33 18       	sub	r3, r3

00000260 <__ctors_end>:
     260:	11 24       	eor	r1, r1
     262:	1f be       	out	0x3f, r1	; 63
     264:	cf ef       	ldi	r28, 0xFF	; 255
     266:	d4 e0       	ldi	r29, 0x04	; 4
     268:	de bf       	out	0x3e, r29	; 62
     26a:	cd bf       	out	0x3d, r28	; 61

0000026c <__do_copy_data>:
     26c:	11 e0       	ldi	r17, 0x01	; 1
     26e:	a0 e0       	ldi	r26, 0x00	; 0
     270:	b1 e0       	ldi	r27, 0x01	; 1
     272:	ec e2       	ldi	r30, 0x2C	; 44
     274:	fe e3       	ldi	r31, 0x3E	; 62
     276:	02 c0       	rjmp	.+4      	; 0x27c <.do_copy_data_start>

00000278 <.do_copy_data_loop>:
     278:	05 90       	lpm	r0, Z+
     27a:	0d 92       	st	X+, r0

0000027c <.do_copy_data_start>:
     27c:	a2 3a       	cpi	r26, 0xA2	; 162
     27e:	b1 07       	cpc	r27, r17
     280:	d9 f7       	brne	.-10     	; 0x278 <.do_copy_data_loop>

00000282 <__do_clear_bss>:
     282:	14 e0       	ldi	r17, 0x04	; 4
     284:	a2 ea       	ldi	r26, 0xA2	; 162
     286:	b1 e0       	ldi	r27, 0x01	; 1
     288:	01 c0       	rjmp	.+2      	; 0x28c <.do_clear_bss_start>

0000028a <.do_clear_bss_loop>:
     28a:	1d 92       	st	X+, r1

0000028c <.do_clear_bss_start>:
     28c:	a1 37       	cpi	r26, 0x71	; 113
     28e:	b1 07       	cpc	r27, r17
     290:	e1 f7       	brne	.-8      	; 0x28a <.do_clear_bss_loop>

00000292 <__do_global_ctors>:
     292:	12 e0       	ldi	r17, 0x02	; 2
     294:	c0 e6       	ldi	r28, 0x60	; 96
     296:	d2 e0       	ldi	r29, 0x02	; 2
     298:	04 c0       	rjmp	.+8      	; 0x2a2 <.do_global_ctors_start>

0000029a <.do_global_ctors_loop>:
     29a:	22 97       	sbiw	r28, 0x02	; 2
     29c:	fe 01       	movw	r30, r28
     29e:	0e 94 10 1f 	call	0x3e20	; 0x3e20 <__tablejump__>

000002a2 <.do_global_ctors_start>:
     2a2:	ce 35       	cpi	r28, 0x5E	; 94
     2a4:	d1 07       	cpc	r29, r17
     2a6:	c9 f7       	brne	.-14     	; 0x29a <.do_global_ctors_loop>
     2a8:	0e 94 e5 05 	call	0xbca	; 0xbca <main>
     2ac:	0c 94 14 1f 	jmp	0x3e28	; 0x3e28 <_exit>

000002b0 <__bad_interrupt>:
     2b0:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000002b4 <setSpeed>:
     2b4:	df 92       	push	r13
     2b6:	ef 92       	push	r14
     2b8:	ff 92       	push	r15
     2ba:	0f 93       	push	r16
     2bc:	1f 93       	push	r17
     2be:	cf 93       	push	r28
     2c0:	df 93       	push	r29
     2c2:	d6 2e       	mov	r13, r22
     2c4:	8c 01       	movw	r16, r24
     2c6:	fc 01       	movw	r30, r24
     2c8:	84 81       	ldd	r24, Z+4	; 0x04
     2ca:	95 81       	ldd	r25, Z+5	; 0x05
     2cc:	0e 94 87 13 	call	0x270e	; 0x270e <compareFromIOPin>
     2d0:	7c 01       	movw	r14, r24
     2d2:	f8 01       	movw	r30, r16
     2d4:	86 81       	ldd	r24, Z+6	; 0x06
     2d6:	97 81       	ldd	r25, Z+7	; 0x07
     2d8:	0e 94 87 13 	call	0x270e	; 0x270e <compareFromIOPin>
     2dc:	ec 01       	movw	r28, r24
     2de:	1d 14       	cp	r1, r13
     2e0:	0c f5       	brge	.+66     	; 0x324 <setSpeed+0x70>
     2e2:	22 96       	adiw	r28, 0x02	; 2
     2e4:	fe 01       	movw	r30, r28
     2e6:	84 91       	lpm	r24, Z+
     2e8:	22 97       	sbiw	r28, 0x02	; 2
     2ea:	2e e2       	ldi	r18, 0x2E	; 46
     2ec:	82 9f       	mul	r24, r18
     2ee:	c0 01       	movw	r24, r0
     2f0:	11 24       	eor	r1, r1
     2f2:	8f 5d       	subi	r24, 0xDF	; 223
     2f4:	9e 4f       	sbci	r25, 0xFE	; 254
     2f6:	0e 94 19 0e 	call	0x1c32	; 0x1c32 <timerGetTOP>
     2fa:	8c 01       	movw	r16, r24
     2fc:	8d 2d       	mov	r24, r13
     2fe:	99 27       	eor	r25, r25
     300:	87 fd       	sbrc	r24, 7
     302:	90 95       	com	r25
     304:	60 e0       	ldi	r22, 0x00	; 0
     306:	70 e0       	ldi	r23, 0x00	; 0
     308:	4f e7       	ldi	r20, 0x7F	; 127
     30a:	50 e0       	ldi	r21, 0x00	; 0
     30c:	20 e0       	ldi	r18, 0x00	; 0
     30e:	30 e0       	ldi	r19, 0x00	; 0
     310:	0e 94 73 06 	call	0xce6	; 0xce6 <interpolateU>
     314:	8c 01       	movw	r16, r24
     316:	c7 01       	movw	r24, r14
     318:	60 e0       	ldi	r22, 0x00	; 0
     31a:	70 e0       	ldi	r23, 0x00	; 0
     31c:	0e 94 b7 0d 	call	0x1b6e	; 0x1b6e <compareSetThreshold>
     320:	ce 01       	movw	r24, r28
     322:	28 c0       	rjmp	.+80     	; 0x374 <setSpeed+0xc0>
     324:	dd 20       	and	r13, r13
     326:	41 f1       	breq	.+80     	; 0x378 <setSpeed+0xc4>
     328:	22 e0       	ldi	r18, 0x02	; 2
     32a:	30 e0       	ldi	r19, 0x00	; 0
     32c:	e2 0e       	add	r14, r18
     32e:	f3 1e       	adc	r15, r19
     330:	f7 01       	movw	r30, r14
     332:	84 91       	lpm	r24, Z+
     334:	2e ef       	ldi	r18, 0xFE	; 254
     336:	3f ef       	ldi	r19, 0xFF	; 255
     338:	e2 0e       	add	r14, r18
     33a:	f3 1e       	adc	r15, r19
     33c:	2e e2       	ldi	r18, 0x2E	; 46
     33e:	82 9f       	mul	r24, r18
     340:	c0 01       	movw	r24, r0
     342:	11 24       	eor	r1, r1
     344:	8f 5d       	subi	r24, 0xDF	; 223
     346:	9e 4f       	sbci	r25, 0xFE	; 254
     348:	0e 94 19 0e 	call	0x1c32	; 0x1c32 <timerGetTOP>
     34c:	8c 01       	movw	r16, r24
     34e:	8d 2d       	mov	r24, r13
     350:	99 27       	eor	r25, r25
     352:	87 fd       	sbrc	r24, 7
     354:	90 95       	com	r25
     356:	60 e0       	ldi	r22, 0x00	; 0
     358:	70 e0       	ldi	r23, 0x00	; 0
     35a:	41 e8       	ldi	r20, 0x81	; 129
     35c:	5f ef       	ldi	r21, 0xFF	; 255
     35e:	20 e0       	ldi	r18, 0x00	; 0
     360:	30 e0       	ldi	r19, 0x00	; 0
     362:	0e 94 73 06 	call	0xce6	; 0xce6 <interpolateU>
     366:	8c 01       	movw	r16, r24
     368:	ce 01       	movw	r24, r28
     36a:	60 e0       	ldi	r22, 0x00	; 0
     36c:	70 e0       	ldi	r23, 0x00	; 0
     36e:	0e 94 b7 0d 	call	0x1b6e	; 0x1b6e <compareSetThreshold>
     372:	c7 01       	movw	r24, r14
     374:	b8 01       	movw	r22, r16
     376:	08 c0       	rjmp	.+16     	; 0x388 <setSpeed+0xd4>
     378:	c7 01       	movw	r24, r14
     37a:	60 e0       	ldi	r22, 0x00	; 0
     37c:	70 e0       	ldi	r23, 0x00	; 0
     37e:	0e 94 b7 0d 	call	0x1b6e	; 0x1b6e <compareSetThreshold>
     382:	ce 01       	movw	r24, r28
     384:	60 e0       	ldi	r22, 0x00	; 0
     386:	70 e0       	ldi	r23, 0x00	; 0
     388:	0e 94 b7 0d 	call	0x1b6e	; 0x1b6e <compareSetThreshold>
     38c:	df 91       	pop	r29
     38e:	cf 91       	pop	r28
     390:	1f 91       	pop	r17
     392:	0f 91       	pop	r16
     394:	ff 90       	pop	r15
     396:	ef 90       	pop	r14
     398:	df 90       	pop	r13
     39a:	08 95       	ret

0000039c <setConnected>:
     39c:	bf 92       	push	r11
     39e:	cf 92       	push	r12
     3a0:	df 92       	push	r13
     3a2:	ef 92       	push	r14
     3a4:	ff 92       	push	r15
     3a6:	0f 93       	push	r16
     3a8:	1f 93       	push	r17
     3aa:	cf 93       	push	r28
     3ac:	df 93       	push	r29
     3ae:	08 2f       	mov	r16, r24
     3b0:	b9 2e       	mov	r11, r25
     3b2:	16 2f       	mov	r17, r22
     3b4:	c8 2f       	mov	r28, r24
     3b6:	d9 2f       	mov	r29, r25
     3b8:	8c 81       	ldd	r24, Y+4	; 0x04
     3ba:	9d 81       	ldd	r25, Y+5	; 0x05
     3bc:	0e 94 87 13 	call	0x270e	; 0x270e <compareFromIOPin>
     3c0:	7c 01       	movw	r14, r24
     3c2:	8e 81       	ldd	r24, Y+6	; 0x06
     3c4:	9f 81       	ldd	r25, Y+7	; 0x07
     3c6:	0e 94 87 13 	call	0x270e	; 0x270e <compareFromIOPin>
     3ca:	6c 01       	movw	r12, r24
     3cc:	11 23       	and	r17, r17
     3ce:	31 f0       	breq	.+12     	; 0x3dc <setConnected+0x40>
     3d0:	80 2f       	mov	r24, r16
     3d2:	9b 2d       	mov	r25, r11
     3d4:	6a 81       	ldd	r22, Y+2	; 0x02
     3d6:	0e 94 5a 01 	call	0x2b4	; 0x2b4 <setSpeed>
     3da:	2b c0       	rjmp	.+86     	; 0x432 <setConnected+0x96>
     3dc:	22 e0       	ldi	r18, 0x02	; 2
     3de:	30 e0       	ldi	r19, 0x00	; 0
     3e0:	e2 0e       	add	r14, r18
     3e2:	f3 1e       	adc	r15, r19
     3e4:	f7 01       	movw	r30, r14
     3e6:	84 91       	lpm	r24, Z+
     3e8:	2e ef       	ldi	r18, 0xFE	; 254
     3ea:	3f ef       	ldi	r19, 0xFF	; 255
     3ec:	e2 0e       	add	r14, r18
     3ee:	f3 1e       	adc	r15, r19
     3f0:	1e e2       	ldi	r17, 0x2E	; 46
     3f2:	81 9f       	mul	r24, r17
     3f4:	c0 01       	movw	r24, r0
     3f6:	11 24       	eor	r1, r1
     3f8:	8f 5d       	subi	r24, 0xDF	; 223
     3fa:	9e 4f       	sbci	r25, 0xFE	; 254
     3fc:	0e 94 19 0e 	call	0x1c32	; 0x1c32 <timerGetTOP>
     400:	bc 01       	movw	r22, r24
     402:	c7 01       	movw	r24, r14
     404:	0e 94 b7 0d 	call	0x1b6e	; 0x1b6e <compareSetThreshold>
     408:	82 e0       	ldi	r24, 0x02	; 2
     40a:	90 e0       	ldi	r25, 0x00	; 0
     40c:	c8 0e       	add	r12, r24
     40e:	d9 1e       	adc	r13, r25
     410:	f6 01       	movw	r30, r12
     412:	84 91       	lpm	r24, Z+
     414:	2e ef       	ldi	r18, 0xFE	; 254
     416:	3f ef       	ldi	r19, 0xFF	; 255
     418:	c2 0e       	add	r12, r18
     41a:	d3 1e       	adc	r13, r19
     41c:	81 9f       	mul	r24, r17
     41e:	c0 01       	movw	r24, r0
     420:	11 24       	eor	r1, r1
     422:	8f 5d       	subi	r24, 0xDF	; 223
     424:	9e 4f       	sbci	r25, 0xFE	; 254
     426:	0e 94 19 0e 	call	0x1c32	; 0x1c32 <timerGetTOP>
     42a:	bc 01       	movw	r22, r24
     42c:	c6 01       	movw	r24, r12
     42e:	0e 94 b7 0d 	call	0x1b6e	; 0x1b6e <compareSetThreshold>
     432:	df 91       	pop	r29
     434:	cf 91       	pop	r28
     436:	1f 91       	pop	r17
     438:	0f 91       	pop	r16
     43a:	ff 90       	pop	r15
     43c:	ef 90       	pop	r14
     43e:	df 90       	pop	r13
     440:	cf 90       	pop	r12
     442:	bf 90       	pop	r11
     444:	08 95       	ret

00000446 <initPWM>:
     446:	6f 92       	push	r6
     448:	7f 92       	push	r7
     44a:	8f 92       	push	r8
     44c:	9f 92       	push	r9
     44e:	af 92       	push	r10
     450:	bf 92       	push	r11
     452:	cf 92       	push	r12
     454:	df 92       	push	r13
     456:	ef 92       	push	r14
     458:	ff 92       	push	r15
     45a:	0f 93       	push	r16
     45c:	1f 93       	push	r17
     45e:	df 93       	push	r29
     460:	cf 93       	push	r28
     462:	00 d0       	rcall	.+0      	; 0x464 <initPWM+0x1e>
     464:	00 d0       	rcall	.+0      	; 0x466 <initPWM+0x20>
     466:	0f 92       	push	r0
     468:	cd b7       	in	r28, 0x3d	; 61
     46a:	de b7       	in	r29, 0x3e	; 62
     46c:	3c 01       	movw	r6, r24
     46e:	7a 01       	movw	r14, r20
     470:	8b 01       	movw	r16, r22
     472:	0e 94 87 13 	call	0x270e	; 0x270e <compareFromIOPin>
     476:	4c 01       	movw	r8, r24
     478:	00 97       	sbiw	r24, 0x00	; 0
     47a:	11 f4       	brne	.+4      	; 0x480 <initPWM+0x3a>
     47c:	84 ef       	ldi	r24, 0xF4	; 244
     47e:	05 c0       	rjmp	.+10     	; 0x48a <initPWM+0x44>
     480:	0e 94 59 13 	call	0x26b2	; 0x26b2 <compareIsInUse>
     484:	88 23       	and	r24, r24
     486:	29 f0       	breq	.+10     	; 0x492 <initPWM+0x4c>
     488:	83 ef       	ldi	r24, 0xF3	; 243
     48a:	0e 94 27 0d 	call	0x1a4e	; 0x1a4e <setError>
     48e:	10 e0       	ldi	r17, 0x00	; 0
     490:	63 c0       	rjmp	.+198    	; 0x558 <__stack+0x59>
     492:	22 e0       	ldi	r18, 0x02	; 2
     494:	30 e0       	ldi	r19, 0x00	; 0
     496:	82 0e       	add	r8, r18
     498:	93 1e       	adc	r9, r19
     49a:	f4 01       	movw	r30, r8
     49c:	94 91       	lpm	r25, Z+
     49e:	2e ef       	ldi	r18, 0xFE	; 254
     4a0:	3f ef       	ldi	r19, 0xFF	; 255
     4a2:	82 0e       	add	r8, r18
     4a4:	93 1e       	adc	r9, r19
     4a6:	8e e2       	ldi	r24, 0x2E	; 46
     4a8:	98 9f       	mul	r25, r24
     4aa:	50 01       	movw	r10, r0
     4ac:	11 24       	eor	r1, r1
     4ae:	81 e2       	ldi	r24, 0x21	; 33
     4b0:	91 e0       	ldi	r25, 0x01	; 1
     4b2:	a8 0e       	add	r10, r24
     4b4:	b9 1e       	adc	r11, r25
     4b6:	c5 01       	movw	r24, r10
     4b8:	b8 01       	movw	r22, r16
     4ba:	a7 01       	movw	r20, r14
     4bc:	20 e8       	ldi	r18, 0x80	; 128
     4be:	30 e0       	ldi	r19, 0x00	; 0
     4c0:	8e 01       	movw	r16, r28
     4c2:	0f 5f       	subi	r16, 0xFF	; 255
     4c4:	1f 4f       	sbci	r17, 0xFF	; 255
     4c6:	f2 e0       	ldi	r31, 0x02	; 2
     4c8:	ef 2e       	mov	r14, r31
     4ca:	f1 2c       	mov	r15, r1
     4cc:	ec 0e       	add	r14, r28
     4ce:	fd 1e       	adc	r15, r29
     4d0:	e4 e0       	ldi	r30, 0x04	; 4
     4d2:	ce 2e       	mov	r12, r30
     4d4:	d1 2c       	mov	r13, r1
     4d6:	cc 0e       	add	r12, r28
     4d8:	dd 1e       	adc	r13, r29
     4da:	0e 94 cc 14 	call	0x2998	; 0x2998 <timerCalcPwm>
     4de:	18 2f       	mov	r17, r24
     4e0:	f5 01       	movw	r30, r10
     4e2:	34 96       	adiw	r30, 0x04	; 4
     4e4:	95 01       	movw	r18, r10
     4e6:	2a 5f       	subi	r18, 0xFA	; 250
     4e8:	3f 4f       	sbci	r19, 0xFF	; 255
     4ea:	88 23       	and	r24, r24
     4ec:	69 f4       	brne	.+26     	; 0x508 <__stack+0x9>
     4ee:	a5 91       	lpm	r26, Z+
     4f0:	b4 91       	lpm	r27, Z+
     4f2:	8c 91       	ld	r24, X
     4f4:	f9 01       	movw	r30, r18
     4f6:	94 91       	lpm	r25, Z+
     4f8:	89 23       	and	r24, r25
     4fa:	11 f4       	brne	.+4      	; 0x500 <__stack+0x1>
     4fc:	83 ee       	ldi	r24, 0xE3	; 227
     4fe:	01 c0       	rjmp	.+2      	; 0x502 <__stack+0x3>
     500:	82 ef       	ldi	r24, 0xF2	; 242
     502:	0e 94 27 0d 	call	0x1a4e	; 0x1a4e <setError>
     506:	28 c0       	rjmp	.+80     	; 0x558 <__stack+0x59>
     508:	a5 91       	lpm	r26, Z+
     50a:	b4 91       	lpm	r27, Z+
     50c:	8c 91       	ld	r24, X
     50e:	f9 01       	movw	r30, r18
     510:	94 91       	lpm	r25, Z+
     512:	89 23       	and	r24, r25
     514:	59 f4       	brne	.+22     	; 0x52c <__stack+0x2d>
     516:	35 c0       	rjmp	.+106    	; 0x582 <__stack+0x83>
     518:	c5 01       	movw	r24, r10
     51a:	4f 96       	adiw	r24, 0x1f	; 31
     51c:	fc 01       	movw	r30, r24
     51e:	a5 91       	lpm	r26, Z+
     520:	b4 91       	lpm	r27, Z+
     522:	8a 81       	ldd	r24, Y+2	; 0x02
     524:	9b 81       	ldd	r25, Y+3	; 0x03
     526:	11 96       	adiw	r26, 0x01	; 1
     528:	9c 93       	st	X, r25
     52a:	8e 93       	st	-X, r24
     52c:	c3 01       	movw	r24, r6
     52e:	6f ef       	ldi	r22, 0xFF	; 255
     530:	0e 94 f0 06 	call	0xde0	; 0xde0 <pin_make_output>
     534:	c4 01       	movw	r24, r8
     536:	63 e0       	ldi	r22, 0x03	; 3
     538:	0e 94 3e 0b 	call	0x167c	; 0x167c <compareSetOutputMode>
     53c:	c4 01       	movw	r24, r8
     53e:	68 ed       	ldi	r22, 0xD8	; 216
     540:	7a e0       	ldi	r23, 0x0A	; 10
     542:	40 e0       	ldi	r20, 0x00	; 0
     544:	50 e0       	ldi	r21, 0x00	; 0
     546:	20 e0       	ldi	r18, 0x00	; 0
     548:	30 e0       	ldi	r19, 0x00	; 0
     54a:	0e 94 ab 10 	call	0x2156	; 0x2156 <compareAttach>
     54e:	6c 81       	ldd	r22, Y+4	; 0x04
     550:	7d 81       	ldd	r23, Y+5	; 0x05
     552:	c5 01       	movw	r24, r10
     554:	0e 94 41 0f 	call	0x1e82	; 0x1e82 <timerSetPrescaler>
     558:	81 2f       	mov	r24, r17
     55a:	0f 90       	pop	r0
     55c:	0f 90       	pop	r0
     55e:	0f 90       	pop	r0
     560:	0f 90       	pop	r0
     562:	0f 90       	pop	r0
     564:	cf 91       	pop	r28
     566:	df 91       	pop	r29
     568:	1f 91       	pop	r17
     56a:	0f 91       	pop	r16
     56c:	ff 90       	pop	r15
     56e:	ef 90       	pop	r14
     570:	df 90       	pop	r13
     572:	cf 90       	pop	r12
     574:	bf 90       	pop	r11
     576:	af 90       	pop	r10
     578:	9f 90       	pop	r9
     57a:	8f 90       	pop	r8
     57c:	7f 90       	pop	r7
     57e:	6f 90       	pop	r6
     580:	08 95       	ret
     582:	c5 01       	movw	r24, r10
     584:	69 81       	ldd	r22, Y+1	; 0x01
     586:	0e 94 dd 0f 	call	0x1fba	; 0x1fba <timerSetMode>
     58a:	81 e0       	ldi	r24, 0x01	; 1
     58c:	90 e0       	ldi	r25, 0x00	; 0
     58e:	09 80       	ldd	r0, Y+1	; 0x01
     590:	02 c0       	rjmp	.+4      	; 0x596 <__stack+0x97>
     592:	88 0f       	add	r24, r24
     594:	99 1f       	adc	r25, r25
     596:	0a 94       	dec	r0
     598:	e2 f7       	brpl	.-8      	; 0x592 <__stack+0x93>
     59a:	80 70       	andi	r24, 0x00	; 0
     59c:	95 75       	andi	r25, 0x55	; 85
     59e:	89 2b       	or	r24, r25
     5a0:	09 f0       	breq	.+2      	; 0x5a4 <__stack+0xa5>
     5a2:	ba cf       	rjmp	.-140    	; 0x518 <__stack+0x19>
     5a4:	c3 cf       	rjmp	.-122    	; 0x52c <__stack+0x2d>

000005a6 <sanyoLB1836M_Init>:
     5a6:	6f 92       	push	r6
     5a8:	7f 92       	push	r7
     5aa:	8f 92       	push	r8
     5ac:	9f 92       	push	r9
     5ae:	af 92       	push	r10
     5b0:	bf 92       	push	r11
     5b2:	cf 92       	push	r12
     5b4:	df 92       	push	r13
     5b6:	ef 92       	push	r14
     5b8:	ff 92       	push	r15
     5ba:	0f 93       	push	r16
     5bc:	1f 93       	push	r17
     5be:	cf 93       	push	r28
     5c0:	df 93       	push	r29
     5c2:	4c 01       	movw	r8, r24
     5c4:	cb 01       	movw	r24, r22
     5c6:	ba 01       	movw	r22, r20
     5c8:	2a e0       	ldi	r18, 0x0A	; 10
     5ca:	30 e0       	ldi	r19, 0x00	; 0
     5cc:	40 e0       	ldi	r20, 0x00	; 0
     5ce:	50 e0       	ldi	r21, 0x00	; 0
     5d0:	0e 94 9e 1e 	call	0x3d3c	; 0x3d3c <__mulsi3>
     5d4:	5b 01       	movw	r10, r22
     5d6:	6c 01       	movw	r12, r24
     5d8:	d4 01       	movw	r26, r8
     5da:	12 96       	adiw	r26, 0x02	; 2
     5dc:	8c 91       	ld	r24, X
     5de:	08 2f       	mov	r16, r24
     5e0:	10 e0       	ldi	r17, 0x00	; 0
     5e2:	01 50       	subi	r16, 0x01	; 1
     5e4:	10 40       	sbci	r17, 0x00	; 0
     5e6:	78 01       	movw	r14, r16
     5e8:	ee 0c       	add	r14, r14
     5ea:	ff 1c       	adc	r15, r15
     5ec:	af ef       	ldi	r26, 0xFF	; 255
     5ee:	6a 2e       	mov	r6, r26
     5f0:	a1 e0       	ldi	r26, 0x01	; 1
     5f2:	7a 2e       	mov	r7, r26
     5f4:	27 c0       	rjmp	.+78     	; 0x644 <sanyoLB1836M_Init+0x9e>
     5f6:	d4 01       	movw	r26, r8
     5f8:	ed 91       	ld	r30, X+
     5fa:	fc 91       	ld	r31, X
     5fc:	ee 0d       	add	r30, r14
     5fe:	ff 1d       	adc	r31, r15
     600:	c5 91       	lpm	r28, Z+
     602:	d4 91       	lpm	r29, Z+
     604:	8c 81       	ldd	r24, Y+4	; 0x04
     606:	9d 81       	ldd	r25, Y+5	; 0x05
     608:	b6 01       	movw	r22, r12
     60a:	a5 01       	movw	r20, r10
     60c:	0e 94 23 02 	call	0x446	; 0x446 <initPWM>
     610:	88 23       	and	r24, r24
     612:	51 f0       	breq	.+20     	; 0x628 <sanyoLB1836M_Init+0x82>
     614:	8e 81       	ldd	r24, Y+6	; 0x06
     616:	9f 81       	ldd	r25, Y+7	; 0x07
     618:	b6 01       	movw	r22, r12
     61a:	a5 01       	movw	r20, r10
     61c:	0e 94 23 02 	call	0x446	; 0x446 <initPWM>
     620:	88 23       	and	r24, r24
     622:	11 f0       	breq	.+4      	; 0x628 <sanyoLB1836M_Init+0x82>
     624:	79 82       	std	Y+1, r7	; 0x01
     626:	68 82       	st	Y, r6
     628:	ce 01       	movw	r24, r28
     62a:	60 e0       	ldi	r22, 0x00	; 0
     62c:	0e 94 ea 04 	call	0x9d4	; 0x9d4 <__act_setSpeed>
     630:	ce 01       	movw	r24, r28
     632:	6f ef       	ldi	r22, 0xFF	; 255
     634:	0e 94 0a 05 	call	0xa14	; 0xa14 <__act_setConnected>
     638:	01 50       	subi	r16, 0x01	; 1
     63a:	10 40       	sbci	r17, 0x00	; 0
     63c:	ee ef       	ldi	r30, 0xFE	; 254
     63e:	ff ef       	ldi	r31, 0xFF	; 255
     640:	ee 0e       	add	r14, r30
     642:	ff 1e       	adc	r15, r31
     644:	ff ef       	ldi	r31, 0xFF	; 255
     646:	0f 3f       	cpi	r16, 0xFF	; 255
     648:	1f 07       	cpc	r17, r31
     64a:	a9 f6       	brne	.-86     	; 0x5f6 <sanyoLB1836M_Init+0x50>
     64c:	df 91       	pop	r29
     64e:	cf 91       	pop	r28
     650:	1f 91       	pop	r17
     652:	0f 91       	pop	r16
     654:	ff 90       	pop	r15
     656:	ef 90       	pop	r14
     658:	df 90       	pop	r13
     65a:	cf 90       	pop	r12
     65c:	bf 90       	pop	r11
     65e:	af 90       	pop	r10
     660:	9f 90       	pop	r9
     662:	8f 90       	pop	r8
     664:	7f 90       	pop	r7
     666:	6f 90       	pop	r6
     668:	08 95       	ret

0000066a <_uartStartXmit>:
     66a:	dc 01       	movw	r26, r24
     66c:	19 96       	adiw	r26, 0x09	; 9
     66e:	8d 91       	ld	r24, X+
     670:	9c 91       	ld	r25, X
     672:	1a 97       	sbiw	r26, 0x0a	; 10
     674:	02 96       	adiw	r24, 0x02	; 2
     676:	fc 01       	movw	r30, r24
     678:	25 91       	lpm	r18, Z+
     67a:	34 91       	lpm	r19, Z+
     67c:	cd 01       	movw	r24, r26
     67e:	f9 01       	movw	r30, r18
     680:	09 95       	icall
     682:	08 95       	ret

00000684 <_uartTransmitBlockStart>:
     684:	cf 93       	push	r28
     686:	df 93       	push	r29
     688:	ec 01       	movw	r28, r24
     68a:	88 85       	ldd	r24, Y+8	; 0x08
     68c:	8e 7f       	andi	r24, 0xFE	; 254
     68e:	88 87       	std	Y+8, r24	; 0x08
     690:	ee 89       	ldd	r30, Y+22	; 0x16
     692:	ff 89       	ldd	r31, Y+23	; 0x17
     694:	30 97       	sbiw	r30, 0x00	; 0
     696:	21 f0       	breq	.+8      	; 0x6a0 <_uartTransmitBlockStart+0x1c>
     698:	88 8d       	ldd	r24, Y+24	; 0x18
     69a:	99 8d       	ldd	r25, Y+25	; 0x19
     69c:	6f ef       	ldi	r22, 0xFF	; 255
     69e:	09 95       	icall
     6a0:	e9 85       	ldd	r30, Y+9	; 0x09
     6a2:	fa 85       	ldd	r31, Y+10	; 0x0a
     6a4:	38 96       	adiw	r30, 0x08	; 8
     6a6:	25 91       	lpm	r18, Z+
     6a8:	34 91       	lpm	r19, Z+
     6aa:	21 15       	cp	r18, r1
     6ac:	31 05       	cpc	r19, r1
     6ae:	19 f0       	breq	.+6      	; 0x6b6 <_uartTransmitBlockStart+0x32>
     6b0:	ce 01       	movw	r24, r28
     6b2:	f9 01       	movw	r30, r18
     6b4:	09 95       	icall
     6b6:	df 91       	pop	r29
     6b8:	cf 91       	pop	r28
     6ba:	08 95       	ret

000006bc <_uartTransmitBlockEnd>:
     6bc:	cf 93       	push	r28
     6be:	df 93       	push	r29
     6c0:	ec 01       	movw	r28, r24
     6c2:	88 85       	ldd	r24, Y+8	; 0x08
     6c4:	81 60       	ori	r24, 0x01	; 1
     6c6:	88 87       	std	Y+8, r24	; 0x08
     6c8:	e9 85       	ldd	r30, Y+9	; 0x09
     6ca:	fa 85       	ldd	r31, Y+10	; 0x0a
     6cc:	3a 96       	adiw	r30, 0x0a	; 10
     6ce:	25 91       	lpm	r18, Z+
     6d0:	34 91       	lpm	r19, Z+
     6d2:	21 15       	cp	r18, r1
     6d4:	31 05       	cpc	r19, r1
     6d6:	19 f0       	breq	.+6      	; 0x6de <_uartTransmitBlockEnd+0x22>
     6d8:	ce 01       	movw	r24, r28
     6da:	f9 01       	movw	r30, r18
     6dc:	09 95       	icall
     6de:	ee 89       	ldd	r30, Y+22	; 0x16
     6e0:	ff 89       	ldd	r31, Y+23	; 0x17
     6e2:	30 97       	sbiw	r30, 0x00	; 0
     6e4:	21 f0       	breq	.+8      	; 0x6ee <_uartTransmitBlockEnd+0x32>
     6e6:	88 8d       	ldd	r24, Y+24	; 0x18
     6e8:	99 8d       	ldd	r25, Y+25	; 0x19
     6ea:	60 e0       	ldi	r22, 0x00	; 0
     6ec:	09 95       	icall
     6ee:	df 91       	pop	r29
     6f0:	cf 91       	pop	r28
     6f2:	08 95       	ret

000006f4 <_uartSetBaudRate>:
     6f4:	dc 01       	movw	r26, r24
     6f6:	19 96       	adiw	r26, 0x09	; 9
     6f8:	8d 91       	ld	r24, X+
     6fa:	9c 91       	ld	r25, X
     6fc:	1a 97       	sbiw	r26, 0x0a	; 10
     6fe:	fc 01       	movw	r30, r24
     700:	25 91       	lpm	r18, Z+
     702:	34 91       	lpm	r19, Z+
     704:	cd 01       	movw	r24, r26
     706:	f9 01       	movw	r30, r18
     708:	09 95       	icall
     70a:	08 95       	ret

0000070c <_uartOff>:
     70c:	dc 01       	movw	r26, r24
     70e:	19 96       	adiw	r26, 0x09	; 9
     710:	ed 91       	ld	r30, X+
     712:	fc 91       	ld	r31, X
     714:	1a 97       	sbiw	r26, 0x0a	; 10
     716:	36 96       	adiw	r30, 0x06	; 6
     718:	25 91       	lpm	r18, Z+
     71a:	34 91       	lpm	r19, Z+
     71c:	9f b7       	in	r25, 0x3f	; 63
     71e:	78 94       	sei
     720:	18 96       	adiw	r26, 0x08	; 8
     722:	8c 91       	ld	r24, X
     724:	18 97       	sbiw	r26, 0x08	; 8
     726:	80 ff       	sbrs	r24, 0
     728:	fb cf       	rjmp	.-10     	; 0x720 <_uartOff+0x14>
     72a:	9f bf       	out	0x3f, r25	; 63
     72c:	cd 01       	movw	r24, r26
     72e:	f9 01       	movw	r30, r18
     730:	09 95       	icall
     732:	08 95       	ret

00000734 <__uartReceiveBufferIsEmpty>:
     734:	dc 01       	movw	r26, r24
     736:	ed 91       	ld	r30, X+
     738:	fc 91       	ld	r31, X
     73a:	11 97       	sbiw	r26, 0x01	; 1
     73c:	30 97       	sbiw	r30, 0x00	; 0
     73e:	59 f0       	breq	.+22     	; 0x756 <__uartReceiveBufferIsEmpty+0x22>
     740:	2f b7       	in	r18, 0x3f	; 63
     742:	f8 94       	cli
     744:	84 81       	ldd	r24, Z+4	; 0x04
     746:	95 81       	ldd	r25, Z+5	; 0x05
     748:	89 2b       	or	r24, r25
     74a:	11 f0       	breq	.+4      	; 0x750 <__uartReceiveBufferIsEmpty+0x1c>
     74c:	80 e0       	ldi	r24, 0x00	; 0
     74e:	01 c0       	rjmp	.+2      	; 0x752 <__uartReceiveBufferIsEmpty+0x1e>
     750:	8f ef       	ldi	r24, 0xFF	; 255
     752:	2f bf       	out	0x3f, r18	; 63
     754:	08 95       	ret
     756:	2f b7       	in	r18, 0x3f	; 63
     758:	f8 94       	cli
     75a:	1b 96       	adiw	r26, 0x0b	; 11
     75c:	8d 91       	ld	r24, X+
     75e:	9c 91       	ld	r25, X
     760:	1c 97       	sbiw	r26, 0x0c	; 12
     762:	8f 5f       	subi	r24, 0xFF	; 255
     764:	9f 4f       	sbci	r25, 0xFF	; 255
     766:	11 f0       	breq	.+4      	; 0x76c <__uartReceiveBufferIsEmpty+0x38>
     768:	80 e0       	ldi	r24, 0x00	; 0
     76a:	01 c0       	rjmp	.+2      	; 0x76e <__uartReceiveBufferIsEmpty+0x3a>
     76c:	8f ef       	ldi	r24, 0xFF	; 255
     76e:	2f bf       	out	0x3f, r18	; 63
     770:	08 95       	ret

00000772 <__uartFlushReceiveBuffer>:
     772:	fc 01       	movw	r30, r24
     774:	80 81       	ld	r24, Z
     776:	91 81       	ldd	r25, Z+1	; 0x01
     778:	00 97       	sbiw	r24, 0x00	; 0
     77a:	19 f0       	breq	.+6      	; 0x782 <__uartFlushReceiveBuffer+0x10>
     77c:	0e 94 ab 05 	call	0xb56	; 0xb56 <bufferFlush>
     780:	08 95       	ret
     782:	2f b7       	in	r18, 0x3f	; 63
     784:	f8 94       	cli
     786:	8f ef       	ldi	r24, 0xFF	; 255
     788:	9f ef       	ldi	r25, 0xFF	; 255
     78a:	94 87       	std	Z+12, r25	; 0x0c
     78c:	83 87       	std	Z+11, r24	; 0x0b
     78e:	2f bf       	out	0x3f, r18	; 63
     790:	08 95       	ret

00000792 <_uartInit>:
     792:	ef 92       	push	r14
     794:	ff 92       	push	r15
     796:	0f 93       	push	r16
     798:	1f 93       	push	r17
     79a:	cf 93       	push	r28
     79c:	df 93       	push	r29
     79e:	ec 01       	movw	r28, r24
     7a0:	7a 01       	movw	r14, r20
     7a2:	8b 01       	movw	r16, r22
     7a4:	f8 94       	cli
     7a6:	8d 89       	ldd	r24, Y+21	; 0x15
     7a8:	88 23       	and	r24, r24
     7aa:	81 f0       	breq	.+32     	; 0x7cc <_uartInit+0x3a>
     7ac:	2d 85       	ldd	r18, Y+13	; 0x0d
     7ae:	3e 85       	ldd	r19, Y+14	; 0x0e
     7b0:	8f 85       	ldd	r24, Y+15	; 0x0f
     7b2:	98 89       	ldd	r25, Y+16	; 0x10
     7b4:	28 17       	cp	r18, r24
     7b6:	39 07       	cpc	r19, r25
     7b8:	21 f0       	breq	.+8      	; 0x7c2 <_uartInit+0x30>
     7ba:	c9 01       	movw	r24, r18
     7bc:	60 e0       	ldi	r22, 0x00	; 0
     7be:	0e 94 c9 06 	call	0xd92	; 0xd92 <pin_make_input>
     7c2:	8f 85       	ldd	r24, Y+15	; 0x0f
     7c4:	98 89       	ldd	r25, Y+16	; 0x10
     7c6:	6f ef       	ldi	r22, 0xFF	; 255
     7c8:	0e 94 c9 06 	call	0xd92	; 0xd92 <pin_make_input>
     7cc:	88 85       	ldd	r24, Y+8	; 0x08
     7ce:	81 60       	ori	r24, 0x01	; 1
     7d0:	88 87       	std	Y+8, r24	; 0x08
     7d2:	88 85       	ldd	r24, Y+8	; 0x08
     7d4:	8b 7f       	andi	r24, 0xFB	; 251
     7d6:	88 87       	std	Y+8, r24	; 0x08
     7d8:	88 85       	ldd	r24, Y+8	; 0x08
     7da:	8d 7f       	andi	r24, 0xFD	; 253
     7dc:	88 87       	std	Y+8, r24	; 0x08
     7de:	89 85       	ldd	r24, Y+9	; 0x09
     7e0:	9a 85       	ldd	r25, Y+10	; 0x0a
     7e2:	04 96       	adiw	r24, 0x04	; 4
     7e4:	fc 01       	movw	r30, r24
     7e6:	25 91       	lpm	r18, Z+
     7e8:	34 91       	lpm	r19, Z+
     7ea:	ce 01       	movw	r24, r28
     7ec:	b8 01       	movw	r22, r16
     7ee:	a7 01       	movw	r20, r14
     7f0:	f9 01       	movw	r30, r18
     7f2:	09 95       	icall
     7f4:	78 94       	sei
     7f6:	df 91       	pop	r29
     7f8:	cf 91       	pop	r28
     7fa:	1f 91       	pop	r17
     7fc:	0f 91       	pop	r16
     7fe:	ff 90       	pop	r15
     800:	ef 90       	pop	r14
     802:	08 95       	ret

00000804 <_uartSendByte>:
     804:	0f 93       	push	r16
     806:	1f 93       	push	r17
     808:	cf 93       	push	r28
     80a:	df 93       	push	r29
     80c:	ec 01       	movw	r28, r24
     80e:	06 2f       	mov	r16, r22
     810:	8a 81       	ldd	r24, Y+2	; 0x02
     812:	9b 81       	ldd	r25, Y+3	; 0x03
     814:	89 2b       	or	r24, r25
     816:	19 f4       	brne	.+6      	; 0x81e <_uartSendByte+0x1a>
     818:	19 c0       	rjmp	.+50     	; 0x84c <_uartSendByte+0x48>
     81a:	0e 94 b4 05 	call	0xb68	; 0xb68 <breathe>
     81e:	8a 81       	ldd	r24, Y+2	; 0x02
     820:	9b 81       	ldd	r25, Y+3	; 0x03
     822:	0e 94 a3 05 	call	0xb46	; 0xb46 <bufferIsFull>
     826:	88 23       	and	r24, r24
     828:	c1 f7       	brne	.-16     	; 0x81a <_uartSendByte+0x16>
     82a:	1f b7       	in	r17, 0x3f	; 63
     82c:	f8 94       	cli
     82e:	88 85       	ldd	r24, Y+8	; 0x08
     830:	81 fd       	sbrc	r24, 1
     832:	04 c0       	rjmp	.+8      	; 0x83c <_uartSendByte+0x38>
     834:	88 85       	ldd	r24, Y+8	; 0x08
     836:	82 60       	ori	r24, 0x02	; 2
     838:	88 87       	std	Y+8, r24	; 0x08
     83a:	0d c0       	rjmp	.+26     	; 0x856 <_uartSendByte+0x52>
     83c:	8a 81       	ldd	r24, Y+2	; 0x02
     83e:	9b 81       	ldd	r25, Y+3	; 0x03
     840:	60 2f       	mov	r22, r16
     842:	0e 94 5f 05 	call	0xabe	; 0xabe <bufferPut>
     846:	0e c0       	rjmp	.+28     	; 0x864 <_uartSendByte+0x60>
     848:	0e 94 b4 05 	call	0xb68	; 0xb68 <breathe>
     84c:	88 85       	ldd	r24, Y+8	; 0x08
     84e:	80 ff       	sbrs	r24, 0
     850:	fb cf       	rjmp	.-10     	; 0x848 <_uartSendByte+0x44>
     852:	1f b7       	in	r17, 0x3f	; 63
     854:	f8 94       	cli
     856:	ce 01       	movw	r24, r28
     858:	0e 94 42 03 	call	0x684	; 0x684 <_uartTransmitBlockStart>
     85c:	ce 01       	movw	r24, r28
     85e:	60 2f       	mov	r22, r16
     860:	0e 94 35 03 	call	0x66a	; 0x66a <_uartStartXmit>
     864:	1f bf       	out	0x3f, r17	; 63
     866:	80 2f       	mov	r24, r16
     868:	df 91       	pop	r29
     86a:	cf 91       	pop	r28
     86c:	1f 91       	pop	r17
     86e:	0f 91       	pop	r16
     870:	08 95       	ret

00000872 <_uartSendBuffer>:
     872:	ef 92       	push	r14
     874:	ff 92       	push	r15
     876:	0f 93       	push	r16
     878:	1f 93       	push	r17
     87a:	cf 93       	push	r28
     87c:	df 93       	push	r29
     87e:	7c 01       	movw	r14, r24
     880:	8b 01       	movw	r16, r22
     882:	ea 01       	movw	r28, r20
     884:	07 c0       	rjmp	.+14     	; 0x894 <_uartSendBuffer+0x22>
     886:	f8 01       	movw	r30, r16
     888:	61 91       	ld	r22, Z+
     88a:	8f 01       	movw	r16, r30
     88c:	c7 01       	movw	r24, r14
     88e:	0e 94 02 04 	call	0x804	; 0x804 <_uartSendByte>
     892:	21 97       	sbiw	r28, 0x01	; 1
     894:	20 97       	sbiw	r28, 0x00	; 0
     896:	b9 f7       	brne	.-18     	; 0x886 <_uartSendBuffer+0x14>
     898:	df 91       	pop	r29
     89a:	cf 91       	pop	r28
     89c:	1f 91       	pop	r17
     89e:	0f 91       	pop	r16
     8a0:	ff 90       	pop	r15
     8a2:	ef 90       	pop	r14
     8a4:	08 95       	ret

000008a6 <__uartGetByte>:
     8a6:	df 93       	push	r29
     8a8:	cf 93       	push	r28
     8aa:	0f 92       	push	r0
     8ac:	cd b7       	in	r28, 0x3d	; 61
     8ae:	de b7       	in	r29, 0x3e	; 62
     8b0:	fc 01       	movw	r30, r24
     8b2:	80 81       	ld	r24, Z
     8b4:	91 81       	ldd	r25, Z+1	; 0x01
     8b6:	00 97       	sbiw	r24, 0x00	; 0
     8b8:	71 f0       	breq	.+28     	; 0x8d6 <__uartGetByte+0x30>
     8ba:	be 01       	movw	r22, r28
     8bc:	6f 5f       	subi	r22, 0xFF	; 255
     8be:	7f 4f       	sbci	r23, 0xFF	; 255
     8c0:	0e 94 32 05 	call	0xa64	; 0xa64 <bufferGet>
     8c4:	88 23       	and	r24, r24
     8c6:	19 f4       	brne	.+6      	; 0x8ce <__uartGetByte+0x28>
     8c8:	4f ef       	ldi	r20, 0xFF	; 255
     8ca:	5f ef       	ldi	r21, 0xFF	; 255
     8cc:	0d c0       	rjmp	.+26     	; 0x8e8 <__uartGetByte+0x42>
     8ce:	89 81       	ldd	r24, Y+1	; 0x01
     8d0:	48 2f       	mov	r20, r24
     8d2:	50 e0       	ldi	r21, 0x00	; 0
     8d4:	09 c0       	rjmp	.+18     	; 0x8e8 <__uartGetByte+0x42>
     8d6:	2f b7       	in	r18, 0x3f	; 63
     8d8:	f8 94       	cli
     8da:	43 85       	ldd	r20, Z+11	; 0x0b
     8dc:	54 85       	ldd	r21, Z+12	; 0x0c
     8de:	8f ef       	ldi	r24, 0xFF	; 255
     8e0:	9f ef       	ldi	r25, 0xFF	; 255
     8e2:	94 87       	std	Z+12, r25	; 0x0c
     8e4:	83 87       	std	Z+11, r24	; 0x0b
     8e6:	2f bf       	out	0x3f, r18	; 63
     8e8:	ca 01       	movw	r24, r20
     8ea:	0f 90       	pop	r0
     8ec:	cf 91       	pop	r28
     8ee:	df 91       	pop	r29
     8f0:	08 95       	ret

000008f2 <__uartTransmitService>:
     8f2:	ef 92       	push	r14
     8f4:	ff 92       	push	r15
     8f6:	1f 93       	push	r17
     8f8:	df 93       	push	r29
     8fa:	cf 93       	push	r28
     8fc:	0f 92       	push	r0
     8fe:	cd b7       	in	r28, 0x3d	; 61
     900:	de b7       	in	r29, 0x3e	; 62
     902:	7c 01       	movw	r14, r24
     904:	fc 01       	movw	r30, r24
     906:	80 85       	ldd	r24, Z+8	; 0x08
     908:	81 ff       	sbrs	r24, 1
     90a:	19 c0       	rjmp	.+50     	; 0x93e <__uartTransmitService+0x4c>
     90c:	1f b7       	in	r17, 0x3f	; 63
     90e:	f8 94       	cli
     910:	f7 01       	movw	r30, r14
     912:	82 81       	ldd	r24, Z+2	; 0x02
     914:	93 81       	ldd	r25, Z+3	; 0x03
     916:	be 01       	movw	r22, r28
     918:	6f 5f       	subi	r22, 0xFF	; 255
     91a:	7f 4f       	sbci	r23, 0xFF	; 255
     91c:	0e 94 32 05 	call	0xa64	; 0xa64 <bufferGet>
     920:	88 23       	and	r24, r24
     922:	29 f0       	breq	.+10     	; 0x92e <__uartTransmitService+0x3c>
     924:	c7 01       	movw	r24, r14
     926:	69 81       	ldd	r22, Y+1	; 0x01
     928:	0e 94 35 03 	call	0x66a	; 0x66a <_uartStartXmit>
     92c:	0d c0       	rjmp	.+26     	; 0x948 <__uartTransmitService+0x56>
     92e:	c7 01       	movw	r24, r14
     930:	0e 94 5e 03 	call	0x6bc	; 0x6bc <_uartTransmitBlockEnd>
     934:	f7 01       	movw	r30, r14
     936:	80 85       	ldd	r24, Z+8	; 0x08
     938:	8d 7f       	andi	r24, 0xFD	; 253
     93a:	80 87       	std	Z+8, r24	; 0x08
     93c:	05 c0       	rjmp	.+10     	; 0x948 <__uartTransmitService+0x56>
     93e:	1f b7       	in	r17, 0x3f	; 63
     940:	f8 94       	cli
     942:	c7 01       	movw	r24, r14
     944:	0e 94 5e 03 	call	0x6bc	; 0x6bc <_uartTransmitBlockEnd>
     948:	1f bf       	out	0x3f, r17	; 63
     94a:	0f 90       	pop	r0
     94c:	cf 91       	pop	r28
     94e:	df 91       	pop	r29
     950:	1f 91       	pop	r17
     952:	ff 90       	pop	r15
     954:	ef 90       	pop	r14
     956:	08 95       	ret

00000958 <__uartReceiveService>:
     958:	cf 93       	push	r28
     95a:	df 93       	push	r29
     95c:	ec 01       	movw	r28, r24
     95e:	26 2f       	mov	r18, r22
     960:	8c 81       	ldd	r24, Y+4	; 0x04
     962:	9d 81       	ldd	r25, Y+5	; 0x05
     964:	89 2b       	or	r24, r25
     966:	39 f0       	breq	.+14     	; 0x976 <__uartReceiveService+0x1e>
     968:	ec 81       	ldd	r30, Y+4	; 0x04
     96a:	fd 81       	ldd	r31, Y+5	; 0x05
     96c:	6e 81       	ldd	r22, Y+6	; 0x06
     96e:	7f 81       	ldd	r23, Y+7	; 0x07
     970:	82 2f       	mov	r24, r18
     972:	09 95       	icall
     974:	19 c0       	rjmp	.+50     	; 0x9a8 <__uartReceiveService+0x50>
     976:	88 81       	ld	r24, Y
     978:	99 81       	ldd	r25, Y+1	; 0x01
     97a:	00 97       	sbiw	r24, 0x00	; 0
     97c:	29 f0       	breq	.+10     	; 0x988 <__uartReceiveService+0x30>
     97e:	0e 94 5f 05 	call	0xabe	; 0xabe <bufferPut>
     982:	88 23       	and	r24, r24
     984:	89 f4       	brne	.+34     	; 0x9a8 <__uartReceiveService+0x50>
     986:	0a c0       	rjmp	.+20     	; 0x99c <__uartReceiveService+0x44>
     988:	8b 85       	ldd	r24, Y+11	; 0x0b
     98a:	9c 85       	ldd	r25, Y+12	; 0x0c
     98c:	8f 5f       	subi	r24, 0xFF	; 255
     98e:	9f 4f       	sbci	r25, 0xFF	; 255
     990:	29 f4       	brne	.+10     	; 0x99c <__uartReceiveService+0x44>
     992:	86 2f       	mov	r24, r22
     994:	90 e0       	ldi	r25, 0x00	; 0
     996:	9c 87       	std	Y+12, r25	; 0x0c
     998:	8b 87       	std	Y+11, r24	; 0x0b
     99a:	06 c0       	rjmp	.+12     	; 0x9a8 <__uartReceiveService+0x50>
     99c:	88 85       	ldd	r24, Y+8	; 0x08
     99e:	84 60       	ori	r24, 0x04	; 4
     9a0:	88 87       	std	Y+8, r24	; 0x08
     9a2:	85 ef       	ldi	r24, 0xF5	; 245
     9a4:	0e 94 27 0d 	call	0x1a4e	; 0x1a4e <setError>
     9a8:	df 91       	pop	r29
     9aa:	cf 91       	pop	r28
     9ac:	08 95       	ret

000009ae <a2dReadMv>:
     9ae:	0f 93       	push	r16
     9b0:	1f 93       	push	r17
     9b2:	0e 94 00 18 	call	0x3000	; 0x3000 <a2dConvert10bit>
     9b6:	e8 e6       	ldi	r30, 0x68	; 104
     9b8:	f0 e0       	ldi	r31, 0x00	; 0
     9ba:	05 91       	lpm	r16, Z+
     9bc:	14 91       	lpm	r17, Z+
     9be:	60 e0       	ldi	r22, 0x00	; 0
     9c0:	70 e0       	ldi	r23, 0x00	; 0
     9c2:	4f ef       	ldi	r20, 0xFF	; 255
     9c4:	53 e0       	ldi	r21, 0x03	; 3
     9c6:	20 e0       	ldi	r18, 0x00	; 0
     9c8:	30 e0       	ldi	r19, 0x00	; 0
     9ca:	0e 94 73 06 	call	0xce6	; 0xce6 <interpolateU>
     9ce:	1f 91       	pop	r17
     9d0:	0f 91       	pop	r16
     9d2:	08 95       	ret

000009d4 <__act_setSpeed>:
     9d4:	1f 93       	push	r17
     9d6:	cf 93       	push	r28
     9d8:	df 93       	push	r29
     9da:	ec 01       	movw	r28, r24
     9dc:	16 2f       	mov	r17, r22
     9de:	61 38       	cpi	r22, 0x81	; 129
     9e0:	0c f4       	brge	.+2      	; 0x9e4 <__act_setSpeed+0x10>
     9e2:	11 e8       	ldi	r17, 0x81	; 129
     9e4:	e8 81       	ld	r30, Y
     9e6:	f9 81       	ldd	r31, Y+1	; 0x01
     9e8:	30 97       	sbiw	r30, 0x00	; 0
     9ea:	79 f0       	breq	.+30     	; 0xa0a <__act_setSpeed+0x36>
     9ec:	25 91       	lpm	r18, Z+
     9ee:	34 91       	lpm	r19, Z+
     9f0:	21 15       	cp	r18, r1
     9f2:	31 05       	cpc	r19, r1
     9f4:	51 f0       	breq	.+20     	; 0xa0a <__act_setSpeed+0x36>
     9f6:	8b 81       	ldd	r24, Y+3	; 0x03
     9f8:	81 fd       	sbrc	r24, 1
     9fa:	02 c0       	rjmp	.+4      	; 0xa00 <__act_setSpeed+0x2c>
     9fc:	61 2f       	mov	r22, r17
     9fe:	02 c0       	rjmp	.+4      	; 0xa04 <__act_setSpeed+0x30>
     a00:	61 2f       	mov	r22, r17
     a02:	61 95       	neg	r22
     a04:	ce 01       	movw	r24, r28
     a06:	f9 01       	movw	r30, r18
     a08:	09 95       	icall
     a0a:	1a 83       	std	Y+2, r17	; 0x02
     a0c:	df 91       	pop	r29
     a0e:	cf 91       	pop	r28
     a10:	1f 91       	pop	r17
     a12:	08 95       	ret

00000a14 <__act_setConnected>:
     a14:	dc 01       	movw	r26, r24
     a16:	96 2f       	mov	r25, r22
     a18:	91 70       	andi	r25, 0x01	; 1
     a1a:	13 96       	adiw	r26, 0x03	; 3
     a1c:	8c 91       	ld	r24, X
     a1e:	13 97       	sbiw	r26, 0x03	; 3
     a20:	8e 7f       	andi	r24, 0xFE	; 254
     a22:	89 2b       	or	r24, r25
     a24:	13 96       	adiw	r26, 0x03	; 3
     a26:	8c 93       	st	X, r24
     a28:	13 97       	sbiw	r26, 0x03	; 3
     a2a:	8d 91       	ld	r24, X+
     a2c:	9c 91       	ld	r25, X
     a2e:	11 97       	sbiw	r26, 0x01	; 1
     a30:	00 97       	sbiw	r24, 0x00	; 0
     a32:	51 f0       	breq	.+20     	; 0xa48 <__act_setConnected+0x34>
     a34:	fc 01       	movw	r30, r24
     a36:	32 96       	adiw	r30, 0x02	; 2
     a38:	25 91       	lpm	r18, Z+
     a3a:	34 91       	lpm	r19, Z+
     a3c:	21 15       	cp	r18, r1
     a3e:	31 05       	cpc	r19, r1
     a40:	19 f0       	breq	.+6      	; 0xa48 <__act_setConnected+0x34>
     a42:	cd 01       	movw	r24, r26
     a44:	f9 01       	movw	r30, r18
     a46:	09 95       	icall
     a48:	08 95       	ret

00000a4a <bufferInit>:
     a4a:	fc 01       	movw	r30, r24
     a4c:	8f b7       	in	r24, 0x3f	; 63
     a4e:	f8 94       	cli
     a50:	71 83       	std	Z+1, r23	; 0x01
     a52:	60 83       	st	Z, r22
     a54:	53 83       	std	Z+3, r21	; 0x03
     a56:	42 83       	std	Z+2, r20	; 0x02
     a58:	15 82       	std	Z+5, r1	; 0x05
     a5a:	14 82       	std	Z+4, r1	; 0x04
     a5c:	17 82       	std	Z+7, r1	; 0x07
     a5e:	16 82       	std	Z+6, r1	; 0x06
     a60:	8f bf       	out	0x3f, r24	; 63
     a62:	08 95       	ret

00000a64 <bufferGet>:
     a64:	cf 93       	push	r28
     a66:	df 93       	push	r29
     a68:	ec 01       	movw	r28, r24
     a6a:	db 01       	movw	r26, r22
     a6c:	2f b7       	in	r18, 0x3f	; 63
     a6e:	f8 94       	cli
     a70:	00 97       	sbiw	r24, 0x00	; 0
     a72:	01 f1       	breq	.+64     	; 0xab4 <bufferGet+0x50>
     a74:	8a 81       	ldd	r24, Y+2	; 0x02
     a76:	9b 81       	ldd	r25, Y+3	; 0x03
     a78:	89 2b       	or	r24, r25
     a7a:	e1 f0       	breq	.+56     	; 0xab4 <bufferGet+0x50>
     a7c:	8c 81       	ldd	r24, Y+4	; 0x04
     a7e:	9d 81       	ldd	r25, Y+5	; 0x05
     a80:	89 2b       	or	r24, r25
     a82:	c1 f0       	breq	.+48     	; 0xab4 <bufferGet+0x50>
     a84:	e8 81       	ld	r30, Y
     a86:	f9 81       	ldd	r31, Y+1	; 0x01
     a88:	8e 81       	ldd	r24, Y+6	; 0x06
     a8a:	9f 81       	ldd	r25, Y+7	; 0x07
     a8c:	e8 0f       	add	r30, r24
     a8e:	f9 1f       	adc	r31, r25
     a90:	80 81       	ld	r24, Z
     a92:	8c 93       	st	X, r24
     a94:	8e 81       	ldd	r24, Y+6	; 0x06
     a96:	9f 81       	ldd	r25, Y+7	; 0x07
     a98:	6a 81       	ldd	r22, Y+2	; 0x02
     a9a:	7b 81       	ldd	r23, Y+3	; 0x03
     a9c:	01 96       	adiw	r24, 0x01	; 1
     a9e:	0e 94 bd 1e 	call	0x3d7a	; 0x3d7a <__udivmodhi4>
     aa2:	9f 83       	std	Y+7, r25	; 0x07
     aa4:	8e 83       	std	Y+6, r24	; 0x06
     aa6:	8c 81       	ldd	r24, Y+4	; 0x04
     aa8:	9d 81       	ldd	r25, Y+5	; 0x05
     aaa:	01 97       	sbiw	r24, 0x01	; 1
     aac:	9d 83       	std	Y+5, r25	; 0x05
     aae:	8c 83       	std	Y+4, r24	; 0x04
     ab0:	8f ef       	ldi	r24, 0xFF	; 255
     ab2:	01 c0       	rjmp	.+2      	; 0xab6 <bufferGet+0x52>
     ab4:	80 e0       	ldi	r24, 0x00	; 0
     ab6:	2f bf       	out	0x3f, r18	; 63
     ab8:	df 91       	pop	r29
     aba:	cf 91       	pop	r28
     abc:	08 95       	ret

00000abe <bufferPut>:
     abe:	1f 93       	push	r17
     ac0:	cf 93       	push	r28
     ac2:	df 93       	push	r29
     ac4:	ec 01       	movw	r28, r24
     ac6:	46 2f       	mov	r20, r22
     ac8:	1f b7       	in	r17, 0x3f	; 63
     aca:	f8 94       	cli
     acc:	2c 81       	ldd	r18, Y+4	; 0x04
     ace:	3d 81       	ldd	r19, Y+5	; 0x05
     ad0:	6a 81       	ldd	r22, Y+2	; 0x02
     ad2:	7b 81       	ldd	r23, Y+3	; 0x03
     ad4:	26 17       	cp	r18, r22
     ad6:	37 07       	cpc	r19, r23
     ad8:	10 f0       	brcs	.+4      	; 0xade <bufferPut+0x20>
     ada:	80 e0       	ldi	r24, 0x00	; 0
     adc:	11 c0       	rjmp	.+34     	; 0xb00 <bufferPut+0x42>
     ade:	8e 81       	ldd	r24, Y+6	; 0x06
     ae0:	9f 81       	ldd	r25, Y+7	; 0x07
     ae2:	82 0f       	add	r24, r18
     ae4:	93 1f       	adc	r25, r19
     ae6:	0e 94 bd 1e 	call	0x3d7a	; 0x3d7a <__udivmodhi4>
     aea:	e8 81       	ld	r30, Y
     aec:	f9 81       	ldd	r31, Y+1	; 0x01
     aee:	e8 0f       	add	r30, r24
     af0:	f9 1f       	adc	r31, r25
     af2:	40 83       	st	Z, r20
     af4:	8c 81       	ldd	r24, Y+4	; 0x04
     af6:	9d 81       	ldd	r25, Y+5	; 0x05
     af8:	01 96       	adiw	r24, 0x01	; 1
     afa:	9d 83       	std	Y+5, r25	; 0x05
     afc:	8c 83       	std	Y+4, r24	; 0x04
     afe:	8f ef       	ldi	r24, 0xFF	; 255
     b00:	1f bf       	out	0x3f, r17	; 63
     b02:	df 91       	pop	r29
     b04:	cf 91       	pop	r28
     b06:	1f 91       	pop	r17
     b08:	08 95       	ret

00000b0a <bufferFreeSpace>:
     b0a:	fc 01       	movw	r30, r24
     b0c:	4f b7       	in	r20, 0x3f	; 63
     b0e:	f8 94       	cli
     b10:	00 97       	sbiw	r24, 0x00	; 0
     b12:	19 f4       	brne	.+6      	; 0xb1a <bufferFreeSpace+0x10>
     b14:	20 e0       	ldi	r18, 0x00	; 0
     b16:	30 e0       	ldi	r19, 0x00	; 0
     b18:	06 c0       	rjmp	.+12     	; 0xb26 <bufferFreeSpace+0x1c>
     b1a:	22 81       	ldd	r18, Z+2	; 0x02
     b1c:	33 81       	ldd	r19, Z+3	; 0x03
     b1e:	84 81       	ldd	r24, Z+4	; 0x04
     b20:	95 81       	ldd	r25, Z+5	; 0x05
     b22:	28 1b       	sub	r18, r24
     b24:	39 0b       	sbc	r19, r25
     b26:	4f bf       	out	0x3f, r20	; 63
     b28:	c9 01       	movw	r24, r18
     b2a:	08 95       	ret

00000b2c <bufferBytesUsed>:
     b2c:	fc 01       	movw	r30, r24
     b2e:	8f b7       	in	r24, 0x3f	; 63
     b30:	f8 94       	cli
     b32:	30 97       	sbiw	r30, 0x00	; 0
     b34:	19 f4       	brne	.+6      	; 0xb3c <bufferBytesUsed+0x10>
     b36:	20 e0       	ldi	r18, 0x00	; 0
     b38:	30 e0       	ldi	r19, 0x00	; 0
     b3a:	02 c0       	rjmp	.+4      	; 0xb40 <bufferBytesUsed+0x14>
     b3c:	24 81       	ldd	r18, Z+4	; 0x04
     b3e:	35 81       	ldd	r19, Z+5	; 0x05
     b40:	8f bf       	out	0x3f, r24	; 63
     b42:	c9 01       	movw	r24, r18
     b44:	08 95       	ret

00000b46 <bufferIsFull>:
     b46:	0e 94 85 05 	call	0xb0a	; 0xb0a <bufferFreeSpace>
     b4a:	89 2b       	or	r24, r25
     b4c:	11 f0       	breq	.+4      	; 0xb52 <bufferIsFull+0xc>
     b4e:	80 e0       	ldi	r24, 0x00	; 0
     b50:	08 95       	ret
     b52:	8f ef       	ldi	r24, 0xFF	; 255
     b54:	08 95       	ret

00000b56 <bufferFlush>:
     b56:	fc 01       	movw	r30, r24
     b58:	00 97       	sbiw	r24, 0x00	; 0
     b5a:	29 f0       	breq	.+10     	; 0xb66 <bufferFlush+0x10>
     b5c:	8f b7       	in	r24, 0x3f	; 63
     b5e:	f8 94       	cli
     b60:	15 82       	std	Z+5, r1	; 0x05
     b62:	14 82       	std	Z+4, r1	; 0x04
     b64:	8f bf       	out	0x3f, r24	; 63
     b66:	08 95       	ret

00000b68 <breathe>:
     b68:	8f b7       	in	r24, 0x3f	; 63
     b6a:	78 94       	sei
	...
     b78:	00 00       	nop
     b7a:	8f bf       	out	0x3f, r24	; 63
     b7c:	08 95       	ret

00000b7e <__portMaskSet>:
     b7e:	9c 01       	movw	r18, r24
     b80:	fc 01       	movw	r30, r24
     b82:	a5 91       	lpm	r26, Z+
     b84:	b4 91       	lpm	r27, Z+
     b86:	2e 5f       	subi	r18, 0xFE	; 254
     b88:	3f 4f       	sbci	r19, 0xFF	; 255
     b8a:	f9 01       	movw	r30, r18
     b8c:	94 91       	lpm	r25, Z+
     b8e:	8c 91       	ld	r24, X
     b90:	89 2b       	or	r24, r25
     b92:	8c 93       	st	X, r24
     b94:	08 95       	ret

00000b96 <__portMaskGet>:
     b96:	9c 01       	movw	r18, r24
     b98:	fc 01       	movw	r30, r24
     b9a:	a5 91       	lpm	r26, Z+
     b9c:	b4 91       	lpm	r27, Z+
     b9e:	2e 5f       	subi	r18, 0xFE	; 254
     ba0:	3f 4f       	sbci	r19, 0xFF	; 255
     ba2:	f9 01       	movw	r30, r18
     ba4:	94 91       	lpm	r25, Z+
     ba6:	8c 91       	ld	r24, X
     ba8:	89 23       	and	r24, r25
     baa:	09 f0       	breq	.+2      	; 0xbae <__portMaskGet+0x18>
     bac:	8f ef       	ldi	r24, 0xFF	; 255
     bae:	08 95       	ret

00000bb0 <__portMaskClear>:
     bb0:	9c 01       	movw	r18, r24
     bb2:	fc 01       	movw	r30, r24
     bb4:	a5 91       	lpm	r26, Z+
     bb6:	b4 91       	lpm	r27, Z+
     bb8:	2e 5f       	subi	r18, 0xFE	; 254
     bba:	3f 4f       	sbci	r19, 0xFF	; 255
     bbc:	f9 01       	movw	r30, r18
     bbe:	94 91       	lpm	r25, Z+
     bc0:	8c 91       	ld	r24, X
     bc2:	90 95       	com	r25
     bc4:	89 23       	and	r24, r25
     bc6:	8c 93       	st	X, r24
     bc8:	08 95       	ret

00000bca <main>:
     bca:	6f 92       	push	r6
     bcc:	7f 92       	push	r7
     bce:	8f 92       	push	r8
     bd0:	9f 92       	push	r9
     bd2:	af 92       	push	r10
     bd4:	bf 92       	push	r11
     bd6:	cf 92       	push	r12
     bd8:	df 92       	push	r13
     bda:	ef 92       	push	r14
     bdc:	ff 92       	push	r15
     bde:	0f 93       	push	r16
     be0:	1f 93       	push	r17
     be2:	0e 94 d1 1a 	call	0x35a2	; 0x35a2 <configure_ports>
     be6:	0e 94 d2 1a 	call	0x35a4	; 0x35a4 <registerLED>
     bea:	0e 94 76 10 	call	0x20ec	; 0x20ec <initTimers>
     bee:	0e 94 d3 1a 	call	0x35a6	; 0x35a6 <sysInitHardware>
     bf2:	0e 94 a5 1c 	call	0x394a	; 0x394a <appInitHardware>
     bf6:	0e 94 11 11 	call	0x2222	; 0x2222 <__clockInit>
     bfa:	0e 94 20 0d 	call	0x1a40	; 0x1a40 <clockGetus>
     bfe:	5b 01       	movw	r10, r22
     c00:	6c 01       	movw	r12, r24
     c02:	0e 94 8c 1c 	call	0x3918	; 0x3918 <appInitSoftware>
     c06:	7b 01       	movw	r14, r22
     c08:	8c 01       	movw	r16, r24
     c0a:	66 24       	eor	r6, r6
     c0c:	77 24       	eor	r7, r7
     c0e:	43 01       	movw	r8, r6
     c10:	0e 94 b4 05 	call	0xb68	; 0xb68 <breathe>
     c14:	e1 14       	cp	r14, r1
     c16:	f1 04       	cpc	r15, r1
     c18:	01 05       	cpc	r16, r1
     c1a:	11 05       	cpc	r17, r1
     c1c:	19 f4       	brne	.+6      	; 0xc24 <main+0x5a>
     c1e:	0a c0       	rjmp	.+20     	; 0xc34 <main+0x6a>
     c20:	0e 94 b4 05 	call	0xb68	; 0xb68 <breathe>
     c24:	c6 01       	movw	r24, r12
     c26:	b5 01       	movw	r22, r10
     c28:	a8 01       	movw	r20, r16
     c2a:	97 01       	movw	r18, r14
     c2c:	0e 94 e4 12 	call	0x25c8	; 0x25c8 <clockHasElapsed>
     c30:	88 23       	and	r24, r24
     c32:	b1 f3       	breq	.-20     	; 0xc20 <main+0x56>
     c34:	0e 94 20 0d 	call	0x1a40	; 0x1a40 <clockGetus>
     c38:	5b 01       	movw	r10, r22
     c3a:	6c 01       	movw	r12, r24
     c3c:	08 94       	sec
     c3e:	61 1c       	adc	r6, r1
     c40:	71 1c       	adc	r7, r1
     c42:	81 1c       	adc	r8, r1
     c44:	91 1c       	adc	r9, r1
     c46:	c4 01       	movw	r24, r8
     c48:	b3 01       	movw	r22, r6
     c4a:	a6 01       	movw	r20, r12
     c4c:	95 01       	movw	r18, r10
     c4e:	0e 94 d9 1a 	call	0x35b2	; 0x35b2 <appControl>
     c52:	7b 01       	movw	r14, r22
     c54:	8c 01       	movw	r16, r24
     c56:	dc cf       	rjmp	.-72     	; 0xc10 <main+0x46>

00000c58 <interpolate>:
     c58:	4f 92       	push	r4
     c5a:	5f 92       	push	r5
     c5c:	6f 92       	push	r6
     c5e:	7f 92       	push	r7
     c60:	8f 92       	push	r8
     c62:	9f 92       	push	r9
     c64:	af 92       	push	r10
     c66:	bf 92       	push	r11
     c68:	cf 92       	push	r12
     c6a:	df 92       	push	r13
     c6c:	ef 92       	push	r14
     c6e:	ff 92       	push	r15
     c70:	0f 93       	push	r16
     c72:	1f 93       	push	r17
     c74:	2b 01       	movw	r4, r22
     c76:	3a 01       	movw	r6, r20
     c78:	59 01       	movw	r10, r18
     c7a:	78 01       	movw	r14, r16
     c7c:	e2 1a       	sub	r14, r18
     c7e:	f3 0a       	sbc	r15, r19
     c80:	00 27       	eor	r16, r16
     c82:	f7 fc       	sbrc	r15, 7
     c84:	00 95       	com	r16
     c86:	10 2f       	mov	r17, r16
     c88:	9c 01       	movw	r18, r24
     c8a:	26 1b       	sub	r18, r22
     c8c:	37 0b       	sbc	r19, r23
     c8e:	44 27       	eor	r20, r20
     c90:	37 fd       	sbrc	r19, 7
     c92:	40 95       	com	r20
     c94:	54 2f       	mov	r21, r20
     c96:	c8 01       	movw	r24, r16
     c98:	b7 01       	movw	r22, r14
     c9a:	0e 94 9e 1e 	call	0x3d3c	; 0x3d3c <__mulsi3>
     c9e:	64 18       	sub	r6, r4
     ca0:	75 08       	sbc	r7, r5
     ca2:	88 24       	eor	r8, r8
     ca4:	77 fc       	sbrc	r7, 7
     ca6:	80 94       	com	r8
     ca8:	98 2c       	mov	r9, r8
     caa:	a4 01       	movw	r20, r8
     cac:	93 01       	movw	r18, r6
     cae:	0e 94 f3 1e 	call	0x3de6	; 0x3de6 <__divmodsi4>
     cb2:	c9 01       	movw	r24, r18
     cb4:	da 01       	movw	r26, r20
     cb6:	cc 24       	eor	r12, r12
     cb8:	b7 fc       	sbrc	r11, 7
     cba:	c0 94       	com	r12
     cbc:	dc 2c       	mov	r13, r12
     cbe:	a8 0e       	add	r10, r24
     cc0:	b9 1e       	adc	r11, r25
     cc2:	ca 1e       	adc	r12, r26
     cc4:	db 1e       	adc	r13, r27
     cc6:	c5 01       	movw	r24, r10
     cc8:	1f 91       	pop	r17
     cca:	0f 91       	pop	r16
     ccc:	ff 90       	pop	r15
     cce:	ef 90       	pop	r14
     cd0:	df 90       	pop	r13
     cd2:	cf 90       	pop	r12
     cd4:	bf 90       	pop	r11
     cd6:	af 90       	pop	r10
     cd8:	9f 90       	pop	r9
     cda:	8f 90       	pop	r8
     cdc:	7f 90       	pop	r7
     cde:	6f 90       	pop	r6
     ce0:	5f 90       	pop	r5
     ce2:	4f 90       	pop	r4
     ce4:	08 95       	ret

00000ce6 <interpolateU>:
     ce6:	4f 92       	push	r4
     ce8:	5f 92       	push	r5
     cea:	6f 92       	push	r6
     cec:	7f 92       	push	r7
     cee:	8f 92       	push	r8
     cf0:	9f 92       	push	r9
     cf2:	af 92       	push	r10
     cf4:	bf 92       	push	r11
     cf6:	cf 92       	push	r12
     cf8:	df 92       	push	r13
     cfa:	ef 92       	push	r14
     cfc:	ff 92       	push	r15
     cfe:	0f 93       	push	r16
     d00:	1f 93       	push	r17
     d02:	2b 01       	movw	r4, r22
     d04:	5a 01       	movw	r10, r20
     d06:	39 01       	movw	r6, r18
     d08:	78 01       	movw	r14, r16
     d0a:	e2 1a       	sub	r14, r18
     d0c:	f3 0a       	sbc	r15, r19
     d0e:	00 e0       	ldi	r16, 0x00	; 0
     d10:	10 e0       	ldi	r17, 0x00	; 0
     d12:	9c 01       	movw	r18, r24
     d14:	26 1b       	sub	r18, r22
     d16:	37 0b       	sbc	r19, r23
     d18:	44 27       	eor	r20, r20
     d1a:	37 fd       	sbrc	r19, 7
     d1c:	40 95       	com	r20
     d1e:	54 2f       	mov	r21, r20
     d20:	c8 01       	movw	r24, r16
     d22:	b7 01       	movw	r22, r14
     d24:	0e 94 9e 1e 	call	0x3d3c	; 0x3d3c <__mulsi3>
     d28:	a4 18       	sub	r10, r4
     d2a:	b5 08       	sbc	r11, r5
     d2c:	cc 24       	eor	r12, r12
     d2e:	b7 fc       	sbrc	r11, 7
     d30:	c0 94       	com	r12
     d32:	dc 2c       	mov	r13, r12
     d34:	a6 01       	movw	r20, r12
     d36:	95 01       	movw	r18, r10
     d38:	0e 94 f3 1e 	call	0x3de6	; 0x3de6 <__divmodsi4>
     d3c:	88 24       	eor	r8, r8
     d3e:	99 24       	eor	r9, r9
     d40:	26 0d       	add	r18, r6
     d42:	37 1d       	adc	r19, r7
     d44:	48 1d       	adc	r20, r8
     d46:	59 1d       	adc	r21, r9
     d48:	c9 01       	movw	r24, r18
     d4a:	1f 91       	pop	r17
     d4c:	0f 91       	pop	r16
     d4e:	ff 90       	pop	r15
     d50:	ef 90       	pop	r14
     d52:	df 90       	pop	r13
     d54:	cf 90       	pop	r12
     d56:	bf 90       	pop	r11
     d58:	af 90       	pop	r10
     d5a:	9f 90       	pop	r9
     d5c:	8f 90       	pop	r8
     d5e:	7f 90       	pop	r7
     d60:	6f 90       	pop	r6
     d62:	5f 90       	pop	r5
     d64:	4f 90       	pop	r4
     d66:	08 95       	ret

00000d68 <pin_is_high>:
     d68:	9c 01       	movw	r18, r24
     d6a:	00 97       	sbiw	r24, 0x00	; 0
     d6c:	81 f0       	breq	.+32     	; 0xd8e <pin_is_high+0x26>
     d6e:	fc 01       	movw	r30, r24
     d70:	85 91       	lpm	r24, Z+
     d72:	94 91       	lpm	r25, Z+
     d74:	04 96       	adiw	r24, 0x04	; 4
     d76:	fc 01       	movw	r30, r24
     d78:	a5 91       	lpm	r26, Z+
     d7a:	b4 91       	lpm	r27, Z+
     d7c:	2e 5f       	subi	r18, 0xFE	; 254
     d7e:	3f 4f       	sbci	r19, 0xFF	; 255
     d80:	f9 01       	movw	r30, r18
     d82:	94 91       	lpm	r25, Z+
     d84:	8c 91       	ld	r24, X
     d86:	89 23       	and	r24, r25
     d88:	11 f0       	breq	.+4      	; 0xd8e <pin_is_high+0x26>
     d8a:	8f ef       	ldi	r24, 0xFF	; 255
     d8c:	08 95       	ret
     d8e:	80 e0       	ldi	r24, 0x00	; 0
     d90:	08 95       	ret

00000d92 <pin_make_input>:
     d92:	cf 93       	push	r28
     d94:	df 93       	push	r29
     d96:	9c 01       	movw	r18, r24
     d98:	00 97       	sbiw	r24, 0x00	; 0
     d9a:	f9 f0       	breq	.+62     	; 0xdda <pin_make_input+0x48>
     d9c:	fc 01       	movw	r30, r24
     d9e:	45 91       	lpm	r20, Z+
     da0:	54 91       	lpm	r21, Z+
     da2:	ca 01       	movw	r24, r20
     da4:	02 96       	adiw	r24, 0x02	; 2
     da6:	fc 01       	movw	r30, r24
     da8:	a5 91       	lpm	r26, Z+
     daa:	b4 91       	lpm	r27, Z+
     dac:	fa 01       	movw	r30, r20
     dae:	c5 91       	lpm	r28, Z+
     db0:	d4 91       	lpm	r29, Z+
     db2:	2e 5f       	subi	r18, 0xFE	; 254
     db4:	3f 4f       	sbci	r19, 0xFF	; 255
     db6:	f9 01       	movw	r30, r18
     db8:	94 91       	lpm	r25, Z+
     dba:	3f b7       	in	r19, 0x3f	; 63
     dbc:	f8 94       	cli
     dbe:	8c 91       	ld	r24, X
     dc0:	29 2f       	mov	r18, r25
     dc2:	20 95       	com	r18
     dc4:	82 23       	and	r24, r18
     dc6:	8c 93       	st	X, r24
     dc8:	66 23       	and	r22, r22
     dca:	19 f0       	breq	.+6      	; 0xdd2 <pin_make_input+0x40>
     dcc:	88 81       	ld	r24, Y
     dce:	89 2b       	or	r24, r25
     dd0:	02 c0       	rjmp	.+4      	; 0xdd6 <pin_make_input+0x44>
     dd2:	88 81       	ld	r24, Y
     dd4:	82 23       	and	r24, r18
     dd6:	88 83       	st	Y, r24
     dd8:	3f bf       	out	0x3f, r19	; 63
     dda:	df 91       	pop	r29
     ddc:	cf 91       	pop	r28
     dde:	08 95       	ret

00000de0 <pin_make_output>:
     de0:	cf 93       	push	r28
     de2:	df 93       	push	r29
     de4:	9c 01       	movw	r18, r24
     de6:	00 97       	sbiw	r24, 0x00	; 0
     de8:	f9 f0       	breq	.+62     	; 0xe28 <pin_make_output+0x48>
     dea:	fc 01       	movw	r30, r24
     dec:	45 91       	lpm	r20, Z+
     dee:	54 91       	lpm	r21, Z+
     df0:	ca 01       	movw	r24, r20
     df2:	02 96       	adiw	r24, 0x02	; 2
     df4:	fc 01       	movw	r30, r24
     df6:	c5 91       	lpm	r28, Z+
     df8:	d4 91       	lpm	r29, Z+
     dfa:	fa 01       	movw	r30, r20
     dfc:	a5 91       	lpm	r26, Z+
     dfe:	b4 91       	lpm	r27, Z+
     e00:	2e 5f       	subi	r18, 0xFE	; 254
     e02:	3f 4f       	sbci	r19, 0xFF	; 255
     e04:	f9 01       	movw	r30, r18
     e06:	24 91       	lpm	r18, Z+
     e08:	3f b7       	in	r19, 0x3f	; 63
     e0a:	f8 94       	cli
     e0c:	66 23       	and	r22, r22
     e0e:	19 f0       	breq	.+6      	; 0xe16 <pin_make_output+0x36>
     e10:	8c 91       	ld	r24, X
     e12:	82 2b       	or	r24, r18
     e14:	04 c0       	rjmp	.+8      	; 0xe1e <pin_make_output+0x3e>
     e16:	8c 91       	ld	r24, X
     e18:	92 2f       	mov	r25, r18
     e1a:	90 95       	com	r25
     e1c:	89 23       	and	r24, r25
     e1e:	8c 93       	st	X, r24
     e20:	88 81       	ld	r24, Y
     e22:	82 2b       	or	r24, r18
     e24:	88 83       	st	Y, r24
     e26:	3f bf       	out	0x3f, r19	; 63
     e28:	df 91       	pop	r29
     e2a:	cf 91       	pop	r28
     e2c:	08 95       	ret

00000e2e <pin_is_output>:
     e2e:	9c 01       	movw	r18, r24
     e30:	00 97       	sbiw	r24, 0x00	; 0
     e32:	81 f0       	breq	.+32     	; 0xe54 <pin_is_output+0x26>
     e34:	fc 01       	movw	r30, r24
     e36:	85 91       	lpm	r24, Z+
     e38:	94 91       	lpm	r25, Z+
     e3a:	02 96       	adiw	r24, 0x02	; 2
     e3c:	fc 01       	movw	r30, r24
     e3e:	a5 91       	lpm	r26, Z+
     e40:	b4 91       	lpm	r27, Z+
     e42:	2e 5f       	subi	r18, 0xFE	; 254
     e44:	3f 4f       	sbci	r19, 0xFF	; 255
     e46:	f9 01       	movw	r30, r18
     e48:	94 91       	lpm	r25, Z+
     e4a:	8c 91       	ld	r24, X
     e4c:	89 23       	and	r24, r25
     e4e:	11 f0       	breq	.+4      	; 0xe54 <pin_is_output+0x26>
     e50:	8f ef       	ldi	r24, 0xFF	; 255
     e52:	08 95       	ret
     e54:	80 e0       	ldi	r24, 0x00	; 0
     e56:	08 95       	ret

00000e58 <pin_toggle>:
     e58:	cf 93       	push	r28
     e5a:	df 93       	push	r29
     e5c:	9c 01       	movw	r18, r24
     e5e:	00 97       	sbiw	r24, 0x00	; 0
     e60:	e1 f0       	breq	.+56     	; 0xe9a <pin_toggle+0x42>
     e62:	fc 01       	movw	r30, r24
     e64:	85 91       	lpm	r24, Z+
     e66:	94 91       	lpm	r25, Z+
     e68:	fc 01       	movw	r30, r24
     e6a:	a5 91       	lpm	r26, Z+
     e6c:	b4 91       	lpm	r27, Z+
     e6e:	02 96       	adiw	r24, 0x02	; 2
     e70:	fc 01       	movw	r30, r24
     e72:	c5 91       	lpm	r28, Z+
     e74:	d4 91       	lpm	r29, Z+
     e76:	2e 5f       	subi	r18, 0xFE	; 254
     e78:	3f 4f       	sbci	r19, 0xFF	; 255
     e7a:	f9 01       	movw	r30, r18
     e7c:	24 91       	lpm	r18, Z+
     e7e:	88 81       	ld	r24, Y
     e80:	82 23       	and	r24, r18
     e82:	41 f0       	breq	.+16     	; 0xe94 <pin_toggle+0x3c>
     e84:	9f b7       	in	r25, 0x3f	; 63
     e86:	f8 94       	cli
     e88:	8c 91       	ld	r24, X
     e8a:	82 27       	eor	r24, r18
     e8c:	8c 93       	st	X, r24
     e8e:	9f bf       	out	0x3f, r25	; 63
     e90:	00 00       	nop
     e92:	03 c0       	rjmp	.+6      	; 0xe9a <pin_toggle+0x42>
     e94:	87 ef       	ldi	r24, 0xF7	; 247
     e96:	0e 94 27 0d 	call	0x1a4e	; 0x1a4e <setError>
     e9a:	df 91       	pop	r29
     e9c:	cf 91       	pop	r28
     e9e:	08 95       	ret

00000ea0 <pin_low>:
     ea0:	cf 93       	push	r28
     ea2:	df 93       	push	r29
     ea4:	9c 01       	movw	r18, r24
     ea6:	00 97       	sbiw	r24, 0x00	; 0
     ea8:	e9 f0       	breq	.+58     	; 0xee4 <pin_low+0x44>
     eaa:	fc 01       	movw	r30, r24
     eac:	85 91       	lpm	r24, Z+
     eae:	94 91       	lpm	r25, Z+
     eb0:	fc 01       	movw	r30, r24
     eb2:	a5 91       	lpm	r26, Z+
     eb4:	b4 91       	lpm	r27, Z+
     eb6:	02 96       	adiw	r24, 0x02	; 2
     eb8:	fc 01       	movw	r30, r24
     eba:	c5 91       	lpm	r28, Z+
     ebc:	d4 91       	lpm	r29, Z+
     ebe:	2e 5f       	subi	r18, 0xFE	; 254
     ec0:	3f 4f       	sbci	r19, 0xFF	; 255
     ec2:	f9 01       	movw	r30, r18
     ec4:	24 91       	lpm	r18, Z+
     ec6:	88 81       	ld	r24, Y
     ec8:	82 23       	and	r24, r18
     eca:	49 f0       	breq	.+18     	; 0xede <pin_low+0x3e>
     ecc:	9f b7       	in	r25, 0x3f	; 63
     ece:	f8 94       	cli
     ed0:	8c 91       	ld	r24, X
     ed2:	20 95       	com	r18
     ed4:	82 23       	and	r24, r18
     ed6:	8c 93       	st	X, r24
     ed8:	9f bf       	out	0x3f, r25	; 63
     eda:	00 00       	nop
     edc:	03 c0       	rjmp	.+6      	; 0xee4 <pin_low+0x44>
     ede:	87 ef       	ldi	r24, 0xF7	; 247
     ee0:	0e 94 27 0d 	call	0x1a4e	; 0x1a4e <setError>
     ee4:	df 91       	pop	r29
     ee6:	cf 91       	pop	r28
     ee8:	08 95       	ret

00000eea <pin_high>:
     eea:	cf 93       	push	r28
     eec:	df 93       	push	r29
     eee:	9c 01       	movw	r18, r24
     ef0:	00 97       	sbiw	r24, 0x00	; 0
     ef2:	e1 f0       	breq	.+56     	; 0xf2c <pin_high+0x42>
     ef4:	fc 01       	movw	r30, r24
     ef6:	85 91       	lpm	r24, Z+
     ef8:	94 91       	lpm	r25, Z+
     efa:	fc 01       	movw	r30, r24
     efc:	a5 91       	lpm	r26, Z+
     efe:	b4 91       	lpm	r27, Z+
     f00:	02 96       	adiw	r24, 0x02	; 2
     f02:	fc 01       	movw	r30, r24
     f04:	c5 91       	lpm	r28, Z+
     f06:	d4 91       	lpm	r29, Z+
     f08:	2e 5f       	subi	r18, 0xFE	; 254
     f0a:	3f 4f       	sbci	r19, 0xFF	; 255
     f0c:	f9 01       	movw	r30, r18
     f0e:	24 91       	lpm	r18, Z+
     f10:	88 81       	ld	r24, Y
     f12:	82 23       	and	r24, r18
     f14:	41 f0       	breq	.+16     	; 0xf26 <pin_high+0x3c>
     f16:	9f b7       	in	r25, 0x3f	; 63
     f18:	f8 94       	cli
     f1a:	8c 91       	ld	r24, X
     f1c:	82 2b       	or	r24, r18
     f1e:	8c 93       	st	X, r24
     f20:	9f bf       	out	0x3f, r25	; 63
     f22:	00 00       	nop
     f24:	03 c0       	rjmp	.+6      	; 0xf2c <pin_high+0x42>
     f26:	87 ef       	ldi	r24, 0xF7	; 247
     f28:	0e 94 27 0d 	call	0x1a4e	; 0x1a4e <setError>
     f2c:	df 91       	pop	r29
     f2e:	cf 91       	pop	r28
     f30:	08 95       	ret

00000f32 <pin_set>:
     f32:	66 23       	and	r22, r22
     f34:	19 f0       	breq	.+6      	; 0xf3c <pin_set+0xa>
     f36:	0e 94 75 07 	call	0xeea	; 0xeea <pin_high>
     f3a:	08 95       	ret
     f3c:	0e 94 50 07 	call	0xea0	; 0xea0 <pin_low>
     f40:	08 95       	ret

00000f42 <LED_set>:
     f42:	1f 93       	push	r17
     f44:	cf 93       	push	r28
     f46:	df 93       	push	r29
     f48:	ec 01       	movw	r28, r24
     f4a:	16 2f       	mov	r17, r22
     f4c:	88 81       	ld	r24, Y
     f4e:	99 81       	ldd	r25, Y+1	; 0x01
     f50:	00 97       	sbiw	r24, 0x00	; 0
     f52:	a9 f0       	breq	.+42     	; 0xf7e <LED_set+0x3c>
     f54:	3a 81       	ldd	r19, Y+2	; 0x02
     f56:	30 fd       	sbrc	r19, 0
     f58:	05 c0       	rjmp	.+10     	; 0xf64 <LED_set+0x22>
     f5a:	20 e0       	ldi	r18, 0x00	; 0
     f5c:	66 23       	and	r22, r22
     f5e:	09 f4       	brne	.+2      	; 0xf62 <LED_set+0x20>
     f60:	21 e0       	ldi	r18, 0x01	; 1
     f62:	12 2f       	mov	r17, r18
     f64:	31 fd       	sbrc	r19, 1
     f66:	06 c0       	rjmp	.+12     	; 0xf74 <LED_set+0x32>
     f68:	61 2f       	mov	r22, r17
     f6a:	0e 94 f0 06 	call	0xde0	; 0xde0 <pin_make_output>
     f6e:	8a 81       	ldd	r24, Y+2	; 0x02
     f70:	82 60       	ori	r24, 0x02	; 2
     f72:	8a 83       	std	Y+2, r24	; 0x02
     f74:	88 81       	ld	r24, Y
     f76:	99 81       	ldd	r25, Y+1	; 0x01
     f78:	61 2f       	mov	r22, r17
     f7a:	0e 94 99 07 	call	0xf32	; 0xf32 <pin_set>
     f7e:	df 91       	pop	r29
     f80:	cf 91       	pop	r28
     f82:	1f 91       	pop	r17
     f84:	08 95       	ret

00000f86 <rprintfIgnore>:
     f86:	08 95       	ret

00000f88 <rprintfInit>:
     f88:	4f b7       	in	r20, 0x3f	; 63
     f8a:	f8 94       	cli
     f8c:	20 91 00 01 	lds	r18, 0x0100
     f90:	30 91 01 01 	lds	r19, 0x0101
     f94:	90 93 01 01 	sts	0x0101, r25
     f98:	80 93 00 01 	sts	0x0100, r24
     f9c:	4f bf       	out	0x3f, r20	; 63
     f9e:	c9 01       	movw	r24, r18
     fa0:	08 95       	ret

00000fa2 <rprintfChar>:
     fa2:	1f 93       	push	r17
     fa4:	18 2f       	mov	r17, r24
     fa6:	8a 30       	cpi	r24, 0x0A	; 10
     fa8:	31 f4       	brne	.+12     	; 0xfb6 <rprintfChar+0x14>
     faa:	e0 91 00 01 	lds	r30, 0x0100
     fae:	f0 91 01 01 	lds	r31, 0x0101
     fb2:	8d e0       	ldi	r24, 0x0D	; 13
     fb4:	09 95       	icall
     fb6:	e0 91 00 01 	lds	r30, 0x0100
     fba:	f0 91 01 01 	lds	r31, 0x0101
     fbe:	81 2f       	mov	r24, r17
     fc0:	09 95       	icall
     fc2:	1f 91       	pop	r17
     fc4:	08 95       	ret

00000fc6 <rprintfCharN>:
     fc6:	1f 93       	push	r17
     fc8:	cf 93       	push	r28
     fca:	df 93       	push	r29
     fcc:	18 2f       	mov	r17, r24
     fce:	eb 01       	movw	r28, r22
     fd0:	04 c0       	rjmp	.+8      	; 0xfda <rprintfCharN+0x14>
     fd2:	81 2f       	mov	r24, r17
     fd4:	0e 94 d1 07 	call	0xfa2	; 0xfa2 <rprintfChar>
     fd8:	21 97       	sbiw	r28, 0x01	; 1
     fda:	20 97       	sbiw	r28, 0x00	; 0
     fdc:	d1 f7       	brne	.-12     	; 0xfd2 <rprintfCharN+0xc>
     fde:	df 91       	pop	r29
     fe0:	cf 91       	pop	r28
     fe2:	1f 91       	pop	r17
     fe4:	08 95       	ret

00000fe6 <rprintfStr>:
     fe6:	cf 93       	push	r28
     fe8:	df 93       	push	r29
     fea:	ec 01       	movw	r28, r24
     fec:	00 97       	sbiw	r24, 0x00	; 0
     fee:	21 f4       	brne	.+8      	; 0xff8 <rprintfStr+0x12>
     ff0:	06 c0       	rjmp	.+12     	; 0xffe <rprintfStr+0x18>
     ff2:	21 96       	adiw	r28, 0x01	; 1
     ff4:	0e 94 d1 07 	call	0xfa2	; 0xfa2 <rprintfChar>
     ff8:	88 81       	ld	r24, Y
     ffa:	88 23       	and	r24, r24
     ffc:	d1 f7       	brne	.-12     	; 0xff2 <rprintfStr+0xc>
     ffe:	df 91       	pop	r29
    1000:	cf 91       	pop	r28
    1002:	08 95       	ret

00001004 <rprintfProgStr>:
    1004:	cf 93       	push	r28
    1006:	df 93       	push	r29
    1008:	ec 01       	movw	r28, r24
    100a:	00 97       	sbiw	r24, 0x00	; 0
    100c:	19 f4       	brne	.+6      	; 0x1014 <rprintfProgStr+0x10>
    100e:	07 c0       	rjmp	.+14     	; 0x101e <rprintfProgStr+0x1a>
    1010:	0e 94 d1 07 	call	0xfa2	; 0xfa2 <rprintfChar>
    1014:	fe 01       	movw	r30, r28
    1016:	21 96       	adiw	r28, 0x01	; 1
    1018:	84 91       	lpm	r24, Z+
    101a:	88 23       	and	r24, r24
    101c:	c9 f7       	brne	.-14     	; 0x1010 <rprintfProgStr+0xc>
    101e:	df 91       	pop	r29
    1020:	cf 91       	pop	r28
    1022:	08 95       	ret

00001024 <rprintfCRLF>:
    1024:	8a e0       	ldi	r24, 0x0A	; 10
    1026:	0e 94 d1 07 	call	0xfa2	; 0xfa2 <rprintfChar>
    102a:	08 95       	ret

0000102c <rprintfu04>:
    102c:	e8 2f       	mov	r30, r24
    102e:	f0 e0       	ldi	r31, 0x00	; 0
    1030:	ef 70       	andi	r30, 0x0F	; 15
    1032:	f0 70       	andi	r31, 0x00	; 0
    1034:	ed 5f       	subi	r30, 0xFD	; 253
    1036:	fd 4f       	sbci	r31, 0xFD	; 253
    1038:	e4 91       	lpm	r30, Z+
    103a:	8e 2f       	mov	r24, r30
    103c:	0e 94 d1 07 	call	0xfa2	; 0xfa2 <rprintfChar>
    1040:	08 95       	ret

00001042 <servosInit>:
    1042:	2f 92       	push	r2
    1044:	3f 92       	push	r3
    1046:	4f 92       	push	r4
    1048:	5f 92       	push	r5
    104a:	6f 92       	push	r6
    104c:	7f 92       	push	r7
    104e:	8f 92       	push	r8
    1050:	9f 92       	push	r9
    1052:	af 92       	push	r10
    1054:	bf 92       	push	r11
    1056:	cf 92       	push	r12
    1058:	df 92       	push	r13
    105a:	ef 92       	push	r14
    105c:	ff 92       	push	r15
    105e:	0f 93       	push	r16
    1060:	1f 93       	push	r17
    1062:	cf 93       	push	r28
    1064:	df 93       	push	r29
    1066:	5c 01       	movw	r10, r24
    1068:	eb 01       	movw	r28, r22
    106a:	9b 01       	movw	r18, r22
    106c:	29 5e       	subi	r18, 0xE9	; 233
    106e:	3f 4f       	sbci	r19, 0xFF	; 255
    1070:	f9 01       	movw	r30, r18
    1072:	65 90       	lpm	r6, Z+
    1074:	74 90       	lpm	r7, Z+
    1076:	f9 01       	movw	r30, r18
    1078:	25 90       	lpm	r2, Z+
    107a:	34 90       	lpm	r3, Z+
    107c:	27 96       	adiw	r28, 0x07	; 7
    107e:	fe 01       	movw	r30, r28
    1080:	84 91       	lpm	r24, Z+
    1082:	27 97       	sbiw	r28, 0x07	; 7
    1084:	88 23       	and	r24, r24
    1086:	09 f4       	brne	.+2      	; 0x108a <servosInit+0x48>
    1088:	b5 c0       	rjmp	.+362    	; 0x11f4 <servosInit+0x1b2>
    108a:	28 96       	adiw	r28, 0x08	; 8
    108c:	fe 01       	movw	r30, r28
    108e:	84 91       	lpm	r24, Z+
    1090:	28 97       	sbiw	r28, 0x08	; 8
    1092:	82 30       	cpi	r24, 0x02	; 2
    1094:	08 f4       	brcc	.+2      	; 0x1098 <servosInit+0x56>
    1096:	ae c0       	rjmp	.+348    	; 0x11f4 <servosInit+0x1b2>
    1098:	ce 01       	movw	r24, r28
    109a:	04 96       	adiw	r24, 0x04	; 4
    109c:	fc 01       	movw	r30, r24
    109e:	a5 91       	lpm	r26, Z+
    10a0:	b4 91       	lpm	r27, Z+
    10a2:	8c 91       	ld	r24, X
    10a4:	26 96       	adiw	r28, 0x06	; 6
    10a6:	fe 01       	movw	r30, r28
    10a8:	94 91       	lpm	r25, Z+
    10aa:	26 97       	sbiw	r28, 0x06	; 6
    10ac:	89 23       	and	r24, r25
    10ae:	09 f4       	brne	.+2      	; 0x10b2 <servosInit+0x70>
    10b0:	a5 c0       	rjmp	.+330    	; 0x11fc <servosInit+0x1ba>
    10b2:	fe 01       	movw	r30, r28
    10b4:	a5 91       	lpm	r26, Z+
    10b6:	b4 91       	lpm	r27, Z+
    10b8:	8d 90       	ld	r8, X+
    10ba:	9c 90       	ld	r9, X
    10bc:	11 97       	sbiw	r26, 0x01	; 1
    10be:	1a 96       	adiw	r26, 0x0a	; 10
    10c0:	8c 91       	ld	r24, X
    10c2:	88 23       	and	r24, r24
    10c4:	19 f0       	breq	.+6      	; 0x10cc <servosInit+0x8a>
    10c6:	82 ef       	ldi	r24, 0xF2	; 242
    10c8:	0e 94 27 0d 	call	0x1a4e	; 0x1a4e <setError>
    10cc:	d5 01       	movw	r26, r10
    10ce:	12 96       	adiw	r26, 0x02	; 2
    10d0:	8c 91       	ld	r24, X
    10d2:	12 97       	sbiw	r26, 0x02	; 2
    10d4:	17 96       	adiw	r26, 0x07	; 7
    10d6:	8c 93       	st	X, r24
    10d8:	64 e1       	ldi	r22, 0x14	; 20
    10da:	70 e0       	ldi	r23, 0x00	; 0
    10dc:	80 e0       	ldi	r24, 0x00	; 0
    10de:	90 e0       	ldi	r25, 0x00	; 0
    10e0:	a4 01       	movw	r20, r8
    10e2:	0e 94 8b 0a 	call	0x1516	; 0x1516 <ticks_per_ms>
    10e6:	f5 01       	movw	r30, r10
    10e8:	73 87       	std	Z+11, r23	; 0x0b
    10ea:	62 87       	std	Z+10, r22	; 0x0a
    10ec:	60 70       	andi	r22, 0x00	; 0
    10ee:	70 70       	andi	r23, 0x00	; 0
    10f0:	61 15       	cp	r22, r1
    10f2:	71 05       	cpc	r23, r1
    10f4:	81 05       	cpc	r24, r1
    10f6:	91 05       	cpc	r25, r1
    10f8:	11 f0       	breq	.+4      	; 0x10fe <servosInit+0xbc>
    10fa:	86 ee       	ldi	r24, 0xE6	; 230
    10fc:	7c c0       	rjmp	.+248    	; 0x11f6 <servosInit+0x1b4>
    10fe:	d5 01       	movw	r26, r10
    1100:	12 96       	adiw	r26, 0x02	; 2
    1102:	8c 91       	ld	r24, X
    1104:	e8 2e       	mov	r14, r24
    1106:	ff 24       	eor	r15, r15
    1108:	08 94       	sec
    110a:	e1 08       	sbc	r14, r1
    110c:	f1 08       	sbc	r15, r1
    110e:	67 01       	movw	r12, r14
    1110:	cc 0c       	add	r12, r12
    1112:	dd 1c       	adc	r13, r13
    1114:	84 e1       	ldi	r24, 0x14	; 20
    1116:	48 2e       	mov	r4, r24
    1118:	82 e0       	ldi	r24, 0x02	; 2
    111a:	58 2e       	mov	r5, r24
    111c:	33 c0       	rjmp	.+102    	; 0x1184 <servosInit+0x142>
    111e:	d5 01       	movw	r26, r10
    1120:	ed 91       	ld	r30, X+
    1122:	fc 91       	ld	r31, X
    1124:	11 97       	sbiw	r26, 0x01	; 1
    1126:	ec 0d       	add	r30, r12
    1128:	fd 1d       	adc	r31, r13
    112a:	05 91       	lpm	r16, Z+
    112c:	14 91       	lpm	r17, Z+
    112e:	f8 01       	movw	r30, r16
    1130:	51 82       	std	Z+1, r5	; 0x01
    1132:	40 82       	st	Z, r4
    1134:	b5 82       	std	Z+5, r11	; 0x05
    1136:	a4 82       	std	Z+4, r10	; 0x04
    1138:	1a 96       	adiw	r26, 0x0a	; 10
    113a:	8d 91       	ld	r24, X+
    113c:	9c 91       	ld	r25, X
    113e:	1b 97       	sbiw	r26, 0x0b	; 11
    1140:	93 8b       	std	Z+19, r25	; 0x13
    1142:	82 8b       	std	Z+18, r24	; 0x12
    1144:	86 81       	ldd	r24, Z+6	; 0x06
    1146:	97 81       	ldd	r25, Z+7	; 0x07
    1148:	60 e0       	ldi	r22, 0x00	; 0
    114a:	0e 94 f0 06 	call	0xde0	; 0xde0 <pin_make_output>
    114e:	d8 01       	movw	r26, r16
    1150:	18 96       	adiw	r26, 0x08	; 8
    1152:	6d 91       	ld	r22, X+
    1154:	7c 91       	ld	r23, X
    1156:	19 97       	sbiw	r26, 0x09	; 9
    1158:	1a 96       	adiw	r26, 0x0a	; 10
    115a:	4d 91       	ld	r20, X+
    115c:	5c 91       	ld	r21, X
    115e:	1b 97       	sbiw	r26, 0x0b	; 11
    1160:	c8 01       	movw	r24, r16
    1162:	0e 94 0a 0a 	call	0x1414	; 0x1414 <servoSetConfig>
    1166:	c8 01       	movw	r24, r16
    1168:	6f ef       	ldi	r22, 0xFF	; 255
    116a:	0e 94 0a 05 	call	0xa14	; 0xa14 <__act_setConnected>
    116e:	c8 01       	movw	r24, r16
    1170:	60 e0       	ldi	r22, 0x00	; 0
    1172:	0e 94 ea 04 	call	0x9d4	; 0x9d4 <__act_setSpeed>
    1176:	08 94       	sec
    1178:	e1 08       	sbc	r14, r1
    117a:	f1 08       	sbc	r15, r1
    117c:	ee ef       	ldi	r30, 0xFE	; 254
    117e:	ff ef       	ldi	r31, 0xFF	; 255
    1180:	ce 0e       	add	r12, r30
    1182:	df 1e       	adc	r13, r31
    1184:	ff ef       	ldi	r31, 0xFF	; 255
    1186:	ef 16       	cp	r14, r31
    1188:	ff ef       	ldi	r31, 0xFF	; 255
    118a:	ff 06       	cpc	r15, r31
    118c:	41 f6       	brne	.-112    	; 0x111e <servosInit+0xdc>
    118e:	0e 94 a9 0b 	call	0x1752	; 0x1752 <getError>
    1192:	88 23       	and	r24, r24
    1194:	d1 f5       	brne	.+116    	; 0x120a <servosInit+0x1c8>
    1196:	81 01       	movw	r16, r2
    1198:	00 5f       	subi	r16, 0xF0	; 240
    119a:	1f 4f       	sbci	r17, 0xFF	; 255
    119c:	df b6       	in	r13, 0x3f	; 63
    119e:	f8 94       	cli
    11a0:	86 2d       	mov	r24, r6
    11a2:	97 2d       	mov	r25, r7
    11a4:	0e 94 ec 0d 	call	0x1bd8	; 0x1bd8 <compareGetThreshold>
    11a8:	d5 01       	movw	r26, r10
    11aa:	1a 96       	adiw	r26, 0x0a	; 10
    11ac:	4d 91       	ld	r20, X+
    11ae:	5c 91       	ld	r21, X
    11b0:	1b 97       	sbiw	r26, 0x0b	; 11
    11b2:	48 0f       	add	r20, r24
    11b4:	59 1f       	adc	r21, r25
    11b6:	86 2d       	mov	r24, r6
    11b8:	97 2d       	mov	r25, r7
    11ba:	6b e5       	ldi	r22, 0x5B	; 91
    11bc:	79 e0       	ldi	r23, 0x09	; 9
    11be:	95 01       	movw	r18, r10
    11c0:	0e 94 ab 10 	call	0x2156	; 0x2156 <compareAttach>
    11c4:	c8 01       	movw	r24, r16
    11c6:	0e 94 ec 0d 	call	0x1bd8	; 0x1bd8 <compareGetThreshold>
    11ca:	f5 01       	movw	r30, r10
    11cc:	42 85       	ldd	r20, Z+10	; 0x0a
    11ce:	53 85       	ldd	r21, Z+11	; 0x0b
    11d0:	48 0f       	add	r20, r24
    11d2:	59 1f       	adc	r21, r25
    11d4:	c8 01       	movw	r24, r16
    11d6:	6b e3       	ldi	r22, 0x3B	; 59
    11d8:	79 e0       	ldi	r23, 0x09	; 9
    11da:	95 01       	movw	r18, r10
    11dc:	0e 94 ab 10 	call	0x2156	; 0x2156 <compareAttach>
    11e0:	c8 01       	movw	r24, r16
    11e2:	03 96       	adiw	r24, 0x03	; 3
    11e4:	0e 94 d8 05 	call	0xbb0	; 0xbb0 <__portMaskClear>
    11e8:	ce 01       	movw	r24, r28
    11ea:	b4 01       	movw	r22, r8
    11ec:	0e 94 41 0f 	call	0x1e82	; 0x1e82 <timerSetPrescaler>
    11f0:	df be       	out	0x3f, r13	; 63
    11f2:	0b c0       	rjmp	.+22     	; 0x120a <servosInit+0x1c8>
    11f4:	89 ef       	ldi	r24, 0xF9	; 249
    11f6:	0e 94 27 0d 	call	0x1a4e	; 0x1a4e <setError>
    11fa:	07 c0       	rjmp	.+14     	; 0x120a <servosInit+0x1c8>
    11fc:	ce 01       	movw	r24, r28
    11fe:	69 e1       	ldi	r22, 0x19	; 25
    1200:	70 e0       	ldi	r23, 0x00	; 0
    1202:	0e 94 e1 0e 	call	0x1dc2	; 0x1dc2 <timerGetBestPrescaler>
    1206:	4c 01       	movw	r8, r24
    1208:	61 cf       	rjmp	.-318    	; 0x10cc <servosInit+0x8a>
    120a:	df 91       	pop	r29
    120c:	cf 91       	pop	r28
    120e:	1f 91       	pop	r17
    1210:	0f 91       	pop	r16
    1212:	ff 90       	pop	r15
    1214:	ef 90       	pop	r14
    1216:	df 90       	pop	r13
    1218:	cf 90       	pop	r12
    121a:	bf 90       	pop	r11
    121c:	af 90       	pop	r10
    121e:	9f 90       	pop	r9
    1220:	8f 90       	pop	r8
    1222:	7f 90       	pop	r7
    1224:	6f 90       	pop	r6
    1226:	5f 90       	pop	r5
    1228:	4f 90       	pop	r4
    122a:	3f 90       	pop	r3
    122c:	2f 90       	pop	r2
    122e:	08 95       	ret

00001230 <setSpeed>:
    1230:	0f 93       	push	r16
    1232:	1f 93       	push	r17
    1234:	cf 93       	push	r28
    1236:	df 93       	push	r29
    1238:	ec 01       	movw	r28, r24
    123a:	2c 85       	ldd	r18, Y+12	; 0x0c
    123c:	3d 85       	ldd	r19, Y+13	; 0x0d
    123e:	0e 85       	ldd	r16, Y+14	; 0x0e
    1240:	1f 85       	ldd	r17, Y+15	; 0x0f
    1242:	86 2f       	mov	r24, r22
    1244:	99 27       	eor	r25, r25
    1246:	87 fd       	sbrc	r24, 7
    1248:	90 95       	com	r25
    124a:	61 e8       	ldi	r22, 0x81	; 129
    124c:	7f ef       	ldi	r23, 0xFF	; 255
    124e:	4f e7       	ldi	r20, 0x7F	; 127
    1250:	50 e0       	ldi	r21, 0x00	; 0
    1252:	0e 94 73 06 	call	0xce6	; 0xce6 <interpolateU>
    1256:	9c 01       	movw	r18, r24
    1258:	88 89       	ldd	r24, Y+16	; 0x10
    125a:	99 89       	ldd	r25, Y+17	; 0x11
    125c:	28 17       	cp	r18, r24
    125e:	39 07       	cpc	r19, r25
    1260:	29 f0       	breq	.+10     	; 0x126c <setSpeed+0x3c>
    1262:	8f b7       	in	r24, 0x3f	; 63
    1264:	f8 94       	cli
    1266:	39 8b       	std	Y+17, r19	; 0x11
    1268:	28 8b       	std	Y+16, r18	; 0x10
    126a:	8f bf       	out	0x3f, r24	; 63
    126c:	df 91       	pop	r29
    126e:	cf 91       	pop	r28
    1270:	1f 91       	pop	r17
    1272:	0f 91       	pop	r16
    1274:	08 95       	ret

00001276 <__servoEndService>:
    1276:	cf 93       	push	r28
    1278:	df 93       	push	r29
    127a:	ec 01       	movw	r28, r24
    127c:	fb 01       	movw	r30, r22
    127e:	97 81       	ldd	r25, Z+7	; 0x07
    1280:	82 81       	ldd	r24, Z+2	; 0x02
    1282:	98 17       	cp	r25, r24
    1284:	88 f4       	brcc	.+34     	; 0x12a8 <__servoEndService+0x32>
    1286:	89 2f       	mov	r24, r25
    1288:	90 e0       	ldi	r25, 0x00	; 0
    128a:	88 0f       	add	r24, r24
    128c:	99 1f       	adc	r25, r25
    128e:	20 81       	ld	r18, Z
    1290:	31 81       	ldd	r19, Z+1	; 0x01
    1292:	28 0f       	add	r18, r24
    1294:	39 1f       	adc	r19, r25
    1296:	f9 01       	movw	r30, r18
    1298:	a5 91       	lpm	r26, Z+
    129a:	b4 91       	lpm	r27, Z+
    129c:	16 96       	adiw	r26, 0x06	; 6
    129e:	8d 91       	ld	r24, X+
    12a0:	9c 91       	ld	r25, X
    12a2:	17 97       	sbiw	r26, 0x07	; 7
    12a4:	0e 94 50 07 	call	0xea0	; 0xea0 <pin_low>
    12a8:	ce 01       	movw	r24, r28
    12aa:	03 96       	adiw	r24, 0x03	; 3
    12ac:	0e 94 d8 05 	call	0xbb0	; 0xbb0 <__portMaskClear>
    12b0:	df 91       	pop	r29
    12b2:	cf 91       	pop	r28
    12b4:	08 95       	ret

000012b6 <__servoStartService>:
    12b6:	8f 92       	push	r8
    12b8:	9f 92       	push	r9
    12ba:	af 92       	push	r10
    12bc:	bf 92       	push	r11
    12be:	cf 92       	push	r12
    12c0:	df 92       	push	r13
    12c2:	ef 92       	push	r14
    12c4:	ff 92       	push	r15
    12c6:	0f 93       	push	r16
    12c8:	1f 93       	push	r17
    12ca:	cf 93       	push	r28
    12cc:	df 93       	push	r29
    12ce:	5c 01       	movw	r10, r24
    12d0:	eb 01       	movw	r28, r22
    12d2:	8c 01       	movw	r16, r24
    12d4:	0e 5f       	subi	r16, 0xFE	; 254
    12d6:	1f 4f       	sbci	r17, 0xFF	; 255
    12d8:	f8 01       	movw	r30, r16
    12da:	94 91       	lpm	r25, Z+
    12dc:	8e e2       	ldi	r24, 0x2E	; 46
    12de:	98 9f       	mul	r25, r24
    12e0:	70 01       	movw	r14, r0
    12e2:	11 24       	eor	r1, r1
    12e4:	81 e2       	ldi	r24, 0x21	; 33
    12e6:	91 e0       	ldi	r25, 0x01	; 1
    12e8:	e8 0e       	add	r14, r24
    12ea:	f9 1e       	adc	r15, r25
    12ec:	f7 01       	movw	r30, r14
    12ee:	77 96       	adiw	r30, 0x17	; 23
    12f0:	85 91       	lpm	r24, Z+
    12f2:	94 91       	lpm	r25, Z+
    12f4:	50 e1       	ldi	r21, 0x10	; 16
    12f6:	85 2e       	mov	r8, r21
    12f8:	91 2c       	mov	r9, r1
    12fa:	88 0e       	add	r8, r24
    12fc:	99 1e       	adc	r9, r25
    12fe:	43 e1       	ldi	r20, 0x13	; 19
    1300:	c4 2e       	mov	r12, r20
    1302:	d1 2c       	mov	r13, r1
    1304:	c8 0e       	add	r12, r24
    1306:	d9 1e       	adc	r13, r25
    1308:	02 c0       	rjmp	.+4      	; 0x130e <__servoStartService+0x58>
    130a:	0e 94 b4 05 	call	0xb68	; 0xb68 <breathe>
    130e:	c6 01       	movw	r24, r12
    1310:	0e 94 cb 05 	call	0xb96	; 0xb96 <__portMaskGet>
    1314:	88 23       	and	r24, r24
    1316:	c9 f7       	brne	.-14     	; 0x130a <__servoStartService+0x54>
    1318:	8b 81       	ldd	r24, Y+3	; 0x03
    131a:	88 23       	and	r24, r24
    131c:	21 f0       	breq	.+8      	; 0x1326 <__servoStartService+0x70>
    131e:	8f 81       	ldd	r24, Y+7	; 0x07
    1320:	8f 5f       	subi	r24, 0xFF	; 255
    1322:	8f 83       	std	Y+7, r24	; 0x07
    1324:	10 c0       	rjmp	.+32     	; 0x1346 <__servoStartService+0x90>
    1326:	8f ef       	ldi	r24, 0xFF	; 255
    1328:	8b 83       	std	Y+3, r24	; 0x03
    132a:	f8 01       	movw	r30, r16
    132c:	84 91       	lpm	r24, Z+
    132e:	2e e2       	ldi	r18, 0x2E	; 46
    1330:	82 9f       	mul	r24, r18
    1332:	c0 01       	movw	r24, r0
    1334:	11 24       	eor	r1, r1
    1336:	8f 5d       	subi	r24, 0xDF	; 223
    1338:	9e 4f       	sbci	r25, 0xFE	; 254
    133a:	0e 94 2b 0b 	call	0x1656	; 0x1656 <timerGetCounter>
    133e:	bc 01       	movw	r22, r24
    1340:	c5 01       	movw	r24, r10
    1342:	0e 94 b7 0d 	call	0x1b6e	; 0x1b6e <compareSetThreshold>
    1346:	9f 81       	ldd	r25, Y+7	; 0x07
    1348:	8a 81       	ldd	r24, Y+2	; 0x02
    134a:	98 17       	cp	r25, r24
    134c:	09 f4       	brne	.+2      	; 0x1350 <__servoStartService+0x9a>
    134e:	3c c0       	rjmp	.+120    	; 0x13c8 <__servoStartService+0x112>
    1350:	89 17       	cp	r24, r25
    1352:	18 f4       	brcc	.+6      	; 0x135a <__servoStartService+0xa4>
    1354:	1f 82       	std	Y+7, r1	; 0x07
    1356:	19 86       	std	Y+9, r1	; 0x09
    1358:	18 86       	std	Y+8, r1	; 0x08
    135a:	8f 81       	ldd	r24, Y+7	; 0x07
    135c:	90 e0       	ldi	r25, 0x00	; 0
    135e:	88 0f       	add	r24, r24
    1360:	99 1f       	adc	r25, r25
    1362:	e8 81       	ld	r30, Y
    1364:	f9 81       	ldd	r31, Y+1	; 0x01
    1366:	e8 0f       	add	r30, r24
    1368:	f9 1f       	adc	r31, r25
    136a:	05 91       	lpm	r16, Z+
    136c:	14 91       	lpm	r17, Z+
    136e:	c7 01       	movw	r24, r14
    1370:	0e 94 2b 0b 	call	0x1656	; 0x1656 <timerGetCounter>
    1374:	7c 01       	movw	r14, r24
    1376:	f8 01       	movw	r30, r16
    1378:	83 81       	ldd	r24, Z+3	; 0x03
    137a:	80 ff       	sbrs	r24, 0
    137c:	04 c0       	rjmp	.+8      	; 0x1386 <__servoStartService+0xd0>
    137e:	86 81       	ldd	r24, Z+6	; 0x06
    1380:	97 81       	ldd	r25, Z+7	; 0x07
    1382:	0e 94 75 07 	call	0xeea	; 0xeea <pin_high>
    1386:	f8 01       	movw	r30, r16
    1388:	60 89       	ldd	r22, Z+16	; 0x10
    138a:	71 89       	ldd	r23, Z+17	; 0x11
    138c:	6e 0d       	add	r22, r14
    138e:	7f 1d       	adc	r23, r15
    1390:	c4 01       	movw	r24, r8
    1392:	0e 94 b7 0d 	call	0x1b6e	; 0x1b6e <compareSetThreshold>
    1396:	c4 01       	movw	r24, r8
    1398:	08 96       	adiw	r24, 0x08	; 8
    139a:	0e 94 bf 05 	call	0xb7e	; 0xb7e <__portMaskSet>
    139e:	c6 01       	movw	r24, r12
    13a0:	0e 94 bf 05 	call	0xb7e	; 0xb7e <__portMaskSet>
    13a4:	f8 01       	movw	r30, r16
    13a6:	66 85       	ldd	r22, Z+14	; 0x0e
    13a8:	77 85       	ldd	r23, Z+15	; 0x0f
    13aa:	6e 0d       	add	r22, r14
    13ac:	7f 1d       	adc	r23, r15
    13ae:	c5 01       	movw	r24, r10
    13b0:	0e 94 b7 0d 	call	0x1b6e	; 0x1b6e <compareSetThreshold>
    13b4:	88 85       	ldd	r24, Y+8	; 0x08
    13b6:	99 85       	ldd	r25, Y+9	; 0x09
    13b8:	f8 01       	movw	r30, r16
    13ba:	26 85       	ldd	r18, Z+14	; 0x0e
    13bc:	37 85       	ldd	r19, Z+15	; 0x0f
    13be:	82 0f       	add	r24, r18
    13c0:	93 1f       	adc	r25, r19
    13c2:	99 87       	std	Y+9, r25	; 0x09
    13c4:	88 87       	std	Y+8, r24	; 0x08
    13c6:	19 c0       	rjmp	.+50     	; 0x13fa <__servoStartService+0x144>
    13c8:	c6 01       	movw	r24, r12
    13ca:	0e 94 d8 05 	call	0xbb0	; 0xbb0 <__portMaskClear>
    13ce:	88 85       	ldd	r24, Y+8	; 0x08
    13d0:	99 85       	ldd	r25, Y+9	; 0x09
    13d2:	6a 85       	ldd	r22, Y+10	; 0x0a
    13d4:	7b 85       	ldd	r23, Y+11	; 0x0b
    13d6:	68 17       	cp	r22, r24
    13d8:	79 07       	cpc	r23, r25
    13da:	18 f4       	brcc	.+6      	; 0x13e2 <__servoStartService+0x12c>
    13dc:	c4 e6       	ldi	r28, 0x64	; 100
    13de:	d0 e0       	ldi	r29, 0x00	; 0
    13e0:	03 c0       	rjmp	.+6      	; 0x13e8 <__servoStartService+0x132>
    13e2:	eb 01       	movw	r28, r22
    13e4:	c8 1b       	sub	r28, r24
    13e6:	d9 0b       	sbc	r29, r25
    13e8:	c5 01       	movw	r24, r10
    13ea:	0e 94 ec 0d 	call	0x1bd8	; 0x1bd8 <compareGetThreshold>
    13ee:	c8 0f       	add	r28, r24
    13f0:	d9 1f       	adc	r29, r25
    13f2:	c5 01       	movw	r24, r10
    13f4:	be 01       	movw	r22, r28
    13f6:	0e 94 b7 0d 	call	0x1b6e	; 0x1b6e <compareSetThreshold>
    13fa:	df 91       	pop	r29
    13fc:	cf 91       	pop	r28
    13fe:	1f 91       	pop	r17
    1400:	0f 91       	pop	r16
    1402:	ff 90       	pop	r15
    1404:	ef 90       	pop	r14
    1406:	df 90       	pop	r13
    1408:	cf 90       	pop	r12
    140a:	bf 90       	pop	r11
    140c:	af 90       	pop	r10
    140e:	9f 90       	pop	r9
    1410:	8f 90       	pop	r8
    1412:	08 95       	ret

00001414 <servoSetConfig>:
    1414:	9f 92       	push	r9
    1416:	af 92       	push	r10
    1418:	bf 92       	push	r11
    141a:	cf 92       	push	r12
    141c:	df 92       	push	r13
    141e:	ef 92       	push	r14
    1420:	ff 92       	push	r15
    1422:	0f 93       	push	r16
    1424:	1f 93       	push	r17
    1426:	cf 93       	push	r28
    1428:	df 93       	push	r29
    142a:	ec 01       	movw	r28, r24
    142c:	7b 01       	movw	r14, r22
    142e:	8a 01       	movw	r16, r20
    1430:	79 87       	std	Y+9, r23	; 0x09
    1432:	68 87       	std	Y+8, r22	; 0x08
    1434:	5b 87       	std	Y+11, r21	; 0x0b
    1436:	4a 87       	std	Y+10, r20	; 0x0a
    1438:	8c 81       	ldd	r24, Y+4	; 0x04
    143a:	9d 81       	ldd	r25, Y+5	; 0x05
    143c:	89 2b       	or	r24, r25
    143e:	09 f4       	brne	.+2      	; 0x1442 <servoSetConfig+0x2e>
    1440:	5e c0       	rjmp	.+188    	; 0x14fe <servoSetConfig+0xea>
    1442:	9f b6       	in	r9, 0x3f	; 63
    1444:	f8 94       	cli
    1446:	8a 89       	ldd	r24, Y+18	; 0x12
    1448:	9b 89       	ldd	r25, Y+19	; 0x13
    144a:	68 ee       	ldi	r22, 0xE8	; 232
    144c:	73 e0       	ldi	r23, 0x03	; 3
    144e:	0e 94 bd 1e 	call	0x3d7a	; 0x3d7a <__udivmodhi4>
    1452:	5b 01       	movw	r10, r22
    1454:	cc 24       	eor	r12, r12
    1456:	dd 24       	eor	r13, r13
    1458:	b7 01       	movw	r22, r14
    145a:	60 1b       	sub	r22, r16
    145c:	71 0b       	sbc	r23, r17
    145e:	80 e0       	ldi	r24, 0x00	; 0
    1460:	90 e0       	ldi	r25, 0x00	; 0
    1462:	a6 01       	movw	r20, r12
    1464:	95 01       	movw	r18, r10
    1466:	0e 94 9e 1e 	call	0x3d3c	; 0x3d3c <__mulsi3>
    146a:	24 e1       	ldi	r18, 0x14	; 20
    146c:	30 e0       	ldi	r19, 0x00	; 0
    146e:	40 e0       	ldi	r20, 0x00	; 0
    1470:	50 e0       	ldi	r21, 0x00	; 0
    1472:	0e 94 d1 1e 	call	0x3da2	; 0x3da2 <__udivmodsi4>
    1476:	c9 01       	movw	r24, r18
    1478:	da 01       	movw	r26, r20
    147a:	9c 01       	movw	r18, r24
    147c:	ad 01       	movw	r20, r26
    147e:	da 01       	movw	r26, r20
    1480:	c9 01       	movw	r24, r18
    1482:	80 70       	andi	r24, 0x00	; 0
    1484:	90 70       	andi	r25, 0x00	; 0
    1486:	00 97       	sbiw	r24, 0x00	; 0
    1488:	a1 05       	cpc	r26, r1
    148a:	b1 05       	cpc	r27, r1
    148c:	39 f0       	breq	.+14     	; 0x149c <servoSetConfig+0x88>
    148e:	86 ee       	ldi	r24, 0xE6	; 230
    1490:	0e 94 27 0d 	call	0x1a4e	; 0x1a4e <setError>
    1494:	2f ef       	ldi	r18, 0xFF	; 255
    1496:	3f ef       	ldi	r19, 0xFF	; 255
    1498:	40 e0       	ldi	r20, 0x00	; 0
    149a:	50 e0       	ldi	r21, 0x00	; 0
    149c:	3d 87       	std	Y+13, r19	; 0x0d
    149e:	2c 87       	std	Y+12, r18	; 0x0c
    14a0:	0e 0d       	add	r16, r14
    14a2:	1f 1d       	adc	r17, r15
    14a4:	b8 01       	movw	r22, r16
    14a6:	80 e0       	ldi	r24, 0x00	; 0
    14a8:	90 e0       	ldi	r25, 0x00	; 0
    14aa:	a6 01       	movw	r20, r12
    14ac:	95 01       	movw	r18, r10
    14ae:	0e 94 9e 1e 	call	0x3d3c	; 0x3d3c <__mulsi3>
    14b2:	24 e1       	ldi	r18, 0x14	; 20
    14b4:	30 e0       	ldi	r19, 0x00	; 0
    14b6:	40 e0       	ldi	r20, 0x00	; 0
    14b8:	50 e0       	ldi	r21, 0x00	; 0
    14ba:	0e 94 d1 1e 	call	0x3da2	; 0x3da2 <__udivmodsi4>
    14be:	c9 01       	movw	r24, r18
    14c0:	da 01       	movw	r26, r20
    14c2:	9c 01       	movw	r18, r24
    14c4:	ad 01       	movw	r20, r26
    14c6:	da 01       	movw	r26, r20
    14c8:	c9 01       	movw	r24, r18
    14ca:	80 70       	andi	r24, 0x00	; 0
    14cc:	90 70       	andi	r25, 0x00	; 0
    14ce:	00 97       	sbiw	r24, 0x00	; 0
    14d0:	a1 05       	cpc	r26, r1
    14d2:	b1 05       	cpc	r27, r1
    14d4:	39 f0       	breq	.+14     	; 0x14e4 <servoSetConfig+0xd0>
    14d6:	86 ee       	ldi	r24, 0xE6	; 230
    14d8:	0e 94 27 0d 	call	0x1a4e	; 0x1a4e <setError>
    14dc:	2f ef       	ldi	r18, 0xFF	; 255
    14de:	3f ef       	ldi	r19, 0xFF	; 255
    14e0:	40 e0       	ldi	r20, 0x00	; 0
    14e2:	50 e0       	ldi	r21, 0x00	; 0
    14e4:	3f 87       	std	Y+15, r19	; 0x0f
    14e6:	2e 87       	std	Y+14, r18	; 0x0e
    14e8:	8b 81       	ldd	r24, Y+3	; 0x03
    14ea:	80 ff       	sbrs	r24, 0
    14ec:	07 c0       	rjmp	.+14     	; 0x14fc <servoSetConfig+0xe8>
    14ee:	6a 81       	ldd	r22, Y+2	; 0x02
    14f0:	61 50       	subi	r22, 0x01	; 1
    14f2:	6a 83       	std	Y+2, r22	; 0x02
    14f4:	6f 5f       	subi	r22, 0xFF	; 255
    14f6:	ce 01       	movw	r24, r28
    14f8:	0e 94 ea 04 	call	0x9d4	; 0x9d4 <__act_setSpeed>
    14fc:	9f be       	out	0x3f, r9	; 63
    14fe:	df 91       	pop	r29
    1500:	cf 91       	pop	r28
    1502:	1f 91       	pop	r17
    1504:	0f 91       	pop	r16
    1506:	ff 90       	pop	r15
    1508:	ef 90       	pop	r14
    150a:	df 90       	pop	r13
    150c:	cf 90       	pop	r12
    150e:	bf 90       	pop	r11
    1510:	af 90       	pop	r10
    1512:	9f 90       	pop	r9
    1514:	08 95       	ret

00001516 <ticks_per_ms>:
    1516:	ef 92       	push	r14
    1518:	ff 92       	push	r15
    151a:	0f 93       	push	r16
    151c:	1f 93       	push	r17
    151e:	7a 01       	movw	r14, r20
    1520:	20 91 9b 01 	lds	r18, 0x019B
    1524:	30 91 9c 01 	lds	r19, 0x019C
    1528:	40 e0       	ldi	r20, 0x00	; 0
    152a:	50 e0       	ldi	r21, 0x00	; 0
    152c:	0e 94 9e 1e 	call	0x3d3c	; 0x3d3c <__mulsi3>
    1530:	00 e0       	ldi	r16, 0x00	; 0
    1532:	10 e0       	ldi	r17, 0x00	; 0
    1534:	a8 01       	movw	r20, r16
    1536:	97 01       	movw	r18, r14
    1538:	0e 94 d1 1e 	call	0x3da2	; 0x3da2 <__udivmodsi4>
    153c:	ca 01       	movw	r24, r20
    153e:	b9 01       	movw	r22, r18
    1540:	1f 91       	pop	r17
    1542:	0f 91       	pop	r16
    1544:	ff 90       	pop	r15
    1546:	ef 90       	pop	r14
    1548:	08 95       	ret

0000154a <delay_cycles>:
    154a:	61 30       	cpi	r22, 0x01	; 1
    154c:	23 e0       	ldi	r18, 0x03	; 3
    154e:	72 07       	cpc	r23, r18
    1550:	20 e0       	ldi	r18, 0x00	; 0
    1552:	82 07       	cpc	r24, r18
    1554:	20 e0       	ldi	r18, 0x00	; 0
    1556:	92 07       	cpc	r25, r18
    1558:	48 f4       	brcc	.+18     	; 0x156c <delay_cycles+0x22>
    155a:	23 e0       	ldi	r18, 0x03	; 3
    155c:	30 e0       	ldi	r19, 0x00	; 0
    155e:	40 e0       	ldi	r20, 0x00	; 0
    1560:	50 e0       	ldi	r21, 0x00	; 0
    1562:	0e 94 d1 1e 	call	0x3da2	; 0x3da2 <__udivmodsi4>
    1566:	2a 95       	dec	r18
    1568:	f1 f7       	brne	.-4      	; 0x1566 <delay_cycles+0x1c>
    156a:	08 95       	ret
    156c:	9b 01       	movw	r18, r22
    156e:	ac 01       	movw	r20, r24
    1570:	82 e0       	ldi	r24, 0x02	; 2
    1572:	56 95       	lsr	r21
    1574:	47 95       	ror	r20
    1576:	37 95       	ror	r19
    1578:	27 95       	ror	r18
    157a:	8a 95       	dec	r24
    157c:	d1 f7       	brne	.-12     	; 0x1572 <delay_cycles+0x28>
    157e:	da 01       	movw	r26, r20
    1580:	c9 01       	movw	r24, r18
    1582:	20 30       	cpi	r18, 0x00	; 0
    1584:	60 e0       	ldi	r22, 0x00	; 0
    1586:	36 07       	cpc	r19, r22
    1588:	61 e0       	ldi	r22, 0x01	; 1
    158a:	46 07       	cpc	r20, r22
    158c:	60 e0       	ldi	r22, 0x00	; 0
    158e:	56 07       	cpc	r21, r22
    1590:	20 f0       	brcs	.+8      	; 0x159a <delay_cycles+0x50>
    1592:	8f ef       	ldi	r24, 0xFF	; 255
    1594:	9f ef       	ldi	r25, 0xFF	; 255
    1596:	a0 e0       	ldi	r26, 0x00	; 0
    1598:	b0 e0       	ldi	r27, 0x00	; 0
    159a:	fc 01       	movw	r30, r24
    159c:	31 97       	sbiw	r30, 0x01	; 1
    159e:	f1 f7       	brne	.-4      	; 0x159c <delay_cycles+0x52>
    15a0:	a0 e0       	ldi	r26, 0x00	; 0
    15a2:	b0 e0       	ldi	r27, 0x00	; 0
    15a4:	28 1b       	sub	r18, r24
    15a6:	39 0b       	sbc	r19, r25
    15a8:	4a 0b       	sbc	r20, r26
    15aa:	5b 0b       	sbc	r21, r27
    15ac:	41 f7       	brne	.-48     	; 0x157e <delay_cycles+0x34>
    15ae:	08 95       	ret

000015b0 <nullTimerCompareCallback>:
    15b0:	08 95       	ret

000015b2 <clockCallback>:
    15b2:	80 91 a6 01 	lds	r24, 0x01A6
    15b6:	90 91 a7 01 	lds	r25, 0x01A7
    15ba:	a0 91 a8 01 	lds	r26, 0x01A8
    15be:	b0 91 a9 01 	lds	r27, 0x01A9
    15c2:	01 96       	adiw	r24, 0x01	; 1
    15c4:	a1 1d       	adc	r26, r1
    15c6:	b1 1d       	adc	r27, r1
    15c8:	80 93 a6 01 	sts	0x01A6, r24
    15cc:	90 93 a7 01 	sts	0x01A7, r25
    15d0:	a0 93 a8 01 	sts	0x01A8, r26
    15d4:	b0 93 a9 01 	sts	0x01A9, r27
    15d8:	08 95       	ret

000015da <__timerPrescalerIndex>:
    15da:	fc 01       	movw	r30, r24
    15dc:	bc 96       	adiw	r30, 0x2c	; 44
    15de:	25 91       	lpm	r18, Z+
    15e0:	34 91       	lpm	r19, Z+
    15e2:	f9 01       	movw	r30, r18
    15e4:	85 91       	lpm	r24, Z+
    15e6:	94 91       	lpm	r25, Z+
    15e8:	58 2f       	mov	r21, r24
    15ea:	2e 5f       	subi	r18, 0xFE	; 254
    15ec:	3f 4f       	sbci	r19, 0xFF	; 255
    15ee:	40 e0       	ldi	r20, 0x00	; 0
    15f0:	0c c0       	rjmp	.+24     	; 0x160a <__timerPrescalerIndex+0x30>
    15f2:	f9 01       	movw	r30, r18
    15f4:	85 91       	lpm	r24, Z+
    15f6:	94 91       	lpm	r25, Z+
    15f8:	2e 5f       	subi	r18, 0xFE	; 254
    15fa:	3f 4f       	sbci	r19, 0xFF	; 255
    15fc:	86 17       	cp	r24, r22
    15fe:	97 07       	cpc	r25, r23
    1600:	19 f4       	brne	.+6      	; 0x1608 <__timerPrescalerIndex+0x2e>
    1602:	24 2f       	mov	r18, r20
    1604:	30 e0       	ldi	r19, 0x00	; 0
    1606:	05 c0       	rjmp	.+10     	; 0x1612 <__timerPrescalerIndex+0x38>
    1608:	4f 5f       	subi	r20, 0xFF	; 255
    160a:	45 17       	cp	r20, r21
    160c:	90 f3       	brcs	.-28     	; 0x15f2 <__timerPrescalerIndex+0x18>
    160e:	2f ef       	ldi	r18, 0xFF	; 255
    1610:	3f ef       	ldi	r19, 0xFF	; 255
    1612:	c9 01       	movw	r24, r18
    1614:	08 95       	ret

00001616 <timerGetClosestPrescale>:
    1616:	0f 93       	push	r16
    1618:	1f 93       	push	r17
    161a:	cf 93       	push	r28
    161c:	df 93       	push	r29
    161e:	8c 01       	movw	r16, r24
    1620:	24 e0       	ldi	r18, 0x04	; 4
    1622:	61 30       	cpi	r22, 0x01	; 1
    1624:	72 07       	cpc	r23, r18
    1626:	10 f0       	brcs	.+4      	; 0x162c <timerGetClosestPrescale+0x16>
    1628:	60 e0       	ldi	r22, 0x00	; 0
    162a:	74 e0       	ldi	r23, 0x04	; 4
    162c:	eb 01       	movw	r28, r22
    162e:	61 15       	cp	r22, r1
    1630:	71 05       	cpc	r23, r1
    1632:	21 f4       	brne	.+8      	; 0x163c <timerGetClosestPrescale+0x26>
    1634:	c1 e0       	ldi	r28, 0x01	; 1
    1636:	d0 e0       	ldi	r29, 0x00	; 0
    1638:	01 c0       	rjmp	.+2      	; 0x163c <timerGetClosestPrescale+0x26>
    163a:	21 96       	adiw	r28, 0x01	; 1
    163c:	c8 01       	movw	r24, r16
    163e:	be 01       	movw	r22, r28
    1640:	0e 94 ed 0a 	call	0x15da	; 0x15da <__timerPrescalerIndex>
    1644:	8f 5f       	subi	r24, 0xFF	; 255
    1646:	9f 4f       	sbci	r25, 0xFF	; 255
    1648:	c1 f3       	breq	.-16     	; 0x163a <timerGetClosestPrescale+0x24>
    164a:	ce 01       	movw	r24, r28
    164c:	df 91       	pop	r29
    164e:	cf 91       	pop	r28
    1650:	1f 91       	pop	r17
    1652:	0f 91       	pop	r16
    1654:	08 95       	ret

00001656 <timerGetCounter>:
    1656:	9c 01       	movw	r18, r24
    1658:	02 96       	adiw	r24, 0x02	; 2
    165a:	fc 01       	movw	r30, r24
    165c:	a5 91       	lpm	r26, Z+
    165e:	b4 91       	lpm	r27, Z+
    1660:	29 5f       	subi	r18, 0xF9	; 249
    1662:	3f 4f       	sbci	r19, 0xFF	; 255
    1664:	f9 01       	movw	r30, r18
    1666:	84 91       	lpm	r24, Z+
    1668:	88 23       	and	r24, r24
    166a:	19 f0       	breq	.+6      	; 0x1672 <timerGetCounter+0x1c>
    166c:	2d 91       	ld	r18, X+
    166e:	3c 91       	ld	r19, X
    1670:	03 c0       	rjmp	.+6      	; 0x1678 <timerGetCounter+0x22>
    1672:	8c 91       	ld	r24, X
    1674:	28 2f       	mov	r18, r24
    1676:	30 e0       	ldi	r19, 0x00	; 0
    1678:	c9 01       	movw	r24, r18
    167a:	08 95       	ret

0000167c <compareSetOutputMode>:
    167c:	9c 01       	movw	r18, r24
    167e:	0b 96       	adiw	r24, 0x0b	; 11
    1680:	fc 01       	movw	r30, r24
    1682:	a5 91       	lpm	r26, Z+
    1684:	b4 91       	lpm	r27, Z+
    1686:	23 5f       	subi	r18, 0xF3	; 243
    1688:	3f 4f       	sbci	r19, 0xFF	; 255
    168a:	f9 01       	movw	r30, r18
    168c:	24 91       	lpm	r18, Z+
    168e:	70 e0       	ldi	r23, 0x00	; 0
    1690:	02 2e       	mov	r0, r18
    1692:	02 c0       	rjmp	.+4      	; 0x1698 <compareSetOutputMode+0x1c>
    1694:	66 0f       	add	r22, r22
    1696:	77 1f       	adc	r23, r23
    1698:	0a 94       	dec	r0
    169a:	e2 f7       	brpl	.-8      	; 0x1694 <compareSetOutputMode+0x18>
    169c:	81 e0       	ldi	r24, 0x01	; 1
    169e:	90 e0       	ldi	r25, 0x00	; 0
    16a0:	02 c0       	rjmp	.+4      	; 0x16a6 <compareSetOutputMode+0x2a>
    16a2:	88 0f       	add	r24, r24
    16a4:	99 1f       	adc	r25, r25
    16a6:	2a 95       	dec	r18
    16a8:	e2 f7       	brpl	.-8      	; 0x16a2 <compareSetOutputMode+0x26>
    16aa:	28 2f       	mov	r18, r24
    16ac:	22 0f       	add	r18, r18
    16ae:	28 2b       	or	r18, r24
    16b0:	9c 91       	ld	r25, X
    16b2:	82 2f       	mov	r24, r18
    16b4:	86 23       	and	r24, r22
    16b6:	20 95       	com	r18
    16b8:	29 23       	and	r18, r25
    16ba:	82 2b       	or	r24, r18
    16bc:	8c 93       	st	X, r24
    16be:	08 95       	ret

000016c0 <compareGetOutputMode>:
    16c0:	9c 01       	movw	r18, r24
    16c2:	0b 96       	adiw	r24, 0x0b	; 11
    16c4:	fc 01       	movw	r30, r24
    16c6:	a5 91       	lpm	r26, Z+
    16c8:	b4 91       	lpm	r27, Z+
    16ca:	23 5f       	subi	r18, 0xF3	; 243
    16cc:	3f 4f       	sbci	r19, 0xFF	; 255
    16ce:	f9 01       	movw	r30, r18
    16d0:	44 91       	lpm	r20, Z+
    16d2:	21 e0       	ldi	r18, 0x01	; 1
    16d4:	30 e0       	ldi	r19, 0x00	; 0
    16d6:	04 2e       	mov	r0, r20
    16d8:	02 c0       	rjmp	.+4      	; 0x16de <compareGetOutputMode+0x1e>
    16da:	22 0f       	add	r18, r18
    16dc:	33 1f       	adc	r19, r19
    16de:	0a 94       	dec	r0
    16e0:	e2 f7       	brpl	.-8      	; 0x16da <compareGetOutputMode+0x1a>
    16e2:	82 2f       	mov	r24, r18
    16e4:	88 0f       	add	r24, r24
    16e6:	82 2b       	or	r24, r18
    16e8:	2c 91       	ld	r18, X
    16ea:	82 23       	and	r24, r18
    16ec:	90 e0       	ldi	r25, 0x00	; 0
    16ee:	02 c0       	rjmp	.+4      	; 0x16f4 <compareGetOutputMode+0x34>
    16f0:	95 95       	asr	r25
    16f2:	87 95       	ror	r24
    16f4:	4a 95       	dec	r20
    16f6:	e2 f7       	brpl	.-8      	; 0x16f0 <compareGetOutputMode+0x30>
    16f8:	08 95       	ret

000016fa <__timer_overflowService>:
    16fa:	fc 01       	movw	r30, r24
    16fc:	a5 91       	lpm	r26, Z+
    16fe:	b4 91       	lpm	r27, Z+
    1700:	12 96       	adiw	r26, 0x02	; 2
    1702:	ed 91       	ld	r30, X+
    1704:	fc 91       	ld	r31, X
    1706:	13 97       	sbiw	r26, 0x03	; 3
    1708:	30 97       	sbiw	r30, 0x00	; 0
    170a:	29 f0       	breq	.+10     	; 0x1716 <__timer_overflowService+0x1c>
    170c:	14 96       	adiw	r26, 0x04	; 4
    170e:	6d 91       	ld	r22, X+
    1710:	7c 91       	ld	r23, X
    1712:	15 97       	sbiw	r26, 0x05	; 5
    1714:	09 95       	icall
    1716:	08 95       	ret

00001718 <__timer_captureService>:
    1718:	fc 01       	movw	r30, r24
    171a:	a5 91       	lpm	r26, Z+
    171c:	b4 91       	lpm	r27, Z+
    171e:	16 96       	adiw	r26, 0x06	; 6
    1720:	ed 91       	ld	r30, X+
    1722:	fc 91       	ld	r31, X
    1724:	17 97       	sbiw	r26, 0x07	; 7
    1726:	30 97       	sbiw	r30, 0x00	; 0
    1728:	29 f0       	breq	.+10     	; 0x1734 <__timer_captureService+0x1c>
    172a:	18 96       	adiw	r26, 0x08	; 8
    172c:	6d 91       	ld	r22, X+
    172e:	7c 91       	ld	r23, X
    1730:	19 97       	sbiw	r26, 0x09	; 9
    1732:	09 95       	icall
    1734:	08 95       	ret

00001736 <__timer_compareService>:
    1736:	fc 01       	movw	r30, r24
    1738:	a5 91       	lpm	r26, Z+
    173a:	b4 91       	lpm	r27, Z+
    173c:	ed 91       	ld	r30, X+
    173e:	fc 91       	ld	r31, X
    1740:	11 97       	sbiw	r26, 0x01	; 1
    1742:	30 97       	sbiw	r30, 0x00	; 0
    1744:	29 f0       	breq	.+10     	; 0x1750 <__timer_compareService+0x1a>
    1746:	12 96       	adiw	r26, 0x02	; 2
    1748:	6d 91       	ld	r22, X+
    174a:	7c 91       	ld	r23, X
    174c:	13 97       	sbiw	r26, 0x03	; 3
    174e:	09 95       	icall
    1750:	08 95       	ret

00001752 <getError>:
    1752:	80 91 65 04 	lds	r24, 0x0465
    1756:	08 95       	ret

00001758 <setErrorLog>:
    1758:	90 93 69 04 	sts	0x0469, r25
    175c:	80 93 68 04 	sts	0x0468, r24
    1760:	08 95       	ret

00001762 <__error_flash>:
    1762:	8f 92       	push	r8
    1764:	9f 92       	push	r9
    1766:	af 92       	push	r10
    1768:	bf 92       	push	r11
    176a:	cf 92       	push	r12
    176c:	df 92       	push	r13
    176e:	ef 92       	push	r14
    1770:	ff 92       	push	r15
    1772:	0f 93       	push	r16
    1774:	1f 93       	push	r17
    1776:	cf 93       	push	r28
    1778:	df 93       	push	r29
    177a:	98 2e       	mov	r9, r24
    177c:	89 2e       	mov	r8, r25
    177e:	5a 01       	movw	r10, r20
    1780:	6b 01       	movw	r12, r22
    1782:	c8 2f       	mov	r28, r24
    1784:	d9 2f       	mov	r29, r25
    1786:	89 81       	ldd	r24, Y+1	; 0x01
    1788:	88 23       	and	r24, r24
    178a:	41 f4       	brne	.+16     	; 0x179c <__error_flash+0x3a>
    178c:	88 81       	ld	r24, Y
    178e:	18 16       	cp	r1, r24
    1790:	14 f4       	brge	.+4      	; 0x1796 <__error_flash+0x34>
    1792:	88 81       	ld	r24, Y
    1794:	02 c0       	rjmp	.+4      	; 0x179a <__error_flash+0x38>
    1796:	88 81       	ld	r24, Y
    1798:	81 95       	neg	r24
    179a:	89 83       	std	Y+1, r24	; 0x01
    179c:	88 81       	ld	r24, Y
    179e:	87 fd       	sbrc	r24, 7
    17a0:	08 c0       	rjmp	.+16     	; 0x17b2 <__error_flash+0x50>
    17a2:	30 e2       	ldi	r19, 0x20	; 32
    17a4:	e3 2e       	mov	r14, r19
    17a6:	31 ea       	ldi	r19, 0xA1	; 161
    17a8:	f3 2e       	mov	r15, r19
    17aa:	37 e0       	ldi	r19, 0x07	; 7
    17ac:	03 2f       	mov	r16, r19
    17ae:	11 2d       	mov	r17, r1
    17b0:	07 c0       	rjmp	.+14     	; 0x17c0 <__error_flash+0x5e>
    17b2:	20 e9       	ldi	r18, 0x90	; 144
    17b4:	e2 2e       	mov	r14, r18
    17b6:	20 ed       	ldi	r18, 0xD0	; 208
    17b8:	f2 2e       	mov	r15, r18
    17ba:	23 e0       	ldi	r18, 0x03	; 3
    17bc:	02 2f       	mov	r16, r18
    17be:	11 2d       	mov	r17, r1
    17c0:	8a 81       	ldd	r24, Y+2	; 0x02
    17c2:	80 ff       	sbrs	r24, 0
    17c4:	1d c0       	rjmp	.+58     	; 0x1800 <__error_flash+0x9e>
    17c6:	80 91 62 04 	lds	r24, 0x0462
    17ca:	90 91 63 04 	lds	r25, 0x0463
    17ce:	0e 94 17 07 	call	0xe2e	; 0xe2e <pin_is_output>
    17d2:	88 23       	and	r24, r24
    17d4:	29 f0       	breq	.+10     	; 0x17e0 <__error_flash+0x7e>
    17d6:	82 e6       	ldi	r24, 0x62	; 98
    17d8:	94 e0       	ldi	r25, 0x04	; 4
    17da:	60 e0       	ldi	r22, 0x00	; 0
    17dc:	0e 94 a1 07 	call	0xf42	; 0xf42 <LED_set>
    17e0:	89 81       	ldd	r24, Y+1	; 0x01
    17e2:	81 50       	subi	r24, 0x01	; 1
    17e4:	89 83       	std	Y+1, r24	; 0x01
    17e6:	89 81       	ldd	r24, Y+1	; 0x01
    17e8:	88 23       	and	r24, r24
    17ea:	39 f4       	brne	.+14     	; 0x17fa <__error_flash+0x98>
    17ec:	90 e8       	ldi	r25, 0x80	; 128
    17ee:	e9 2e       	mov	r14, r25
    17f0:	94 e8       	ldi	r25, 0x84	; 132
    17f2:	f9 2e       	mov	r15, r25
    17f4:	9e e1       	ldi	r25, 0x1E	; 30
    17f6:	09 2f       	mov	r16, r25
    17f8:	11 2d       	mov	r17, r1
    17fa:	8a 81       	ldd	r24, Y+2	; 0x02
    17fc:	8e 7f       	andi	r24, 0xFE	; 254
    17fe:	0f c0       	rjmp	.+30     	; 0x181e <__error_flash+0xbc>
    1800:	80 91 62 04 	lds	r24, 0x0462
    1804:	90 91 63 04 	lds	r25, 0x0463
    1808:	0e 94 17 07 	call	0xe2e	; 0xe2e <pin_is_output>
    180c:	88 23       	and	r24, r24
    180e:	29 f0       	breq	.+10     	; 0x181a <__error_flash+0xb8>
    1810:	82 e6       	ldi	r24, 0x62	; 98
    1812:	94 e0       	ldi	r25, 0x04	; 4
    1814:	6f ef       	ldi	r22, 0xFF	; 255
    1816:	0e 94 a1 07 	call	0xf42	; 0xf42 <LED_set>
    181a:	8a 81       	ldd	r24, Y+2	; 0x02
    181c:	81 60       	ori	r24, 0x01	; 1
    181e:	8a 83       	std	Y+2, r24	; 0x02
    1820:	81 eb       	ldi	r24, 0xB1	; 177
    1822:	9b e0       	ldi	r25, 0x0B	; 11
    1824:	69 2d       	mov	r22, r9
    1826:	78 2d       	mov	r23, r8
    1828:	a6 01       	movw	r20, r12
    182a:	95 01       	movw	r18, r10
    182c:	0e 94 2d 1a 	call	0x345a	; 0x345a <scheduleJob>
    1830:	df 91       	pop	r29
    1832:	cf 91       	pop	r28
    1834:	1f 91       	pop	r17
    1836:	0f 91       	pop	r16
    1838:	ff 90       	pop	r15
    183a:	ef 90       	pop	r14
    183c:	df 90       	pop	r13
    183e:	cf 90       	pop	r12
    1840:	bf 90       	pop	r11
    1842:	af 90       	pop	r10
    1844:	9f 90       	pop	r9
    1846:	8f 90       	pop	r8
    1848:	08 95       	ret

0000184a <__timerRead>:
    184a:	df 92       	push	r13
    184c:	ef 92       	push	r14
    184e:	ff 92       	push	r15
    1850:	0f 93       	push	r16
    1852:	1f 93       	push	r17
    1854:	cf 93       	push	r28
    1856:	df 93       	push	r29
    1858:	9c 01       	movw	r18, r24
    185a:	eb 01       	movw	r28, r22
    185c:	fc 01       	movw	r30, r24
    185e:	a5 91       	lpm	r26, Z+
    1860:	b4 91       	lpm	r27, Z+
    1862:	1a 96       	adiw	r26, 0x0a	; 10
    1864:	8c 91       	ld	r24, X
    1866:	39 83       	std	Y+1, r19	; 0x01
    1868:	28 83       	st	Y, r18
    186a:	21 15       	cp	r18, r1
    186c:	31 05       	cpc	r19, r1
    186e:	39 f4       	brne	.+14     	; 0x187e <__timerRead+0x34>
    1870:	1a 82       	std	Y+2, r1	; 0x02
    1872:	1b 82       	std	Y+3, r1	; 0x03
    1874:	1c 82       	std	Y+4, r1	; 0x04
    1876:	1d 82       	std	Y+5, r1	; 0x05
    1878:	1f 82       	std	Y+7, r1	; 0x07
    187a:	1e 82       	std	Y+6, r1	; 0x06
    187c:	b1 c0       	rjmp	.+354    	; 0x19e0 <__timerRead+0x196>
    187e:	84 30       	cpi	r24, 0x04	; 4
    1880:	39 f0       	breq	.+14     	; 0x1890 <__timerRead+0x46>
    1882:	89 30       	cpi	r24, 0x09	; 9
    1884:	29 f0       	breq	.+10     	; 0x1890 <__timerRead+0x46>
    1886:	8b 30       	cpi	r24, 0x0B	; 11
    1888:	19 f0       	breq	.+6      	; 0x1890 <__timerRead+0x46>
    188a:	8f 30       	cpi	r24, 0x0F	; 15
    188c:	09 f0       	breq	.+2      	; 0x1890 <__timerRead+0x46>
    188e:	48 c0       	rjmp	.+144    	; 0x1920 <__timerRead+0xd6>
    1890:	f9 01       	movw	r30, r18
    1892:	77 96       	adiw	r30, 0x17	; 23
    1894:	65 91       	lpm	r22, Z+
    1896:	74 91       	lpm	r23, Z+
    1898:	df b6       	in	r13, 0x3f	; 63
    189a:	f8 94       	cli
    189c:	52 e0       	ldi	r21, 0x02	; 2
    189e:	e5 2e       	mov	r14, r21
    18a0:	f1 2c       	mov	r15, r1
    18a2:	e2 0e       	add	r14, r18
    18a4:	f3 1e       	adc	r15, r19
    18a6:	f7 01       	movw	r30, r14
    18a8:	a5 91       	lpm	r26, Z+
    18aa:	b4 91       	lpm	r27, Z+
    18ac:	89 01       	movw	r16, r18
    18ae:	09 5f       	subi	r16, 0xF9	; 249
    18b0:	1f 4f       	sbci	r17, 0xFF	; 255
    18b2:	f8 01       	movw	r30, r16
    18b4:	84 91       	lpm	r24, Z+
    18b6:	88 23       	and	r24, r24
    18b8:	19 f0       	breq	.+6      	; 0x18c0 <__timerRead+0x76>
    18ba:	4d 91       	ld	r20, X+
    18bc:	5c 91       	ld	r21, X
    18be:	03 c0       	rjmp	.+6      	; 0x18c6 <__timerRead+0x7c>
    18c0:	8c 91       	ld	r24, X
    18c2:	48 2f       	mov	r20, r24
    18c4:	50 e0       	ldi	r21, 0x00	; 0
    18c6:	80 91 6a 04 	lds	r24, 0x046A
    18ca:	90 91 6b 04 	lds	r25, 0x046B
    18ce:	28 17       	cp	r18, r24
    18d0:	39 07       	cpc	r19, r25
    18d2:	29 f0       	breq	.+10     	; 0x18de <__timerRead+0x94>
    18d4:	80 e0       	ldi	r24, 0x00	; 0
    18d6:	90 e0       	ldi	r25, 0x00	; 0
    18d8:	a0 e0       	ldi	r26, 0x00	; 0
    18da:	b0 e0       	ldi	r27, 0x00	; 0
    18dc:	08 c0       	rjmp	.+16     	; 0x18ee <__timerRead+0xa4>
    18de:	80 91 a6 01 	lds	r24, 0x01A6
    18e2:	90 91 a7 01 	lds	r25, 0x01A7
    18e6:	a0 91 a8 01 	lds	r26, 0x01A8
    18ea:	b0 91 a9 01 	lds	r27, 0x01A9
    18ee:	8a 83       	std	Y+2, r24	; 0x02
    18f0:	9b 83       	std	Y+3, r25	; 0x03
    18f2:	ac 83       	std	Y+4, r26	; 0x04
    18f4:	bd 83       	std	Y+5, r27	; 0x05
    18f6:	f7 01       	movw	r30, r14
    18f8:	a5 91       	lpm	r26, Z+
    18fa:	b4 91       	lpm	r27, Z+
    18fc:	f8 01       	movw	r30, r16
    18fe:	84 91       	lpm	r24, Z+
    1900:	88 23       	and	r24, r24
    1902:	19 f0       	breq	.+6      	; 0x190a <__timerRead+0xc0>
    1904:	8d 91       	ld	r24, X+
    1906:	9c 91       	ld	r25, X
    1908:	02 c0       	rjmp	.+4      	; 0x190e <__timerRead+0xc4>
    190a:	8c 91       	ld	r24, X
    190c:	90 e0       	ldi	r25, 0x00	; 0
    190e:	9f 83       	std	Y+7, r25	; 0x07
    1910:	8e 83       	std	Y+6, r24	; 0x06
    1912:	84 17       	cp	r24, r20
    1914:	95 07       	cpc	r25, r21
    1916:	08 f4       	brcc	.+2      	; 0x191a <__timerRead+0xd0>
    1918:	49 c0       	rjmp	.+146    	; 0x19ac <__timerRead+0x162>
    191a:	cb 01       	movw	r24, r22
    191c:	08 96       	adiw	r24, 0x08	; 8
    191e:	42 c0       	rjmp	.+132    	; 0x19a4 <__timerRead+0x15a>
    1920:	df b6       	in	r13, 0x3f	; 63
    1922:	f8 94       	cli
    1924:	42 e0       	ldi	r20, 0x02	; 2
    1926:	e4 2e       	mov	r14, r20
    1928:	f1 2c       	mov	r15, r1
    192a:	e2 0e       	add	r14, r18
    192c:	f3 1e       	adc	r15, r19
    192e:	f7 01       	movw	r30, r14
    1930:	a5 91       	lpm	r26, Z+
    1932:	b4 91       	lpm	r27, Z+
    1934:	89 01       	movw	r16, r18
    1936:	09 5f       	subi	r16, 0xF9	; 249
    1938:	1f 4f       	sbci	r17, 0xFF	; 255
    193a:	f8 01       	movw	r30, r16
    193c:	84 91       	lpm	r24, Z+
    193e:	88 23       	and	r24, r24
    1940:	19 f0       	breq	.+6      	; 0x1948 <__timerRead+0xfe>
    1942:	4d 91       	ld	r20, X+
    1944:	5c 91       	ld	r21, X
    1946:	03 c0       	rjmp	.+6      	; 0x194e <__timerRead+0x104>
    1948:	8c 91       	ld	r24, X
    194a:	48 2f       	mov	r20, r24
    194c:	50 e0       	ldi	r21, 0x00	; 0
    194e:	80 91 6a 04 	lds	r24, 0x046A
    1952:	90 91 6b 04 	lds	r25, 0x046B
    1956:	28 17       	cp	r18, r24
    1958:	39 07       	cpc	r19, r25
    195a:	29 f0       	breq	.+10     	; 0x1966 <__timerRead+0x11c>
    195c:	80 e0       	ldi	r24, 0x00	; 0
    195e:	90 e0       	ldi	r25, 0x00	; 0
    1960:	a0 e0       	ldi	r26, 0x00	; 0
    1962:	b0 e0       	ldi	r27, 0x00	; 0
    1964:	08 c0       	rjmp	.+16     	; 0x1976 <__timerRead+0x12c>
    1966:	80 91 a6 01 	lds	r24, 0x01A6
    196a:	90 91 a7 01 	lds	r25, 0x01A7
    196e:	a0 91 a8 01 	lds	r26, 0x01A8
    1972:	b0 91 a9 01 	lds	r27, 0x01A9
    1976:	8a 83       	std	Y+2, r24	; 0x02
    1978:	9b 83       	std	Y+3, r25	; 0x03
    197a:	ac 83       	std	Y+4, r26	; 0x04
    197c:	bd 83       	std	Y+5, r27	; 0x05
    197e:	f7 01       	movw	r30, r14
    1980:	a5 91       	lpm	r26, Z+
    1982:	b4 91       	lpm	r27, Z+
    1984:	f8 01       	movw	r30, r16
    1986:	84 91       	lpm	r24, Z+
    1988:	88 23       	and	r24, r24
    198a:	19 f0       	breq	.+6      	; 0x1992 <__timerRead+0x148>
    198c:	8d 91       	ld	r24, X+
    198e:	9c 91       	ld	r25, X
    1990:	02 c0       	rjmp	.+4      	; 0x1996 <__timerRead+0x14c>
    1992:	8c 91       	ld	r24, X
    1994:	90 e0       	ldi	r25, 0x00	; 0
    1996:	9f 83       	std	Y+7, r25	; 0x07
    1998:	8e 83       	std	Y+6, r24	; 0x06
    199a:	84 17       	cp	r24, r20
    199c:	95 07       	cpc	r25, r21
    199e:	30 f0       	brcs	.+12     	; 0x19ac <__timerRead+0x162>
    19a0:	c9 01       	movw	r24, r18
    19a2:	4c 96       	adiw	r24, 0x1c	; 28
    19a4:	0e 94 cb 05 	call	0xb96	; 0xb96 <__portMaskGet>
    19a8:	88 23       	and	r24, r24
    19aa:	c9 f0       	breq	.+50     	; 0x19de <__timerRead+0x194>
    19ac:	8a 81       	ldd	r24, Y+2	; 0x02
    19ae:	9b 81       	ldd	r25, Y+3	; 0x03
    19b0:	ac 81       	ldd	r26, Y+4	; 0x04
    19b2:	bd 81       	ldd	r27, Y+5	; 0x05
    19b4:	01 96       	adiw	r24, 0x01	; 1
    19b6:	a1 1d       	adc	r26, r1
    19b8:	b1 1d       	adc	r27, r1
    19ba:	8a 83       	std	Y+2, r24	; 0x02
    19bc:	9b 83       	std	Y+3, r25	; 0x03
    19be:	ac 83       	std	Y+4, r26	; 0x04
    19c0:	bd 83       	std	Y+5, r27	; 0x05
    19c2:	f7 01       	movw	r30, r14
    19c4:	a5 91       	lpm	r26, Z+
    19c6:	b4 91       	lpm	r27, Z+
    19c8:	f8 01       	movw	r30, r16
    19ca:	84 91       	lpm	r24, Z+
    19cc:	88 23       	and	r24, r24
    19ce:	19 f0       	breq	.+6      	; 0x19d6 <__timerRead+0x18c>
    19d0:	8d 91       	ld	r24, X+
    19d2:	9c 91       	ld	r25, X
    19d4:	02 c0       	rjmp	.+4      	; 0x19da <__timerRead+0x190>
    19d6:	8c 91       	ld	r24, X
    19d8:	90 e0       	ldi	r25, 0x00	; 0
    19da:	9f 83       	std	Y+7, r25	; 0x07
    19dc:	8e 83       	std	Y+6, r24	; 0x06
    19de:	df be       	out	0x3f, r13	; 63
    19e0:	df 91       	pop	r29
    19e2:	cf 91       	pop	r28
    19e4:	1f 91       	pop	r17
    19e6:	0f 91       	pop	r16
    19e8:	ff 90       	pop	r15
    19ea:	ef 90       	pop	r14
    19ec:	df 90       	pop	r13
    19ee:	08 95       	ret

000019f0 <clockGetSnapshot>:
    19f0:	bc 01       	movw	r22, r24
    19f2:	80 91 6a 04 	lds	r24, 0x046A
    19f6:	90 91 6b 04 	lds	r25, 0x046B
    19fa:	0e 94 25 0c 	call	0x184a	; 0x184a <__timerRead>
    19fe:	08 95       	ret

00001a00 <timerGetTicks>:
    1a00:	0f 93       	push	r16
    1a02:	1f 93       	push	r17
    1a04:	df 93       	push	r29
    1a06:	cf 93       	push	r28
    1a08:	cd b7       	in	r28, 0x3d	; 61
    1a0a:	de b7       	in	r29, 0x3e	; 62
    1a0c:	28 97       	sbiw	r28, 0x08	; 8
    1a0e:	0f b6       	in	r0, 0x3f	; 63
    1a10:	f8 94       	cli
    1a12:	de bf       	out	0x3e, r29	; 62
    1a14:	0f be       	out	0x3f, r0	; 63
    1a16:	cd bf       	out	0x3d, r28	; 61
    1a18:	8e 01       	movw	r16, r28
    1a1a:	0f 5f       	subi	r16, 0xFF	; 255
    1a1c:	1f 4f       	sbci	r17, 0xFF	; 255
    1a1e:	b8 01       	movw	r22, r16
    1a20:	0e 94 25 0c 	call	0x184a	; 0x184a <__timerRead>
    1a24:	c8 01       	movw	r24, r16
    1a26:	0e 94 75 0e 	call	0x1cea	; 0x1cea <timerSnapshotToTicks>
    1a2a:	28 96       	adiw	r28, 0x08	; 8
    1a2c:	0f b6       	in	r0, 0x3f	; 63
    1a2e:	f8 94       	cli
    1a30:	de bf       	out	0x3e, r29	; 62
    1a32:	0f be       	out	0x3f, r0	; 63
    1a34:	cd bf       	out	0x3d, r28	; 61
    1a36:	cf 91       	pop	r28
    1a38:	df 91       	pop	r29
    1a3a:	1f 91       	pop	r17
    1a3c:	0f 91       	pop	r16
    1a3e:	08 95       	ret

00001a40 <clockGetus>:
    1a40:	80 91 6a 04 	lds	r24, 0x046A
    1a44:	90 91 6b 04 	lds	r25, 0x046B
    1a48:	0e 94 00 0d 	call	0x1a00	; 0x1a00 <timerGetTicks>
    1a4c:	08 95       	ret

00001a4e <setError>:
    1a4e:	df 92       	push	r13
    1a50:	ef 92       	push	r14
    1a52:	ff 92       	push	r15
    1a54:	0f 93       	push	r16
    1a56:	1f 93       	push	r17
    1a58:	d8 2e       	mov	r13, r24
    1a5a:	80 91 65 04 	lds	r24, 0x0465
    1a5e:	88 23       	and	r24, r24
    1a60:	09 f0       	breq	.+2      	; 0x1a64 <setError+0x16>
    1a62:	5b c0       	rjmp	.+182    	; 0x1b1a <setError+0xcc>
    1a64:	d0 92 65 04 	sts	0x0465, r13
    1a68:	80 91 62 04 	lds	r24, 0x0462
    1a6c:	90 91 63 04 	lds	r25, 0x0463
    1a70:	89 2b       	or	r24, r25
    1a72:	99 f0       	breq	.+38     	; 0x1a9a <setError+0x4c>
    1a74:	80 91 6a 04 	lds	r24, 0x046A
    1a78:	90 91 6b 04 	lds	r25, 0x046B
    1a7c:	89 2b       	or	r24, r25
    1a7e:	69 f0       	breq	.+26     	; 0x1a9a <setError+0x4c>
    1a80:	0e 94 20 0d 	call	0x1a40	; 0x1a40 <clockGetus>
    1a84:	9b 01       	movw	r18, r22
    1a86:	ac 01       	movw	r20, r24
    1a88:	81 eb       	ldi	r24, 0xB1	; 177
    1a8a:	9b e0       	ldi	r25, 0x0B	; 11
    1a8c:	65 e6       	ldi	r22, 0x65	; 101
    1a8e:	74 e0       	ldi	r23, 0x04	; 4
    1a90:	ee 24       	eor	r14, r14
    1a92:	ff 24       	eor	r15, r15
    1a94:	87 01       	movw	r16, r14
    1a96:	0e 94 2d 1a 	call	0x345a	; 0x345a <scheduleJob>
    1a9a:	80 91 68 04 	lds	r24, 0x0468
    1a9e:	90 91 69 04 	lds	r25, 0x0469
    1aa2:	00 97       	sbiw	r24, 0x00	; 0
    1aa4:	d1 f1       	breq	.+116    	; 0x1b1a <setError+0xcc>
    1aa6:	0e 94 c4 07 	call	0xf88	; 0xf88 <rprintfInit>
    1aaa:	8c 01       	movw	r16, r24
    1aac:	2d 2d       	mov	r18, r13
    1aae:	33 27       	eor	r19, r19
    1ab0:	27 fd       	sbrc	r18, 7
    1ab2:	30 95       	com	r19
    1ab4:	d7 fe       	sbrs	r13, 7
    1ab6:	16 c0       	rjmp	.+44     	; 0x1ae4 <setError+0x96>
    1ab8:	00 d0       	rcall	.+0      	; 0x1aba <setError+0x6c>
    1aba:	00 d0       	rcall	.+0      	; 0x1abc <setError+0x6e>
    1abc:	0f 92       	push	r0
    1abe:	ed b7       	in	r30, 0x3d	; 61
    1ac0:	fe b7       	in	r31, 0x3e	; 62
    1ac2:	31 96       	adiw	r30, 0x01	; 1
    1ac4:	81 e0       	ldi	r24, 0x01	; 1
    1ac6:	ad b7       	in	r26, 0x3d	; 61
    1ac8:	be b7       	in	r27, 0x3e	; 62
    1aca:	11 96       	adiw	r26, 0x01	; 1
    1acc:	8c 93       	st	X, r24
    1ace:	8d e3       	ldi	r24, 0x3D	; 61
    1ad0:	92 e0       	ldi	r25, 0x02	; 2
    1ad2:	92 83       	std	Z+2, r25	; 0x02
    1ad4:	81 83       	std	Z+1, r24	; 0x01
    1ad6:	88 27       	eor	r24, r24
    1ad8:	99 27       	eor	r25, r25
    1ada:	82 1b       	sub	r24, r18
    1adc:	93 0b       	sbc	r25, r19
    1ade:	94 83       	std	Z+4, r25	; 0x04
    1ae0:	83 83       	std	Z+3, r24	; 0x03
    1ae2:	11 c0       	rjmp	.+34     	; 0x1b06 <setError+0xb8>
    1ae4:	00 d0       	rcall	.+0      	; 0x1ae6 <setError+0x98>
    1ae6:	00 d0       	rcall	.+0      	; 0x1ae8 <setError+0x9a>
    1ae8:	0f 92       	push	r0
    1aea:	ed b7       	in	r30, 0x3d	; 61
    1aec:	fe b7       	in	r31, 0x3e	; 62
    1aee:	31 96       	adiw	r30, 0x01	; 1
    1af0:	81 e0       	ldi	r24, 0x01	; 1
    1af2:	ad b7       	in	r26, 0x3d	; 61
    1af4:	be b7       	in	r27, 0x3e	; 62
    1af6:	11 96       	adiw	r26, 0x01	; 1
    1af8:	8c 93       	st	X, r24
    1afa:	8e e2       	ldi	r24, 0x2E	; 46
    1afc:	92 e0       	ldi	r25, 0x02	; 2
    1afe:	92 83       	std	Z+2, r25	; 0x02
    1b00:	81 83       	std	Z+1, r24	; 0x01
    1b02:	34 83       	std	Z+4, r19	; 0x04
    1b04:	23 83       	std	Z+3, r18	; 0x03
    1b06:	0e 94 69 18 	call	0x30d2	; 0x30d2 <rprintf1RamRom>
    1b0a:	0f 90       	pop	r0
    1b0c:	0f 90       	pop	r0
    1b0e:	0f 90       	pop	r0
    1b10:	0f 90       	pop	r0
    1b12:	0f 90       	pop	r0
    1b14:	c8 01       	movw	r24, r16
    1b16:	0e 94 c4 07 	call	0xf88	; 0xf88 <rprintfInit>
    1b1a:	1f 91       	pop	r17
    1b1c:	0f 91       	pop	r16
    1b1e:	ff 90       	pop	r15
    1b20:	ef 90       	pop	r14
    1b22:	df 90       	pop	r13
    1b24:	08 95       	ret

00001b26 <compareDetach>:
    1b26:	cf 93       	push	r28
    1b28:	df 93       	push	r29
    1b2a:	ec 01       	movw	r28, r24
    1b2c:	22 96       	adiw	r28, 0x02	; 2
    1b2e:	fe 01       	movw	r30, r28
    1b30:	94 91       	lpm	r25, Z+
    1b32:	22 97       	sbiw	r28, 0x02	; 2
    1b34:	8e e2       	ldi	r24, 0x2E	; 46
    1b36:	98 9f       	mul	r25, r24
    1b38:	f0 01       	movw	r30, r0
    1b3a:	11 24       	eor	r1, r1
    1b3c:	e7 5d       	subi	r30, 0xD7	; 215
    1b3e:	fe 4f       	sbci	r31, 0xFE	; 254
    1b40:	e4 91       	lpm	r30, Z+
    1b42:	ee 23       	and	r30, r30
    1b44:	71 f0       	breq	.+28     	; 0x1b62 <compareDetach+0x3c>
    1b46:	ce 01       	movw	r24, r28
    1b48:	03 96       	adiw	r24, 0x03	; 3
    1b4a:	0e 94 d8 05 	call	0xbb0	; 0xbb0 <__portMaskClear>
    1b4e:	ce 01       	movw	r24, r28
    1b50:	60 e0       	ldi	r22, 0x00	; 0
    1b52:	0e 94 3e 0b 	call	0x167c	; 0x167c <compareSetOutputMode>
    1b56:	fe 01       	movw	r30, r28
    1b58:	a5 91       	lpm	r26, Z+
    1b5a:	b4 91       	lpm	r27, Z+
    1b5c:	1d 92       	st	X+, r1
    1b5e:	1c 92       	st	X, r1
    1b60:	03 c0       	rjmp	.+6      	; 0x1b68 <compareDetach+0x42>
    1b62:	8d ef       	ldi	r24, 0xFD	; 253
    1b64:	0e 94 27 0d 	call	0x1a4e	; 0x1a4e <setError>
    1b68:	df 91       	pop	r29
    1b6a:	cf 91       	pop	r28
    1b6c:	08 95       	ret

00001b6e <compareSetThreshold>:
    1b6e:	cf 93       	push	r28
    1b70:	df 93       	push	r29
    1b72:	9c 01       	movw	r18, r24
    1b74:	2e 5f       	subi	r18, 0xFE	; 254
    1b76:	3f 4f       	sbci	r19, 0xFF	; 255
    1b78:	f9 01       	movw	r30, r18
    1b7a:	84 91       	lpm	r24, Z+
    1b7c:	22 50       	subi	r18, 0x02	; 2
    1b7e:	30 40       	sbci	r19, 0x00	; 0
    1b80:	9e e2       	ldi	r25, 0x2E	; 46
    1b82:	89 9f       	mul	r24, r25
    1b84:	a0 01       	movw	r20, r0
    1b86:	11 24       	eor	r1, r1
    1b88:	4f 5d       	subi	r20, 0xDF	; 223
    1b8a:	5e 4f       	sbci	r21, 0xFE	; 254
    1b8c:	48 5f       	subi	r20, 0xF8	; 248
    1b8e:	5f 4f       	sbci	r21, 0xFF	; 255
    1b90:	fa 01       	movw	r30, r20
    1b92:	84 91       	lpm	r24, Z+
    1b94:	48 50       	subi	r20, 0x08	; 8
    1b96:	50 40       	sbci	r21, 0x00	; 0
    1b98:	88 23       	and	r24, r24
    1b9a:	c1 f0       	breq	.+48     	; 0x1bcc <compareSetThreshold+0x5e>
    1b9c:	c9 01       	movw	r24, r18
    1b9e:	06 96       	adiw	r24, 0x06	; 6
    1ba0:	fc 01       	movw	r30, r24
    1ba2:	c5 91       	lpm	r28, Z+
    1ba4:	d4 91       	lpm	r29, Z+
    1ba6:	fa 01       	movw	r30, r20
    1ba8:	37 96       	adiw	r30, 0x07	; 7
    1baa:	e4 91       	lpm	r30, Z+
    1bac:	ee 23       	and	r30, r30
    1bae:	19 f0       	breq	.+6      	; 0x1bb6 <compareSetThreshold+0x48>
    1bb0:	79 83       	std	Y+1, r23	; 0x01
    1bb2:	68 83       	st	Y, r22
    1bb4:	0e c0       	rjmp	.+28     	; 0x1bd2 <compareSetThreshold+0x64>
    1bb6:	6f 3f       	cpi	r22, 0xFF	; 255
    1bb8:	71 05       	cpc	r23, r1
    1bba:	31 f0       	breq	.+12     	; 0x1bc8 <compareSetThreshold+0x5a>
    1bbc:	28 f0       	brcs	.+10     	; 0x1bc8 <compareSetThreshold+0x5a>
    1bbe:	8e ef       	ldi	r24, 0xFE	; 254
    1bc0:	0e 94 27 0d 	call	0x1a4e	; 0x1a4e <setError>
    1bc4:	6f ef       	ldi	r22, 0xFF	; 255
    1bc6:	70 e0       	ldi	r23, 0x00	; 0
    1bc8:	68 83       	st	Y, r22
    1bca:	03 c0       	rjmp	.+6      	; 0x1bd2 <compareSetThreshold+0x64>
    1bcc:	8d ef       	ldi	r24, 0xFD	; 253
    1bce:	0e 94 27 0d 	call	0x1a4e	; 0x1a4e <setError>
    1bd2:	df 91       	pop	r29
    1bd4:	cf 91       	pop	r28
    1bd6:	08 95       	ret

00001bd8 <compareGetThreshold>:
    1bd8:	9c 01       	movw	r18, r24
    1bda:	2e 5f       	subi	r18, 0xFE	; 254
    1bdc:	3f 4f       	sbci	r19, 0xFF	; 255
    1bde:	f9 01       	movw	r30, r18
    1be0:	84 91       	lpm	r24, Z+
    1be2:	22 50       	subi	r18, 0x02	; 2
    1be4:	30 40       	sbci	r19, 0x00	; 0
    1be6:	9e e2       	ldi	r25, 0x2E	; 46
    1be8:	89 9f       	mul	r24, r25
    1bea:	a0 01       	movw	r20, r0
    1bec:	11 24       	eor	r1, r1
    1bee:	4f 5d       	subi	r20, 0xDF	; 223
    1bf0:	5e 4f       	sbci	r21, 0xFE	; 254
    1bf2:	48 5f       	subi	r20, 0xF8	; 248
    1bf4:	5f 4f       	sbci	r21, 0xFF	; 255
    1bf6:	fa 01       	movw	r30, r20
    1bf8:	84 91       	lpm	r24, Z+
    1bfa:	48 50       	subi	r20, 0x08	; 8
    1bfc:	50 40       	sbci	r21, 0x00	; 0
    1bfe:	88 23       	and	r24, r24
    1c00:	89 f0       	breq	.+34     	; 0x1c24 <compareGetThreshold+0x4c>
    1c02:	c9 01       	movw	r24, r18
    1c04:	06 96       	adiw	r24, 0x06	; 6
    1c06:	fc 01       	movw	r30, r24
    1c08:	a5 91       	lpm	r26, Z+
    1c0a:	b4 91       	lpm	r27, Z+
    1c0c:	fa 01       	movw	r30, r20
    1c0e:	37 96       	adiw	r30, 0x07	; 7
    1c10:	e4 91       	lpm	r30, Z+
    1c12:	ee 23       	and	r30, r30
    1c14:	19 f0       	breq	.+6      	; 0x1c1c <compareGetThreshold+0x44>
    1c16:	2d 91       	ld	r18, X+
    1c18:	3c 91       	ld	r19, X
    1c1a:	09 c0       	rjmp	.+18     	; 0x1c2e <compareGetThreshold+0x56>
    1c1c:	8c 91       	ld	r24, X
    1c1e:	28 2f       	mov	r18, r24
    1c20:	30 e0       	ldi	r19, 0x00	; 0
    1c22:	05 c0       	rjmp	.+10     	; 0x1c2e <compareGetThreshold+0x56>
    1c24:	8d ef       	ldi	r24, 0xFD	; 253
    1c26:	0e 94 27 0d 	call	0x1a4e	; 0x1a4e <setError>
    1c2a:	2f ef       	ldi	r18, 0xFF	; 255
    1c2c:	30 e0       	ldi	r19, 0x00	; 0
    1c2e:	c9 01       	movw	r24, r18
    1c30:	08 95       	ret

00001c32 <timerGetTOP>:
    1c32:	cf 93       	push	r28
    1c34:	df 93       	push	r29
    1c36:	ec 01       	movw	r28, r24
    1c38:	04 96       	adiw	r24, 0x04	; 4
    1c3a:	fc 01       	movw	r30, r24
    1c3c:	a5 91       	lpm	r26, Z+
    1c3e:	b4 91       	lpm	r27, Z+
    1c40:	8c 91       	ld	r24, X
    1c42:	26 96       	adiw	r28, 0x06	; 6
    1c44:	fe 01       	movw	r30, r28
    1c46:	94 91       	lpm	r25, Z+
    1c48:	26 97       	sbiw	r28, 0x06	; 6
    1c4a:	89 23       	and	r24, r25
    1c4c:	09 f4       	brne	.+2      	; 0x1c50 <timerGetTOP+0x1e>
    1c4e:	41 c0       	rjmp	.+130    	; 0x1cd2 <timerGetTOP+0xa0>
    1c50:	fe 01       	movw	r30, r28
    1c52:	a5 91       	lpm	r26, Z+
    1c54:	b4 91       	lpm	r27, Z+
    1c56:	1a 96       	adiw	r26, 0x0a	; 10
    1c58:	8c 91       	ld	r24, X
    1c5a:	87 30       	cpi	r24, 0x07	; 7
    1c5c:	39 f1       	breq	.+78     	; 0x1cac <timerGetTOP+0x7a>
    1c5e:	88 30       	cpi	r24, 0x08	; 8
    1c60:	70 f4       	brcc	.+28     	; 0x1c7e <timerGetTOP+0x4c>
    1c62:	83 30       	cpi	r24, 0x03	; 3
    1c64:	19 f1       	breq	.+70     	; 0x1cac <timerGetTOP+0x7a>
    1c66:	84 30       	cpi	r24, 0x04	; 4
    1c68:	28 f4       	brcc	.+10     	; 0x1c74 <timerGetTOP+0x42>
    1c6a:	81 30       	cpi	r24, 0x01	; 1
    1c6c:	c9 f0       	breq	.+50     	; 0x1ca0 <timerGetTOP+0x6e>
    1c6e:	82 30       	cpi	r24, 0x02	; 2
    1c70:	d0 f4       	brcc	.+52     	; 0x1ca6 <timerGetTOP+0x74>
    1c72:	13 c0       	rjmp	.+38     	; 0x1c9a <timerGetTOP+0x68>
    1c74:	85 30       	cpi	r24, 0x05	; 5
    1c76:	a1 f0       	breq	.+40     	; 0x1ca0 <timerGetTOP+0x6e>
    1c78:	86 30       	cpi	r24, 0x06	; 6
    1c7a:	a8 f4       	brcc	.+42     	; 0x1ca6 <timerGetTOP+0x74>
    1c7c:	1a c0       	rjmp	.+52     	; 0x1cb2 <timerGetTOP+0x80>
    1c7e:	8b 30       	cpi	r24, 0x0B	; 11
    1c80:	c1 f0       	breq	.+48     	; 0x1cb2 <timerGetTOP+0x80>
    1c82:	8c 30       	cpi	r24, 0x0C	; 12
    1c84:	18 f4       	brcc	.+6      	; 0x1c8c <timerGetTOP+0x5a>
    1c86:	89 30       	cpi	r24, 0x09	; 9
    1c88:	e1 f4       	brne	.+56     	; 0x1cc2 <timerGetTOP+0x90>
    1c8a:	13 c0       	rjmp	.+38     	; 0x1cb2 <timerGetTOP+0x80>
    1c8c:	8e 30       	cpi	r24, 0x0E	; 14
    1c8e:	c9 f0       	breq	.+50     	; 0x1cc2 <timerGetTOP+0x90>
    1c90:	8f 30       	cpi	r24, 0x0F	; 15
    1c92:	79 f0       	breq	.+30     	; 0x1cb2 <timerGetTOP+0x80>
    1c94:	8c 30       	cpi	r24, 0x0C	; 12
    1c96:	e9 f4       	brne	.+58     	; 0x1cd2 <timerGetTOP+0xa0>
    1c98:	14 c0       	rjmp	.+40     	; 0x1cc2 <timerGetTOP+0x90>
    1c9a:	2f ef       	ldi	r18, 0xFF	; 255
    1c9c:	3f ef       	ldi	r19, 0xFF	; 255
    1c9e:	1b c0       	rjmp	.+54     	; 0x1cd6 <timerGetTOP+0xa4>
    1ca0:	2f ef       	ldi	r18, 0xFF	; 255
    1ca2:	30 e0       	ldi	r19, 0x00	; 0
    1ca4:	18 c0       	rjmp	.+48     	; 0x1cd6 <timerGetTOP+0xa4>
    1ca6:	2f ef       	ldi	r18, 0xFF	; 255
    1ca8:	31 e0       	ldi	r19, 0x01	; 1
    1caa:	15 c0       	rjmp	.+42     	; 0x1cd6 <timerGetTOP+0xa4>
    1cac:	2f ef       	ldi	r18, 0xFF	; 255
    1cae:	33 e0       	ldi	r19, 0x03	; 3
    1cb0:	12 c0       	rjmp	.+36     	; 0x1cd6 <timerGetTOP+0xa4>
    1cb2:	fe 01       	movw	r30, r28
    1cb4:	77 96       	adiw	r30, 0x17	; 23
    1cb6:	85 91       	lpm	r24, Z+
    1cb8:	94 91       	lpm	r25, Z+
    1cba:	0e 94 ec 0d 	call	0x1bd8	; 0x1bd8 <compareGetThreshold>
    1cbe:	9c 01       	movw	r18, r24
    1cc0:	0a c0       	rjmp	.+20     	; 0x1cd6 <timerGetTOP+0xa4>
    1cc2:	ce 01       	movw	r24, r28
    1cc4:	4f 96       	adiw	r24, 0x1f	; 31
    1cc6:	fc 01       	movw	r30, r24
    1cc8:	a5 91       	lpm	r26, Z+
    1cca:	b4 91       	lpm	r27, Z+
    1ccc:	2d 91       	ld	r18, X+
    1cce:	3c 91       	ld	r19, X
    1cd0:	02 c0       	rjmp	.+4      	; 0x1cd6 <timerGetTOP+0xa4>
    1cd2:	20 e0       	ldi	r18, 0x00	; 0
    1cd4:	30 e0       	ldi	r19, 0x00	; 0
    1cd6:	27 96       	adiw	r28, 0x07	; 7
    1cd8:	fe 01       	movw	r30, r28
    1cda:	84 91       	lpm	r24, Z+
    1cdc:	88 23       	and	r24, r24
    1cde:	09 f4       	brne	.+2      	; 0x1ce2 <timerGetTOP+0xb0>
    1ce0:	30 70       	andi	r19, 0x00	; 0
    1ce2:	c9 01       	movw	r24, r18
    1ce4:	df 91       	pop	r29
    1ce6:	cf 91       	pop	r28
    1ce8:	08 95       	ret

00001cea <timerSnapshotToTicks>:
    1cea:	6f 92       	push	r6
    1cec:	7f 92       	push	r7
    1cee:	8f 92       	push	r8
    1cf0:	9f 92       	push	r9
    1cf2:	af 92       	push	r10
    1cf4:	bf 92       	push	r11
    1cf6:	cf 92       	push	r12
    1cf8:	df 92       	push	r13
    1cfa:	ef 92       	push	r14
    1cfc:	ff 92       	push	r15
    1cfe:	0f 93       	push	r16
    1d00:	1f 93       	push	r17
    1d02:	cf 93       	push	r28
    1d04:	df 93       	push	r29
    1d06:	8c 01       	movw	r16, r24
    1d08:	fc 01       	movw	r30, r24
    1d0a:	80 81       	ld	r24, Z
    1d0c:	91 81       	ldd	r25, Z+1	; 0x01
    1d0e:	0e 94 19 0e 	call	0x1c32	; 0x1c32 <timerGetTOP>
    1d12:	3c 01       	movw	r6, r24
    1d14:	88 24       	eor	r8, r8
    1d16:	99 24       	eor	r9, r9
    1d18:	f8 01       	movw	r30, r16
    1d1a:	20 81       	ld	r18, Z
    1d1c:	31 81       	ldd	r19, Z+1	; 0x01
    1d1e:	80 91 6a 04 	lds	r24, 0x046A
    1d22:	90 91 6b 04 	lds	r25, 0x046B
    1d26:	a2 80       	ldd	r10, Z+2	; 0x02
    1d28:	b3 80       	ldd	r11, Z+3	; 0x03
    1d2a:	c4 80       	ldd	r12, Z+4	; 0x04
    1d2c:	d5 80       	ldd	r13, Z+5	; 0x05
    1d2e:	c6 81       	ldd	r28, Z+6	; 0x06
    1d30:	d7 81       	ldd	r29, Z+7	; 0x07
    1d32:	28 17       	cp	r18, r24
    1d34:	39 07       	cpc	r19, r25
    1d36:	01 f5       	brne	.+64     	; 0x1d78 <timerSnapshotToTicks+0x8e>
    1d38:	e0 90 a2 01 	lds	r14, 0x01A2
    1d3c:	f0 90 a3 01 	lds	r15, 0x01A3
    1d40:	00 91 a4 01 	lds	r16, 0x01A4
    1d44:	10 91 a5 01 	lds	r17, 0x01A5
    1d48:	c8 01       	movw	r24, r16
    1d4a:	b7 01       	movw	r22, r14
    1d4c:	a6 01       	movw	r20, r12
    1d4e:	95 01       	movw	r18, r10
    1d50:	0e 94 9e 1e 	call	0x3d3c	; 0x3d3c <__mulsi3>
    1d54:	5b 01       	movw	r10, r22
    1d56:	6c 01       	movw	r12, r24
    1d58:	be 01       	movw	r22, r28
    1d5a:	80 e0       	ldi	r24, 0x00	; 0
    1d5c:	90 e0       	ldi	r25, 0x00	; 0
    1d5e:	a8 01       	movw	r20, r16
    1d60:	97 01       	movw	r18, r14
    1d62:	0e 94 9e 1e 	call	0x3d3c	; 0x3d3c <__mulsi3>
    1d66:	a4 01       	movw	r20, r8
    1d68:	93 01       	movw	r18, r6
    1d6a:	0e 94 d1 1e 	call	0x3da2	; 0x3da2 <__udivmodsi4>
    1d6e:	2a 0d       	add	r18, r10
    1d70:	3b 1d       	adc	r19, r11
    1d72:	4c 1d       	adc	r20, r12
    1d74:	5d 1d       	adc	r21, r13
    1d76:	14 c0       	rjmp	.+40     	; 0x1da0 <timerSnapshotToTicks+0xb6>
    1d78:	08 94       	sec
    1d7a:	61 1c       	adc	r6, r1
    1d7c:	71 1c       	adc	r7, r1
    1d7e:	81 1c       	adc	r8, r1
    1d80:	91 1c       	adc	r9, r1
    1d82:	c4 01       	movw	r24, r8
    1d84:	b3 01       	movw	r22, r6
    1d86:	a6 01       	movw	r20, r12
    1d88:	95 01       	movw	r18, r10
    1d8a:	0e 94 9e 1e 	call	0x3d3c	; 0x3d3c <__mulsi3>
    1d8e:	9b 01       	movw	r18, r22
    1d90:	ac 01       	movw	r20, r24
    1d92:	ce 01       	movw	r24, r28
    1d94:	a0 e0       	ldi	r26, 0x00	; 0
    1d96:	b0 e0       	ldi	r27, 0x00	; 0
    1d98:	28 0f       	add	r18, r24
    1d9a:	39 1f       	adc	r19, r25
    1d9c:	4a 1f       	adc	r20, r26
    1d9e:	5b 1f       	adc	r21, r27
    1da0:	b9 01       	movw	r22, r18
    1da2:	ca 01       	movw	r24, r20
    1da4:	df 91       	pop	r29
    1da6:	cf 91       	pop	r28
    1da8:	1f 91       	pop	r17
    1daa:	0f 91       	pop	r16
    1dac:	ff 90       	pop	r15
    1dae:	ef 90       	pop	r14
    1db0:	df 90       	pop	r13
    1db2:	cf 90       	pop	r12
    1db4:	bf 90       	pop	r11
    1db6:	af 90       	pop	r10
    1db8:	9f 90       	pop	r9
    1dba:	8f 90       	pop	r8
    1dbc:	7f 90       	pop	r7
    1dbe:	6f 90       	pop	r6
    1dc0:	08 95       	ret

00001dc2 <timerGetBestPrescaler>:
    1dc2:	4f 92       	push	r4
    1dc4:	5f 92       	push	r5
    1dc6:	6f 92       	push	r6
    1dc8:	7f 92       	push	r7
    1dca:	8f 92       	push	r8
    1dcc:	9f 92       	push	r9
    1dce:	af 92       	push	r10
    1dd0:	bf 92       	push	r11
    1dd2:	cf 92       	push	r12
    1dd4:	df 92       	push	r13
    1dd6:	ef 92       	push	r14
    1dd8:	ff 92       	push	r15
    1dda:	0f 93       	push	r16
    1ddc:	1f 93       	push	r17
    1dde:	cf 93       	push	r28
    1de0:	df 93       	push	r29
    1de2:	8c 01       	movw	r16, r24
    1de4:	09 5f       	subi	r16, 0xF9	; 249
    1de6:	1f 4f       	sbci	r17, 0xFF	; 255
    1de8:	f8 01       	movw	r30, r16
    1dea:	84 91       	lpm	r24, Z+
    1dec:	07 50       	subi	r16, 0x07	; 7
    1dee:	10 40       	sbci	r17, 0x00	; 0
    1df0:	88 23       	and	r24, r24
    1df2:	31 f4       	brne	.+12     	; 0x1e00 <timerGetBestPrescaler+0x3e>
    1df4:	af ef       	ldi	r26, 0xFF	; 255
    1df6:	aa 2e       	mov	r10, r26
    1df8:	b1 2c       	mov	r11, r1
    1dfa:	c1 2c       	mov	r12, r1
    1dfc:	d1 2c       	mov	r13, r1
    1dfe:	06 c0       	rjmp	.+12     	; 0x1e0c <timerGetBestPrescaler+0x4a>
    1e00:	ff ef       	ldi	r31, 0xFF	; 255
    1e02:	af 2e       	mov	r10, r31
    1e04:	ff ef       	ldi	r31, 0xFF	; 255
    1e06:	bf 2e       	mov	r11, r31
    1e08:	c1 2c       	mov	r12, r1
    1e0a:	d1 2c       	mov	r13, r1
    1e0c:	c1 e0       	ldi	r28, 0x01	; 1
    1e0e:	d0 e0       	ldi	r29, 0x00	; 0
    1e10:	e1 e0       	ldi	r30, 0x01	; 1
    1e12:	4e 2e       	mov	r4, r30
    1e14:	51 2c       	mov	r5, r1
    1e16:	ee 24       	eor	r14, r14
    1e18:	ff 24       	eor	r15, r15
    1e1a:	3b 01       	movw	r6, r22
    1e1c:	88 24       	eor	r8, r8
    1e1e:	99 24       	eor	r9, r9
    1e20:	c8 01       	movw	r24, r16
    1e22:	be 01       	movw	r22, r28
    1e24:	0e 94 ed 0a 	call	0x15da	; 0x15da <__timerPrescalerIndex>
    1e28:	8f 5f       	subi	r24, 0xFF	; 255
    1e2a:	9f 4f       	sbci	r25, 0xFF	; 255
    1e2c:	59 f0       	breq	.+22     	; 0x1e44 <timerGetBestPrescaler+0x82>
    1e2e:	c4 01       	movw	r24, r8
    1e30:	b3 01       	movw	r22, r6
    1e32:	ae 01       	movw	r20, r28
    1e34:	0e 94 8b 0a 	call	0x1516	; 0x1516 <ticks_per_ms>
    1e38:	a6 16       	cp	r10, r22
    1e3a:	b7 06       	cpc	r11, r23
    1e3c:	c8 06       	cpc	r12, r24
    1e3e:	d9 06       	cpc	r13, r25
    1e40:	70 f4       	brcc	.+28     	; 0x1e5e <timerGetBestPrescaler+0x9c>
    1e42:	2e 01       	movw	r4, r28
    1e44:	cc 0f       	add	r28, r28
    1e46:	dd 1f       	adc	r29, r29
    1e48:	08 94       	sec
    1e4a:	e1 1c       	adc	r14, r1
    1e4c:	f1 1c       	adc	r15, r1
    1e4e:	2b e0       	ldi	r18, 0x0B	; 11
    1e50:	e2 16       	cp	r14, r18
    1e52:	f1 04       	cpc	r15, r1
    1e54:	29 f7       	brne	.-54     	; 0x1e20 <timerGetBestPrescaler+0x5e>
    1e56:	88 ef       	ldi	r24, 0xF8	; 248
    1e58:	0e 94 27 0d 	call	0x1a4e	; 0x1a4e <setError>
    1e5c:	e2 01       	movw	r28, r4
    1e5e:	ce 01       	movw	r24, r28
    1e60:	df 91       	pop	r29
    1e62:	cf 91       	pop	r28
    1e64:	1f 91       	pop	r17
    1e66:	0f 91       	pop	r16
    1e68:	ff 90       	pop	r15
    1e6a:	ef 90       	pop	r14
    1e6c:	df 90       	pop	r13
    1e6e:	cf 90       	pop	r12
    1e70:	bf 90       	pop	r11
    1e72:	af 90       	pop	r10
    1e74:	9f 90       	pop	r9
    1e76:	8f 90       	pop	r8
    1e78:	7f 90       	pop	r7
    1e7a:	6f 90       	pop	r6
    1e7c:	5f 90       	pop	r5
    1e7e:	4f 90       	pop	r4
    1e80:	08 95       	ret

00001e82 <timerSetPrescaler>:
    1e82:	cf 92       	push	r12
    1e84:	df 92       	push	r13
    1e86:	ef 92       	push	r14
    1e88:	ff 92       	push	r15
    1e8a:	0f 93       	push	r16
    1e8c:	1f 93       	push	r17
    1e8e:	cf 93       	push	r28
    1e90:	df 93       	push	r29
    1e92:	ec 01       	movw	r28, r24
    1e94:	6b 01       	movw	r12, r22
    1e96:	fc 01       	movw	r30, r24
    1e98:	34 96       	adiw	r30, 0x04	; 4
    1e9a:	05 91       	lpm	r16, Z+
    1e9c:	14 91       	lpm	r17, Z+
    1e9e:	26 96       	adiw	r28, 0x06	; 6
    1ea0:	fe 01       	movw	r30, r28
    1ea2:	f4 90       	lpm	r15, Z+
    1ea4:	26 97       	sbiw	r28, 0x06	; 6
    1ea6:	ef b6       	in	r14, 0x3f	; 63
    1ea8:	f8 94       	cli
    1eaa:	ce 01       	movw	r24, r28
    1eac:	0e 94 ed 0a 	call	0x15da	; 0x15da <__timerPrescalerIndex>
    1eb0:	ac 01       	movw	r20, r24
    1eb2:	ff ef       	ldi	r31, 0xFF	; 255
    1eb4:	8f 3f       	cpi	r24, 0xFF	; 255
    1eb6:	9f 07       	cpc	r25, r31
    1eb8:	71 f0       	breq	.+28     	; 0x1ed6 <timerSetPrescaler+0x54>
    1eba:	fe 01       	movw	r30, r28
    1ebc:	a5 91       	lpm	r26, Z+
    1ebe:	b4 91       	lpm	r27, Z+
    1ec0:	cd 92       	st	X+, r12
    1ec2:	dc 92       	st	X, r13
    1ec4:	f8 01       	movw	r30, r16
    1ec6:	80 81       	ld	r24, Z
    1ec8:	f0 94       	com	r15
    1eca:	8f 21       	and	r24, r15
    1ecc:	80 83       	st	Z, r24
    1ece:	80 81       	ld	r24, Z
    1ed0:	84 2b       	or	r24, r20
    1ed2:	80 83       	st	Z, r24
    1ed4:	03 c0       	rjmp	.+6      	; 0x1edc <timerSetPrescaler+0x5a>
    1ed6:	8a ef       	ldi	r24, 0xFA	; 250
    1ed8:	0e 94 27 0d 	call	0x1a4e	; 0x1a4e <setError>
    1edc:	ef be       	out	0x3f, r14	; 63
    1ede:	df 91       	pop	r29
    1ee0:	cf 91       	pop	r28
    1ee2:	1f 91       	pop	r17
    1ee4:	0f 91       	pop	r16
    1ee6:	ff 90       	pop	r15
    1ee8:	ef 90       	pop	r14
    1eea:	df 90       	pop	r13
    1eec:	cf 90       	pop	r12
    1eee:	08 95       	ret

00001ef0 <timerInit>:
    1ef0:	7f 92       	push	r7
    1ef2:	8f 92       	push	r8
    1ef4:	9f 92       	push	r9
    1ef6:	af 92       	push	r10
    1ef8:	bf 92       	push	r11
    1efa:	cf 92       	push	r12
    1efc:	df 92       	push	r13
    1efe:	ef 92       	push	r14
    1f00:	ff 92       	push	r15
    1f02:	0f 93       	push	r16
    1f04:	1f 93       	push	r17
    1f06:	cf 93       	push	r28
    1f08:	df 93       	push	r29
    1f0a:	ec 01       	movw	r28, r24
    1f0c:	fc 01       	movw	r30, r24
    1f0e:	32 96       	adiw	r30, 0x02	; 2
    1f10:	05 91       	lpm	r16, Z+
    1f12:	14 91       	lpm	r17, Z+
    1f14:	fc 01       	movw	r30, r24
    1f16:	85 90       	lpm	r8, Z+
    1f18:	94 90       	lpm	r9, Z+
    1f1a:	7f b6       	in	r7, 0x3f	; 63
    1f1c:	f8 94       	cli
    1f1e:	04 96       	adiw	r24, 0x04	; 4
    1f20:	fc 01       	movw	r30, r24
    1f22:	a5 91       	lpm	r26, Z+
    1f24:	b4 91       	lpm	r27, Z+
    1f26:	9c 91       	ld	r25, X
    1f28:	26 96       	adiw	r28, 0x06	; 6
    1f2a:	fe 01       	movw	r30, r28
    1f2c:	84 91       	lpm	r24, Z+
    1f2e:	26 97       	sbiw	r28, 0x06	; 6
    1f30:	80 95       	com	r24
    1f32:	98 23       	and	r25, r24
    1f34:	9c 93       	st	X, r25
    1f36:	b9 e1       	ldi	r27, 0x19	; 25
    1f38:	ab 2e       	mov	r10, r27
    1f3a:	b1 2c       	mov	r11, r1
    1f3c:	ac 0e       	add	r10, r28
    1f3e:	bd 1e       	adc	r11, r29
    1f40:	c5 01       	movw	r24, r10
    1f42:	0e 94 d8 05 	call	0xbb0	; 0xbb0 <__portMaskClear>
    1f46:	f8 01       	movw	r30, r16
    1f48:	10 82       	st	Z, r1
    1f4a:	f4 01       	movw	r30, r8
    1f4c:	60 81       	ld	r22, Z
    1f4e:	71 81       	ldd	r23, Z+1	; 0x01
    1f50:	ce 01       	movw	r24, r28
    1f52:	0e 94 41 0f 	call	0x1e82	; 0x1e82 <timerSetPrescaler>
    1f56:	28 96       	adiw	r28, 0x08	; 8
    1f58:	fe 01       	movw	r30, r28
    1f5a:	e4 90       	lpm	r14, Z+
    1f5c:	2f 96       	adiw	r28, 0x0f	; 15
    1f5e:	ff 24       	eor	r15, r15
    1f60:	00 e0       	ldi	r16, 0x00	; 0
    1f62:	10 e0       	ldi	r17, 0x00	; 0
    1f64:	fe 01       	movw	r30, r28
    1f66:	c5 90       	lpm	r12, Z+
    1f68:	d4 90       	lpm	r13, Z+
    1f6a:	67 97       	sbiw	r28, 0x17	; 23
    1f6c:	09 c0       	rjmp	.+18     	; 0x1f80 <timerInit+0x90>
    1f6e:	c6 01       	movw	r24, r12
    1f70:	80 0f       	add	r24, r16
    1f72:	91 1f       	adc	r25, r17
    1f74:	08 96       	adiw	r24, 0x08	; 8
    1f76:	0e 94 bf 05 	call	0xb7e	; 0xb7e <__portMaskSet>
    1f7a:	f3 94       	inc	r15
    1f7c:	00 5f       	subi	r16, 0xF0	; 240
    1f7e:	1f 4f       	sbci	r17, 0xFF	; 255
    1f80:	fe 14       	cp	r15, r14
    1f82:	a8 f3       	brcs	.-22     	; 0x1f6e <timerInit+0x7e>
    1f84:	ce 01       	movw	r24, r28
    1f86:	4c 96       	adiw	r24, 0x1c	; 28
    1f88:	0e 94 bf 05 	call	0xb7e	; 0xb7e <__portMaskSet>
    1f8c:	f4 01       	movw	r30, r8
    1f8e:	82 81       	ldd	r24, Z+2	; 0x02
    1f90:	93 81       	ldd	r25, Z+3	; 0x03
    1f92:	89 2b       	or	r24, r25
    1f94:	19 f0       	breq	.+6      	; 0x1f9c <timerInit+0xac>
    1f96:	c5 01       	movw	r24, r10
    1f98:	0e 94 bf 05 	call	0xb7e	; 0xb7e <__portMaskSet>
    1f9c:	7f be       	out	0x3f, r7	; 63
    1f9e:	df 91       	pop	r29
    1fa0:	cf 91       	pop	r28
    1fa2:	1f 91       	pop	r17
    1fa4:	0f 91       	pop	r16
    1fa6:	ff 90       	pop	r15
    1fa8:	ef 90       	pop	r14
    1faa:	df 90       	pop	r13
    1fac:	cf 90       	pop	r12
    1fae:	bf 90       	pop	r11
    1fb0:	af 90       	pop	r10
    1fb2:	9f 90       	pop	r9
    1fb4:	8f 90       	pop	r8
    1fb6:	7f 90       	pop	r7
    1fb8:	08 95       	ret

00001fba <timerSetMode>:
    1fba:	df 92       	push	r13
    1fbc:	ef 92       	push	r14
    1fbe:	ff 92       	push	r15
    1fc0:	0f 93       	push	r16
    1fc2:	1f 93       	push	r17
    1fc4:	cf 93       	push	r28
    1fc6:	df 93       	push	r29
    1fc8:	ec 01       	movw	r28, r24
    1fca:	66 23       	and	r22, r22
    1fcc:	41 f0       	breq	.+16     	; 0x1fde <timerSetMode+0x24>
    1fce:	fc 01       	movw	r30, r24
    1fd0:	a5 91       	lpm	r26, Z+
    1fd2:	b4 91       	lpm	r27, Z+
    1fd4:	1a 96       	adiw	r26, 0x0a	; 10
    1fd6:	8c 91       	ld	r24, X
    1fd8:	86 17       	cp	r24, r22
    1fda:	09 f4       	brne	.+2      	; 0x1fde <timerSetMode+0x24>
    1fdc:	7f c0       	rjmp	.+254    	; 0x20dc <timerSetMode+0x122>
    1fde:	fe 01       	movw	r30, r28
    1fe0:	39 96       	adiw	r30, 0x09	; 9
    1fe2:	25 91       	lpm	r18, Z+
    1fe4:	34 91       	lpm	r19, Z+
    1fe6:	81 e0       	ldi	r24, 0x01	; 1
    1fe8:	90 e0       	ldi	r25, 0x00	; 0
    1fea:	06 2e       	mov	r0, r22
    1fec:	02 c0       	rjmp	.+4      	; 0x1ff2 <timerSetMode+0x38>
    1fee:	88 0f       	add	r24, r24
    1ff0:	99 1f       	adc	r25, r25
    1ff2:	0a 94       	dec	r0
    1ff4:	e2 f7       	brpl	.-8      	; 0x1fee <timerSetMode+0x34>
    1ff6:	82 23       	and	r24, r18
    1ff8:	93 23       	and	r25, r19
    1ffa:	89 2b       	or	r24, r25
    1ffc:	09 f4       	brne	.+2      	; 0x2000 <timerSetMode+0x46>
    1ffe:	6b c0       	rjmp	.+214    	; 0x20d6 <timerSetMode+0x11c>
    2000:	fe 01       	movw	r30, r28
    2002:	a5 91       	lpm	r26, Z+
    2004:	b4 91       	lpm	r27, Z+
    2006:	1a 96       	adiw	r26, 0x0a	; 10
    2008:	6c 93       	st	X, r22
    200a:	ff ed       	ldi	r31, 0xDF	; 223
    200c:	2f 3f       	cpi	r18, 0xFF	; 255
    200e:	3f 07       	cpc	r19, r31
    2010:	11 f4       	brne	.+4      	; 0x2016 <timerSetMode+0x5c>
    2012:	d6 2e       	mov	r13, r22
    2014:	13 c0       	rjmp	.+38     	; 0x203c <timerSetMode+0x82>
    2016:	88 e8       	ldi	r24, 0x88	; 136
    2018:	23 33       	cpi	r18, 0x33	; 51
    201a:	38 07       	cpc	r19, r24
    201c:	31 f4       	brne	.+12     	; 0x202a <timerSetMode+0x70>
    201e:	e6 2f       	mov	r30, r22
    2020:	f0 e0       	ldi	r31, 0x00	; 0
    2022:	e8 5e       	subi	r30, 0xE8	; 232
    2024:	fd 4f       	sbci	r31, 0xFD	; 253
    2026:	d4 90       	lpm	r13, Z+
    2028:	09 c0       	rjmp	.+18     	; 0x203c <timerSetMode+0x82>
    202a:	23 33       	cpi	r18, 0x33	; 51
    202c:	31 05       	cpc	r19, r1
    202e:	09 f0       	breq	.+2      	; 0x2032 <timerSetMode+0x78>
    2030:	52 c0       	rjmp	.+164    	; 0x20d6 <timerSetMode+0x11c>
    2032:	e6 2f       	mov	r30, r22
    2034:	f0 e0       	ldi	r31, 0x00	; 0
    2036:	e8 5d       	subi	r30, 0xD8	; 216
    2038:	fd 4f       	sbci	r31, 0xFD	; 253
    203a:	d4 90       	lpm	r13, Z+
    203c:	af ef       	ldi	r26, 0xFF	; 255
    203e:	da 16       	cp	r13, r26
    2040:	09 f4       	brne	.+2      	; 0x2044 <timerSetMode+0x8a>
    2042:	49 c0       	rjmp	.+146    	; 0x20d6 <timerSetMode+0x11c>
    2044:	ce 01       	movw	r24, r28
    2046:	04 96       	adiw	r24, 0x04	; 4
    2048:	fc 01       	movw	r30, r24
    204a:	a5 91       	lpm	r26, Z+
    204c:	b4 91       	lpm	r27, Z+
    204e:	9c 91       	ld	r25, X
    2050:	26 96       	adiw	r28, 0x06	; 6
    2052:	fe 01       	movw	r30, r28
    2054:	84 91       	lpm	r24, Z+
    2056:	26 97       	sbiw	r28, 0x06	; 6
    2058:	80 95       	com	r24
    205a:	98 23       	and	r25, r24
    205c:	9c 93       	st	X, r25
    205e:	8e 01       	movw	r16, r28
    2060:	05 5f       	subi	r16, 0xF5	; 245
    2062:	1f 4f       	sbci	r17, 0xFF	; 255
    2064:	ee 24       	eor	r14, r14
    2066:	ff 24       	eor	r15, r15
    2068:	d8 01       	movw	r26, r16
    206a:	ed 91       	ld	r30, X+
    206c:	fc 91       	ld	r31, X
    206e:	85 91       	lpm	r24, Z+
    2070:	94 91       	lpm	r25, Z+
    2072:	89 2b       	or	r24, r25
    2074:	a1 f0       	breq	.+40     	; 0x209e <timerSetMode+0xe4>
    2076:	d0 fe       	sbrs	r13, 0
    2078:	04 c0       	rjmp	.+8      	; 0x2082 <timerSetMode+0xc8>
    207a:	c8 01       	movw	r24, r16
    207c:	0e 94 bf 05 	call	0xb7e	; 0xb7e <__portMaskSet>
    2080:	03 c0       	rjmp	.+6      	; 0x2088 <timerSetMode+0xce>
    2082:	c8 01       	movw	r24, r16
    2084:	0e 94 d8 05 	call	0xbb0	; 0xbb0 <__portMaskClear>
    2088:	08 94       	sec
    208a:	e1 1c       	adc	r14, r1
    208c:	f1 1c       	adc	r15, r1
    208e:	b4 e0       	ldi	r27, 0x04	; 4
    2090:	eb 16       	cp	r14, r27
    2092:	f1 04       	cpc	r15, r1
    2094:	21 f0       	breq	.+8      	; 0x209e <timerSetMode+0xe4>
    2096:	d6 94       	lsr	r13
    2098:	0d 5f       	subi	r16, 0xFD	; 253
    209a:	1f 4f       	sbci	r17, 0xFF	; 255
    209c:	e5 cf       	rjmp	.-54     	; 0x2068 <timerSetMode+0xae>
    209e:	28 96       	adiw	r28, 0x08	; 8
    20a0:	fe 01       	movw	r30, r28
    20a2:	14 91       	lpm	r17, Z+
    20a4:	11 50       	subi	r17, 0x01	; 1
    20a6:	2f 96       	adiw	r28, 0x0f	; 15
    20a8:	fe 01       	movw	r30, r28
    20aa:	e5 90       	lpm	r14, Z+
    20ac:	f4 90       	lpm	r15, Z+
    20ae:	67 97       	sbiw	r28, 0x17	; 23
    20b0:	0c c0       	rjmp	.+24     	; 0x20ca <timerSetMode+0x110>
    20b2:	81 2f       	mov	r24, r17
    20b4:	90 e0       	ldi	r25, 0x00	; 0
    20b6:	04 e0       	ldi	r16, 0x04	; 4
    20b8:	88 0f       	add	r24, r24
    20ba:	99 1f       	adc	r25, r25
    20bc:	0a 95       	dec	r16
    20be:	e1 f7       	brne	.-8      	; 0x20b8 <timerSetMode+0xfe>
    20c0:	8e 0d       	add	r24, r14
    20c2:	9f 1d       	adc	r25, r15
    20c4:	0e 94 93 0d 	call	0x1b26	; 0x1b26 <compareDetach>
    20c8:	11 50       	subi	r17, 0x01	; 1
    20ca:	17 ff       	sbrs	r17, 7
    20cc:	f2 cf       	rjmp	.-28     	; 0x20b2 <timerSetMode+0xf8>
    20ce:	ce 01       	movw	r24, r28
    20d0:	0e 94 78 0f 	call	0x1ef0	; 0x1ef0 <timerInit>
    20d4:	03 c0       	rjmp	.+6      	; 0x20dc <timerSetMode+0x122>
    20d6:	86 ef       	ldi	r24, 0xF6	; 246
    20d8:	0e 94 27 0d 	call	0x1a4e	; 0x1a4e <setError>
    20dc:	df 91       	pop	r29
    20de:	cf 91       	pop	r28
    20e0:	1f 91       	pop	r17
    20e2:	0f 91       	pop	r16
    20e4:	ff 90       	pop	r15
    20e6:	ef 90       	pop	r14
    20e8:	df 90       	pop	r13
    20ea:	08 95       	ret

000020ec <initTimers>:
    20ec:	ff 92       	push	r15
    20ee:	0f 93       	push	r16
    20f0:	1f 93       	push	r17
    20f2:	cf 93       	push	r28
    20f4:	df 93       	push	r29
    20f6:	f8 94       	cli
    20f8:	10 e0       	ldi	r17, 0x00	; 0
    20fa:	00 91 9f 01 	lds	r16, 0x019F
    20fe:	8e e2       	ldi	r24, 0x2E	; 46
    2100:	f8 2e       	mov	r15, r24
    2102:	20 c0       	rjmp	.+64     	; 0x2144 <initTimers+0x58>
    2104:	1f 9d       	mul	r17, r15
    2106:	e0 01       	movw	r28, r0
    2108:	11 24       	eor	r1, r1
    210a:	cf 5d       	subi	r28, 0xDF	; 223
    210c:	de 4f       	sbci	r29, 0xFE	; 254
    210e:	ce 01       	movw	r24, r28
    2110:	60 e0       	ldi	r22, 0x00	; 0
    2112:	70 e0       	ldi	r23, 0x00	; 0
    2114:	40 e0       	ldi	r20, 0x00	; 0
    2116:	50 e0       	ldi	r21, 0x00	; 0
    2118:	0e 94 d3 13 	call	0x27a6	; 0x27a6 <timerOverflowAttach>
    211c:	ce 01       	movw	r24, r28
    211e:	0e 94 07 13 	call	0x260e	; 0x260e <timerCaptureDetach>
    2122:	ce 01       	movw	r24, r28
    2124:	60 e0       	ldi	r22, 0x00	; 0
    2126:	0e 94 dd 0f 	call	0x1fba	; 0x1fba <timerSetMode>
    212a:	ce 01       	movw	r24, r28
    212c:	04 96       	adiw	r24, 0x04	; 4
    212e:	fc 01       	movw	r30, r24
    2130:	a5 91       	lpm	r26, Z+
    2132:	b4 91       	lpm	r27, Z+
    2134:	8c 91       	ld	r24, X
    2136:	26 96       	adiw	r28, 0x06	; 6
    2138:	fe 01       	movw	r30, r28
    213a:	94 91       	lpm	r25, Z+
    213c:	90 95       	com	r25
    213e:	89 23       	and	r24, r25
    2140:	8c 93       	st	X, r24
    2142:	1f 5f       	subi	r17, 0xFF	; 255
    2144:	10 17       	cp	r17, r16
    2146:	f0 f2       	brcs	.-68     	; 0x2104 <initTimers+0x18>
    2148:	78 94       	sei
    214a:	df 91       	pop	r29
    214c:	cf 91       	pop	r28
    214e:	1f 91       	pop	r17
    2150:	0f 91       	pop	r16
    2152:	ff 90       	pop	r15
    2154:	08 95       	ret

00002156 <compareAttach>:
    2156:	8f 92       	push	r8
    2158:	9f 92       	push	r9
    215a:	af 92       	push	r10
    215c:	bf 92       	push	r11
    215e:	cf 92       	push	r12
    2160:	df 92       	push	r13
    2162:	ef 92       	push	r14
    2164:	ff 92       	push	r15
    2166:	0f 93       	push	r16
    2168:	1f 93       	push	r17
    216a:	cf 93       	push	r28
    216c:	df 93       	push	r29
    216e:	8c 01       	movw	r16, r24
    2170:	6b 01       	movw	r12, r22
    2172:	5a 01       	movw	r10, r20
    2174:	49 01       	movw	r8, r18
    2176:	0e 5f       	subi	r16, 0xFE	; 254
    2178:	1f 4f       	sbci	r17, 0xFF	; 255
    217a:	f8 01       	movw	r30, r16
    217c:	84 91       	lpm	r24, Z+
    217e:	02 50       	subi	r16, 0x02	; 2
    2180:	10 40       	sbci	r17, 0x00	; 0
    2182:	9e e2       	ldi	r25, 0x2E	; 46
    2184:	89 9f       	mul	r24, r25
    2186:	e0 01       	movw	r28, r0
    2188:	11 24       	eor	r1, r1
    218a:	cf 5d       	subi	r28, 0xDF	; 223
    218c:	de 4f       	sbci	r29, 0xFE	; 254
    218e:	28 96       	adiw	r28, 0x08	; 8
    2190:	fe 01       	movw	r30, r28
    2192:	84 91       	lpm	r24, Z+
    2194:	28 97       	sbiw	r28, 0x08	; 8
    2196:	88 23       	and	r24, r24
    2198:	a1 f1       	breq	.+104    	; 0x2202 <compareAttach+0xac>
    219a:	f8 01       	movw	r30, r16
    219c:	e5 90       	lpm	r14, Z+
    219e:	f4 90       	lpm	r15, Z+
    21a0:	61 15       	cp	r22, r1
    21a2:	71 05       	cpc	r23, r1
    21a4:	41 f0       	breq	.+16     	; 0x21b6 <compareAttach+0x60>
    21a6:	f7 01       	movw	r30, r14
    21a8:	80 81       	ld	r24, Z
    21aa:	91 81       	ldd	r25, Z+1	; 0x01
    21ac:	89 2b       	or	r24, r25
    21ae:	19 f0       	breq	.+6      	; 0x21b6 <compareAttach+0x60>
    21b0:	8b ef       	ldi	r24, 0xFB	; 251
    21b2:	0e 94 27 0d 	call	0x1a4e	; 0x1a4e <setError>
    21b6:	ce 01       	movw	r24, r28
    21b8:	fe 01       	movw	r30, r28
    21ba:	a5 91       	lpm	r26, Z+
    21bc:	b4 91       	lpm	r27, Z+
    21be:	6d 91       	ld	r22, X+
    21c0:	7c 91       	ld	r23, X
    21c2:	0e 94 41 0f 	call	0x1e82	; 0x1e82 <timerSetPrescaler>
    21c6:	e8 01       	movw	r28, r16
    21c8:	23 96       	adiw	r28, 0x03	; 3
    21ca:	ce 01       	movw	r24, r28
    21cc:	0e 94 d8 05 	call	0xbb0	; 0xbb0 <__portMaskClear>
    21d0:	c8 01       	movw	r24, r16
    21d2:	b5 01       	movw	r22, r10
    21d4:	0e 94 b7 0d 	call	0x1b6e	; 0x1b6e <compareSetThreshold>
    21d8:	f7 01       	movw	r30, r14
    21da:	d1 82       	std	Z+1, r13	; 0x01
    21dc:	c0 82       	st	Z, r12
    21de:	93 82       	std	Z+3, r9	; 0x03
    21e0:	82 82       	std	Z+2, r8	; 0x02
    21e2:	c8 01       	movw	r24, r16
    21e4:	08 96       	adiw	r24, 0x08	; 8
    21e6:	0e 94 bf 05 	call	0xb7e	; 0xb7e <__portMaskSet>
    21ea:	c1 14       	cp	r12, r1
    21ec:	d1 04       	cpc	r13, r1
    21ee:	61 f0       	breq	.+24     	; 0x2208 <compareAttach+0xb2>
    21f0:	f8 ed       	ldi	r31, 0xD8	; 216
    21f2:	cf 16       	cp	r12, r31
    21f4:	fa e0       	ldi	r31, 0x0A	; 10
    21f6:	df 06       	cpc	r13, r31
    21f8:	39 f0       	breq	.+14     	; 0x2208 <compareAttach+0xb2>
    21fa:	ce 01       	movw	r24, r28
    21fc:	0e 94 bf 05 	call	0xb7e	; 0xb7e <__portMaskSet>
    2200:	03 c0       	rjmp	.+6      	; 0x2208 <compareAttach+0xb2>
    2202:	8d ef       	ldi	r24, 0xFD	; 253
    2204:	0e 94 27 0d 	call	0x1a4e	; 0x1a4e <setError>
    2208:	df 91       	pop	r29
    220a:	cf 91       	pop	r28
    220c:	1f 91       	pop	r17
    220e:	0f 91       	pop	r16
    2210:	ff 90       	pop	r15
    2212:	ef 90       	pop	r14
    2214:	df 90       	pop	r13
    2216:	cf 90       	pop	r12
    2218:	bf 90       	pop	r11
    221a:	af 90       	pop	r10
    221c:	9f 90       	pop	r9
    221e:	8f 90       	pop	r8
    2220:	08 95       	ret

00002222 <__clockInit>:
    2222:	2f 92       	push	r2
    2224:	3f 92       	push	r3
    2226:	4f 92       	push	r4
    2228:	5f 92       	push	r5
    222a:	6f 92       	push	r6
    222c:	7f 92       	push	r7
    222e:	8f 92       	push	r8
    2230:	9f 92       	push	r9
    2232:	af 92       	push	r10
    2234:	bf 92       	push	r11
    2236:	cf 92       	push	r12
    2238:	df 92       	push	r13
    223a:	ef 92       	push	r14
    223c:	ff 92       	push	r15
    223e:	0f 93       	push	r16
    2240:	1f 93       	push	r17
    2242:	df 93       	push	r29
    2244:	cf 93       	push	r28
    2246:	00 d0       	rcall	.+0      	; 0x2248 <__clockInit+0x26>
    2248:	00 d0       	rcall	.+0      	; 0x224a <__clockInit+0x28>
    224a:	cd b7       	in	r28, 0x3d	; 61
    224c:	de b7       	in	r29, 0x3e	; 62
    224e:	10 92 6b 04 	sts	0x046B, r1
    2252:	10 92 6a 04 	sts	0x046A, r1
    2256:	00 91 9f 01 	lds	r16, 0x019F
    225a:	01 50       	subi	r16, 0x01	; 1
    225c:	8e e2       	ldi	r24, 0x2E	; 46
    225e:	08 02       	muls	r16, r24
    2260:	60 01       	movw	r12, r0
    2262:	11 24       	eor	r1, r1
    2264:	21 e2       	ldi	r18, 0x21	; 33
    2266:	31 e0       	ldi	r19, 0x01	; 1
    2268:	c2 0e       	add	r12, r18
    226a:	d3 1e       	adc	r13, r19
    226c:	aa 24       	eor	r10, r10
    226e:	bb 24       	eor	r11, r11
    2270:	22 24       	eor	r2, r2
    2272:	33 24       	eor	r3, r3
    2274:	1a 82       	std	Y+2, r1	; 0x02
    2276:	19 82       	std	Y+1, r1	; 0x01
    2278:	59 c0       	rjmp	.+178    	; 0x232c <__clockInit+0x10a>
    227a:	c6 01       	movw	r24, r12
    227c:	04 96       	adiw	r24, 0x04	; 4
    227e:	fc 01       	movw	r30, r24
    2280:	a5 91       	lpm	r26, Z+
    2282:	b4 91       	lpm	r27, Z+
    2284:	8c 91       	ld	r24, X
    2286:	26 e0       	ldi	r18, 0x06	; 6
    2288:	30 e0       	ldi	r19, 0x00	; 0
    228a:	c2 0e       	add	r12, r18
    228c:	d3 1e       	adc	r13, r19
    228e:	f6 01       	movw	r30, r12
    2290:	94 91       	lpm	r25, Z+
    2292:	2a ef       	ldi	r18, 0xFA	; 250
    2294:	3f ef       	ldi	r19, 0xFF	; 255
    2296:	c2 0e       	add	r12, r18
    2298:	d3 1e       	adc	r13, r19
    229a:	89 23       	and	r24, r25
    229c:	09 f0       	breq	.+2      	; 0x22a0 <__clockInit+0x7e>
    229e:	41 c0       	rjmp	.+130    	; 0x2322 <__clockInit+0x100>
    22a0:	db c0       	rjmp	.+438    	; 0x2458 <__clockInit+0x236>
    22a2:	88 e0       	ldi	r24, 0x08	; 8
    22a4:	90 e0       	ldi	r25, 0x00	; 0
    22a6:	c8 0e       	add	r12, r24
    22a8:	d9 1e       	adc	r13, r25
    22aa:	f6 01       	movw	r30, r12
    22ac:	84 91       	lpm	r24, Z+
    22ae:	28 ef       	ldi	r18, 0xF8	; 248
    22b0:	3f ef       	ldi	r19, 0xFF	; 255
    22b2:	c2 0e       	add	r12, r18
    22b4:	d3 1e       	adc	r13, r19
    22b6:	82 30       	cpi	r24, 0x02	; 2
    22b8:	a0 f1       	brcs	.+104    	; 0x2322 <__clockInit+0x100>
    22ba:	3f ef       	ldi	r19, 0xFF	; 255
    22bc:	23 16       	cp	r2, r19
    22be:	31 04       	cpc	r3, r1
    22c0:	69 f0       	breq	.+26     	; 0x22dc <__clockInit+0xba>
    22c2:	60 f0       	brcs	.+24     	; 0x22dc <__clockInit+0xba>
    22c4:	87 e0       	ldi	r24, 0x07	; 7
    22c6:	90 e0       	ldi	r25, 0x00	; 0
    22c8:	c8 0e       	add	r12, r24
    22ca:	d9 1e       	adc	r13, r25
    22cc:	f6 01       	movw	r30, r12
    22ce:	84 91       	lpm	r24, Z+
    22d0:	29 ef       	ldi	r18, 0xF9	; 249
    22d2:	3f ef       	ldi	r19, 0xFF	; 255
    22d4:	c2 0e       	add	r12, r18
    22d6:	d3 1e       	adc	r13, r19
    22d8:	88 23       	and	r24, r24
    22da:	19 f1       	breq	.+70     	; 0x2322 <__clockInit+0x100>
    22dc:	c6 01       	movw	r24, r12
    22de:	6c e0       	ldi	r22, 0x0C	; 12
    22e0:	70 e0       	ldi	r23, 0x00	; 0
    22e2:	0e 94 e1 0e 	call	0x1dc2	; 0x1dc2 <timerGetBestPrescaler>
    22e6:	f8 2e       	mov	r15, r24
    22e8:	e9 2e       	mov	r14, r25
    22ea:	6c e0       	ldi	r22, 0x0C	; 12
    22ec:	70 e0       	ldi	r23, 0x00	; 0
    22ee:	80 e0       	ldi	r24, 0x00	; 0
    22f0:	90 e0       	ldi	r25, 0x00	; 0
    22f2:	4f 2d       	mov	r20, r15
    22f4:	5e 2d       	mov	r21, r14
    22f6:	0e 94 8b 0a 	call	0x1516	; 0x1516 <ticks_per_ms>
    22fa:	9b 01       	movw	r18, r22
    22fc:	ac 01       	movw	r20, r24
    22fe:	a1 14       	cp	r10, r1
    2300:	b1 04       	cpc	r11, r1
    2302:	41 f0       	breq	.+16     	; 0x2314 <__clockInit+0xf2>
    2304:	c1 01       	movw	r24, r2
    2306:	a0 e0       	ldi	r26, 0x00	; 0
    2308:	b0 e0       	ldi	r27, 0x00	; 0
    230a:	82 17       	cp	r24, r18
    230c:	93 07       	cpc	r25, r19
    230e:	a4 07       	cpc	r26, r20
    2310:	b5 07       	cpc	r27, r21
    2312:	38 f4       	brcc	.+14     	; 0x2322 <__clockInit+0x100>
    2314:	19 01       	movw	r2, r18
    2316:	56 01       	movw	r10, r12
    2318:	8f 2d       	mov	r24, r15
    231a:	9e 2d       	mov	r25, r14
    231c:	9c 01       	movw	r18, r24
    231e:	3a 83       	std	Y+2, r19	; 0x02
    2320:	29 83       	std	Y+1, r18	; 0x01
    2322:	01 50       	subi	r16, 0x01	; 1
    2324:	82 ed       	ldi	r24, 0xD2	; 210
    2326:	9f ef       	ldi	r25, 0xFF	; 255
    2328:	c8 0e       	add	r12, r24
    232a:	d9 1e       	adc	r13, r25
    232c:	07 ff       	sbrs	r16, 7
    232e:	a5 cf       	rjmp	.-182    	; 0x227a <__clockInit+0x58>
    2330:	a1 14       	cp	r10, r1
    2332:	b1 04       	cpc	r11, r1
    2334:	09 f4       	brne	.+2      	; 0x2338 <__clockInit+0x116>
    2336:	87 c0       	rjmp	.+270    	; 0x2446 <__clockInit+0x224>
    2338:	e7 e0       	ldi	r30, 0x07	; 7
    233a:	f0 e0       	ldi	r31, 0x00	; 0
    233c:	ae 0e       	add	r10, r30
    233e:	bf 1e       	adc	r11, r31
    2340:	f5 01       	movw	r30, r10
    2342:	84 91       	lpm	r24, Z+
    2344:	29 ef       	ldi	r18, 0xF9	; 249
    2346:	3f ef       	ldi	r19, 0xFF	; 255
    2348:	a2 0e       	add	r10, r18
    234a:	b3 1e       	adc	r11, r19
    234c:	88 23       	and	r24, r24
    234e:	31 f4       	brne	.+12     	; 0x235c <__clockInit+0x13a>
    2350:	3f ef       	ldi	r19, 0xFF	; 255
    2352:	c3 2e       	mov	r12, r19
    2354:	d1 2c       	mov	r13, r1
    2356:	e1 2c       	mov	r14, r1
    2358:	f1 2c       	mov	r15, r1
    235a:	06 c0       	rjmp	.+12     	; 0x2368 <__clockInit+0x146>
    235c:	2f ef       	ldi	r18, 0xFF	; 255
    235e:	c2 2e       	mov	r12, r18
    2360:	2f ef       	ldi	r18, 0xFF	; 255
    2362:	d2 2e       	mov	r13, r18
    2364:	e1 2c       	mov	r14, r1
    2366:	f1 2c       	mov	r15, r1
    2368:	9c e0       	ldi	r25, 0x0C	; 12
    236a:	89 2e       	mov	r8, r25
    236c:	91 2c       	mov	r9, r1
    236e:	21 01       	movw	r4, r2
    2370:	66 24       	eor	r6, r6
    2372:	77 24       	eor	r7, r7
    2374:	61 e0       	ldi	r22, 0x01	; 1
    2376:	70 e0       	ldi	r23, 0x00	; 0
    2378:	80 e0       	ldi	r24, 0x00	; 0
    237a:	90 e0       	ldi	r25, 0x00	; 0
    237c:	49 81       	ldd	r20, Y+1	; 0x01
    237e:	5a 81       	ldd	r21, Y+2	; 0x02
    2380:	0e 94 8b 0a 	call	0x1516	; 0x1516 <ticks_per_ms>
    2384:	6f 5f       	subi	r22, 0xFF	; 255
    2386:	7f 4f       	sbci	r23, 0xFF	; 255
    2388:	8f 4f       	sbci	r24, 0xFF	; 255
    238a:	9f 4f       	sbci	r25, 0xFF	; 255
    238c:	64 0d       	add	r22, r4
    238e:	75 1d       	adc	r23, r5
    2390:	86 1d       	adc	r24, r6
    2392:	97 1d       	adc	r25, r7
    2394:	6c 15       	cp	r22, r12
    2396:	7d 05       	cpc	r23, r13
    2398:	8e 05       	cpc	r24, r14
    239a:	9f 05       	cpc	r25, r15
    239c:	28 f5       	brcc	.+74     	; 0x23e8 <__clockInit+0x1c6>
    239e:	c4 01       	movw	r24, r8
    23a0:	01 96       	adiw	r24, 0x01	; 1
    23a2:	9c 83       	std	Y+4, r25	; 0x04
    23a4:	8b 83       	std	Y+3, r24	; 0x03
    23a6:	c5 01       	movw	r24, r10
    23a8:	6b 81       	ldd	r22, Y+3	; 0x03
    23aa:	7c 81       	ldd	r23, Y+4	; 0x04
    23ac:	0e 94 e1 0e 	call	0x1dc2	; 0x1dc2 <timerGetBestPrescaler>
    23b0:	8c 01       	movw	r16, r24
    23b2:	eb 81       	ldd	r30, Y+3	; 0x03
    23b4:	fc 81       	ldd	r31, Y+4	; 0x04
    23b6:	bf 01       	movw	r22, r30
    23b8:	80 e0       	ldi	r24, 0x00	; 0
    23ba:	90 e0       	ldi	r25, 0x00	; 0
    23bc:	a8 01       	movw	r20, r16
    23be:	0e 94 8b 0a 	call	0x1516	; 0x1516 <ticks_per_ms>
    23c2:	29 81       	ldd	r18, Y+1	; 0x01
    23c4:	3a 81       	ldd	r19, Y+2	; 0x02
    23c6:	02 17       	cp	r16, r18
    23c8:	13 07       	cpc	r17, r19
    23ca:	71 f4       	brne	.+28     	; 0x23e8 <__clockInit+0x1c6>
    23cc:	c6 16       	cp	r12, r22
    23ce:	d7 06       	cpc	r13, r23
    23d0:	e8 06       	cpc	r14, r24
    23d2:	f9 06       	cpc	r15, r25
    23d4:	48 f0       	brcs	.+18     	; 0x23e8 <__clockInit+0x1c6>
    23d6:	46 16       	cp	r4, r22
    23d8:	57 06       	cpc	r5, r23
    23da:	68 06       	cpc	r6, r24
    23dc:	79 06       	cpc	r7, r25
    23de:	20 f4       	brcc	.+8      	; 0x23e8 <__clockInit+0x1c6>
    23e0:	1b 01       	movw	r2, r22
    23e2:	8b 80       	ldd	r8, Y+3	; 0x03
    23e4:	9c 80       	ldd	r9, Y+4	; 0x04
    23e6:	c3 cf       	rjmp	.-122    	; 0x236e <__clockInit+0x14c>
    23e8:	b0 92 6b 04 	sts	0x046B, r11
    23ec:	a0 92 6a 04 	sts	0x046A, r10
    23f0:	b4 01       	movw	r22, r8
    23f2:	80 e0       	ldi	r24, 0x00	; 0
    23f4:	90 e0       	ldi	r25, 0x00	; 0
    23f6:	28 ee       	ldi	r18, 0xE8	; 232
    23f8:	33 e0       	ldi	r19, 0x03	; 3
    23fa:	40 e0       	ldi	r20, 0x00	; 0
    23fc:	50 e0       	ldi	r21, 0x00	; 0
    23fe:	0e 94 9e 1e 	call	0x3d3c	; 0x3d3c <__mulsi3>
    2402:	60 93 a2 01 	sts	0x01A2, r22
    2406:	70 93 a3 01 	sts	0x01A3, r23
    240a:	80 93 a4 01 	sts	0x01A4, r24
    240e:	90 93 a5 01 	sts	0x01A5, r25
    2412:	c5 01       	movw	r24, r10
    2414:	69 81       	ldd	r22, Y+1	; 0x01
    2416:	7a 81       	ldd	r23, Y+2	; 0x02
    2418:	0e 94 41 0f 	call	0x1e82	; 0x1e82 <timerSetPrescaler>
    241c:	80 91 6a 04 	lds	r24, 0x046A
    2420:	90 91 6b 04 	lds	r25, 0x046B
    2424:	64 e0       	ldi	r22, 0x04	; 4
    2426:	0e 94 dd 0f 	call	0x1fba	; 0x1fba <timerSetMode>
    242a:	e0 91 6a 04 	lds	r30, 0x046A
    242e:	f0 91 6b 04 	lds	r31, 0x046B
    2432:	77 96       	adiw	r30, 0x17	; 23
    2434:	85 91       	lpm	r24, Z+
    2436:	94 91       	lpm	r25, Z+
    2438:	69 ed       	ldi	r22, 0xD9	; 217
    243a:	7a e0       	ldi	r23, 0x0A	; 10
    243c:	a1 01       	movw	r20, r2
    243e:	20 e0       	ldi	r18, 0x00	; 0
    2440:	30 e0       	ldi	r19, 0x00	; 0
    2442:	0e 94 ab 10 	call	0x2156	; 0x2156 <compareAttach>
    2446:	80 91 65 04 	lds	r24, 0x0465
    244a:	88 23       	and	r24, r24
    244c:	61 f0       	breq	.+24     	; 0x2466 <__clockInit+0x244>
    244e:	10 92 65 04 	sts	0x0465, r1
    2452:	0e 94 27 0d 	call	0x1a4e	; 0x1a4e <setError>
    2456:	07 c0       	rjmp	.+14     	; 0x2466 <__clockInit+0x244>
    2458:	f6 01       	movw	r30, r12
    245a:	39 96       	adiw	r30, 0x09	; 9
    245c:	85 91       	lpm	r24, Z+
    245e:	94 91       	lpm	r25, Z+
    2460:	84 fd       	sbrc	r24, 4
    2462:	1f cf       	rjmp	.-450    	; 0x22a2 <__clockInit+0x80>
    2464:	5e cf       	rjmp	.-324    	; 0x2322 <__clockInit+0x100>
    2466:	0f 90       	pop	r0
    2468:	0f 90       	pop	r0
    246a:	0f 90       	pop	r0
    246c:	0f 90       	pop	r0
    246e:	cf 91       	pop	r28
    2470:	df 91       	pop	r29
    2472:	1f 91       	pop	r17
    2474:	0f 91       	pop	r16
    2476:	ff 90       	pop	r15
    2478:	ef 90       	pop	r14
    247a:	df 90       	pop	r13
    247c:	cf 90       	pop	r12
    247e:	bf 90       	pop	r11
    2480:	af 90       	pop	r10
    2482:	9f 90       	pop	r9
    2484:	8f 90       	pop	r8
    2486:	7f 90       	pop	r7
    2488:	6f 90       	pop	r6
    248a:	5f 90       	pop	r5
    248c:	4f 90       	pop	r4
    248e:	3f 90       	pop	r3
    2490:	2f 90       	pop	r2
    2492:	08 95       	ret

00002494 <clockHasElapsedGetOverflow>:
    2494:	8f 92       	push	r8
    2496:	9f 92       	push	r9
    2498:	af 92       	push	r10
    249a:	bf 92       	push	r11
    249c:	cf 92       	push	r12
    249e:	df 92       	push	r13
    24a0:	ef 92       	push	r14
    24a2:	ff 92       	push	r15
    24a4:	0f 93       	push	r16
    24a6:	1f 93       	push	r17
    24a8:	cf 93       	push	r28
    24aa:	df 93       	push	r29
    24ac:	6b 01       	movw	r12, r22
    24ae:	7c 01       	movw	r14, r24
    24b0:	49 01       	movw	r8, r18
    24b2:	5a 01       	movw	r10, r20
    24b4:	e8 01       	movw	r28, r16
    24b6:	0e 94 20 0d 	call	0x1a40	; 0x1a40 <clockGetus>
    24ba:	6c 19       	sub	r22, r12
    24bc:	7d 09       	sbc	r23, r13
    24be:	8e 09       	sbc	r24, r14
    24c0:	9f 09       	sbc	r25, r15
    24c2:	86 16       	cp	r8, r22
    24c4:	97 06       	cpc	r9, r23
    24c6:	a8 06       	cpc	r10, r24
    24c8:	b9 06       	cpc	r11, r25
    24ca:	50 f4       	brcc	.+20     	; 0x24e0 <clockHasElapsedGetOverflow+0x4c>
    24cc:	68 19       	sub	r22, r8
    24ce:	79 09       	sbc	r23, r9
    24d0:	8a 09       	sbc	r24, r10
    24d2:	9b 09       	sbc	r25, r11
    24d4:	68 83       	st	Y, r22
    24d6:	79 83       	std	Y+1, r23	; 0x01
    24d8:	8a 83       	std	Y+2, r24	; 0x02
    24da:	9b 83       	std	Y+3, r25	; 0x03
    24dc:	8f ef       	ldi	r24, 0xFF	; 255
    24de:	09 c0       	rjmp	.+18     	; 0x24f2 <clockHasElapsedGetOverflow+0x5e>
    24e0:	86 1a       	sub	r8, r22
    24e2:	97 0a       	sbc	r9, r23
    24e4:	a8 0a       	sbc	r10, r24
    24e6:	b9 0a       	sbc	r11, r25
    24e8:	88 82       	st	Y, r8
    24ea:	99 82       	std	Y+1, r9	; 0x01
    24ec:	aa 82       	std	Y+2, r10	; 0x02
    24ee:	bb 82       	std	Y+3, r11	; 0x03
    24f0:	80 e0       	ldi	r24, 0x00	; 0
    24f2:	df 91       	pop	r29
    24f4:	cf 91       	pop	r28
    24f6:	1f 91       	pop	r17
    24f8:	0f 91       	pop	r16
    24fa:	ff 90       	pop	r15
    24fc:	ef 90       	pop	r14
    24fe:	df 90       	pop	r13
    2500:	cf 90       	pop	r12
    2502:	bf 90       	pop	r11
    2504:	af 90       	pop	r10
    2506:	9f 90       	pop	r9
    2508:	8f 90       	pop	r8
    250a:	08 95       	ret

0000250c <clockWaitus>:
    250c:	af 92       	push	r10
    250e:	bf 92       	push	r11
    2510:	cf 92       	push	r12
    2512:	df 92       	push	r13
    2514:	ef 92       	push	r14
    2516:	ff 92       	push	r15
    2518:	0f 93       	push	r16
    251a:	1f 93       	push	r17
    251c:	5b 01       	movw	r10, r22
    251e:	6c 01       	movw	r12, r24
    2520:	0e 94 20 0d 	call	0x1a40	; 0x1a40 <clockGetus>
    2524:	7b 01       	movw	r14, r22
    2526:	8c 01       	movw	r16, r24
    2528:	01 c0       	rjmp	.+2      	; 0x252c <clockWaitus+0x20>
    252a:	00 00       	nop
    252c:	0e 94 20 0d 	call	0x1a40	; 0x1a40 <clockGetus>
    2530:	6e 19       	sub	r22, r14
    2532:	7f 09       	sbc	r23, r15
    2534:	80 0b       	sbc	r24, r16
    2536:	91 0b       	sbc	r25, r17
    2538:	6a 15       	cp	r22, r10
    253a:	7b 05       	cpc	r23, r11
    253c:	8c 05       	cpc	r24, r12
    253e:	9d 05       	cpc	r25, r13
    2540:	a0 f3       	brcs	.-24     	; 0x252a <clockWaitus+0x1e>
    2542:	1f 91       	pop	r17
    2544:	0f 91       	pop	r16
    2546:	ff 90       	pop	r15
    2548:	ef 90       	pop	r14
    254a:	df 90       	pop	r13
    254c:	cf 90       	pop	r12
    254e:	bf 90       	pop	r11
    2550:	af 90       	pop	r10
    2552:	08 95       	ret

00002554 <clockWaitms>:
    2554:	28 ee       	ldi	r18, 0xE8	; 232
    2556:	33 e0       	ldi	r19, 0x03	; 3
    2558:	40 e0       	ldi	r20, 0x00	; 0
    255a:	50 e0       	ldi	r21, 0x00	; 0
    255c:	0e 94 9e 1e 	call	0x3d3c	; 0x3d3c <__mulsi3>
    2560:	0e 94 86 12 	call	0x250c	; 0x250c <clockWaitus>
    2564:	08 95       	ret

00002566 <delay_ms>:
    2566:	9b 01       	movw	r18, r22
    2568:	ac 01       	movw	r20, r24
    256a:	80 91 6a 04 	lds	r24, 0x046A
    256e:	90 91 6b 04 	lds	r25, 0x046B
    2572:	89 2b       	or	r24, r25
    2574:	29 f0       	breq	.+10     	; 0x2580 <delay_ms+0x1a>
    2576:	ca 01       	movw	r24, r20
    2578:	b9 01       	movw	r22, r18
    257a:	0e 94 aa 12 	call	0x2554	; 0x2554 <clockWaitms>
    257e:	08 95       	ret
    2580:	ca 01       	movw	r24, r20
    2582:	b9 01       	movw	r22, r18
    2584:	41 e0       	ldi	r20, 0x01	; 1
    2586:	50 e0       	ldi	r21, 0x00	; 0
    2588:	0e 94 8b 0a 	call	0x1516	; 0x1516 <ticks_per_ms>
    258c:	0e 94 a5 0a 	call	0x154a	; 0x154a <delay_cycles>
    2590:	08 95       	ret

00002592 <delay_us>:
    2592:	9b 01       	movw	r18, r22
    2594:	ac 01       	movw	r20, r24
    2596:	80 91 6a 04 	lds	r24, 0x046A
    259a:	90 91 6b 04 	lds	r25, 0x046B
    259e:	89 2b       	or	r24, r25
    25a0:	51 f0       	breq	.+20     	; 0x25b6 <delay_us+0x24>
    25a2:	25 36       	cpi	r18, 0x65	; 101
    25a4:	31 05       	cpc	r19, r1
    25a6:	41 05       	cpc	r20, r1
    25a8:	51 05       	cpc	r21, r1
    25aa:	28 f0       	brcs	.+10     	; 0x25b6 <delay_us+0x24>
    25ac:	ca 01       	movw	r24, r20
    25ae:	b9 01       	movw	r22, r18
    25b0:	0e 94 86 12 	call	0x250c	; 0x250c <clockWaitus>
    25b4:	08 95       	ret
    25b6:	ca 01       	movw	r24, r20
    25b8:	b9 01       	movw	r22, r18
    25ba:	48 ee       	ldi	r20, 0xE8	; 232
    25bc:	53 e0       	ldi	r21, 0x03	; 3
    25be:	0e 94 8b 0a 	call	0x1516	; 0x1516 <ticks_per_ms>
    25c2:	0e 94 a5 0a 	call	0x154a	; 0x154a <delay_cycles>
    25c6:	08 95       	ret

000025c8 <clockHasElapsed>:
    25c8:	af 92       	push	r10
    25ca:	bf 92       	push	r11
    25cc:	cf 92       	push	r12
    25ce:	df 92       	push	r13
    25d0:	ef 92       	push	r14
    25d2:	ff 92       	push	r15
    25d4:	0f 93       	push	r16
    25d6:	1f 93       	push	r17
    25d8:	7b 01       	movw	r14, r22
    25da:	8c 01       	movw	r16, r24
    25dc:	59 01       	movw	r10, r18
    25de:	6a 01       	movw	r12, r20
    25e0:	0e 94 20 0d 	call	0x1a40	; 0x1a40 <clockGetus>
    25e4:	6e 19       	sub	r22, r14
    25e6:	7f 09       	sbc	r23, r15
    25e8:	80 0b       	sbc	r24, r16
    25ea:	91 0b       	sbc	r25, r17
    25ec:	6a 15       	cp	r22, r10
    25ee:	7b 05       	cpc	r23, r11
    25f0:	8c 05       	cpc	r24, r12
    25f2:	9d 05       	cpc	r25, r13
    25f4:	10 f4       	brcc	.+4      	; 0x25fa <clockHasElapsed+0x32>
    25f6:	80 e0       	ldi	r24, 0x00	; 0
    25f8:	01 c0       	rjmp	.+2      	; 0x25fc <clockHasElapsed+0x34>
    25fa:	8f ef       	ldi	r24, 0xFF	; 255
    25fc:	1f 91       	pop	r17
    25fe:	0f 91       	pop	r16
    2600:	ff 90       	pop	r15
    2602:	ef 90       	pop	r14
    2604:	df 90       	pop	r13
    2606:	cf 90       	pop	r12
    2608:	bf 90       	pop	r11
    260a:	af 90       	pop	r10
    260c:	08 95       	ret

0000260e <timerCaptureDetach>:
    260e:	ef 92       	push	r14
    2610:	ff 92       	push	r15
    2612:	0f 93       	push	r16
    2614:	1f 93       	push	r17
    2616:	8c 01       	movw	r16, r24
    2618:	fc 01       	movw	r30, r24
    261a:	e5 90       	lpm	r14, Z+
    261c:	f4 90       	lpm	r15, Z+
    261e:	81 96       	adiw	r24, 0x21	; 33
    2620:	0e 94 d8 05 	call	0xbb0	; 0xbb0 <__portMaskClear>
    2624:	c8 01       	movw	r24, r16
    2626:	84 96       	adiw	r24, 0x24	; 36
    2628:	0e 94 bf 05 	call	0xb7e	; 0xb7e <__portMaskSet>
    262c:	f7 01       	movw	r30, r14
    262e:	17 82       	std	Z+7, r1	; 0x07
    2630:	16 82       	std	Z+6, r1	; 0x06
    2632:	1f 91       	pop	r17
    2634:	0f 91       	pop	r16
    2636:	ff 90       	pop	r15
    2638:	ef 90       	pop	r14
    263a:	08 95       	ret

0000263c <timerCaptureAttach>:
    263c:	af 92       	push	r10
    263e:	bf 92       	push	r11
    2640:	cf 92       	push	r12
    2642:	df 92       	push	r13
    2644:	ef 92       	push	r14
    2646:	ff 92       	push	r15
    2648:	0f 93       	push	r16
    264a:	1f 93       	push	r17
    264c:	cf 93       	push	r28
    264e:	df 93       	push	r29
    2650:	8c 01       	movw	r16, r24
    2652:	7b 01       	movw	r14, r22
    2654:	6a 01       	movw	r12, r20
    2656:	b2 2e       	mov	r11, r18
    2658:	fc 01       	movw	r30, r24
    265a:	c5 91       	lpm	r28, Z+
    265c:	d4 91       	lpm	r29, Z+
    265e:	8e 81       	ldd	r24, Y+6	; 0x06
    2660:	9f 81       	ldd	r25, Y+7	; 0x07
    2662:	89 2b       	or	r24, r25
    2664:	19 f0       	breq	.+6      	; 0x266c <timerCaptureAttach+0x30>
    2666:	8a ee       	ldi	r24, 0xEA	; 234
    2668:	0e 94 27 0d 	call	0x1a4e	; 0x1a4e <setError>
    266c:	af b6       	in	r10, 0x3f	; 63
    266e:	f8 94       	cli
    2670:	ff 82       	std	Y+7, r15	; 0x07
    2672:	ee 82       	std	Y+6, r14	; 0x06
    2674:	d9 86       	std	Y+9, r13	; 0x09
    2676:	c8 86       	std	Y+8, r12	; 0x08
    2678:	c8 01       	movw	r24, r16
    267a:	87 96       	adiw	r24, 0x27	; 39
    267c:	bb 20       	and	r11, r11
    267e:	19 f0       	breq	.+6      	; 0x2686 <timerCaptureAttach+0x4a>
    2680:	0e 94 bf 05 	call	0xb7e	; 0xb7e <__portMaskSet>
    2684:	02 c0       	rjmp	.+4      	; 0x268a <timerCaptureAttach+0x4e>
    2686:	0e 94 d8 05 	call	0xbb0	; 0xbb0 <__portMaskClear>
    268a:	c8 01       	movw	r24, r16
    268c:	84 96       	adiw	r24, 0x24	; 36
    268e:	0e 94 bf 05 	call	0xb7e	; 0xb7e <__portMaskSet>
    2692:	c8 01       	movw	r24, r16
    2694:	81 96       	adiw	r24, 0x21	; 33
    2696:	0e 94 bf 05 	call	0xb7e	; 0xb7e <__portMaskSet>
    269a:	af be       	out	0x3f, r10	; 63
    269c:	df 91       	pop	r29
    269e:	cf 91       	pop	r28
    26a0:	1f 91       	pop	r17
    26a2:	0f 91       	pop	r16
    26a4:	ff 90       	pop	r15
    26a6:	ef 90       	pop	r14
    26a8:	df 90       	pop	r13
    26aa:	cf 90       	pop	r12
    26ac:	bf 90       	pop	r11
    26ae:	af 90       	pop	r10
    26b0:	08 95       	ret

000026b2 <compareIsInUse>:
    26b2:	9c 01       	movw	r18, r24
    26b4:	fc 01       	movw	r30, r24
    26b6:	a5 91       	lpm	r26, Z+
    26b8:	b4 91       	lpm	r27, Z+
    26ba:	8d 91       	ld	r24, X+
    26bc:	9c 91       	ld	r25, X
    26be:	89 2b       	or	r24, r25
    26c0:	11 f5       	brne	.+68     	; 0x2706 <compareIsInUse+0x54>
    26c2:	2e 5f       	subi	r18, 0xFE	; 254
    26c4:	3f 4f       	sbci	r19, 0xFF	; 255
    26c6:	f9 01       	movw	r30, r18
    26c8:	94 91       	lpm	r25, Z+
    26ca:	22 50       	subi	r18, 0x02	; 2
    26cc:	30 40       	sbci	r19, 0x00	; 0
    26ce:	8e e2       	ldi	r24, 0x2E	; 46
    26d0:	98 9f       	mul	r25, r24
    26d2:	b0 01       	movw	r22, r0
    26d4:	11 24       	eor	r1, r1
    26d6:	6f 5d       	subi	r22, 0xDF	; 223
    26d8:	7e 4f       	sbci	r23, 0xFE	; 254
    26da:	ab 01       	movw	r20, r22
    26dc:	49 5e       	subi	r20, 0xE9	; 233
    26de:	5f 4f       	sbci	r21, 0xFF	; 255
    26e0:	fa 01       	movw	r30, r20
    26e2:	85 91       	lpm	r24, Z+
    26e4:	94 91       	lpm	r25, Z+
    26e6:	28 17       	cp	r18, r24
    26e8:	39 07       	cpc	r19, r25
    26ea:	79 f4       	brne	.+30     	; 0x270a <compareIsInUse+0x58>
    26ec:	fb 01       	movw	r30, r22
    26ee:	a5 91       	lpm	r26, Z+
    26f0:	b4 91       	lpm	r27, Z+
    26f2:	1a 96       	adiw	r26, 0x0a	; 10
    26f4:	8c 91       	ld	r24, X
    26f6:	84 30       	cpi	r24, 0x04	; 4
    26f8:	31 f0       	breq	.+12     	; 0x2706 <compareIsInUse+0x54>
    26fa:	89 30       	cpi	r24, 0x09	; 9
    26fc:	21 f0       	breq	.+8      	; 0x2706 <compareIsInUse+0x54>
    26fe:	8b 30       	cpi	r24, 0x0B	; 11
    2700:	11 f0       	breq	.+4      	; 0x2706 <compareIsInUse+0x54>
    2702:	8f 30       	cpi	r24, 0x0F	; 15
    2704:	11 f4       	brne	.+4      	; 0x270a <compareIsInUse+0x58>
    2706:	8f ef       	ldi	r24, 0xFF	; 255
    2708:	08 95       	ret
    270a:	80 e0       	ldi	r24, 0x00	; 0
    270c:	08 95       	ret

0000270e <compareFromIOPin>:
    270e:	bf 92       	push	r11
    2710:	cf 92       	push	r12
    2712:	df 92       	push	r13
    2714:	ef 92       	push	r14
    2716:	ff 92       	push	r15
    2718:	0f 93       	push	r16
    271a:	1f 93       	push	r17
    271c:	cf 93       	push	r28
    271e:	df 93       	push	r29
    2720:	6c 01       	movw	r12, r24
    2722:	b0 90 9f 01 	lds	r11, 0x019F
    2726:	21 e2       	ldi	r18, 0x21	; 33
    2728:	31 e0       	ldi	r19, 0x01	; 1
    272a:	c0 e0       	ldi	r28, 0x00	; 0
    272c:	d0 e0       	ldi	r29, 0x00	; 0
    272e:	90 e0       	ldi	r25, 0x00	; 0
    2730:	2d c0       	rjmp	.+90     	; 0x278c <compareFromIOPin+0x7e>
    2732:	28 5f       	subi	r18, 0xF8	; 248
    2734:	3f 4f       	sbci	r19, 0xFF	; 255
    2736:	f9 01       	movw	r30, r18
    2738:	e4 90       	lpm	r14, Z+
    273a:	28 50       	subi	r18, 0x08	; 8
    273c:	30 40       	sbci	r19, 0x00	; 0
    273e:	f9 01       	movw	r30, r18
    2740:	77 96       	adiw	r30, 0x17	; 23
    2742:	29 5f       	subi	r18, 0xF9	; 249
    2744:	3f 4f       	sbci	r19, 0xFF	; 255
    2746:	80 e0       	ldi	r24, 0x00	; 0
    2748:	a0 e0       	ldi	r26, 0x00	; 0
    274a:	b0 e0       	ldi	r27, 0x00	; 0
    274c:	05 91       	lpm	r16, Z+
    274e:	14 91       	lpm	r17, Z+
    2750:	f9 01       	movw	r30, r18
    2752:	f4 90       	lpm	r15, Z+
    2754:	27 50       	subi	r18, 0x07	; 7
    2756:	30 40       	sbci	r19, 0x00	; 0
    2758:	14 c0       	rjmp	.+40     	; 0x2782 <compareFromIOPin+0x74>
    275a:	b8 01       	movw	r22, r16
    275c:	6a 0f       	add	r22, r26
    275e:	7b 1f       	adc	r23, r27
    2760:	fb 01       	movw	r30, r22
    2762:	3e 96       	adiw	r30, 0x0e	; 14
    2764:	45 91       	lpm	r20, Z+
    2766:	54 91       	lpm	r21, Z+
    2768:	41 15       	cp	r20, r1
    276a:	51 05       	cpc	r21, r1
    276c:	41 f0       	breq	.+16     	; 0x277e <compareFromIOPin+0x70>
    276e:	4c 15       	cp	r20, r12
    2770:	5d 05       	cpc	r21, r13
    2772:	29 f4       	brne	.+10     	; 0x277e <compareFromIOPin+0x70>
    2774:	ff 20       	and	r15, r15
    2776:	11 f0       	breq	.+4      	; 0x277c <compareFromIOPin+0x6e>
    2778:	eb 01       	movw	r28, r22
    277a:	0a c0       	rjmp	.+20     	; 0x2790 <compareFromIOPin+0x82>
    277c:	eb 01       	movw	r28, r22
    277e:	8f 5f       	subi	r24, 0xFF	; 255
    2780:	50 96       	adiw	r26, 0x10	; 16
    2782:	8e 15       	cp	r24, r14
    2784:	50 f3       	brcs	.-44     	; 0x275a <compareFromIOPin+0x4c>
    2786:	9f 5f       	subi	r25, 0xFF	; 255
    2788:	22 5d       	subi	r18, 0xD2	; 210
    278a:	3f 4f       	sbci	r19, 0xFF	; 255
    278c:	9b 15       	cp	r25, r11
    278e:	88 f2       	brcs	.-94     	; 0x2732 <compareFromIOPin+0x24>
    2790:	ce 01       	movw	r24, r28
    2792:	df 91       	pop	r29
    2794:	cf 91       	pop	r28
    2796:	1f 91       	pop	r17
    2798:	0f 91       	pop	r16
    279a:	ff 90       	pop	r15
    279c:	ef 90       	pop	r14
    279e:	df 90       	pop	r13
    27a0:	cf 90       	pop	r12
    27a2:	bf 90       	pop	r11
    27a4:	08 95       	ret

000027a6 <timerOverflowAttach>:
    27a6:	df 92       	push	r13
    27a8:	ef 92       	push	r14
    27aa:	ff 92       	push	r15
    27ac:	0f 93       	push	r16
    27ae:	1f 93       	push	r17
    27b0:	cf 93       	push	r28
    27b2:	df 93       	push	r29
    27b4:	ec 01       	movw	r28, r24
    27b6:	8b 01       	movw	r16, r22
    27b8:	7a 01       	movw	r14, r20
    27ba:	df b6       	in	r13, 0x3f	; 63
    27bc:	f8 94       	cli
    27be:	61 15       	cp	r22, r1
    27c0:	71 05       	cpc	r23, r1
    27c2:	61 f0       	breq	.+24     	; 0x27dc <timerOverflowAttach+0x36>
    27c4:	fc 01       	movw	r30, r24
    27c6:	a5 91       	lpm	r26, Z+
    27c8:	b4 91       	lpm	r27, Z+
    27ca:	12 96       	adiw	r26, 0x02	; 2
    27cc:	8d 91       	ld	r24, X+
    27ce:	9c 91       	ld	r25, X
    27d0:	13 97       	sbiw	r26, 0x03	; 3
    27d2:	89 2b       	or	r24, r25
    27d4:	19 f0       	breq	.+6      	; 0x27dc <timerOverflowAttach+0x36>
    27d6:	8c ef       	ldi	r24, 0xFC	; 252
    27d8:	0e 94 27 0d 	call	0x1a4e	; 0x1a4e <setError>
    27dc:	ce 01       	movw	r24, r28
    27de:	fe 01       	movw	r30, r28
    27e0:	a5 91       	lpm	r26, Z+
    27e2:	b4 91       	lpm	r27, Z+
    27e4:	13 96       	adiw	r26, 0x03	; 3
    27e6:	1c 93       	st	X, r17
    27e8:	0e 93       	st	-X, r16
    27ea:	12 97       	sbiw	r26, 0x02	; 2
    27ec:	15 96       	adiw	r26, 0x05	; 5
    27ee:	fc 92       	st	X, r15
    27f0:	ee 92       	st	-X, r14
    27f2:	14 97       	sbiw	r26, 0x04	; 4
    27f4:	49 96       	adiw	r24, 0x19	; 25
    27f6:	01 2b       	or	r16, r17
    27f8:	19 f0       	breq	.+6      	; 0x2800 <timerOverflowAttach+0x5a>
    27fa:	0e 94 bf 05 	call	0xb7e	; 0xb7e <__portMaskSet>
    27fe:	02 c0       	rjmp	.+4      	; 0x2804 <timerOverflowAttach+0x5e>
    2800:	0e 94 d8 05 	call	0xbb0	; 0xbb0 <__portMaskClear>
    2804:	df be       	out	0x3f, r13	; 63
    2806:	df 91       	pop	r29
    2808:	cf 91       	pop	r28
    280a:	1f 91       	pop	r17
    280c:	0f 91       	pop	r16
    280e:	ff 90       	pop	r15
    2810:	ef 90       	pop	r14
    2812:	df 90       	pop	r13
    2814:	08 95       	ret

00002816 <__timerPWMGetDeciHertz>:
    2816:	cf 92       	push	r12
    2818:	df 92       	push	r13
    281a:	ef 92       	push	r14
    281c:	ff 92       	push	r15
    281e:	0f 93       	push	r16
    2820:	df 93       	push	r29
    2822:	cf 93       	push	r28
    2824:	00 d0       	rcall	.+0      	; 0x2826 <__timerPWMGetDeciHertz+0x10>
    2826:	00 d0       	rcall	.+0      	; 0x2828 <__timerPWMGetDeciHertz+0x12>
    2828:	cd b7       	in	r28, 0x3d	; 61
    282a:	de b7       	in	r29, 0x3e	; 62
    282c:	08 2f       	mov	r16, r24
    282e:	7b 01       	movw	r14, r22
    2830:	d4 2e       	mov	r13, r20
    2832:	c5 2e       	mov	r12, r21
    2834:	60 91 97 01 	lds	r22, 0x0197
    2838:	70 91 98 01 	lds	r23, 0x0198
    283c:	80 91 99 01 	lds	r24, 0x0199
    2840:	90 91 9a 01 	lds	r25, 0x019A
    2844:	2a e0       	ldi	r18, 0x0A	; 10
    2846:	30 e0       	ldi	r19, 0x00	; 0
    2848:	40 e0       	ldi	r20, 0x00	; 0
    284a:	50 e0       	ldi	r21, 0x00	; 0
    284c:	0e 94 9e 1e 	call	0x3d3c	; 0x3d3c <__mulsi3>
    2850:	97 01       	movw	r18, r14
    2852:	40 e0       	ldi	r20, 0x00	; 0
    2854:	50 e0       	ldi	r21, 0x00	; 0
    2856:	29 83       	std	Y+1, r18	; 0x01
    2858:	3a 83       	std	Y+2, r19	; 0x02
    285a:	4b 83       	std	Y+3, r20	; 0x03
    285c:	5c 83       	std	Y+4, r21	; 0x04
    285e:	0e 94 d1 1e 	call	0x3da2	; 0x3da2 <__udivmodsi4>
    2862:	b9 01       	movw	r22, r18
    2864:	fa 01       	movw	r30, r20
    2866:	06 30       	cpi	r16, 0x06	; 6
    2868:	e1 f1       	breq	.+120    	; 0x28e2 <__timerPWMGetDeciHertz+0xcc>
    286a:	07 30       	cpi	r16, 0x07	; 7
    286c:	60 f4       	brcc	.+24     	; 0x2886 <__timerPWMGetDeciHertz+0x70>
    286e:	02 30       	cpi	r16, 0x02	; 2
    2870:	29 f1       	breq	.+74     	; 0x28bc <__timerPWMGetDeciHertz+0xa6>
    2872:	03 30       	cpi	r16, 0x03	; 3
    2874:	18 f4       	brcc	.+6      	; 0x287c <__timerPWMGetDeciHertz+0x66>
    2876:	01 30       	cpi	r16, 0x01	; 1
    2878:	71 f4       	brne	.+28     	; 0x2896 <__timerPWMGetDeciHertz+0x80>
    287a:	15 c0       	rjmp	.+42     	; 0x28a6 <__timerPWMGetDeciHertz+0x90>
    287c:	03 30       	cpi	r16, 0x03	; 3
    287e:	09 f1       	breq	.+66     	; 0x28c2 <__timerPWMGetDeciHertz+0xac>
    2880:	05 30       	cpi	r16, 0x05	; 5
    2882:	49 f4       	brne	.+18     	; 0x2896 <__timerPWMGetDeciHertz+0x80>
    2884:	0d c0       	rjmp	.+26     	; 0x28a0 <__timerPWMGetDeciHertz+0x8a>
    2886:	08 30       	cpi	r16, 0x08	; 8
    2888:	a9 f0       	breq	.+42     	; 0x28b4 <__timerPWMGetDeciHertz+0x9e>
    288a:	08 30       	cpi	r16, 0x08	; 8
    288c:	68 f1       	brcs	.+90     	; 0x28e8 <__timerPWMGetDeciHertz+0xd2>
    288e:	0a 30       	cpi	r16, 0x0A	; 10
    2890:	89 f0       	breq	.+34     	; 0x28b4 <__timerPWMGetDeciHertz+0x9e>
    2892:	0e 30       	cpi	r16, 0x0E	; 14
    2894:	59 f0       	breq	.+22     	; 0x28ac <__timerPWMGetDeciHertz+0x96>
    2896:	20 e0       	ldi	r18, 0x00	; 0
    2898:	30 e0       	ldi	r19, 0x00	; 0
    289a:	40 e0       	ldi	r20, 0x00	; 0
    289c:	50 e0       	ldi	r21, 0x00	; 0
    289e:	33 c0       	rjmp	.+102    	; 0x2906 <__timerPWMGetDeciHertz+0xf0>
    28a0:	2f ef       	ldi	r18, 0xFF	; 255
    28a2:	30 e0       	ldi	r19, 0x00	; 0
    28a4:	23 c0       	rjmp	.+70     	; 0x28ec <__timerPWMGetDeciHertz+0xd6>
    28a6:	2f ef       	ldi	r18, 0xFF	; 255
    28a8:	30 e0       	ldi	r19, 0x00	; 0
    28aa:	0d c0       	rjmp	.+26     	; 0x28c6 <__timerPWMGetDeciHertz+0xb0>
    28ac:	8d 2d       	mov	r24, r13
    28ae:	9c 2d       	mov	r25, r12
    28b0:	9c 01       	movw	r18, r24
    28b2:	1c c0       	rjmp	.+56     	; 0x28ec <__timerPWMGetDeciHertz+0xd6>
    28b4:	8d 2d       	mov	r24, r13
    28b6:	9c 2d       	mov	r25, r12
    28b8:	9c 01       	movw	r18, r24
    28ba:	05 c0       	rjmp	.+10     	; 0x28c6 <__timerPWMGetDeciHertz+0xb0>
    28bc:	2f ef       	ldi	r18, 0xFF	; 255
    28be:	31 e0       	ldi	r19, 0x01	; 1
    28c0:	02 c0       	rjmp	.+4      	; 0x28c6 <__timerPWMGetDeciHertz+0xb0>
    28c2:	2f ef       	ldi	r18, 0xFF	; 255
    28c4:	33 e0       	ldi	r19, 0x03	; 3
    28c6:	40 e0       	ldi	r20, 0x00	; 0
    28c8:	50 e0       	ldi	r21, 0x00	; 0
    28ca:	cf 01       	movw	r24, r30
    28cc:	0e 94 d1 1e 	call	0x3da2	; 0x3da2 <__udivmodsi4>
    28d0:	c9 01       	movw	r24, r18
    28d2:	da 01       	movw	r26, r20
    28d4:	9c 01       	movw	r18, r24
    28d6:	ad 01       	movw	r20, r26
    28d8:	56 95       	lsr	r21
    28da:	47 95       	ror	r20
    28dc:	37 95       	ror	r19
    28de:	27 95       	ror	r18
    28e0:	12 c0       	rjmp	.+36     	; 0x2906 <__timerPWMGetDeciHertz+0xf0>
    28e2:	2f ef       	ldi	r18, 0xFF	; 255
    28e4:	31 e0       	ldi	r19, 0x01	; 1
    28e6:	02 c0       	rjmp	.+4      	; 0x28ec <__timerPWMGetDeciHertz+0xd6>
    28e8:	2f ef       	ldi	r18, 0xFF	; 255
    28ea:	33 e0       	ldi	r19, 0x03	; 3
    28ec:	40 e0       	ldi	r20, 0x00	; 0
    28ee:	50 e0       	ldi	r21, 0x00	; 0
    28f0:	2f 5f       	subi	r18, 0xFF	; 255
    28f2:	3f 4f       	sbci	r19, 0xFF	; 255
    28f4:	4f 4f       	sbci	r20, 0xFF	; 255
    28f6:	5f 4f       	sbci	r21, 0xFF	; 255
    28f8:	cf 01       	movw	r24, r30
    28fa:	0e 94 d1 1e 	call	0x3da2	; 0x3da2 <__udivmodsi4>
    28fe:	c9 01       	movw	r24, r18
    2900:	da 01       	movw	r26, r20
    2902:	9c 01       	movw	r18, r24
    2904:	ad 01       	movw	r20, r26
    2906:	b9 01       	movw	r22, r18
    2908:	ca 01       	movw	r24, r20
    290a:	0f 90       	pop	r0
    290c:	0f 90       	pop	r0
    290e:	0f 90       	pop	r0
    2910:	0f 90       	pop	r0
    2912:	cf 91       	pop	r28
    2914:	df 91       	pop	r29
    2916:	0f 91       	pop	r16
    2918:	ff 90       	pop	r15
    291a:	ef 90       	pop	r14
    291c:	df 90       	pop	r13
    291e:	cf 90       	pop	r12
    2920:	08 95       	ret

00002922 <TimerGetPwmDeciHertz>:
    2922:	cf 93       	push	r28
    2924:	df 93       	push	r29
    2926:	9c 01       	movw	r18, r24
    2928:	04 96       	adiw	r24, 0x04	; 4
    292a:	fc 01       	movw	r30, r24
    292c:	a5 91       	lpm	r26, Z+
    292e:	b4 91       	lpm	r27, Z+
    2930:	8c 91       	ld	r24, X
    2932:	2a 5f       	subi	r18, 0xFA	; 250
    2934:	3f 4f       	sbci	r19, 0xFF	; 255
    2936:	f9 01       	movw	r30, r18
    2938:	94 91       	lpm	r25, Z+
    293a:	26 50       	subi	r18, 0x06	; 6
    293c:	30 40       	sbci	r19, 0x00	; 0
    293e:	89 23       	and	r24, r25
    2940:	29 f4       	brne	.+10     	; 0x294c <TimerGetPwmDeciHertz+0x2a>
    2942:	20 e0       	ldi	r18, 0x00	; 0
    2944:	30 e0       	ldi	r19, 0x00	; 0
    2946:	40 e0       	ldi	r20, 0x00	; 0
    2948:	50 e0       	ldi	r21, 0x00	; 0
    294a:	21 c0       	rjmp	.+66     	; 0x298e <TimerGetPwmDeciHertz+0x6c>
    294c:	f9 01       	movw	r30, r18
    294e:	c5 91       	lpm	r28, Z+
    2950:	d4 91       	lpm	r29, Z+
    2952:	aa 85       	ldd	r26, Y+10	; 0x0a
    2954:	68 81       	ld	r22, Y
    2956:	79 81       	ldd	r23, Y+1	; 0x01
    2958:	81 e0       	ldi	r24, 0x01	; 1
    295a:	90 e0       	ldi	r25, 0x00	; 0
    295c:	0a 2e       	mov	r0, r26
    295e:	02 c0       	rjmp	.+4      	; 0x2964 <TimerGetPwmDeciHertz+0x42>
    2960:	88 0f       	add	r24, r24
    2962:	99 1f       	adc	r25, r25
    2964:	0a 94       	dec	r0
    2966:	e2 f7       	brpl	.-8      	; 0x2960 <TimerGetPwmDeciHertz+0x3e>
    2968:	80 70       	andi	r24, 0x00	; 0
    296a:	95 75       	andi	r25, 0x55	; 85
    296c:	89 2b       	or	r24, r25
    296e:	19 f4       	brne	.+6      	; 0x2976 <TimerGetPwmDeciHertz+0x54>
    2970:	40 e0       	ldi	r20, 0x00	; 0
    2972:	50 e0       	ldi	r21, 0x00	; 0
    2974:	07 c0       	rjmp	.+14     	; 0x2984 <TimerGetPwmDeciHertz+0x62>
    2976:	c9 01       	movw	r24, r18
    2978:	4f 96       	adiw	r24, 0x1f	; 31
    297a:	fc 01       	movw	r30, r24
    297c:	c5 91       	lpm	r28, Z+
    297e:	d4 91       	lpm	r29, Z+
    2980:	48 81       	ld	r20, Y
    2982:	59 81       	ldd	r21, Y+1	; 0x01
    2984:	8a 2f       	mov	r24, r26
    2986:	0e 94 0b 14 	call	0x2816	; 0x2816 <__timerPWMGetDeciHertz>
    298a:	9b 01       	movw	r18, r22
    298c:	ac 01       	movw	r20, r24
    298e:	b9 01       	movw	r22, r18
    2990:	ca 01       	movw	r24, r20
    2992:	df 91       	pop	r29
    2994:	cf 91       	pop	r28
    2996:	08 95       	ret

00002998 <timerCalcPwm>:
    2998:	2f 92       	push	r2
    299a:	3f 92       	push	r3
    299c:	4f 92       	push	r4
    299e:	5f 92       	push	r5
    29a0:	6f 92       	push	r6
    29a2:	7f 92       	push	r7
    29a4:	8f 92       	push	r8
    29a6:	9f 92       	push	r9
    29a8:	af 92       	push	r10
    29aa:	bf 92       	push	r11
    29ac:	cf 92       	push	r12
    29ae:	df 92       	push	r13
    29b0:	ef 92       	push	r14
    29b2:	ff 92       	push	r15
    29b4:	0f 93       	push	r16
    29b6:	1f 93       	push	r17
    29b8:	df 93       	push	r29
    29ba:	cf 93       	push	r28
    29bc:	cd b7       	in	r28, 0x3d	; 61
    29be:	de b7       	in	r29, 0x3e	; 62
    29c0:	6e 97       	sbiw	r28, 0x1e	; 30
    29c2:	0f b6       	in	r0, 0x3f	; 63
    29c4:	f8 94       	cli
    29c6:	de bf       	out	0x3e, r29	; 62
    29c8:	0f be       	out	0x3f, r0	; 63
    29ca:	cd bf       	out	0x3d, r28	; 61
    29cc:	3c 01       	movw	r6, r24
    29ce:	4a 01       	movw	r8, r20
    29d0:	5b 01       	movw	r10, r22
    29d2:	3c 87       	std	Y+12, r19	; 0x0c
    29d4:	2b 87       	std	Y+11, r18	; 0x0b
    29d6:	1e 87       	std	Y+14, r17	; 0x0e
    29d8:	0d 87       	std	Y+13, r16	; 0x0d
    29da:	f8 8a       	std	Y+16, r15	; 0x10
    29dc:	ef 86       	std	Y+15, r14	; 0x0f
    29de:	da 8a       	std	Y+18, r13	; 0x12
    29e0:	c9 8a       	std	Y+17, r12	; 0x11
    29e2:	04 96       	adiw	r24, 0x04	; 4
    29e4:	fc 01       	movw	r30, r24
    29e6:	a5 91       	lpm	r26, Z+
    29e8:	b4 91       	lpm	r27, Z+
    29ea:	8c 91       	ld	r24, X
    29ec:	26 e0       	ldi	r18, 0x06	; 6
    29ee:	30 e0       	ldi	r19, 0x00	; 0
    29f0:	62 0e       	add	r6, r18
    29f2:	73 1e       	adc	r7, r19
    29f4:	f3 01       	movw	r30, r6
    29f6:	94 91       	lpm	r25, Z+
    29f8:	2a ef       	ldi	r18, 0xFA	; 250
    29fa:	3f ef       	ldi	r19, 0xFF	; 255
    29fc:	62 0e       	add	r6, r18
    29fe:	73 1e       	adc	r7, r19
    2a00:	89 23       	and	r24, r25
    2a02:	21 f4       	brne	.+8      	; 0x2a0c <timerCalcPwm+0x74>
    2a04:	dd 24       	eor	r13, r13
    2a06:	3f e0       	ldi	r19, 0x0F	; 15
    2a08:	3a 87       	std	Y+10, r19	; 0x0a
    2a0a:	07 c0       	rjmp	.+14     	; 0x2a1a <timerCalcPwm+0x82>
    2a0c:	f3 01       	movw	r30, r6
    2a0e:	a5 91       	lpm	r26, Z+
    2a10:	b4 91       	lpm	r27, Z+
    2a12:	1a 96       	adiw	r26, 0x0a	; 10
    2a14:	fc 91       	ld	r31, X
    2a16:	fa 87       	std	Y+10, r31	; 0x0a
    2a18:	df 2e       	mov	r13, r31
    2a1a:	e0 90 97 01 	lds	r14, 0x0197
    2a1e:	f0 90 98 01 	lds	r15, 0x0198
    2a22:	00 91 99 01 	lds	r16, 0x0199
    2a26:	10 91 9a 01 	lds	r17, 0x019A
    2a2a:	29 e0       	ldi	r18, 0x09	; 9
    2a2c:	30 e0       	ldi	r19, 0x00	; 0
    2a2e:	62 0e       	add	r6, r18
    2a30:	73 1e       	adc	r7, r19
    2a32:	c8 01       	movw	r24, r16
    2a34:	b7 01       	movw	r22, r14
    2a36:	96 95       	lsr	r25
    2a38:	87 95       	ror	r24
    2a3a:	77 95       	ror	r23
    2a3c:	67 95       	ror	r22
    2a3e:	2a e0       	ldi	r18, 0x0A	; 10
    2a40:	30 e0       	ldi	r19, 0x00	; 0
    2a42:	40 e0       	ldi	r20, 0x00	; 0
    2a44:	50 e0       	ldi	r21, 0x00	; 0
    2a46:	0e 94 9e 1e 	call	0x3d3c	; 0x3d3c <__mulsi3>
    2a4a:	6f 8b       	std	Y+23, r22	; 0x17
    2a4c:	78 8f       	std	Y+24, r23	; 0x18
    2a4e:	89 8f       	std	Y+25, r24	; 0x19
    2a50:	9a 8f       	std	Y+26, r25	; 0x1a
    2a52:	c8 01       	movw	r24, r16
    2a54:	b7 01       	movw	r22, r14
    2a56:	0e 94 9e 1e 	call	0x3d3c	; 0x3d3c <__mulsi3>
    2a5a:	6b 8b       	std	Y+19, r22	; 0x13
    2a5c:	7c 8b       	std	Y+20, r23	; 0x14
    2a5e:	8d 8b       	std	Y+21, r24	; 0x15
    2a60:	9e 8b       	std	Y+22, r25	; 0x16
    2a62:	cc 24       	eor	r12, r12
    2a64:	1e 82       	std	Y+6, r1	; 0x06
    2a66:	1f 82       	std	Y+7, r1	; 0x07
    2a68:	18 86       	std	Y+8, r1	; 0x08
    2a6a:	19 86       	std	Y+9, r1	; 0x09
    2a6c:	1d 82       	std	Y+5, r1	; 0x05
    2a6e:	1c 82       	std	Y+4, r1	; 0x04
    2a70:	1b 82       	std	Y+3, r1	; 0x03
    2a72:	1a 82       	std	Y+2, r1	; 0x02
    2a74:	19 82       	std	Y+1, r1	; 0x01
    2a76:	f3 01       	movw	r30, r6
    2a78:	45 91       	lpm	r20, Z+
    2a7a:	54 91       	lpm	r21, Z+
    2a7c:	5c 8f       	std	Y+28, r21	; 0x1c
    2a7e:	4b 8f       	std	Y+27, r20	; 0x1b
    2a80:	87 ef       	ldi	r24, 0xF7	; 247
    2a82:	9f ef       	ldi	r25, 0xFF	; 255
    2a84:	68 0e       	add	r6, r24
    2a86:	79 1e       	adc	r7, r25
    2a88:	ab 85       	ldd	r26, Y+11	; 0x0b
    2a8a:	bc 85       	ldd	r27, Y+12	; 0x0c
    2a8c:	1d 01       	movw	r2, r26
    2a8e:	44 24       	eor	r4, r4
    2a90:	55 24       	eor	r5, r5
    2a92:	57 c1       	rjmp	.+686    	; 0x2d42 <timerCalcPwm+0x3aa>
    2a94:	21 e0       	ldi	r18, 0x01	; 1
    2a96:	30 e0       	ldi	r19, 0x00	; 0
    2a98:	0d 2c       	mov	r0, r13
    2a9a:	02 c0       	rjmp	.+4      	; 0x2aa0 <timerCalcPwm+0x108>
    2a9c:	22 0f       	add	r18, r18
    2a9e:	33 1f       	adc	r19, r19
    2aa0:	0a 94       	dec	r0
    2aa2:	e2 f7       	brpl	.-8      	; 0x2a9c <timerCalcPwm+0x104>
    2aa4:	c9 01       	movw	r24, r18
    2aa6:	8e 7e       	andi	r24, 0xEE	; 238
    2aa8:	9f 7c       	andi	r25, 0xCF	; 207
    2aaa:	89 2b       	or	r24, r25
    2aac:	09 f4       	brne	.+2      	; 0x2ab0 <timerCalcPwm+0x118>
    2aae:	48 c1       	rjmp	.+656    	; 0x2d40 <timerCalcPwm+0x3a8>
    2ab0:	c9 01       	movw	r24, r18
    2ab2:	eb 8d       	ldd	r30, Y+27	; 0x1b
    2ab4:	fc 8d       	ldd	r31, Y+28	; 0x1c
    2ab6:	8e 23       	and	r24, r30
    2ab8:	9f 23       	and	r25, r31
    2aba:	89 2b       	or	r24, r25
    2abc:	09 f4       	brne	.+2      	; 0x2ac0 <timerCalcPwm+0x128>
    2abe:	40 c1       	rjmp	.+640    	; 0x2d40 <timerCalcPwm+0x3a8>
    2ac0:	f6 e0       	ldi	r31, 0x06	; 6
    2ac2:	df 16       	cp	r13, r31
    2ac4:	09 f1       	breq	.+66     	; 0x2b08 <timerCalcPwm+0x170>
    2ac6:	fd 15       	cp	r31, r13
    2ac8:	90 f0       	brcs	.+36     	; 0x2aee <timerCalcPwm+0x156>
    2aca:	22 e0       	ldi	r18, 0x02	; 2
    2acc:	d2 16       	cp	r13, r18
    2ace:	f9 f0       	breq	.+62     	; 0x2b0e <timerCalcPwm+0x176>
    2ad0:	2d 15       	cp	r18, r13
    2ad2:	28 f0       	brcs	.+10     	; 0x2ade <timerCalcPwm+0x146>
    2ad4:	31 e0       	ldi	r19, 0x01	; 1
    2ad6:	d3 16       	cp	r13, r19
    2ad8:	09 f0       	breq	.+2      	; 0x2adc <timerCalcPwm+0x144>
    2ada:	32 c1       	rjmp	.+612    	; 0x2d40 <timerCalcPwm+0x3a8>
    2adc:	1e c0       	rjmp	.+60     	; 0x2b1a <timerCalcPwm+0x182>
    2ade:	43 e0       	ldi	r20, 0x03	; 3
    2ae0:	d4 16       	cp	r13, r20
    2ae2:	f1 f0       	breq	.+60     	; 0x2b20 <timerCalcPwm+0x188>
    2ae4:	55 e0       	ldi	r21, 0x05	; 5
    2ae6:	d5 16       	cp	r13, r21
    2ae8:	09 f0       	breq	.+2      	; 0x2aec <timerCalcPwm+0x154>
    2aea:	2a c1       	rjmp	.+596    	; 0x2d40 <timerCalcPwm+0x3a8>
    2aec:	13 c0       	rjmp	.+38     	; 0x2b14 <timerCalcPwm+0x17c>
    2aee:	88 e0       	ldi	r24, 0x08	; 8
    2af0:	d8 16       	cp	r13, r24
    2af2:	c9 f0       	breq	.+50     	; 0x2b26 <timerCalcPwm+0x18e>
    2af4:	d8 16       	cp	r13, r24
    2af6:	88 f1       	brcs	.+98     	; 0x2b5a <timerCalcPwm+0x1c2>
    2af8:	9a e0       	ldi	r25, 0x0A	; 10
    2afa:	d9 16       	cp	r13, r25
    2afc:	a1 f0       	breq	.+40     	; 0x2b26 <timerCalcPwm+0x18e>
    2afe:	ae e0       	ldi	r26, 0x0E	; 14
    2b00:	da 16       	cp	r13, r26
    2b02:	09 f0       	breq	.+2      	; 0x2b06 <timerCalcPwm+0x16e>
    2b04:	1d c1       	rjmp	.+570    	; 0x2d40 <timerCalcPwm+0x3a8>
    2b06:	2c c0       	rjmp	.+88     	; 0x2b60 <timerCalcPwm+0x1c8>
    2b08:	0f ef       	ldi	r16, 0xFF	; 255
    2b0a:	11 e0       	ldi	r17, 0x01	; 1
    2b0c:	2b c0       	rjmp	.+86     	; 0x2b64 <timerCalcPwm+0x1cc>
    2b0e:	0f ef       	ldi	r16, 0xFF	; 255
    2b10:	11 e0       	ldi	r17, 0x01	; 1
    2b12:	0b c0       	rjmp	.+22     	; 0x2b2a <timerCalcPwm+0x192>
    2b14:	0f ef       	ldi	r16, 0xFF	; 255
    2b16:	10 e0       	ldi	r17, 0x00	; 0
    2b18:	25 c0       	rjmp	.+74     	; 0x2b64 <timerCalcPwm+0x1cc>
    2b1a:	0f ef       	ldi	r16, 0xFF	; 255
    2b1c:	10 e0       	ldi	r17, 0x00	; 0
    2b1e:	05 c0       	rjmp	.+10     	; 0x2b2a <timerCalcPwm+0x192>
    2b20:	0f ef       	ldi	r16, 0xFF	; 255
    2b22:	13 e0       	ldi	r17, 0x03	; 3
    2b24:	02 c0       	rjmp	.+4      	; 0x2b2a <timerCalcPwm+0x192>
    2b26:	0f ef       	ldi	r16, 0xFF	; 255
    2b28:	1f ef       	ldi	r17, 0xFF	; 255
    2b2a:	81 14       	cp	r8, r1
    2b2c:	91 04       	cpc	r9, r1
    2b2e:	a1 04       	cpc	r10, r1
    2b30:	b1 04       	cpc	r11, r1
    2b32:	29 f4       	brne	.+10     	; 0x2b3e <timerCalcPwm+0x1a6>
    2b34:	6f 89       	ldd	r22, Y+23	; 0x17
    2b36:	78 8d       	ldd	r23, Y+24	; 0x18
    2b38:	89 8d       	ldd	r24, Y+25	; 0x19
    2b3a:	9a 8d       	ldd	r25, Y+26	; 0x1a
    2b3c:	0a c0       	rjmp	.+20     	; 0x2b52 <timerCalcPwm+0x1ba>
    2b3e:	6f 89       	ldd	r22, Y+23	; 0x17
    2b40:	78 8d       	ldd	r23, Y+24	; 0x18
    2b42:	89 8d       	ldd	r24, Y+25	; 0x19
    2b44:	9a 8d       	ldd	r25, Y+26	; 0x1a
    2b46:	a5 01       	movw	r20, r10
    2b48:	94 01       	movw	r18, r8
    2b4a:	0e 94 d1 1e 	call	0x3da2	; 0x3da2 <__udivmodsi4>
    2b4e:	b9 01       	movw	r22, r18
    2b50:	ca 01       	movw	r24, r20
    2b52:	98 01       	movw	r18, r16
    2b54:	40 e0       	ldi	r20, 0x00	; 0
    2b56:	50 e0       	ldi	r21, 0x00	; 0
    2b58:	20 c0       	rjmp	.+64     	; 0x2b9a <timerCalcPwm+0x202>
    2b5a:	0f ef       	ldi	r16, 0xFF	; 255
    2b5c:	13 e0       	ldi	r17, 0x03	; 3
    2b5e:	02 c0       	rjmp	.+4      	; 0x2b64 <timerCalcPwm+0x1cc>
    2b60:	0f ef       	ldi	r16, 0xFF	; 255
    2b62:	1f ef       	ldi	r17, 0xFF	; 255
    2b64:	81 14       	cp	r8, r1
    2b66:	91 04       	cpc	r9, r1
    2b68:	a1 04       	cpc	r10, r1
    2b6a:	b1 04       	cpc	r11, r1
    2b6c:	29 f4       	brne	.+10     	; 0x2b78 <timerCalcPwm+0x1e0>
    2b6e:	6b 89       	ldd	r22, Y+19	; 0x13
    2b70:	7c 89       	ldd	r23, Y+20	; 0x14
    2b72:	8d 89       	ldd	r24, Y+21	; 0x15
    2b74:	9e 89       	ldd	r25, Y+22	; 0x16
    2b76:	0a c0       	rjmp	.+20     	; 0x2b8c <timerCalcPwm+0x1f4>
    2b78:	6b 89       	ldd	r22, Y+19	; 0x13
    2b7a:	7c 89       	ldd	r23, Y+20	; 0x14
    2b7c:	8d 89       	ldd	r24, Y+21	; 0x15
    2b7e:	9e 89       	ldd	r25, Y+22	; 0x16
    2b80:	a5 01       	movw	r20, r10
    2b82:	94 01       	movw	r18, r8
    2b84:	0e 94 d1 1e 	call	0x3da2	; 0x3da2 <__udivmodsi4>
    2b88:	b9 01       	movw	r22, r18
    2b8a:	ca 01       	movw	r24, r20
    2b8c:	98 01       	movw	r18, r16
    2b8e:	40 e0       	ldi	r20, 0x00	; 0
    2b90:	50 e0       	ldi	r21, 0x00	; 0
    2b92:	2f 5f       	subi	r18, 0xFF	; 255
    2b94:	3f 4f       	sbci	r19, 0xFF	; 255
    2b96:	4f 4f       	sbci	r20, 0xFF	; 255
    2b98:	5f 4f       	sbci	r21, 0xFF	; 255
    2b9a:	0e 94 d1 1e 	call	0x3da2	; 0x3da2 <__udivmodsi4>
    2b9e:	c9 01       	movw	r24, r18
    2ba0:	da 01       	movw	r26, r20
    2ba2:	82 30       	cpi	r24, 0x02	; 2
    2ba4:	91 05       	cpc	r25, r1
    2ba6:	a1 05       	cpc	r26, r1
    2ba8:	b1 05       	cpc	r27, r1
    2baa:	08 f4       	brcc	.+2      	; 0x2bae <timerCalcPwm+0x216>
    2bac:	05 c1       	rjmp	.+522    	; 0x2db8 <timerCalcPwm+0x420>
    2bae:	81 30       	cpi	r24, 0x01	; 1
    2bb0:	e4 e0       	ldi	r30, 0x04	; 4
    2bb2:	9e 07       	cpc	r25, r30
    2bb4:	e0 e0       	ldi	r30, 0x00	; 0
    2bb6:	ae 07       	cpc	r26, r30
    2bb8:	e0 e0       	ldi	r30, 0x00	; 0
    2bba:	be 07       	cpc	r27, r30
    2bbc:	20 f0       	brcs	.+8      	; 0x2bc6 <timerCalcPwm+0x22e>
    2bbe:	80 e0       	ldi	r24, 0x00	; 0
    2bc0:	94 e0       	ldi	r25, 0x04	; 4
    2bc2:	a0 e0       	ldi	r26, 0x00	; 0
    2bc4:	b0 e0       	ldi	r27, 0x00	; 0
    2bc6:	bc 01       	movw	r22, r24
    2bc8:	c3 01       	movw	r24, r6
    2bca:	0e 94 0b 0b 	call	0x1616	; 0x1616 <timerGetClosestPrescale>
    2bce:	81 14       	cp	r8, r1
    2bd0:	91 04       	cpc	r9, r1
    2bd2:	a1 04       	cpc	r10, r1
    2bd4:	b1 04       	cpc	r11, r1
    2bd6:	39 f4       	brne	.+14     	; 0x2be6 <timerCalcPwm+0x24e>
    2bd8:	20 e0       	ldi	r18, 0x00	; 0
    2bda:	34 e0       	ldi	r19, 0x04	; 4
    2bdc:	3e 8f       	std	Y+30, r19	; 0x1e
    2bde:	2d 8f       	std	Y+29, r18	; 0x1d
    2be0:	0f ef       	ldi	r16, 0xFF	; 255
    2be2:	1f ef       	ldi	r17, 0xFF	; 255
    2be4:	7d c0       	rjmp	.+250    	; 0x2ce0 <timerCalcPwm+0x348>
    2be6:	3f ef       	ldi	r19, 0xFF	; 255
    2be8:	83 16       	cp	r8, r19
    2bea:	3f ef       	ldi	r19, 0xFF	; 255
    2bec:	93 06       	cpc	r9, r19
    2bee:	3f ef       	ldi	r19, 0xFF	; 255
    2bf0:	a3 06       	cpc	r10, r19
    2bf2:	3f ef       	ldi	r19, 0xFF	; 255
    2bf4:	b3 06       	cpc	r11, r19
    2bf6:	39 f4       	brne	.+14     	; 0x2c06 <timerCalcPwm+0x26e>
    2bf8:	0b 85       	ldd	r16, Y+11	; 0x0b
    2bfa:	1c 85       	ldd	r17, Y+12	; 0x0c
    2bfc:	41 e0       	ldi	r20, 0x01	; 1
    2bfe:	50 e0       	ldi	r21, 0x00	; 0
    2c00:	5e 8f       	std	Y+30, r21	; 0x1e
    2c02:	4d 8f       	std	Y+29, r20	; 0x1d
    2c04:	6d c0       	rjmp	.+218    	; 0x2ce0 <timerCalcPwm+0x348>
    2c06:	dc 01       	movw	r26, r24
    2c08:	11 97       	sbiw	r26, 0x01	; 1
    2c0a:	be 8f       	std	Y+30, r27	; 0x1e
    2c0c:	ad 8f       	std	Y+29, r26	; 0x1d
    2c0e:	ee 24       	eor	r14, r14
    2c10:	ff 24       	eor	r15, r15
    2c12:	87 01       	movw	r16, r14
    2c14:	ed 8d       	ldd	r30, Y+29	; 0x1d
    2c16:	fe 8d       	ldd	r31, Y+30	; 0x1e
    2c18:	31 96       	adiw	r30, 0x01	; 1
    2c1a:	c3 01       	movw	r24, r6
    2c1c:	bf 01       	movw	r22, r30
    2c1e:	0e 94 0b 0b 	call	0x1616	; 0x1616 <timerGetClosestPrescale>
    2c22:	9e 8f       	std	Y+30, r25	; 0x1e
    2c24:	8d 8f       	std	Y+29, r24	; 0x1d
    2c26:	fa e0       	ldi	r31, 0x0A	; 10
    2c28:	df 16       	cp	r13, r31
    2c2a:	31 f0       	breq	.+12     	; 0x2c38 <timerCalcPwm+0x2a0>
    2c2c:	2e e0       	ldi	r18, 0x0E	; 14
    2c2e:	d2 16       	cp	r13, r18
    2c30:	c9 f0       	breq	.+50     	; 0x2c64 <timerCalcPwm+0x2cc>
    2c32:	38 e0       	ldi	r19, 0x08	; 8
    2c34:	d3 16       	cp	r13, r19
    2c36:	81 f5       	brne	.+96     	; 0x2c98 <timerCalcPwm+0x300>
    2c38:	6f 89       	ldd	r22, Y+23	; 0x17
    2c3a:	78 8d       	ldd	r23, Y+24	; 0x18
    2c3c:	89 8d       	ldd	r24, Y+25	; 0x19
    2c3e:	9a 8d       	ldd	r25, Y+26	; 0x1a
    2c40:	a5 01       	movw	r20, r10
    2c42:	94 01       	movw	r18, r8
    2c44:	0e 94 d1 1e 	call	0x3da2	; 0x3da2 <__udivmodsi4>
    2c48:	b9 01       	movw	r22, r18
    2c4a:	ca 01       	movw	r24, r20
    2c4c:	ad 8d       	ldd	r26, Y+29	; 0x1d
    2c4e:	be 8d       	ldd	r27, Y+30	; 0x1e
    2c50:	9d 01       	movw	r18, r26
    2c52:	40 e0       	ldi	r20, 0x00	; 0
    2c54:	50 e0       	ldi	r21, 0x00	; 0
    2c56:	0e 94 d1 1e 	call	0x3da2	; 0x3da2 <__udivmodsi4>
    2c5a:	c9 01       	movw	r24, r18
    2c5c:	da 01       	movw	r26, r20
    2c5e:	7c 01       	movw	r14, r24
    2c60:	8d 01       	movw	r16, r26
    2c62:	1a c0       	rjmp	.+52     	; 0x2c98 <timerCalcPwm+0x300>
    2c64:	6b 89       	ldd	r22, Y+19	; 0x13
    2c66:	7c 89       	ldd	r23, Y+20	; 0x14
    2c68:	8d 89       	ldd	r24, Y+21	; 0x15
    2c6a:	9e 89       	ldd	r25, Y+22	; 0x16
    2c6c:	a5 01       	movw	r20, r10
    2c6e:	94 01       	movw	r18, r8
    2c70:	0e 94 d1 1e 	call	0x3da2	; 0x3da2 <__udivmodsi4>
    2c74:	b9 01       	movw	r22, r18
    2c76:	ca 01       	movw	r24, r20
    2c78:	ed 8d       	ldd	r30, Y+29	; 0x1d
    2c7a:	fe 8d       	ldd	r31, Y+30	; 0x1e
    2c7c:	9f 01       	movw	r18, r30
    2c7e:	40 e0       	ldi	r20, 0x00	; 0
    2c80:	50 e0       	ldi	r21, 0x00	; 0
    2c82:	0e 94 d1 1e 	call	0x3da2	; 0x3da2 <__udivmodsi4>
    2c86:	c9 01       	movw	r24, r18
    2c88:	da 01       	movw	r26, r20
    2c8a:	7c 01       	movw	r14, r24
    2c8c:	8d 01       	movw	r16, r26
    2c8e:	08 94       	sec
    2c90:	e1 08       	sbc	r14, r1
    2c92:	f1 08       	sbc	r15, r1
    2c94:	01 09       	sbc	r16, r1
    2c96:	11 09       	sbc	r17, r1
    2c98:	2d 8d       	ldd	r18, Y+29	; 0x1d
    2c9a:	3e 8d       	ldd	r19, Y+30	; 0x1e
    2c9c:	20 50       	subi	r18, 0x00	; 0
    2c9e:	34 40       	sbci	r19, 0x04	; 4
    2ca0:	48 f4       	brcc	.+18     	; 0x2cb4 <timerCalcPwm+0x31c>
    2ca2:	d8 01       	movw	r26, r16
    2ca4:	c7 01       	movw	r24, r14
    2ca6:	80 70       	andi	r24, 0x00	; 0
    2ca8:	90 70       	andi	r25, 0x00	; 0
    2caa:	00 97       	sbiw	r24, 0x00	; 0
    2cac:	a1 05       	cpc	r26, r1
    2cae:	b1 05       	cpc	r27, r1
    2cb0:	09 f0       	breq	.+2      	; 0x2cb4 <timerCalcPwm+0x31c>
    2cb2:	b0 cf       	rjmp	.-160    	; 0x2c14 <timerCalcPwm+0x27c>
    2cb4:	d8 01       	movw	r26, r16
    2cb6:	c7 01       	movw	r24, r14
    2cb8:	80 30       	cpi	r24, 0x00	; 0
    2cba:	50 e0       	ldi	r21, 0x00	; 0
    2cbc:	95 07       	cpc	r25, r21
    2cbe:	51 e0       	ldi	r21, 0x01	; 1
    2cc0:	a5 07       	cpc	r26, r21
    2cc2:	50 e0       	ldi	r21, 0x00	; 0
    2cc4:	b5 07       	cpc	r27, r21
    2cc6:	20 f0       	brcs	.+8      	; 0x2cd0 <timerCalcPwm+0x338>
    2cc8:	8f ef       	ldi	r24, 0xFF	; 255
    2cca:	9f ef       	ldi	r25, 0xFF	; 255
    2ccc:	a0 e0       	ldi	r26, 0x00	; 0
    2cce:	b0 e0       	ldi	r27, 0x00	; 0
    2cd0:	82 15       	cp	r24, r2
    2cd2:	93 05       	cpc	r25, r3
    2cd4:	a4 05       	cpc	r26, r4
    2cd6:	b5 05       	cpc	r27, r5
    2cd8:	10 f4       	brcc	.+4      	; 0x2cde <timerCalcPwm+0x346>
    2cda:	d2 01       	movw	r26, r4
    2cdc:	c1 01       	movw	r24, r2
    2cde:	8c 01       	movw	r16, r24
    2ce0:	8d 2d       	mov	r24, r13
    2ce2:	6d 8d       	ldd	r22, Y+29	; 0x1d
    2ce4:	7e 8d       	ldd	r23, Y+30	; 0x1e
    2ce6:	a8 01       	movw	r20, r16
    2ce8:	0e 94 0b 14 	call	0x2816	; 0x2816 <__timerPWMGetDeciHertz>
    2cec:	86 16       	cp	r8, r22
    2cee:	97 06       	cpc	r9, r23
    2cf0:	a8 06       	cpc	r10, r24
    2cf2:	b9 06       	cpc	r11, r25
    2cf4:	28 f4       	brcc	.+10     	; 0x2d00 <timerCalcPwm+0x368>
    2cf6:	68 19       	sub	r22, r8
    2cf8:	79 09       	sbc	r23, r9
    2cfa:	8a 09       	sbc	r24, r10
    2cfc:	9b 09       	sbc	r25, r11
    2cfe:	08 c0       	rjmp	.+16     	; 0x2d10 <timerCalcPwm+0x378>
    2d00:	a5 01       	movw	r20, r10
    2d02:	94 01       	movw	r18, r8
    2d04:	26 1b       	sub	r18, r22
    2d06:	37 0b       	sbc	r19, r23
    2d08:	48 0b       	sbc	r20, r24
    2d0a:	59 0b       	sbc	r21, r25
    2d0c:	ca 01       	movw	r24, r20
    2d0e:	b9 01       	movw	r22, r18
    2d10:	cc 20       	and	r12, r12
    2d12:	49 f0       	breq	.+18     	; 0x2d26 <timerCalcPwm+0x38e>
    2d14:	2e 81       	ldd	r18, Y+6	; 0x06
    2d16:	3f 81       	ldd	r19, Y+7	; 0x07
    2d18:	48 85       	ldd	r20, Y+8	; 0x08
    2d1a:	59 85       	ldd	r21, Y+9	; 0x09
    2d1c:	62 17       	cp	r22, r18
    2d1e:	73 07       	cpc	r23, r19
    2d20:	84 07       	cpc	r24, r20
    2d22:	95 07       	cpc	r25, r21
    2d24:	68 f4       	brcc	.+26     	; 0x2d40 <timerCalcPwm+0x3a8>
    2d26:	6e 83       	std	Y+6, r22	; 0x06
    2d28:	7f 83       	std	Y+7, r23	; 0x07
    2d2a:	88 87       	std	Y+8, r24	; 0x08
    2d2c:	99 87       	std	Y+9, r25	; 0x09
    2d2e:	dd 82       	std	Y+5, r13	; 0x05
    2d30:	4d 8d       	ldd	r20, Y+29	; 0x1d
    2d32:	5e 8d       	ldd	r21, Y+30	; 0x1e
    2d34:	5c 83       	std	Y+4, r21	; 0x04
    2d36:	4b 83       	std	Y+3, r20	; 0x03
    2d38:	1a 83       	std	Y+2, r17	; 0x02
    2d3a:	09 83       	std	Y+1, r16	; 0x01
    2d3c:	cc 24       	eor	r12, r12
    2d3e:	ca 94       	dec	r12
    2d40:	d3 94       	inc	r13
    2d42:	5a 85       	ldd	r21, Y+10	; 0x0a
    2d44:	5d 15       	cp	r21, r13
    2d46:	08 f0       	brcs	.+2      	; 0x2d4a <timerCalcPwm+0x3b2>
    2d48:	a5 ce       	rjmp	.-694    	; 0x2a94 <timerCalcPwm+0xfc>
    2d4a:	cc 20       	and	r12, r12
    2d4c:	d9 f0       	breq	.+54     	; 0x2d84 <timerCalcPwm+0x3ec>
    2d4e:	8d 85       	ldd	r24, Y+13	; 0x0d
    2d50:	9e 85       	ldd	r25, Y+14	; 0x0e
    2d52:	00 97       	sbiw	r24, 0x00	; 0
    2d54:	19 f0       	breq	.+6      	; 0x2d5c <timerCalcPwm+0x3c4>
    2d56:	ed 81       	ldd	r30, Y+5	; 0x05
    2d58:	dc 01       	movw	r26, r24
    2d5a:	ec 93       	st	X, r30
    2d5c:	2f 85       	ldd	r18, Y+15	; 0x0f
    2d5e:	38 89       	ldd	r19, Y+16	; 0x10
    2d60:	21 15       	cp	r18, r1
    2d62:	31 05       	cpc	r19, r1
    2d64:	29 f0       	breq	.+10     	; 0x2d70 <timerCalcPwm+0x3d8>
    2d66:	e9 81       	ldd	r30, Y+1	; 0x01
    2d68:	fa 81       	ldd	r31, Y+2	; 0x02
    2d6a:	d9 01       	movw	r26, r18
    2d6c:	ed 93       	st	X+, r30
    2d6e:	fc 93       	st	X, r31
    2d70:	29 89       	ldd	r18, Y+17	; 0x11
    2d72:	3a 89       	ldd	r19, Y+18	; 0x12
    2d74:	21 15       	cp	r18, r1
    2d76:	31 05       	cpc	r19, r1
    2d78:	29 f0       	breq	.+10     	; 0x2d84 <timerCalcPwm+0x3ec>
    2d7a:	eb 81       	ldd	r30, Y+3	; 0x03
    2d7c:	fc 81       	ldd	r31, Y+4	; 0x04
    2d7e:	d9 01       	movw	r26, r18
    2d80:	ed 93       	st	X+, r30
    2d82:	fc 93       	st	X, r31
    2d84:	8c 2d       	mov	r24, r12
    2d86:	6e 96       	adiw	r28, 0x1e	; 30
    2d88:	0f b6       	in	r0, 0x3f	; 63
    2d8a:	f8 94       	cli
    2d8c:	de bf       	out	0x3e, r29	; 62
    2d8e:	0f be       	out	0x3f, r0	; 63
    2d90:	cd bf       	out	0x3d, r28	; 61
    2d92:	cf 91       	pop	r28
    2d94:	df 91       	pop	r29
    2d96:	1f 91       	pop	r17
    2d98:	0f 91       	pop	r16
    2d9a:	ff 90       	pop	r15
    2d9c:	ef 90       	pop	r14
    2d9e:	df 90       	pop	r13
    2da0:	cf 90       	pop	r12
    2da2:	bf 90       	pop	r11
    2da4:	af 90       	pop	r10
    2da6:	9f 90       	pop	r9
    2da8:	8f 90       	pop	r8
    2daa:	7f 90       	pop	r7
    2dac:	6f 90       	pop	r6
    2dae:	5f 90       	pop	r5
    2db0:	4f 90       	pop	r4
    2db2:	3f 90       	pop	r3
    2db4:	2f 90       	pop	r2
    2db6:	08 95       	ret
    2db8:	61 e0       	ldi	r22, 0x01	; 1
    2dba:	70 e0       	ldi	r23, 0x00	; 0
    2dbc:	05 cf       	rjmp	.-502    	; 0x2bc8 <timerCalcPwm+0x230>

00002dbe <__uartHWSetBaudRate>:
    2dbe:	bf 92       	push	r11
    2dc0:	cf 92       	push	r12
    2dc2:	df 92       	push	r13
    2dc4:	ef 92       	push	r14
    2dc6:	ff 92       	push	r15
    2dc8:	0f 93       	push	r16
    2dca:	1f 93       	push	r17
    2dcc:	cf 93       	push	r28
    2dce:	df 93       	push	r29
    2dd0:	7a 01       	movw	r14, r20
    2dd2:	8b 01       	movw	r16, r22
    2dd4:	ec 01       	movw	r28, r24
    2dd6:	bf b6       	in	r11, 0x3f	; 63
    2dd8:	f8 94       	cli
    2dda:	4f 3f       	cpi	r20, 0xFF	; 255
    2ddc:	8f ef       	ldi	r24, 0xFF	; 255
    2dde:	58 07       	cpc	r21, r24
    2de0:	8f ef       	ldi	r24, 0xFF	; 255
    2de2:	68 07       	cpc	r22, r24
    2de4:	8f ef       	ldi	r24, 0xFF	; 255
    2de6:	78 07       	cpc	r23, r24
    2de8:	21 f4       	brne	.+8      	; 0x2df2 <__uartHWSetBaudRate+0x34>
    2dea:	a1 e0       	ldi	r26, 0x01	; 1
    2dec:	ca 2e       	mov	r12, r26
    2dee:	d1 2c       	mov	r13, r1
    2df0:	24 c0       	rjmp	.+72     	; 0x2e3a <__uartHWSetBaudRate+0x7c>
    2df2:	cb 01       	movw	r24, r22
    2df4:	ba 01       	movw	r22, r20
    2df6:	f3 e0       	ldi	r31, 0x03	; 3
    2df8:	66 0f       	add	r22, r22
    2dfa:	77 1f       	adc	r23, r23
    2dfc:	88 1f       	adc	r24, r24
    2dfe:	99 1f       	adc	r25, r25
    2e00:	fa 95       	dec	r31
    2e02:	d1 f7       	brne	.-12     	; 0x2df8 <__uartHWSetBaudRate+0x3a>
    2e04:	20 91 97 01 	lds	r18, 0x0197
    2e08:	30 91 98 01 	lds	r19, 0x0198
    2e0c:	40 91 99 01 	lds	r20, 0x0199
    2e10:	50 91 9a 01 	lds	r21, 0x019A
    2e14:	62 0f       	add	r22, r18
    2e16:	73 1f       	adc	r23, r19
    2e18:	84 1f       	adc	r24, r20
    2e1a:	95 1f       	adc	r25, r21
    2e1c:	a8 01       	movw	r20, r16
    2e1e:	97 01       	movw	r18, r14
    2e20:	e4 e0       	ldi	r30, 0x04	; 4
    2e22:	22 0f       	add	r18, r18
    2e24:	33 1f       	adc	r19, r19
    2e26:	44 1f       	adc	r20, r20
    2e28:	55 1f       	adc	r21, r21
    2e2a:	ea 95       	dec	r30
    2e2c:	d1 f7       	brne	.-12     	; 0x2e22 <__uartHWSetBaudRate+0x64>
    2e2e:	0e 94 d1 1e 	call	0x3da2	; 0x3da2 <__udivmodsi4>
    2e32:	69 01       	movw	r12, r18
    2e34:	08 94       	sec
    2e36:	c1 08       	sbc	r12, r1
    2e38:	d1 08       	sbc	r13, r1
    2e3a:	9e a1       	ldd	r25, Y+38	; 0x26
    2e3c:	99 23       	and	r25, r25
    2e3e:	c9 f1       	breq	.+114    	; 0x2eb2 <__uartHWSetBaudRate+0xf4>
    2e40:	ea 8d       	ldd	r30, Y+26	; 0x1a
    2e42:	fb 8d       	ldd	r31, Y+27	; 0x1b
    2e44:	80 81       	ld	r24, Z
    2e46:	90 95       	com	r25
    2e48:	89 23       	and	r24, r25
    2e4a:	80 83       	st	Z, r24
    2e4c:	8f ef       	ldi	r24, 0xFF	; 255
    2e4e:	e8 16       	cp	r14, r24
    2e50:	8f ef       	ldi	r24, 0xFF	; 255
    2e52:	f8 06       	cpc	r15, r24
    2e54:	8f ef       	ldi	r24, 0xFF	; 255
    2e56:	08 07       	cpc	r16, r24
    2e58:	8f ef       	ldi	r24, 0xFF	; 255
    2e5a:	18 07       	cpc	r17, r24
    2e5c:	19 f4       	brne	.+6      	; 0x2e64 <__uartHWSetBaudRate+0xa6>
    2e5e:	21 e0       	ldi	r18, 0x01	; 1
    2e60:	30 e0       	ldi	r19, 0x00	; 0
    2e62:	1d c0       	rjmp	.+58     	; 0x2e9e <__uartHWSetBaudRate+0xe0>
    2e64:	32 e0       	ldi	r19, 0x02	; 2
    2e66:	ee 0c       	add	r14, r14
    2e68:	ff 1c       	adc	r15, r15
    2e6a:	00 1f       	adc	r16, r16
    2e6c:	11 1f       	adc	r17, r17
    2e6e:	3a 95       	dec	r19
    2e70:	d1 f7       	brne	.-12     	; 0x2e66 <__uartHWSetBaudRate+0xa8>
    2e72:	60 91 97 01 	lds	r22, 0x0197
    2e76:	70 91 98 01 	lds	r23, 0x0198
    2e7a:	80 91 99 01 	lds	r24, 0x0199
    2e7e:	90 91 9a 01 	lds	r25, 0x019A
    2e82:	6e 0d       	add	r22, r14
    2e84:	7f 1d       	adc	r23, r15
    2e86:	80 1f       	adc	r24, r16
    2e88:	91 1f       	adc	r25, r17
    2e8a:	ee 0c       	add	r14, r14
    2e8c:	ff 1c       	adc	r15, r15
    2e8e:	00 1f       	adc	r16, r16
    2e90:	11 1f       	adc	r17, r17
    2e92:	a8 01       	movw	r20, r16
    2e94:	97 01       	movw	r18, r14
    2e96:	0e 94 d1 1e 	call	0x3da2	; 0x3da2 <__udivmodsi4>
    2e9a:	21 50       	subi	r18, 0x01	; 1
    2e9c:	30 40       	sbci	r19, 0x00	; 0
    2e9e:	2c 15       	cp	r18, r12
    2ea0:	3d 05       	cpc	r19, r13
    2ea2:	38 f0       	brcs	.+14     	; 0x2eb2 <__uartHWSetBaudRate+0xf4>
    2ea4:	ea 8d       	ldd	r30, Y+26	; 0x1a
    2ea6:	fb 8d       	ldd	r31, Y+27	; 0x1b
    2ea8:	80 81       	ld	r24, Z
    2eaa:	9e a1       	ldd	r25, Y+38	; 0x26
    2eac:	89 2b       	or	r24, r25
    2eae:	80 83       	st	Z, r24
    2eb0:	69 01       	movw	r12, r18
    2eb2:	ee 8d       	ldd	r30, Y+30	; 0x1e
    2eb4:	ff 8d       	ldd	r31, Y+31	; 0x1f
    2eb6:	c0 82       	st	Z, r12
    2eb8:	e8 a1       	ldd	r30, Y+32	; 0x20
    2eba:	f9 a1       	ldd	r31, Y+33	; 0x21
    2ebc:	d0 82       	st	Z, r13
    2ebe:	bf be       	out	0x3f, r11	; 63
    2ec0:	df 91       	pop	r29
    2ec2:	cf 91       	pop	r28
    2ec4:	1f 91       	pop	r17
    2ec6:	0f 91       	pop	r16
    2ec8:	ff 90       	pop	r15
    2eca:	ef 90       	pop	r14
    2ecc:	df 90       	pop	r13
    2ece:	cf 90       	pop	r12
    2ed0:	bf 90       	pop	r11
    2ed2:	08 95       	ret

00002ed4 <__uartHWOff>:
    2ed4:	dc 01       	movw	r26, r24
    2ed6:	5c 96       	adiw	r26, 0x1c	; 28
    2ed8:	ed 91       	ld	r30, X+
    2eda:	fc 91       	ld	r31, X
    2edc:	5d 97       	sbiw	r26, 0x1d	; 29
    2ede:	80 81       	ld	r24, Z
    2ee0:	87 72       	andi	r24, 0x27	; 39
    2ee2:	80 83       	st	Z, r24
    2ee4:	96 96       	adiw	r26, 0x26	; 38
    2ee6:	9c 91       	ld	r25, X
    2ee8:	96 97       	sbiw	r26, 0x26	; 38
    2eea:	99 23       	and	r25, r25
    2eec:	41 f0       	breq	.+16     	; 0x2efe <__uartHWOff+0x2a>
    2eee:	5a 96       	adiw	r26, 0x1a	; 26
    2ef0:	ed 91       	ld	r30, X+
    2ef2:	fc 91       	ld	r31, X
    2ef4:	5b 97       	sbiw	r26, 0x1b	; 27
    2ef6:	80 81       	ld	r24, Z
    2ef8:	90 95       	com	r25
    2efa:	89 23       	and	r24, r25
    2efc:	80 83       	st	Z, r24
    2efe:	08 95       	ret

00002f00 <oneWireReceiveMode>:
    2f00:	dc 01       	movw	r26, r24
    2f02:	55 96       	adiw	r26, 0x15	; 21
    2f04:	8c 91       	ld	r24, X
    2f06:	55 97       	sbiw	r26, 0x15	; 21
    2f08:	88 23       	and	r24, r24
    2f0a:	71 f0       	breq	.+28     	; 0x2f28 <oneWireReceiveMode+0x28>
    2f0c:	5c 96       	adiw	r26, 0x1c	; 28
    2f0e:	ed 91       	ld	r30, X+
    2f10:	fc 91       	ld	r31, X
    2f12:	5d 97       	sbiw	r26, 0x1d	; 29
    2f14:	80 81       	ld	r24, Z
    2f16:	87 7b       	andi	r24, 0xB7	; 183
    2f18:	80 83       	st	Z, r24
    2f1a:	5c 96       	adiw	r26, 0x1c	; 28
    2f1c:	ed 91       	ld	r30, X+
    2f1e:	fc 91       	ld	r31, X
    2f20:	5d 97       	sbiw	r26, 0x1d	; 29
    2f22:	80 81       	ld	r24, Z
    2f24:	80 69       	ori	r24, 0x90	; 144
    2f26:	80 83       	st	Z, r24
    2f28:	08 95       	ret

00002f2a <__uartHWStartXmit>:
    2f2a:	dc 01       	movw	r26, r24
    2f2c:	92 96       	adiw	r26, 0x22	; 34
    2f2e:	ed 91       	ld	r30, X+
    2f30:	fc 91       	ld	r31, X
    2f32:	93 97       	sbiw	r26, 0x23	; 35
    2f34:	60 83       	st	Z, r22
    2f36:	08 95       	ret

00002f38 <startXmitMode>:
    2f38:	dc 01       	movw	r26, r24
    2f3a:	55 96       	adiw	r26, 0x15	; 21
    2f3c:	8c 91       	ld	r24, X
    2f3e:	55 97       	sbiw	r26, 0x15	; 21
    2f40:	88 23       	and	r24, r24
    2f42:	71 f0       	breq	.+28     	; 0x2f60 <startXmitMode+0x28>
    2f44:	5c 96       	adiw	r26, 0x1c	; 28
    2f46:	ed 91       	ld	r30, X+
    2f48:	fc 91       	ld	r31, X
    2f4a:	5d 97       	sbiw	r26, 0x1d	; 29
    2f4c:	80 81       	ld	r24, Z
    2f4e:	8f 76       	andi	r24, 0x6F	; 111
    2f50:	80 83       	st	Z, r24
    2f52:	5c 96       	adiw	r26, 0x1c	; 28
    2f54:	ed 91       	ld	r30, X+
    2f56:	fc 91       	ld	r31, X
    2f58:	5d 97       	sbiw	r26, 0x1d	; 29
    2f5a:	80 81       	ld	r24, Z
    2f5c:	88 64       	ori	r24, 0x48	; 72
    2f5e:	80 83       	st	Z, r24
    2f60:	08 95       	ret

00002f62 <uartReceivePollingMode>:
    2f62:	dc 01       	movw	r26, r24
    2f64:	5c 96       	adiw	r26, 0x1c	; 28
    2f66:	ed 91       	ld	r30, X+
    2f68:	fc 91       	ld	r31, X
    2f6a:	5d 97       	sbiw	r26, 0x1d	; 29
    2f6c:	66 23       	and	r22, r22
    2f6e:	19 f0       	breq	.+6      	; 0x2f76 <uartReceivePollingMode+0x14>
    2f70:	80 81       	ld	r24, Z
    2f72:	8f 77       	andi	r24, 0x7F	; 127
    2f74:	02 c0       	rjmp	.+4      	; 0x2f7a <uartReceivePollingMode+0x18>
    2f76:	80 81       	ld	r24, Z
    2f78:	80 68       	ori	r24, 0x80	; 128
    2f7a:	80 83       	st	Z, r24
    2f7c:	08 95       	ret

00002f7e <uartPollByte>:
    2f7e:	dc 01       	movw	r26, r24
    2f80:	5a 96       	adiw	r26, 0x1a	; 26
    2f82:	ed 91       	ld	r30, X+
    2f84:	fc 91       	ld	r31, X
    2f86:	5b 97       	sbiw	r26, 0x1b	; 27
    2f88:	80 81       	ld	r24, Z
    2f8a:	87 fd       	sbrc	r24, 7
    2f8c:	03 c0       	rjmp	.+6      	; 0x2f94 <uartPollByte+0x16>
    2f8e:	2f ef       	ldi	r18, 0xFF	; 255
    2f90:	3f ef       	ldi	r19, 0xFF	; 255
    2f92:	07 c0       	rjmp	.+14     	; 0x2fa2 <uartPollByte+0x24>
    2f94:	92 96       	adiw	r26, 0x22	; 34
    2f96:	ed 91       	ld	r30, X+
    2f98:	fc 91       	ld	r31, X
    2f9a:	93 97       	sbiw	r26, 0x23	; 35
    2f9c:	80 81       	ld	r24, Z
    2f9e:	28 2f       	mov	r18, r24
    2fa0:	30 e0       	ldi	r19, 0x00	; 0
    2fa2:	c9 01       	movw	r24, r18
    2fa4:	08 95       	ret

00002fa6 <__uartHWInit>:
    2fa6:	cf 93       	push	r28
    2fa8:	df 93       	push	r29
    2faa:	ec 01       	movw	r28, r24
    2fac:	0e 94 7a 03 	call	0x6f4	; 0x6f4 <_uartSetBaudRate>
    2fb0:	8d 89       	ldd	r24, Y+21	; 0x15
    2fb2:	88 23       	and	r24, r24
    2fb4:	11 f0       	breq	.+4      	; 0x2fba <__uartHWInit+0x14>
    2fb6:	20 e9       	ldi	r18, 0x90	; 144
    2fb8:	0c c0       	rjmp	.+24     	; 0x2fd2 <__uartHWInit+0x2c>
    2fba:	8d 85       	ldd	r24, Y+13	; 0x0d
    2fbc:	9e 85       	ldd	r25, Y+14	; 0x0e
    2fbe:	89 2b       	or	r24, r25
    2fc0:	11 f0       	breq	.+4      	; 0x2fc6 <__uartHWInit+0x20>
    2fc2:	20 e9       	ldi	r18, 0x90	; 144
    2fc4:	01 c0       	rjmp	.+2      	; 0x2fc8 <__uartHWInit+0x22>
    2fc6:	20 e0       	ldi	r18, 0x00	; 0
    2fc8:	8f 85       	ldd	r24, Y+15	; 0x0f
    2fca:	98 89       	ldd	r25, Y+16	; 0x10
    2fcc:	89 2b       	or	r24, r25
    2fce:	09 f0       	breq	.+2      	; 0x2fd2 <__uartHWInit+0x2c>
    2fd0:	28 64       	ori	r18, 0x48	; 72
    2fd2:	ec 8d       	ldd	r30, Y+28	; 0x1c
    2fd4:	fd 8d       	ldd	r31, Y+29	; 0x1d
    2fd6:	20 83       	st	Z, r18
    2fd8:	df 91       	pop	r29
    2fda:	cf 91       	pop	r28
    2fdc:	08 95       	ret

00002fde <a2dOff>:
    2fde:	ea e7       	ldi	r30, 0x7A	; 122
    2fe0:	f0 e0       	ldi	r31, 0x00	; 0
    2fe2:	80 81       	ld	r24, Z
    2fe4:	87 7f       	andi	r24, 0xF7	; 247
    2fe6:	80 83       	st	Z, r24
    2fe8:	80 81       	ld	r24, Z
    2fea:	8f 77       	andi	r24, 0x7F	; 127
    2fec:	80 83       	st	Z, r24
    2fee:	08 95       	ret

00002ff0 <a2dSetPrescaler>:
    2ff0:	ea e7       	ldi	r30, 0x7A	; 122
    2ff2:	f0 e0       	ldi	r31, 0x00	; 0
    2ff4:	90 81       	ld	r25, Z
    2ff6:	87 70       	andi	r24, 0x07	; 7
    2ff8:	98 7f       	andi	r25, 0xF8	; 248
    2ffa:	89 2b       	or	r24, r25
    2ffc:	80 83       	st	Z, r24
    2ffe:	08 95       	ret

00003000 <a2dConvert10bit>:
    3000:	90 91 7c 00 	lds	r25, 0x007C
    3004:	8f 71       	andi	r24, 0x1F	; 31
    3006:	90 7e       	andi	r25, 0xE0	; 224
    3008:	89 2b       	or	r24, r25
    300a:	80 93 7c 00 	sts	0x007C, r24
    300e:	10 92 6c 04 	sts	0x046C, r1
    3012:	80 91 7a 00 	lds	r24, 0x007A
    3016:	80 61       	ori	r24, 0x10	; 16
    3018:	80 93 7a 00 	sts	0x007A, r24
    301c:	80 91 7a 00 	lds	r24, 0x007A
    3020:	80 64       	ori	r24, 0x40	; 64
    3022:	80 93 7a 00 	sts	0x007A, r24
    3026:	80 91 7a 00 	lds	r24, 0x007A
    302a:	86 fd       	sbrc	r24, 6
    302c:	fc cf       	rjmp	.-8      	; 0x3026 <a2dConvert10bit+0x26>
    302e:	20 91 78 00 	lds	r18, 0x0078
    3032:	30 91 79 00 	lds	r19, 0x0079
    3036:	c9 01       	movw	r24, r18
    3038:	08 95       	ret

0000303a <a2dConvert8bit>:
    303a:	0e 94 00 18 	call	0x3000	; 0x3000 <a2dConvert10bit>
    303e:	96 95       	lsr	r25
    3040:	87 95       	ror	r24
    3042:	96 95       	lsr	r25
    3044:	87 95       	ror	r24
    3046:	08 95       	ret

00003048 <__vector_21>:
    3048:	1f 92       	push	r1
    304a:	0f 92       	push	r0
    304c:	0f b6       	in	r0, 0x3f	; 63
    304e:	0f 92       	push	r0
    3050:	11 24       	eor	r1, r1
    3052:	8f 93       	push	r24
    3054:	8f ef       	ldi	r24, 0xFF	; 255
    3056:	80 93 6c 04 	sts	0x046C, r24
    305a:	8f 91       	pop	r24
    305c:	0f 90       	pop	r0
    305e:	0f be       	out	0x3f, r0	; 63
    3060:	0f 90       	pop	r0
    3062:	1f 90       	pop	r1
    3064:	18 95       	reti

00003066 <a2dInit>:
    3066:	cf 93       	push	r28
    3068:	df 93       	push	r29
    306a:	80 91 7a 00 	lds	r24, 0x007A
    306e:	80 68       	ori	r24, 0x80	; 128
    3070:	80 93 7a 00 	sts	0x007A, r24
    3074:	80 91 7a 00 	lds	r24, 0x007A
    3078:	8f 7d       	andi	r24, 0xDF	; 223
    307a:	80 93 7a 00 	sts	0x007A, r24
    307e:	80 91 7a 00 	lds	r24, 0x007A
    3082:	88 7f       	andi	r24, 0xF8	; 248
    3084:	86 60       	ori	r24, 0x06	; 6
    3086:	80 93 7a 00 	sts	0x007A, r24
    308a:	80 91 7c 00 	lds	r24, 0x007C
    308e:	8f 73       	andi	r24, 0x3F	; 63
    3090:	80 64       	ori	r24, 0x40	; 64
    3092:	80 93 7c 00 	sts	0x007C, r24
    3096:	80 91 7c 00 	lds	r24, 0x007C
    309a:	8f 7d       	andi	r24, 0xDF	; 223
    309c:	80 93 7c 00 	sts	0x007C, r24
    30a0:	80 91 7a 00 	lds	r24, 0x007A
    30a4:	88 60       	ori	r24, 0x08	; 8
    30a6:	80 93 7a 00 	sts	0x007A, r24
    30aa:	8f ef       	ldi	r24, 0xFF	; 255
    30ac:	80 93 6c 04 	sts	0x046C, r24
    30b0:	78 94       	sei
    30b2:	80 91 a0 01 	lds	r24, 0x01A0
    30b6:	c8 2f       	mov	r28, r24
    30b8:	d0 e0       	ldi	r29, 0x00	; 0
    30ba:	03 c0       	rjmp	.+6      	; 0x30c2 <a2dInit+0x5c>
    30bc:	8c 2f       	mov	r24, r28
    30be:	0e 94 00 18 	call	0x3000	; 0x3000 <a2dConvert10bit>
    30c2:	21 97       	sbiw	r28, 0x01	; 1
    30c4:	8f ef       	ldi	r24, 0xFF	; 255
    30c6:	cf 3f       	cpi	r28, 0xFF	; 255
    30c8:	d8 07       	cpc	r29, r24
    30ca:	c1 f7       	brne	.-16     	; 0x30bc <a2dInit+0x56>
    30cc:	df 91       	pop	r29
    30ce:	cf 91       	pop	r28
    30d0:	08 95       	ret

000030d2 <rprintf1RamRom>:
    30d2:	7f 92       	push	r7
    30d4:	8f 92       	push	r8
    30d6:	9f 92       	push	r9
    30d8:	af 92       	push	r10
    30da:	bf 92       	push	r11
    30dc:	cf 92       	push	r12
    30de:	df 92       	push	r13
    30e0:	ef 92       	push	r14
    30e2:	ff 92       	push	r15
    30e4:	0f 93       	push	r16
    30e6:	1f 93       	push	r17
    30e8:	df 93       	push	r29
    30ea:	cf 93       	push	r28
    30ec:	0f 92       	push	r0
    30ee:	cd b7       	in	r28, 0x3d	; 61
    30f0:	de b7       	in	r29, 0x3e	; 62
    30f2:	79 88       	ldd	r7, Y+17	; 0x11
    30f4:	ca 88       	ldd	r12, Y+18	; 0x12
    30f6:	db 88       	ldd	r13, Y+19	; 0x13
    30f8:	64 e1       	ldi	r22, 0x14	; 20
    30fa:	e6 2e       	mov	r14, r22
    30fc:	f1 2c       	mov	r15, r1
    30fe:	ec 0e       	add	r14, r28
    3100:	fd 1e       	adc	r15, r29
    3102:	17 c0       	rjmp	.+46     	; 0x3132 <rprintf1RamRom+0x60>
    3104:	88 23       	and	r24, r24
    3106:	89 f4       	brne	.+34     	; 0x312a <rprintf1RamRom+0x58>
    3108:	80 e0       	ldi	r24, 0x00	; 0
    310a:	90 e0       	ldi	r25, 0x00	; 0
    310c:	0f 90       	pop	r0
    310e:	cf 91       	pop	r28
    3110:	df 91       	pop	r29
    3112:	1f 91       	pop	r17
    3114:	0f 91       	pop	r16
    3116:	ff 90       	pop	r15
    3118:	ef 90       	pop	r14
    311a:	df 90       	pop	r13
    311c:	cf 90       	pop	r12
    311e:	bf 90       	pop	r11
    3120:	af 90       	pop	r10
    3122:	9f 90       	pop	r9
    3124:	8f 90       	pop	r8
    3126:	7f 90       	pop	r7
    3128:	08 95       	ret
    312a:	0e 94 d1 07 	call	0xfa2	; 0xfa2 <rprintfChar>
    312e:	57 01       	movw	r10, r14
    3130:	75 01       	movw	r14, r10
    3132:	96 01       	movw	r18, r12
    3134:	2f 5f       	subi	r18, 0xFF	; 255
    3136:	3f 4f       	sbci	r19, 0xFF	; 255
    3138:	77 20       	and	r7, r7
    313a:	21 f0       	breq	.+8      	; 0x3144 <rprintf1RamRom+0x72>
    313c:	f6 01       	movw	r30, r12
    313e:	69 01       	movw	r12, r18
    3140:	84 91       	lpm	r24, Z+
    3142:	03 c0       	rjmp	.+6      	; 0x314a <rprintf1RamRom+0x78>
    3144:	f6 01       	movw	r30, r12
    3146:	80 81       	ld	r24, Z
    3148:	69 01       	movw	r12, r18
    314a:	85 32       	cpi	r24, 0x25	; 37
    314c:	d9 f6       	brne	.-74     	; 0x3104 <rprintf1RamRom+0x32>
    314e:	2f 5f       	subi	r18, 0xFF	; 255
    3150:	3f 4f       	sbci	r19, 0xFF	; 255
    3152:	77 20       	and	r7, r7
    3154:	21 f0       	breq	.+8      	; 0x315e <rprintf1RamRom+0x8c>
    3156:	f6 01       	movw	r30, r12
    3158:	69 01       	movw	r12, r18
    315a:	94 91       	lpm	r25, Z+
    315c:	03 c0       	rjmp	.+6      	; 0x3164 <rprintf1RamRom+0x92>
    315e:	f6 01       	movw	r30, r12
    3160:	90 81       	ld	r25, Z
    3162:	69 01       	movw	r12, r18
    3164:	93 37       	cpi	r25, 0x73	; 115
    3166:	a1 f0       	breq	.+40     	; 0x3190 <rprintf1RamRom+0xbe>
    3168:	94 37       	cpi	r25, 0x74	; 116
    316a:	38 f4       	brcc	.+14     	; 0x317a <rprintf1RamRom+0xa8>
    316c:	93 36       	cpi	r25, 0x63	; 99
    316e:	d9 f0       	breq	.+54     	; 0x31a6 <rprintf1RamRom+0xd4>
    3170:	94 36       	cpi	r25, 0x64	; 100
    3172:	41 f0       	breq	.+16     	; 0x3184 <rprintf1RamRom+0xb2>
    3174:	95 32       	cpi	r25, 0x25	; 37
    3176:	09 f5       	brne	.+66     	; 0x31ba <rprintf1RamRom+0xe8>
    3178:	25 c0       	rjmp	.+74     	; 0x31c4 <rprintf1RamRom+0xf2>
    317a:	95 37       	cpi	r25, 0x75	; 117
    317c:	19 f0       	breq	.+6      	; 0x3184 <rprintf1RamRom+0xb2>
    317e:	98 37       	cpi	r25, 0x78	; 120
    3180:	e1 f4       	brne	.+56     	; 0x31ba <rprintf1RamRom+0xe8>
    3182:	22 c0       	rjmp	.+68     	; 0x31c8 <rprintf1RamRom+0xf6>
    3184:	00 e1       	ldi	r16, 0x10	; 16
    3186:	17 e2       	ldi	r17, 0x27	; 39
    3188:	5a e0       	ldi	r21, 0x0A	; 10
    318a:	85 2e       	mov	r8, r21
    318c:	91 2c       	mov	r9, r1
    318e:	21 c0       	rjmp	.+66     	; 0x31d2 <rprintf1RamRom+0x100>
    3190:	42 e0       	ldi	r20, 0x02	; 2
    3192:	a4 2e       	mov	r10, r20
    3194:	b1 2c       	mov	r11, r1
    3196:	ae 0c       	add	r10, r14
    3198:	bf 1c       	adc	r11, r15
    319a:	f7 01       	movw	r30, r14
    319c:	80 81       	ld	r24, Z
    319e:	91 81       	ldd	r25, Z+1	; 0x01
    31a0:	0e 94 f3 07 	call	0xfe6	; 0xfe6 <rprintfStr>
    31a4:	c5 cf       	rjmp	.-118    	; 0x3130 <rprintf1RamRom+0x5e>
    31a6:	32 e0       	ldi	r19, 0x02	; 2
    31a8:	a3 2e       	mov	r10, r19
    31aa:	b1 2c       	mov	r11, r1
    31ac:	ae 0c       	add	r10, r14
    31ae:	bf 1c       	adc	r11, r15
    31b0:	f7 01       	movw	r30, r14
    31b2:	80 81       	ld	r24, Z
    31b4:	0e 94 d1 07 	call	0xfa2	; 0xfa2 <rprintfChar>
    31b8:	bb cf       	rjmp	.-138    	; 0x3130 <rprintf1RamRom+0x5e>
    31ba:	85 e2       	ldi	r24, 0x25	; 37
    31bc:	99 83       	std	Y+1, r25	; 0x01
    31be:	0e 94 d1 07 	call	0xfa2	; 0xfa2 <rprintfChar>
    31c2:	99 81       	ldd	r25, Y+1	; 0x01
    31c4:	89 2f       	mov	r24, r25
    31c6:	b1 cf       	rjmp	.-158    	; 0x312a <rprintf1RamRom+0x58>
    31c8:	00 e0       	ldi	r16, 0x00	; 0
    31ca:	10 e1       	ldi	r17, 0x10	; 16
    31cc:	20 e1       	ldi	r18, 0x10	; 16
    31ce:	82 2e       	mov	r8, r18
    31d0:	91 2c       	mov	r9, r1
    31d2:	82 e0       	ldi	r24, 0x02	; 2
    31d4:	a8 2e       	mov	r10, r24
    31d6:	b1 2c       	mov	r11, r1
    31d8:	ae 0c       	add	r10, r14
    31da:	bf 1c       	adc	r11, r15
    31dc:	f7 01       	movw	r30, r14
    31de:	e0 80       	ld	r14, Z
    31e0:	f1 80       	ldd	r15, Z+1	; 0x01
    31e2:	94 36       	cpi	r25, 0x64	; 100
    31e4:	51 f4       	brne	.+20     	; 0x31fa <rprintf1RamRom+0x128>
    31e6:	f7 fe       	sbrs	r15, 7
    31e8:	14 c0       	rjmp	.+40     	; 0x3212 <rprintf1RamRom+0x140>
    31ea:	f0 94       	com	r15
    31ec:	e1 94       	neg	r14
    31ee:	f1 08       	sbc	r15, r1
    31f0:	f3 94       	inc	r15
    31f2:	8d e2       	ldi	r24, 0x2D	; 45
    31f4:	0e 94 d1 07 	call	0xfa2	; 0xfa2 <rprintfChar>
    31f8:	0c c0       	rjmp	.+24     	; 0x3212 <rprintf1RamRom+0x140>
    31fa:	95 37       	cpi	r25, 0x75	; 117
    31fc:	69 f4       	brne	.+26     	; 0x3218 <rprintf1RamRom+0x146>
    31fe:	09 c0       	rjmp	.+18     	; 0x3212 <rprintf1RamRom+0x140>
    3200:	c8 01       	movw	r24, r16
    3202:	6a e0       	ldi	r22, 0x0A	; 10
    3204:	70 e0       	ldi	r23, 0x00	; 0
    3206:	0e 94 bd 1e 	call	0x3d7a	; 0x3d7a <__udivmodhi4>
    320a:	8b 01       	movw	r16, r22
    320c:	62 30       	cpi	r22, 0x02	; 2
    320e:	71 05       	cpc	r23, r1
    3210:	18 f0       	brcs	.+6      	; 0x3218 <rprintf1RamRom+0x146>
    3212:	e0 16       	cp	r14, r16
    3214:	f1 06       	cpc	r15, r17
    3216:	a0 f3       	brcs	.-24     	; 0x3200 <rprintf1RamRom+0x12e>
    3218:	c7 01       	movw	r24, r14
    321a:	b8 01       	movw	r22, r16
    321c:	0e 94 bd 1e 	call	0x3d7a	; 0x3d7a <__udivmodhi4>
    3220:	86 2f       	mov	r24, r22
    3222:	0e 94 16 08 	call	0x102c	; 0x102c <rprintfu04>
    3226:	c7 01       	movw	r24, r14
    3228:	b8 01       	movw	r22, r16
    322a:	0e 94 bd 1e 	call	0x3d7a	; 0x3d7a <__udivmodhi4>
    322e:	7c 01       	movw	r14, r24
    3230:	c8 01       	movw	r24, r16
    3232:	b4 01       	movw	r22, r8
    3234:	0e 94 bd 1e 	call	0x3d7a	; 0x3d7a <__udivmodhi4>
    3238:	8b 01       	movw	r16, r22
    323a:	61 15       	cp	r22, r1
    323c:	71 05       	cpc	r23, r1
    323e:	61 f7       	brne	.-40     	; 0x3218 <rprintf1RamRom+0x146>
    3240:	77 cf       	rjmp	.-274    	; 0x3130 <rprintf1RamRom+0x5e>

00003242 <__scheduleUpdate>:
    3242:	2f 92       	push	r2
    3244:	3f 92       	push	r3
    3246:	4f 92       	push	r4
    3248:	5f 92       	push	r5
    324a:	6f 92       	push	r6
    324c:	7f 92       	push	r7
    324e:	8f 92       	push	r8
    3250:	9f 92       	push	r9
    3252:	af 92       	push	r10
    3254:	bf 92       	push	r11
    3256:	cf 92       	push	r12
    3258:	df 92       	push	r13
    325a:	ef 92       	push	r14
    325c:	ff 92       	push	r15
    325e:	0f 93       	push	r16
    3260:	1f 93       	push	r17
    3262:	df 93       	push	r29
    3264:	cf 93       	push	r28
    3266:	cd b7       	in	r28, 0x3d	; 61
    3268:	de b7       	in	r29, 0x3e	; 62
    326a:	29 97       	sbiw	r28, 0x09	; 9
    326c:	0f b6       	in	r0, 0x3f	; 63
    326e:	f8 94       	cli
    3270:	de bf       	out	0x3e, r29	; 62
    3272:	0f be       	out	0x3f, r0	; 63
    3274:	cd bf       	out	0x3d, r28	; 61
    3276:	99 87       	std	Y+9, r25	; 0x09
    3278:	88 87       	std	Y+8, r24	; 0x08
    327a:	0e 94 93 0d 	call	0x1b26	; 0x1b26 <compareDetach>
    327e:	2f b7       	in	r18, 0x3f	; 63
    3280:	2f 83       	std	Y+7, r18	; 0x07
    3282:	78 94       	sei
    3284:	8f ef       	ldi	r24, 0xFF	; 255
    3286:	80 93 70 04 	sts	0x0470, r24
    328a:	10 92 6f 04 	sts	0x046F, r1
    328e:	80 91 39 01 	lds	r24, 0x0139
    3292:	a8 2f       	mov	r26, r24
    3294:	b0 e0       	ldi	r27, 0x00	; 0
    3296:	11 97       	sbiw	r26, 0x01	; 1
    3298:	be 83       	std	Y+6, r27	; 0x06
    329a:	ad 83       	std	Y+5, r26	; 0x05
    329c:	ed e0       	ldi	r30, 0x0D	; 13
    329e:	f0 e0       	ldi	r31, 0x00	; 0
    32a0:	ae 9f       	mul	r26, r30
    32a2:	50 01       	movw	r10, r0
    32a4:	af 9f       	mul	r26, r31
    32a6:	b0 0c       	add	r11, r0
    32a8:	be 9f       	mul	r27, r30
    32aa:	b0 0c       	add	r11, r0
    32ac:	11 24       	eor	r1, r1
    32ae:	2f ee       	ldi	r18, 0xEF	; 239
    32b0:	32 e0       	ldi	r19, 0x02	; 2
    32b2:	a2 0e       	add	r10, r18
    32b4:	b3 1e       	adc	r11, r19
    32b6:	22 24       	eor	r2, r2
    32b8:	33 24       	eor	r3, r3
    32ba:	21 01       	movw	r4, r2
    32bc:	5a c0       	rjmp	.+180    	; 0x3372 <__scheduleUpdate+0x130>
    32be:	d5 01       	movw	r26, r10
    32c0:	8c 91       	ld	r24, X
    32c2:	88 23       	and	r24, r24
    32c4:	09 f4       	brne	.+2      	; 0x32c8 <__scheduleUpdate+0x86>
    32c6:	4c c0       	rjmp	.+152    	; 0x3360 <__scheduleUpdate+0x11e>
    32c8:	19 96       	adiw	r26, 0x09	; 9
    32ca:	6d 90       	ld	r6, X+
    32cc:	7d 90       	ld	r7, X+
    32ce:	8d 90       	ld	r8, X+
    32d0:	9c 90       	ld	r9, X
    32d2:	1c 97       	sbiw	r26, 0x0c	; 12
    32d4:	15 96       	adiw	r26, 0x05	; 5
    32d6:	cd 90       	ld	r12, X+
    32d8:	dd 90       	ld	r13, X+
    32da:	ed 90       	ld	r14, X+
    32dc:	fc 90       	ld	r15, X
    32de:	18 97       	sbiw	r26, 0x08	; 8
    32e0:	c4 01       	movw	r24, r8
    32e2:	b3 01       	movw	r22, r6
    32e4:	a7 01       	movw	r20, r14
    32e6:	96 01       	movw	r18, r12
    32e8:	8e 01       	movw	r16, r28
    32ea:	0f 5f       	subi	r16, 0xFF	; 255
    32ec:	1f 4f       	sbci	r17, 0xFF	; 255
    32ee:	0e 94 4a 12 	call	0x2494	; 0x2494 <clockHasElapsedGetOverflow>
    32f2:	88 23       	and	r24, r24
    32f4:	19 f1       	breq	.+70     	; 0x333c <__scheduleUpdate+0xfa>
    32f6:	d5 01       	movw	r26, r10
    32f8:	11 96       	adiw	r26, 0x01	; 1
    32fa:	ed 91       	ld	r30, X+
    32fc:	fc 91       	ld	r31, X
    32fe:	12 97       	sbiw	r26, 0x02	; 2
    3300:	13 96       	adiw	r26, 0x03	; 3
    3302:	8d 91       	ld	r24, X+
    3304:	9c 91       	ld	r25, X
    3306:	14 97       	sbiw	r26, 0x04	; 4
    3308:	1c 92       	st	X, r1
    330a:	20 91 6d 04 	lds	r18, 0x046D
    330e:	30 91 6e 04 	lds	r19, 0x046E
    3312:	21 50       	subi	r18, 0x01	; 1
    3314:	30 40       	sbci	r19, 0x00	; 0
    3316:	30 93 6e 04 	sts	0x046E, r19
    331a:	20 93 6d 04 	sts	0x046D, r18
    331e:	c6 0c       	add	r12, r6
    3320:	d7 1c       	adc	r13, r7
    3322:	e8 1c       	adc	r14, r8
    3324:	f9 1c       	adc	r15, r9
    3326:	09 81       	ldd	r16, Y+1	; 0x01
    3328:	1a 81       	ldd	r17, Y+2	; 0x02
    332a:	2b 81       	ldd	r18, Y+3	; 0x03
    332c:	3c 81       	ldd	r19, Y+4	; 0x04
    332e:	b7 01       	movw	r22, r14
    3330:	a6 01       	movw	r20, r12
    3332:	09 95       	icall
    3334:	bf ef       	ldi	r27, 0xFF	; 255
    3336:	b0 93 6f 04 	sts	0x046F, r27
    333a:	12 c0       	rjmp	.+36     	; 0x3360 <__scheduleUpdate+0x11e>
    333c:	21 14       	cp	r2, r1
    333e:	31 04       	cpc	r3, r1
    3340:	41 04       	cpc	r4, r1
    3342:	51 04       	cpc	r5, r1
    3344:	49 f0       	breq	.+18     	; 0x3358 <__scheduleUpdate+0x116>
    3346:	89 81       	ldd	r24, Y+1	; 0x01
    3348:	9a 81       	ldd	r25, Y+2	; 0x02
    334a:	ab 81       	ldd	r26, Y+3	; 0x03
    334c:	bc 81       	ldd	r27, Y+4	; 0x04
    334e:	82 15       	cp	r24, r2
    3350:	93 05       	cpc	r25, r3
    3352:	a4 05       	cpc	r26, r4
    3354:	b5 05       	cpc	r27, r5
    3356:	20 f4       	brcc	.+8      	; 0x3360 <__scheduleUpdate+0x11e>
    3358:	29 80       	ldd	r2, Y+1	; 0x01
    335a:	3a 80       	ldd	r3, Y+2	; 0x02
    335c:	4b 80       	ldd	r4, Y+3	; 0x03
    335e:	5c 80       	ldd	r5, Y+4	; 0x04
    3360:	ed 81       	ldd	r30, Y+5	; 0x05
    3362:	fe 81       	ldd	r31, Y+6	; 0x06
    3364:	31 97       	sbiw	r30, 0x01	; 1
    3366:	fe 83       	std	Y+6, r31	; 0x06
    3368:	ed 83       	std	Y+5, r30	; 0x05
    336a:	23 ef       	ldi	r18, 0xF3	; 243
    336c:	3f ef       	ldi	r19, 0xFF	; 255
    336e:	a2 0e       	add	r10, r18
    3370:	b3 1e       	adc	r11, r19
    3372:	8d 81       	ldd	r24, Y+5	; 0x05
    3374:	9e 81       	ldd	r25, Y+6	; 0x06
    3376:	8f 5f       	subi	r24, 0xFF	; 255
    3378:	9f 4f       	sbci	r25, 0xFF	; 255
    337a:	09 f0       	breq	.+2      	; 0x337e <__scheduleUpdate+0x13c>
    337c:	a0 cf       	rjmp	.-192    	; 0x32be <__scheduleUpdate+0x7c>
    337e:	80 91 6f 04 	lds	r24, 0x046F
    3382:	88 23       	and	r24, r24
    3384:	09 f0       	breq	.+2      	; 0x3388 <__scheduleUpdate+0x146>
    3386:	81 cf       	rjmp	.-254    	; 0x328a <__scheduleUpdate+0x48>
    3388:	10 92 70 04 	sts	0x0470, r1
    338c:	80 91 6d 04 	lds	r24, 0x046D
    3390:	90 91 6e 04 	lds	r25, 0x046E
    3394:	18 16       	cp	r1, r24
    3396:	19 06       	cpc	r1, r25
    3398:	0c f0       	brlt	.+2      	; 0x339c <__scheduleUpdate+0x15a>
    339a:	44 c0       	rjmp	.+136    	; 0x3424 <__scheduleUpdate+0x1e2>
    339c:	f0 90 6a 04 	lds	r15, 0x046A
    33a0:	e0 90 6b 04 	lds	r14, 0x046B
    33a4:	ef 2d       	mov	r30, r15
    33a6:	fe 2d       	mov	r31, r14
    33a8:	05 91       	lpm	r16, Z+
    33aa:	14 91       	lpm	r17, Z+
    33ac:	20 91 9d 01 	lds	r18, 0x019D
    33b0:	30 91 9e 01 	lds	r19, 0x019E
    33b4:	40 e0       	ldi	r20, 0x00	; 0
    33b6:	50 e0       	ldi	r21, 0x00	; 0
    33b8:	c2 01       	movw	r24, r4
    33ba:	b1 01       	movw	r22, r2
    33bc:	0e 94 9e 1e 	call	0x3d3c	; 0x3d3c <__mulsi3>
    33c0:	f8 01       	movw	r30, r16
    33c2:	20 81       	ld	r18, Z
    33c4:	31 81       	ldd	r19, Z+1	; 0x01
    33c6:	40 e0       	ldi	r20, 0x00	; 0
    33c8:	50 e0       	ldi	r21, 0x00	; 0
    33ca:	0e 94 d1 1e 	call	0x3da2	; 0x3da2 <__udivmodsi4>
    33ce:	59 01       	movw	r10, r18
    33d0:	6a 01       	movw	r12, r20
    33d2:	8f 2d       	mov	r24, r15
    33d4:	9e 2d       	mov	r25, r14
    33d6:	0e 94 19 0e 	call	0x1c32	; 0x1c32 <timerGetTOP>
    33da:	7c 01       	movw	r14, r24
    33dc:	00 e0       	ldi	r16, 0x00	; 0
    33de:	10 e0       	ldi	r17, 0x00	; 0
    33e0:	ae 14       	cp	r10, r14
    33e2:	bf 04       	cpc	r11, r15
    33e4:	c0 06       	cpc	r12, r16
    33e6:	d1 06       	cpc	r13, r17
    33e8:	10 f4       	brcc	.+4      	; 0x33ee <__scheduleUpdate+0x1ac>
    33ea:	86 01       	movw	r16, r12
    33ec:	75 01       	movw	r14, r10
    33ee:	80 91 6a 04 	lds	r24, 0x046A
    33f2:	90 91 6b 04 	lds	r25, 0x046B
    33f6:	0e 94 19 0e 	call	0x1c32	; 0x1c32 <timerGetTOP>
    33fa:	8c 01       	movw	r16, r24
    33fc:	80 91 6a 04 	lds	r24, 0x046A
    3400:	90 91 6b 04 	lds	r25, 0x046B
    3404:	0e 94 2b 0b 	call	0x1656	; 0x1656 <timerGetCounter>
    3408:	8e 0d       	add	r24, r14
    340a:	9f 1d       	adc	r25, r15
    340c:	b8 01       	movw	r22, r16
    340e:	0e 94 bd 1e 	call	0x3d7a	; 0x3d7a <__udivmodhi4>
    3412:	ac 01       	movw	r20, r24
    3414:	88 85       	ldd	r24, Y+8	; 0x08
    3416:	99 85       	ldd	r25, Y+9	; 0x09
    3418:	61 e2       	ldi	r22, 0x21	; 33
    341a:	79 e1       	ldi	r23, 0x19	; 25
    341c:	20 e0       	ldi	r18, 0x00	; 0
    341e:	30 e0       	ldi	r19, 0x00	; 0
    3420:	0e 94 ab 10 	call	0x2156	; 0x2156 <compareAttach>
    3424:	ff 81       	ldd	r31, Y+7	; 0x07
    3426:	ff bf       	out	0x3f, r31	; 63
    3428:	29 96       	adiw	r28, 0x09	; 9
    342a:	0f b6       	in	r0, 0x3f	; 63
    342c:	f8 94       	cli
    342e:	de bf       	out	0x3e, r29	; 62
    3430:	0f be       	out	0x3f, r0	; 63
    3432:	cd bf       	out	0x3d, r28	; 61
    3434:	cf 91       	pop	r28
    3436:	df 91       	pop	r29
    3438:	1f 91       	pop	r17
    343a:	0f 91       	pop	r16
    343c:	ff 90       	pop	r15
    343e:	ef 90       	pop	r14
    3440:	df 90       	pop	r13
    3442:	cf 90       	pop	r12
    3444:	bf 90       	pop	r11
    3446:	af 90       	pop	r10
    3448:	9f 90       	pop	r9
    344a:	8f 90       	pop	r8
    344c:	7f 90       	pop	r7
    344e:	6f 90       	pop	r6
    3450:	5f 90       	pop	r5
    3452:	4f 90       	pop	r4
    3454:	3f 90       	pop	r3
    3456:	2f 90       	pop	r2
    3458:	08 95       	ret

0000345a <scheduleJob>:
    345a:	2f 92       	push	r2
    345c:	3f 92       	push	r3
    345e:	4f 92       	push	r4
    3460:	5f 92       	push	r5
    3462:	6f 92       	push	r6
    3464:	7f 92       	push	r7
    3466:	8f 92       	push	r8
    3468:	9f 92       	push	r9
    346a:	af 92       	push	r10
    346c:	bf 92       	push	r11
    346e:	cf 92       	push	r12
    3470:	df 92       	push	r13
    3472:	ef 92       	push	r14
    3474:	ff 92       	push	r15
    3476:	0f 93       	push	r16
    3478:	1f 93       	push	r17
    347a:	df 93       	push	r29
    347c:	cf 93       	push	r28
    347e:	00 d0       	rcall	.+0      	; 0x3480 <scheduleJob+0x26>
    3480:	00 d0       	rcall	.+0      	; 0x3482 <scheduleJob+0x28>
    3482:	cd b7       	in	r28, 0x3d	; 61
    3484:	de b7       	in	r29, 0x3e	; 62
    3486:	1c 01       	movw	r2, r24
    3488:	2b 01       	movw	r4, r22
    348a:	49 01       	movw	r8, r18
    348c:	5a 01       	movw	r10, r20
    348e:	67 01       	movw	r12, r14
    3490:	78 01       	movw	r14, r16
    3492:	88 ee       	ldi	r24, 0xE8	; 232
    3494:	c8 16       	cp	r12, r24
    3496:	83 e0       	ldi	r24, 0x03	; 3
    3498:	d8 06       	cpc	r13, r24
    349a:	80 e0       	ldi	r24, 0x00	; 0
    349c:	e8 06       	cpc	r14, r24
    349e:	80 e0       	ldi	r24, 0x00	; 0
    34a0:	f8 06       	cpc	r15, r24
    34a2:	38 f4       	brcc	.+14     	; 0x34b2 <scheduleJob+0x58>
    34a4:	80 91 70 04 	lds	r24, 0x0470
    34a8:	88 23       	and	r24, r24
    34aa:	c1 f1       	breq	.+112    	; 0x351c <scheduleJob+0xc2>
    34ac:	8f ef       	ldi	r24, 0xFF	; 255
    34ae:	80 93 6f 04 	sts	0x046F, r24
    34b2:	6f b7       	in	r22, 0x3f	; 63
    34b4:	f8 94       	cli
    34b6:	80 91 39 01 	lds	r24, 0x0139
    34ba:	48 2f       	mov	r20, r24
    34bc:	50 e0       	ldi	r21, 0x00	; 0
    34be:	af ee       	ldi	r26, 0xEF	; 239
    34c0:	b2 e0       	ldi	r27, 0x02	; 2
    34c2:	20 e0       	ldi	r18, 0x00	; 0
    34c4:	30 e0       	ldi	r19, 0x00	; 0
    34c6:	20 c0       	rjmp	.+64     	; 0x3508 <scheduleJob+0xae>
    34c8:	fd 01       	movw	r30, r26
    34ca:	8c 91       	ld	r24, X
    34cc:	1d 96       	adiw	r26, 0x0d	; 13
    34ce:	88 23       	and	r24, r24
    34d0:	c9 f4       	brne	.+50     	; 0x3504 <scheduleJob+0xaa>
    34d2:	8f ef       	ldi	r24, 0xFF	; 255
    34d4:	80 83       	st	Z, r24
    34d6:	32 82       	std	Z+2, r3	; 0x02
    34d8:	21 82       	std	Z+1, r2	; 0x01
    34da:	54 82       	std	Z+4, r5	; 0x04
    34dc:	43 82       	std	Z+3, r4	; 0x03
    34de:	81 86       	std	Z+9, r8	; 0x09
    34e0:	92 86       	std	Z+10, r9	; 0x0a
    34e2:	a3 86       	std	Z+11, r10	; 0x0b
    34e4:	b4 86       	std	Z+12, r11	; 0x0c
    34e6:	c5 82       	std	Z+5, r12	; 0x05
    34e8:	d6 82       	std	Z+6, r13	; 0x06
    34ea:	e7 82       	std	Z+7, r14	; 0x07
    34ec:	f0 86       	std	Z+8, r15	; 0x08
    34ee:	80 91 6d 04 	lds	r24, 0x046D
    34f2:	90 91 6e 04 	lds	r25, 0x046E
    34f6:	01 96       	adiw	r24, 0x01	; 1
    34f8:	90 93 6e 04 	sts	0x046E, r25
    34fc:	80 93 6d 04 	sts	0x046D, r24
    3500:	8f ef       	ldi	r24, 0xFF	; 255
    3502:	06 c0       	rjmp	.+12     	; 0x3510 <scheduleJob+0xb6>
    3504:	2f 5f       	subi	r18, 0xFF	; 255
    3506:	3f 4f       	sbci	r19, 0xFF	; 255
    3508:	24 17       	cp	r18, r20
    350a:	35 07       	cpc	r19, r21
    350c:	ec f2       	brlt	.-70     	; 0x34c8 <scheduleJob+0x6e>
    350e:	80 e0       	ldi	r24, 0x00	; 0
    3510:	6f bf       	out	0x3f, r22	; 63
    3512:	88 23       	and	r24, r24
    3514:	59 f5       	brne	.+86     	; 0x356c <scheduleJob+0x112>
    3516:	8f ef       	ldi	r24, 0xFF	; 255
    3518:	0e 94 27 0d 	call	0x1a4e	; 0x1a4e <setError>
    351c:	3e 01       	movw	r6, r28
    351e:	08 94       	sec
    3520:	61 1c       	adc	r6, r1
    3522:	71 1c       	adc	r7, r1
    3524:	c5 01       	movw	r24, r10
    3526:	b4 01       	movw	r22, r8
    3528:	a7 01       	movw	r20, r14
    352a:	96 01       	movw	r18, r12
    352c:	83 01       	movw	r16, r6
    352e:	0e 94 4a 12 	call	0x2494	; 0x2494 <clockHasElapsedGetOverflow>
    3532:	88 23       	and	r24, r24
    3534:	b9 f3       	breq	.-18     	; 0x3524 <scheduleJob+0xca>
    3536:	c8 0c       	add	r12, r8
    3538:	d9 1c       	adc	r13, r9
    353a:	ea 1c       	adc	r14, r10
    353c:	fb 1c       	adc	r15, r11
    353e:	09 81       	ldd	r16, Y+1	; 0x01
    3540:	1a 81       	ldd	r17, Y+2	; 0x02
    3542:	2b 81       	ldd	r18, Y+3	; 0x03
    3544:	3c 81       	ldd	r19, Y+4	; 0x04
    3546:	c2 01       	movw	r24, r4
    3548:	b7 01       	movw	r22, r14
    354a:	a6 01       	movw	r20, r12
    354c:	f1 01       	movw	r30, r2
    354e:	09 95       	icall
    3550:	11 c0       	rjmp	.+34     	; 0x3574 <scheduleJob+0x11a>
    3552:	e0 91 6a 04 	lds	r30, 0x046A
    3556:	f0 91 6b 04 	lds	r31, 0x046B
    355a:	77 96       	adiw	r30, 0x17	; 23
    355c:	85 91       	lpm	r24, Z+
    355e:	94 91       	lpm	r25, Z+
    3560:	40 96       	adiw	r24, 0x10	; 16
    3562:	60 e0       	ldi	r22, 0x00	; 0
    3564:	70 e0       	ldi	r23, 0x00	; 0
    3566:	0e 94 21 19 	call	0x3242	; 0x3242 <__scheduleUpdate>
    356a:	04 c0       	rjmp	.+8      	; 0x3574 <scheduleJob+0x11a>
    356c:	80 91 70 04 	lds	r24, 0x0470
    3570:	88 23       	and	r24, r24
    3572:	79 f3       	breq	.-34     	; 0x3552 <scheduleJob+0xf8>
    3574:	0f 90       	pop	r0
    3576:	0f 90       	pop	r0
    3578:	0f 90       	pop	r0
    357a:	0f 90       	pop	r0
    357c:	cf 91       	pop	r28
    357e:	df 91       	pop	r29
    3580:	1f 91       	pop	r17
    3582:	0f 91       	pop	r16
    3584:	ff 90       	pop	r15
    3586:	ef 90       	pop	r14
    3588:	df 90       	pop	r13
    358a:	cf 90       	pop	r12
    358c:	bf 90       	pop	r11
    358e:	af 90       	pop	r10
    3590:	9f 90       	pop	r9
    3592:	8f 90       	pop	r8
    3594:	7f 90       	pop	r7
    3596:	6f 90       	pop	r6
    3598:	5f 90       	pop	r5
    359a:	4f 90       	pop	r4
    359c:	3f 90       	pop	r3
    359e:	2f 90       	pop	r2
    35a0:	08 95       	ret

000035a2 <configure_ports>:

	Set up the I/O ports with their standard settings

*/
void configure_ports(void){
};
    35a2:	08 95       	ret

000035a4 <registerLED>:




void registerLED(void){
}
    35a4:	08 95       	ret

000035a6 <sysInitHardware>:

// Initialise any other hardware, like motor drivers etc, built onto the board
void sysInitHardware(void){
}
    35a6:	08 95       	ret

000035a8 <uart0GetByte>:
// ------------------ UART 0 --------------------------------
MAKE_WRITER(uart0SendByte){
	return _uartSendByte(&Uarts[0]._uart_,byte);
}
MAKE_READER(uart0GetByte){
	return __uartGetByte(&Uarts[0]._uart_);
    35a8:	82 e1       	ldi	r24, 0x12	; 18
    35aa:	91 e0       	ldi	r25, 0x01	; 1
    35ac:	0e 94 53 04 	call	0x8a6	; 0x8a6 <__uartGetByte>
}
    35b0:	08 95       	ret

000035b2 <appControl>:

return 0; // dont pause after
}
/***********************************************************************************/
// This routine is called repeatedly - its your main loop
TICK_COUNT appControl(LOOP_COUNT loopCount, TICK_COUNT loopStart){
    35b2:	af 92       	push	r10
    35b4:	bf 92       	push	r11
    35b6:	cf 92       	push	r12
    35b8:	df 92       	push	r13
    35ba:	ff 92       	push	r15
    35bc:	0f 93       	push	r16
    35be:	1f 93       	push	r17
    35c0:	df 93       	push	r29
    35c2:	cf 93       	push	r28
    35c4:	cd b7       	in	r28, 0x3d	; 61
    35c6:	de b7       	in	r29, 0x3e	; 62
    35c8:	a0 97       	sbiw	r28, 0x20	; 32
    35ca:	0f b6       	in	r0, 0x3f	; 63
    35cc:	f8 94       	cli
    35ce:	de bf       	out	0x3e, r29	; 62
    35d0:	0f be       	out	0x3f, r0	; 63
    35d2:	cd bf       	out	0x3d, r28	; 61
 
wdt_reset();   
    35d4:	a8 95       	wdr
int Data_In = uartGetByte(UART0);
    35d6:	82 e1       	ldi	r24, 0x12	; 18
    35d8:	91 e0       	ldi	r25, 0x01	; 1
    35da:	0e 94 53 04 	call	0x8a6	; 0x8a6 <__uartGetByte>
    35de:	8c 01       	movw	r16, r24
uint8_t inData[32];
uint8_t index = 0;
uint16_t battery_voltage = a2dReadMv(ADC_CH_ADC0);
    35e0:	80 e0       	ldi	r24, 0x00	; 0
    35e2:	0e 94 d7 04 	call	0x9ae	; 0x9ae <a2dReadMv>
    35e6:	5c 01       	movw	r10, r24
    35e8:	ff 24       	eor	r15, r15

while(Data_In!=-1)
    {
        inData[index] = Data_In;
    35ea:	6e 01       	movw	r12, r28
    35ec:	08 94       	sec
    35ee:	c1 1c       	adc	r12, r1
    35f0:	d1 1c       	adc	r13, r1
    35f2:	0a c0       	rjmp	.+20     	; 0x3608 <appControl+0x56>
    35f4:	f6 01       	movw	r30, r12
    35f6:	ef 0d       	add	r30, r15
    35f8:	f1 1d       	adc	r31, r1
    35fa:	00 83       	st	Z, r16
        index++;
    35fc:	f3 94       	inc	r15
        Data_In = uartGetByte(UART0);
    35fe:	82 e1       	ldi	r24, 0x12	; 18
    3600:	91 e0       	ldi	r25, 0x01	; 1
    3602:	0e 94 53 04 	call	0x8a6	; 0x8a6 <__uartGetByte>
    3606:	8c 01       	movw	r16, r24
int Data_In = uartGetByte(UART0);
uint8_t inData[32];
uint8_t index = 0;
uint16_t battery_voltage = a2dReadMv(ADC_CH_ADC0);

while(Data_In!=-1)
    3608:	8f ef       	ldi	r24, 0xFF	; 255
    360a:	0f 3f       	cpi	r16, 0xFF	; 255
    360c:	18 07       	cpc	r17, r24
    360e:	91 f7       	brne	.-28     	; 0x35f4 <appControl+0x42>
        inData[index] = Data_In;
        index++;
        Data_In = uartGetByte(UART0);
    }

if(CameraState % 2 == 0)
    3610:	80 91 e4 01 	lds	r24, 0x01E4
    3614:	90 e0       	ldi	r25, 0x00	; 0
    3616:	9c 01       	movw	r18, r24
    3618:	21 70       	andi	r18, 0x01	; 1
    361a:	30 70       	andi	r19, 0x00	; 0
    361c:	80 fd       	sbrc	r24, 0
    361e:	04 c0       	rjmp	.+8      	; 0x3628 <appControl+0x76>
	{
		left_x =  0;
    3620:	10 92 e6 01 	sts	0x01E6, r1
		left_y = 0;
    3624:	10 92 e7 01 	sts	0x01E7, r1
	}		
right_x = 0;
    3628:	10 92 e8 01 	sts	0x01E8, r1
right_y = 0;
    362c:	10 92 e9 01 	sts	0x01E9, r1
circle_pressure = 0;
    3630:	10 92 ea 01 	sts	0x01EA, r1
triangle_pressure = 0;
    3634:	10 92 eb 01 	sts	0x01EB, r1
xButton_pressure = 0;
    3638:	10 92 ec 01 	sts	0x01EC, r1
SqButton_pressure = 0;
    363c:	10 92 ed 01 	sts	0x01ED, r1
DL_Button_pressure = 0;
    3640:	10 92 ee 01 	sts	0x01EE, r1
DR_Button_pressure = 0;
    3644:	10 92 ef 01 	sts	0x01EF, r1

if(inData[TX_SYNC] == SYNC_PACKET && inData[index-1] == END_PACKET )
    3648:	89 81       	ldd	r24, Y+1	; 0x01
    364a:	83 35       	cpi	r24, 0x53	; 83
    364c:	09 f0       	breq	.+2      	; 0x3650 <appControl+0x9e>
    364e:	50 c1       	rjmp	.+672    	; 0x38f0 <appControl+0x33e>
    3650:	fe 01       	movw	r30, r28
    3652:	ef 0d       	add	r30, r15
    3654:	f1 1d       	adc	r31, r1
    3656:	80 81       	ld	r24, Z
    3658:	84 35       	cpi	r24, 0x54	; 84
    365a:	09 f0       	breq	.+2      	; 0x365e <appControl+0xac>
    365c:	49 c1       	rjmp	.+658    	; 0x38f0 <appControl+0x33e>
{
	if(CameraState % 2 == 0)
    365e:	23 2b       	or	r18, r19
    3660:	31 f4       	brne	.+12     	; 0x366e <appControl+0xbc>
	{
		left_x = inData[TX_PS2_LX];
    3662:	8a 81       	ldd	r24, Y+2	; 0x02
    3664:	80 93 e6 01 	sts	0x01E6, r24
		left_y = inData[TX_PS2_LY];
    3668:	8b 81       	ldd	r24, Y+3	; 0x03
    366a:	80 93 e7 01 	sts	0x01E7, r24
	}	
	right_x = inData[TX_PS2_RX];
    366e:	8c 81       	ldd	r24, Y+4	; 0x04
    3670:	80 93 e8 01 	sts	0x01E8, r24
	right_y = inData[TX_PS2_RY];
    3674:	8d 81       	ldd	r24, Y+5	; 0x05
    3676:	80 93 e9 01 	sts	0x01E9, r24
	circle_pressure = inData[TX_PS2_Circle_Pressure];
    367a:	8e 81       	ldd	r24, Y+6	; 0x06
    367c:	80 93 ea 01 	sts	0x01EA, r24
	triangle_pressure = inData[TX_PS2_Triangle_Pressure];
    3680:	8f 81       	ldd	r24, Y+7	; 0x07
    3682:	80 93 eb 01 	sts	0x01EB, r24
	xButton_pressure = inData[TX_PS2_X_Pressure];
    3686:	88 85       	ldd	r24, Y+8	; 0x08
    3688:	80 93 ec 01 	sts	0x01EC, r24
	SqButton_pressure = inData[TX_PS2_SQ_Pressure];
    368c:	89 85       	ldd	r24, Y+9	; 0x09
    368e:	80 93 ed 01 	sts	0x01ED, r24
	DL_Button_pressure = inData[TX_PS2_DL_Pressure];
    3692:	8b 85       	ldd	r24, Y+11	; 0x0b
    3694:	80 93 ee 01 	sts	0x01EE, r24
	DR_Button_pressure = inData[TX_PS2_DR_Pressure];
    3698:	8a 85       	ldd	r24, Y+10	; 0x0a
    369a:	80 93 ef 01 	sts	0x01EF, r24

    //left_x_pos += (interpolate(left_x, -128, 128, DRIVE_SPEED_MIN, DRIVE_SPEED_MAX));
	//DRIVE_SPEED Left_Pan_Pos = left_x_pos;
    DRIVE_SPEED Left_Pan_Pos = interpolate(left_x, -128, 128, DRIVE_SPEED_MIN, DRIVE_SPEED_MAX);
    369e:	80 91 e6 01 	lds	r24, 0x01E6
    36a2:	90 e0       	ldi	r25, 0x00	; 0
    36a4:	60 e8       	ldi	r22, 0x80	; 128
    36a6:	7f ef       	ldi	r23, 0xFF	; 255
    36a8:	40 e8       	ldi	r20, 0x80	; 128
    36aa:	50 e0       	ldi	r21, 0x00	; 0
    36ac:	21 e8       	ldi	r18, 0x81	; 129
    36ae:	3f ef       	ldi	r19, 0xFF	; 255
    36b0:	0f e7       	ldi	r16, 0x7F	; 127
    36b2:	10 e0       	ldi	r17, 0x00	; 0
    36b4:	0e 94 2c 06 	call	0xc58	; 0xc58 <interpolate>
    36b8:	f8 2e       	mov	r15, r24
//    DRIVE_SPEED Right_Pan_Pos = interpolate(right_x, 0, 255, DRIVE_SPEED_MIN, DRIVE_SPEED_MAX);
    DRIVE_SPEED Left_Tilt_Pos = interpolate(left_y, -128, 128, DRIVE_SPEED_MIN, DRIVE_SPEED_MAX);
    36ba:	80 91 e7 01 	lds	r24, 0x01E7
    36be:	90 e0       	ldi	r25, 0x00	; 0
    36c0:	60 e8       	ldi	r22, 0x80	; 128
    36c2:	7f ef       	ldi	r23, 0xFF	; 255
    36c4:	40 e8       	ldi	r20, 0x80	; 128
    36c6:	50 e0       	ldi	r21, 0x00	; 0
    36c8:	21 e8       	ldi	r18, 0x81	; 129
    36ca:	3f ef       	ldi	r19, 0xFF	; 255
    36cc:	0e 94 2c 06 	call	0xc58	; 0xc58 <interpolate>
    36d0:	18 2f       	mov	r17, r24
//    DRIVE_SPEED Right_Tilt_Pos = interpolate(right_y, 0, 255, DRIVE_SPEED_MIN, DRIVE_SPEED_MAX);
	//DRIVE_SPEED Rudder_Pos = interpolate(right_x, 128, -128, DRIVE_SPEED_MIN, DRIVE_SPEED_MAX);
    act_setSpeed(&Pan, Left_Pan_Pos);
    36d2:	8d e4       	ldi	r24, 0x4D	; 77
    36d4:	91 e0       	ldi	r25, 0x01	; 1
    36d6:	6f 2d       	mov	r22, r15
    36d8:	0e 94 ea 04 	call	0x9d4	; 0x9d4 <__act_setSpeed>
    act_setSpeed(&Tilt, Left_Tilt_Pos);
    36dc:	81 e6       	ldi	r24, 0x61	; 97
    36de:	91 e0       	ldi	r25, 0x01	; 1
    36e0:	61 2f       	mov	r22, r17
    36e2:	0e 94 ea 04 	call	0x9d4	; 0x9d4 <__act_setSpeed>
	//act_setSpeed(&Rudder, Rudder_Pos);
	
    
    if(battery_voltage < 4500)
    36e6:	84 e9       	ldi	r24, 0x94	; 148
    36e8:	a8 16       	cp	r10, r24
    36ea:	81 e1       	ldi	r24, 0x11	; 17
    36ec:	b8 06       	cpc	r11, r24
    36ee:	80 f4       	brcc	.+32     	; 0x3710 <appControl+0x15e>
    {
        BatteryState++;
    36f0:	80 91 e5 01 	lds	r24, 0x01E5
    36f4:	8f 5f       	subi	r24, 0xFF	; 255
    36f6:	80 93 e5 01 	sts	0x01E5, r24
        if(BatteryState % 2 == 0)
    36fa:	80 fd       	sbrc	r24, 0
    36fc:	04 c0       	rjmp	.+8      	; 0x3706 <appControl+0x154>
static __inline__ void LED_on(LED* led){
	LED_set(led,TRUE);
}

static __inline__ void LED_off(LED* led){
	LED_set(led,FALSE);
    36fe:	80 e9       	ldi	r24, 0x90	; 144
    3700:	91 e0       	ldi	r25, 0x01	; 1
    3702:	60 e0       	ldi	r22, 0x00	; 0
    3704:	03 c0       	rjmp	.+6      	; 0x370c <appControl+0x15a>


void LED_set(LED* led,	boolean value);

static __inline__ void LED_on(LED* led){
	LED_set(led,TRUE);
    3706:	80 e9       	ldi	r24, 0x90	; 144
    3708:	91 e0       	ldi	r25, 0x01	; 1
    370a:	6f ef       	ldi	r22, 0xFF	; 255
    370c:	0e 94 a1 07 	call	0xf42	; 0xf42 <LED_set>
            LED_on(&PowerGreen);
        }
    }
    
	//if(inData[TX_PS2_1] == PS2_B_BTN_TRIANGLE)
	if(triangle_pressure > 0)
    3710:	80 91 eb 01 	lds	r24, 0x01EB
    3714:	88 23       	and	r24, r24
    3716:	81 f0       	breq	.+32     	; 0x3738 <appControl+0x186>
    {
        SpotLightState++;
    3718:	80 91 e3 01 	lds	r24, 0x01E3
    371c:	8f 5f       	subi	r24, 0xFF	; 255
    371e:	80 93 e3 01 	sts	0x01E3, r24
        if(SpotLightState % 2 == 0)
    3722:	80 fd       	sbrc	r24, 0
    3724:	04 c0       	rjmp	.+8      	; 0x372e <appControl+0x17c>
}

static __inline__ void LED_off(LED* led){
	LED_set(led,FALSE);
    3726:	8d e8       	ldi	r24, 0x8D	; 141
    3728:	91 e0       	ldi	r25, 0x01	; 1
    372a:	60 e0       	ldi	r22, 0x00	; 0
    372c:	03 c0       	rjmp	.+6      	; 0x3734 <appControl+0x182>


void LED_set(LED* led,	boolean value);

static __inline__ void LED_on(LED* led){
	LED_set(led,TRUE);
    372e:	8d e8       	ldi	r24, 0x8D	; 141
    3730:	91 e0       	ldi	r25, 0x01	; 1
    3732:	6f ef       	ldi	r22, 0xFF	; 255
    3734:	0e 94 a1 07 	call	0xf42	; 0xf42 <LED_set>
    else
    {
       
    }
	
    if(inData[TX_PS2_1] == PS2_B_BTN_R1)
    3738:	fc 84       	ldd	r15, Y+12	; 0x0c
    373a:	8b e0       	ldi	r24, 0x0B	; 11
    373c:	f8 16       	cp	r15, r24
    373e:	41 f4       	brne	.+16     	; 0x3750 <appControl+0x19e>
    3740:	87 e8       	ldi	r24, 0x87	; 135
    3742:	91 e0       	ldi	r25, 0x01	; 1
    3744:	6f ef       	ldi	r22, 0xFF	; 255
    3746:	0e 94 a1 07 	call	0xf42	; 0xf42 <LED_set>
}

static __inline__ void LED_off(LED* led){
	LED_set(led,FALSE);
    374a:	8a e8       	ldi	r24, 0x8A	; 138
    374c:	91 e0       	ldi	r25, 0x01	; 1
    374e:	29 c0       	rjmp	.+82     	; 0x37a2 <appControl+0x1f0>
    {
        LED_on(&RightRed);
		LED_off(&LeftRed);
      //  act_setSpeed(&Rudder, DRIVE_SPEED_MIN);
    }
    else if(DR_Button_pressure > 0)
    3750:	80 91 ef 01 	lds	r24, 0x01EF
    3754:	88 23       	and	r24, r24
    3756:	d9 f0       	breq	.+54     	; 0x378e <appControl+0x1dc>
    3758:	87 e8       	ldi	r24, 0x87	; 135
    375a:	91 e0       	ldi	r25, 0x01	; 1
    375c:	60 e0       	ldi	r22, 0x00	; 0
    375e:	0e 94 a1 07 	call	0xf42	; 0xf42 <LED_set>


void LED_set(LED* led,	boolean value);

static __inline__ void LED_on(LED* led){
	LED_set(led,TRUE);
    3762:	8a e8       	ldi	r24, 0x8A	; 138
    3764:	91 e0       	ldi	r25, 0x01	; 1
    3766:	6f ef       	ldi	r22, 0xFF	; 255
    3768:	0e 94 a1 07 	call	0xf42	; 0xf42 <LED_set>
        }
        else
        {
            */

			DRIVE_SPEED Forward_Motor_Speed = interpolate(xButton_pressure, 0, 255, 0, DRIVE_SPEED_MIN);
    376c:	80 91 ec 01 	lds	r24, 0x01EC
    3770:	90 e0       	ldi	r25, 0x00	; 0
    3772:	60 e0       	ldi	r22, 0x00	; 0
    3774:	70 e0       	ldi	r23, 0x00	; 0
    3776:	4f ef       	ldi	r20, 0xFF	; 255
    3778:	50 e0       	ldi	r21, 0x00	; 0
    377a:	20 e0       	ldi	r18, 0x00	; 0
    377c:	30 e0       	ldi	r19, 0x00	; 0
    377e:	01 e8       	ldi	r16, 0x81	; 129
    3780:	1f ef       	ldi	r17, 0xFF	; 255
    3782:	0e 94 2c 06 	call	0xc58	; 0xc58 <interpolate>
    3786:	68 2f       	mov	r22, r24
            act_setSpeed(&Motor1, Forward_Motor_Speed);
    3788:	8a e3       	ldi	r24, 0x3A	; 58
    378a:	91 e0       	ldi	r25, 0x01	; 1
    378c:	2c c0       	rjmp	.+88     	; 0x37e6 <appControl+0x234>
		//	DRIVE_SPEED Right_Rudder_Pos = interpolate(DR_Button_pressure, 0, 255, 0, DRIVE_SPEED_MAX);
           // act_setSpeed(&Rudder, Right_Rudder_Pos);
        //}
	
    }
    else if(inData[TX_PS2_1] == PS2_B_BTN_L1)
    378e:	8a e1       	ldi	r24, 0x1A	; 26
    3790:	f8 16       	cp	r15, r24
    3792:	59 f4       	brne	.+22     	; 0x37aa <appControl+0x1f8>
    3794:	8a e8       	ldi	r24, 0x8A	; 138
    3796:	91 e0       	ldi	r25, 0x01	; 1
    3798:	6f ef       	ldi	r22, 0xFF	; 255
    379a:	0e 94 a1 07 	call	0xf42	; 0xf42 <LED_set>
}

static __inline__ void LED_off(LED* led){
	LED_set(led,FALSE);
    379e:	87 e8       	ldi	r24, 0x87	; 135
    37a0:	91 e0       	ldi	r25, 0x01	; 1
    37a2:	60 e0       	ldi	r22, 0x00	; 0
    37a4:	0e 94 a1 07 	call	0xf42	; 0xf42 <LED_set>
    37a8:	3a c0       	rjmp	.+116    	; 0x381e <appControl+0x26c>
    {
        LED_on(&LeftRed);
		LED_off(&RightRed);
       // act_setSpeed(&Rudder, DRIVE_SPEED_MAX);
    }
    else if(DL_Button_pressure > 0)
    37aa:	80 91 ee 01 	lds	r24, 0x01EE
    37ae:	88 23       	and	r24, r24
    37b0:	e9 f0       	breq	.+58     	; 0x37ec <appControl+0x23a>
    37b2:	8a e8       	ldi	r24, 0x8A	; 138
    37b4:	91 e0       	ldi	r25, 0x01	; 1
    37b6:	60 e0       	ldi	r22, 0x00	; 0
    37b8:	0e 94 a1 07 	call	0xf42	; 0xf42 <LED_set>


void LED_set(LED* led,	boolean value);

static __inline__ void LED_on(LED* led){
	LED_set(led,TRUE);
    37bc:	87 e8       	ldi	r24, 0x87	; 135
    37be:	91 e0       	ldi	r25, 0x01	; 1
    37c0:	6f ef       	ldi	r22, 0xFF	; 255
    37c2:	0e 94 a1 07 	call	0xf42	; 0xf42 <LED_set>
        {
            */
			//DRIVE_SPEED Left_Rudder_Pos = interpolate(DL_Button_pressure, 0, 255, 0, DRIVE_SPEED_MIN);
            //act_setSpeed(&Rudder, Left_Rudder_Pos);

			DRIVE_SPEED Forward_Motor_Speed = interpolate(xButton_pressure, 0, 255, 0, DRIVE_SPEED_MAX);
    37c6:	80 91 ec 01 	lds	r24, 0x01EC
    37ca:	90 e0       	ldi	r25, 0x00	; 0
    37cc:	60 e0       	ldi	r22, 0x00	; 0
    37ce:	70 e0       	ldi	r23, 0x00	; 0
    37d0:	4f ef       	ldi	r20, 0xFF	; 255
    37d2:	50 e0       	ldi	r21, 0x00	; 0
    37d4:	20 e0       	ldi	r18, 0x00	; 0
    37d6:	30 e0       	ldi	r19, 0x00	; 0
    37d8:	0f e7       	ldi	r16, 0x7F	; 127
    37da:	10 e0       	ldi	r17, 0x00	; 0
    37dc:	0e 94 2c 06 	call	0xc58	; 0xc58 <interpolate>
    37e0:	68 2f       	mov	r22, r24
            act_setSpeed(&Motor2, Forward_Motor_Speed);
    37e2:	82 e4       	ldi	r24, 0x42	; 66
    37e4:	91 e0       	ldi	r25, 0x01	; 1
    37e6:	0e 94 ea 04 	call	0x9d4	; 0x9d4 <__act_setSpeed>
    37ea:	0a c0       	rjmp	.+20     	; 0x3800 <appControl+0x24e>
}

static __inline__ void LED_off(LED* led){
	LED_set(led,FALSE);
    37ec:	87 e8       	ldi	r24, 0x87	; 135
    37ee:	91 e0       	ldi	r25, 0x01	; 1
    37f0:	60 e0       	ldi	r22, 0x00	; 0
    37f2:	0e 94 a1 07 	call	0xf42	; 0xf42 <LED_set>
    {
        LED_off(&RightRed);
		LED_off(&LeftRed);
//		act_setSpeed(&Rudder, Rudder_Pos);
    }
    if(inData[TX_PS2_1] == PS2_B_BTN_R2)
    37f6:	8a e8       	ldi	r24, 0x8A	; 138
    37f8:	91 e0       	ldi	r25, 0x01	; 1
    37fa:	60 e0       	ldi	r22, 0x00	; 0
    37fc:	0e 94 a1 07 	call	0xf42	; 0xf42 <LED_set>
    3800:	89 e0       	ldi	r24, 0x09	; 9
    3802:	f8 16       	cp	r15, r24
    3804:	21 f4       	brne	.+8      	; 0x380e <appControl+0x25c>
    {
       act_setSpeed(&Pan, DRIVE_SPEED_MIN);
    3806:	8d e4       	ldi	r24, 0x4D	; 77
    3808:	91 e0       	ldi	r25, 0x01	; 1
    380a:	61 e8       	ldi	r22, 0x81	; 129
    380c:	06 c0       	rjmp	.+12     	; 0x381a <appControl+0x268>
    else
    {
       
    }

    if(inData[TX_PS2_1] == PS2_B_BTN_L2)
    380e:	88 e0       	ldi	r24, 0x08	; 8
    3810:	f8 16       	cp	r15, r24
    3812:	29 f4       	brne	.+10     	; 0x381e <appControl+0x26c>
    {
       act_setSpeed(&Pan, DRIVE_SPEED_MAX);
    3814:	8d e4       	ldi	r24, 0x4D	; 77
    3816:	91 e0       	ldi	r25, 0x01	; 1
    3818:	6f e7       	ldi	r22, 0x7F	; 127
    381a:	0e 94 ea 04 	call	0x9d4	; 0x9d4 <__act_setSpeed>
    {
       
    }

    //if(inData[TX_PS2_1] == PS2_B_BTN_CIRCLE)
	if(circle_pressure > 0)
    381e:	80 91 ea 01 	lds	r24, 0x01EA
    3822:	88 23       	and	r24, r24
    3824:	29 f0       	breq	.+10     	; 0x3830 <appControl+0x27e>
    {
	   CameraState++;
    3826:	80 91 e4 01 	lds	r24, 0x01E4
    382a:	8f 5f       	subi	r24, 0xFF	; 255
    382c:	80 93 e4 01 	sts	0x01E4, r24
    {
   
    }

 
    if(SqButton_pressure > 0)
    3830:	80 91 ed 01 	lds	r24, 0x01ED
    3834:	88 23       	and	r24, r24
    3836:	09 f1       	breq	.+66     	; 0x387a <appControl+0x2c8>
    {
		DRIVE_SPEED Backward_Motor_Speed = interpolate(SqButton_pressure, 0, 255, 0, DRIVE_SPEED_MIN);
    3838:	90 e0       	ldi	r25, 0x00	; 0
    383a:	60 e0       	ldi	r22, 0x00	; 0
    383c:	70 e0       	ldi	r23, 0x00	; 0
    383e:	4f ef       	ldi	r20, 0xFF	; 255
    3840:	50 e0       	ldi	r21, 0x00	; 0
    3842:	20 e0       	ldi	r18, 0x00	; 0
    3844:	30 e0       	ldi	r19, 0x00	; 0
    3846:	01 e8       	ldi	r16, 0x81	; 129
    3848:	1f ef       	ldi	r17, 0xFF	; 255
    384a:	0e 94 2c 06 	call	0xc58	; 0xc58 <interpolate>
    384e:	68 2f       	mov	r22, r24
        act_setSpeed(&Motor1, Backward_Motor_Speed);
    3850:	8a e3       	ldi	r24, 0x3A	; 58
    3852:	91 e0       	ldi	r25, 0x01	; 1
    3854:	0e 94 ea 04 	call	0x9d4	; 0x9d4 <__act_setSpeed>
		{
			LED_on(&RightRed);
			LED_off(&LeftRed);
		}
		*/	
		if(DR_Button_pressure == 0 && DL_Button_pressure == 0)
    3858:	80 91 ef 01 	lds	r24, 0x01EF
    385c:	88 23       	and	r24, r24
    385e:	c9 f5       	brne	.+114    	; 0x38d2 <appControl+0x320>
    3860:	80 91 ee 01 	lds	r24, 0x01EE
    3864:	88 23       	and	r24, r24
    3866:	a9 f5       	brne	.+106    	; 0x38d2 <appControl+0x320>


void LED_set(LED* led,	boolean value);

static __inline__ void LED_on(LED* led){
	LED_set(led,TRUE);
    3868:	87 e8       	ldi	r24, 0x87	; 135
    386a:	91 e0       	ldi	r25, 0x01	; 1
    386c:	6f ef       	ldi	r22, 0xFF	; 255
    386e:	0e 94 a1 07 	call	0xf42	; 0xf42 <LED_set>
            DRIVE_SPEED Backward_Motor_Speed = interpolate(SqButton_pressure, 0, 255, 0, DRIVE_SPEED_MIN);
            act_setSpeed(&Motor, Backward_Motor_Speed);
        }
		*/
    }
    else if(xButton_pressure > 0)
    3872:	8a e8       	ldi	r24, 0x8A	; 138
    3874:	91 e0       	ldi	r25, 0x01	; 1
    3876:	6f ef       	ldi	r22, 0xFF	; 255
    3878:	24 c0       	rjmp	.+72     	; 0x38c2 <appControl+0x310>
    387a:	80 91 ec 01 	lds	r24, 0x01EC
    387e:	88 23       	and	r24, r24
    3880:	19 f1       	breq	.+70     	; 0x38c8 <appControl+0x316>
    {
        /*
		if(xButton_pressure == 255)
        {
            */
			DRIVE_SPEED Forward_Motor_Speed = interpolate(xButton_pressure, 0, 255, 0, DRIVE_SPEED_MAX);
    3882:	90 e0       	ldi	r25, 0x00	; 0
    3884:	60 e0       	ldi	r22, 0x00	; 0
    3886:	70 e0       	ldi	r23, 0x00	; 0
    3888:	4f ef       	ldi	r20, 0xFF	; 255
    388a:	50 e0       	ldi	r21, 0x00	; 0
    388c:	20 e0       	ldi	r18, 0x00	; 0
    388e:	30 e0       	ldi	r19, 0x00	; 0
    3890:	0f e7       	ldi	r16, 0x7F	; 127
    3892:	10 e0       	ldi	r17, 0x00	; 0
    3894:	0e 94 2c 06 	call	0xc58	; 0xc58 <interpolate>
    3898:	68 2f       	mov	r22, r24
            act_setSpeed(&Motor1, Forward_Motor_Speed);
    389a:	8a e3       	ldi	r24, 0x3A	; 58
    389c:	91 e0       	ldi	r25, 0x01	; 1
    389e:	0e 94 ea 04 	call	0x9d4	; 0x9d4 <__act_setSpeed>
		
			if(DR_Button_pressure == 0 && DL_Button_pressure == 0)
    38a2:	80 91 ef 01 	lds	r24, 0x01EF
    38a6:	88 23       	and	r24, r24
    38a8:	a1 f4       	brne	.+40     	; 0x38d2 <appControl+0x320>
    38aa:	80 91 ee 01 	lds	r24, 0x01EE
    38ae:	88 23       	and	r24, r24
    38b0:	81 f4       	brne	.+32     	; 0x38d2 <appControl+0x320>
}

static __inline__ void LED_off(LED* led){
	LED_set(led,FALSE);
    38b2:	87 e8       	ldi	r24, 0x87	; 135
    38b4:	91 e0       	ldi	r25, 0x01	; 1
    38b6:	60 e0       	ldi	r22, 0x00	; 0
    38b8:	0e 94 a1 07 	call	0xf42	; 0xf42 <LED_set>
        else
        {
            act_setSpeed(&Motor, 0);
        }
        */
		act_setSpeed(&Motor1, 0);
    38bc:	8a e8       	ldi	r24, 0x8A	; 138
    38be:	91 e0       	ldi	r25, 0x01	; 1
    38c0:	60 e0       	ldi	r22, 0x00	; 0
    38c2:	0e 94 a1 07 	call	0xf42	; 0xf42 <LED_set>
    38c6:	05 c0       	rjmp	.+10     	; 0x38d2 <appControl+0x320>
    38c8:	8a e3       	ldi	r24, 0x3A	; 58
    38ca:	91 e0       	ldi	r25, 0x01	; 1
    38cc:	60 e0       	ldi	r22, 0x00	; 0
    38ce:	0e 94 ea 04 	call	0x9d4	; 0x9d4 <__act_setSpeed>
    }
   
    if(inData[TX_PS2_1] == PS2_B_DPAD_UP)
    38d2:	84 e0       	ldi	r24, 0x04	; 4
    38d4:	f8 16       	cp	r15, r24
    38d6:	21 f4       	brne	.+8      	; 0x38e0 <appControl+0x32e>
    {
       act_setSpeed(&Motor1, DRIVE_SPEED_MAX);
    38d8:	8a e3       	ldi	r24, 0x3A	; 58
    38da:	91 e0       	ldi	r25, 0x01	; 1
    38dc:	6f e7       	ldi	r22, 0x7F	; 127
    38de:	06 c0       	rjmp	.+12     	; 0x38ec <appControl+0x33a>
    }
    else
    {

    }
    if(inData[TX_PS2_1] == PS2_B_DPAD_DOWN)
    38e0:	86 e0       	ldi	r24, 0x06	; 6
    38e2:	f8 16       	cp	r15, r24
    38e4:	29 f4       	brne	.+10     	; 0x38f0 <appControl+0x33e>
    {
       act_setSpeed(&Motor1, DRIVE_SPEED_MIN);
    38e6:	8a e3       	ldi	r24, 0x3A	; 58
    38e8:	91 e0       	ldi	r25, 0x01	; 1
    38ea:	61 e8       	ldi	r22, 0x81	; 129
    38ec:	0e 94 ea 04 	call	0x9d4	; 0x9d4 <__act_setSpeed>
//    act_setSpeed(&Pan_Motor,speed);
    // -------- End   Actuators -------
   
return 200000; // wait for 1 second before calling me again. 1000000us = 1
//second
}
    38f0:	60 e4       	ldi	r22, 0x40	; 64
    38f2:	7d e0       	ldi	r23, 0x0D	; 13
    38f4:	83 e0       	ldi	r24, 0x03	; 3
    38f6:	90 e0       	ldi	r25, 0x00	; 0
    38f8:	a0 96       	adiw	r28, 0x20	; 32
    38fa:	0f b6       	in	r0, 0x3f	; 63
    38fc:	f8 94       	cli
    38fe:	de bf       	out	0x3e, r29	; 62
    3900:	0f be       	out	0x3f, r0	; 63
    3902:	cd bf       	out	0x3d, r28	; 61
    3904:	cf 91       	pop	r28
    3906:	df 91       	pop	r29
    3908:	1f 91       	pop	r17
    390a:	0f 91       	pop	r16
    390c:	ff 90       	pop	r15
    390e:	df 90       	pop	r13
    3910:	cf 90       	pop	r12
    3912:	bf 90       	pop	r11
    3914:	af 90       	pop	r10
    3916:	08 95       	ret

00003918 <appInitSoftware>:
    3918:	87 e8       	ldi	r24, 0x87	; 135
    391a:	91 e0       	ldi	r25, 0x01	; 1
    391c:	60 e0       	ldi	r22, 0x00	; 0
    391e:	0e 94 a1 07 	call	0xf42	; 0xf42 <LED_set>


void LED_set(LED* led,	boolean value);

static __inline__ void LED_on(LED* led){
	LED_set(led,TRUE);
    3922:	8a e8       	ldi	r24, 0x8A	; 138
    3924:	91 e0       	ldi	r25, 0x01	; 1
    3926:	60 e0       	ldi	r22, 0x00	; 0
    3928:	0e 94 a1 07 	call	0xf42	; 0xf42 <LED_set>
    392c:	8d e8       	ldi	r24, 0x8D	; 141
    392e:	91 e0       	ldi	r25, 0x01	; 1
    3930:	60 e0       	ldi	r22, 0x00	; 0
    3932:	0e 94 a1 07 	call	0xf42	; 0xf42 <LED_set>
    3936:	80 e9       	ldi	r24, 0x90	; 144
    3938:	91 e0       	ldi	r25, 0x01	; 1
    393a:	6f ef       	ldi	r22, 0xFF	; 255
    393c:	0e 94 a1 07 	call	0xf42	; 0xf42 <LED_set>
    LED_off(&LeftRed);
    LED_off(&SpotLightWhite);
    LED_on(&PowerGreen);

return 0; // dont pause after
}
    3940:	60 e0       	ldi	r22, 0x00	; 0
    3942:	70 e0       	ldi	r23, 0x00	; 0
    3944:	80 e0       	ldi	r24, 0x00	; 0
    3946:	90 e0       	ldi	r25, 0x00	; 0
    3948:	08 95       	ret

0000394a <appInitHardware>:
// Dont use any 'clock' functions here - use 'delay' functions instead

void appInitHardware(void){
// Initialise the servo controller

servosInit(&Servo_bank1,TIMER1);
    394a:	85 e7       	ldi	r24, 0x75	; 117
    394c:	91 e0       	ldi	r25, 0x01	; 1
    394e:	6f e4       	ldi	r22, 0x4F	; 79
    3950:	71 e0       	ldi	r23, 0x01	; 1
    3952:	0e 94 21 08 	call	0x1042	; 0x1042 <servosInit>

sanyoLB1836M_Init(&onboard_driver, 5000);
    3956:	8a e4       	ldi	r24, 0x4A	; 74
    3958:	91 e0       	ldi	r25, 0x01	; 1
    395a:	48 e8       	ldi	r20, 0x88	; 136
    395c:	53 e1       	ldi	r21, 0x13	; 19
    395e:	60 e0       	ldi	r22, 0x00	; 0
    3960:	70 e0       	ldi	r23, 0x00	; 0
    3962:	0e 94 d3 02 	call	0x5a6	; 0x5a6 <sanyoLB1836M_Init>

//sanyoLB1836M_Init(&onboard_driver);

//servosInit(&bank1, TIMER1);
// Set UART0 to 9600 baud
uartInit(UART0, 9600);
    3966:	82 e1       	ldi	r24, 0x12	; 18
    3968:	91 e0       	ldi	r25, 0x01	; 1
    396a:	40 e8       	ldi	r20, 0x80	; 128
    396c:	55 e2       	ldi	r21, 0x25	; 37
    396e:	60 e0       	ldi	r22, 0x00	; 0
    3970:	70 e0       	ldi	r23, 0x00	; 0
    3972:	0e 94 c9 03 	call	0x792	; 0x792 <_uartInit>
// Tell rprintf to output to UART0
rprintfInit(&uart0SendByte);
    3976:	8c e1       	ldi	r24, 0x1C	; 28
    3978:	9d e1       	ldi	r25, 0x1D	; 29
    397a:	0e 94 c4 07 	call	0xf88	; 0xf88 <rprintfInit>
wdt_enable (WDTO_250MS); 
    397e:	2c e0       	ldi	r18, 0x0C	; 12
    3980:	88 e1       	ldi	r24, 0x18	; 24
    3982:	90 e0       	ldi	r25, 0x00	; 0
    3984:	0f b6       	in	r0, 0x3f	; 63
    3986:	f8 94       	cli
    3988:	a8 95       	wdr
    398a:	80 93 60 00 	sts	0x0060, r24
    398e:	0f be       	out	0x3f, r0	; 63
    3990:	20 93 60 00 	sts	0x0060, r18
}
    3994:	08 95       	ret

00003996 <__vector_18>:
{
	uartTransmitService(&Uarts[0]);
}

UART_INTERRUPT_HANDLER(USART0_RX_vect)
{
    3996:	1f 92       	push	r1
    3998:	0f 92       	push	r0
    399a:	0f b6       	in	r0, 0x3f	; 63
    399c:	0f 92       	push	r0
    399e:	11 24       	eor	r1, r1
    39a0:	2f 93       	push	r18
    39a2:	3f 93       	push	r19
    39a4:	4f 93       	push	r20
    39a6:	5f 93       	push	r21
    39a8:	6f 93       	push	r22
    39aa:	7f 93       	push	r23
    39ac:	8f 93       	push	r24
    39ae:	9f 93       	push	r25
    39b0:	af 93       	push	r26
    39b2:	bf 93       	push	r27
    39b4:	ef 93       	push	r30
    39b6:	ff 93       	push	r31
	uartReceiveService(&Uarts[0]);
    39b8:	e0 91 34 01 	lds	r30, 0x0134
    39bc:	f0 91 35 01 	lds	r31, 0x0135
    39c0:	60 81       	ld	r22, Z
    39c2:	82 e1       	ldi	r24, 0x12	; 18
    39c4:	91 e0       	ldi	r25, 0x01	; 1
    39c6:	0e 94 ac 04 	call	0x958	; 0x958 <__uartReceiveService>
}
    39ca:	ff 91       	pop	r31
    39cc:	ef 91       	pop	r30
    39ce:	bf 91       	pop	r27
    39d0:	af 91       	pop	r26
    39d2:	9f 91       	pop	r25
    39d4:	8f 91       	pop	r24
    39d6:	7f 91       	pop	r23
    39d8:	6f 91       	pop	r22
    39da:	5f 91       	pop	r21
    39dc:	4f 91       	pop	r20
    39de:	3f 91       	pop	r19
    39e0:	2f 91       	pop	r18
    39e2:	0f 90       	pop	r0
    39e4:	0f be       	out	0x3f, r0	; 63
    39e6:	0f 90       	pop	r0
    39e8:	1f 90       	pop	r1
    39ea:	18 95       	reti

000039ec <__vector_20>:
#endif
#ifndef USART0_RX_vect
# error Uart0 Rx complete vector undefined
#endif
UART_INTERRUPT_HANDLER(USART0_TX_vect)
{
    39ec:	1f 92       	push	r1
    39ee:	0f 92       	push	r0
    39f0:	0f b6       	in	r0, 0x3f	; 63
    39f2:	0f 92       	push	r0
    39f4:	11 24       	eor	r1, r1
    39f6:	2f 93       	push	r18
    39f8:	3f 93       	push	r19
    39fa:	4f 93       	push	r20
    39fc:	5f 93       	push	r21
    39fe:	6f 93       	push	r22
    3a00:	7f 93       	push	r23
    3a02:	8f 93       	push	r24
    3a04:	9f 93       	push	r25
    3a06:	af 93       	push	r26
    3a08:	bf 93       	push	r27
    3a0a:	ef 93       	push	r30
    3a0c:	ff 93       	push	r31
	uartTransmitService(&Uarts[0]);
    3a0e:	82 e1       	ldi	r24, 0x12	; 18
    3a10:	91 e0       	ldi	r25, 0x01	; 1
    3a12:	0e 94 79 04 	call	0x8f2	; 0x8f2 <__uartTransmitService>
}
    3a16:	ff 91       	pop	r31
    3a18:	ef 91       	pop	r30
    3a1a:	bf 91       	pop	r27
    3a1c:	af 91       	pop	r26
    3a1e:	9f 91       	pop	r25
    3a20:	8f 91       	pop	r24
    3a22:	7f 91       	pop	r23
    3a24:	6f 91       	pop	r22
    3a26:	5f 91       	pop	r21
    3a28:	4f 91       	pop	r20
    3a2a:	3f 91       	pop	r19
    3a2c:	2f 91       	pop	r18
    3a2e:	0f 90       	pop	r0
    3a30:	0f be       	out	0x3f, r0	; 63
    3a32:	0f 90       	pop	r0
    3a34:	1f 90       	pop	r1
    3a36:	18 95       	reti

00003a38 <uart0SendByte>:
#endif


#if defined(UBRR0) || defined(UBRRL)|| defined(UBRR0L)
// ------------------ UART 0 --------------------------------
MAKE_WRITER(uart0SendByte){
    3a38:	68 2f       	mov	r22, r24
	return _uartSendByte(&Uarts[0]._uart_,byte);
    3a3a:	82 e1       	ldi	r24, 0x12	; 18
    3a3c:	91 e0       	ldi	r25, 0x01	; 1
    3a3e:	0e 94 02 04 	call	0x804	; 0x804 <_uartSendByte>
}
    3a42:	08 95       	ret

00003a44 <__vector_8>:
	}
	#endif

	#ifdef TIMER2_COMPB_vect
	//! Interrupt handler for tcnt2 compare interrupt
	TIMER_INTERRUPT_HANDLER(TIMER2_COMPB_vect){
    3a44:	1f 92       	push	r1
    3a46:	0f 92       	push	r0
    3a48:	0f b6       	in	r0, 0x3f	; 63
    3a4a:	0f 92       	push	r0
    3a4c:	11 24       	eor	r1, r1
    3a4e:	2f 93       	push	r18
    3a50:	3f 93       	push	r19
    3a52:	4f 93       	push	r20
    3a54:	5f 93       	push	r21
    3a56:	6f 93       	push	r22
    3a58:	7f 93       	push	r23
    3a5a:	8f 93       	push	r24
    3a5c:	9f 93       	push	r25
    3a5e:	af 93       	push	r26
    3a60:	bf 93       	push	r27
    3a62:	ef 93       	push	r30
    3a64:	ff 93       	push	r31
		__timer_compareService(TIMER2_COMPAREB);
    3a66:	81 e1       	ldi	r24, 0x11	; 17
    3a68:	91 e0       	ldi	r25, 0x01	; 1
    3a6a:	0e 94 9b 0b 	call	0x1736	; 0x1736 <__timer_compareService>
	}
    3a6e:	ff 91       	pop	r31
    3a70:	ef 91       	pop	r30
    3a72:	bf 91       	pop	r27
    3a74:	af 91       	pop	r26
    3a76:	9f 91       	pop	r25
    3a78:	8f 91       	pop	r24
    3a7a:	7f 91       	pop	r23
    3a7c:	6f 91       	pop	r22
    3a7e:	5f 91       	pop	r21
    3a80:	4f 91       	pop	r20
    3a82:	3f 91       	pop	r19
    3a84:	2f 91       	pop	r18
    3a86:	0f 90       	pop	r0
    3a88:	0f be       	out	0x3f, r0	; 63
    3a8a:	0f 90       	pop	r0
    3a8c:	1f 90       	pop	r1
    3a8e:	18 95       	reti

00003a90 <__vector_7>:
	}
	#endif

	#ifdef TIMER2_COMPA_vect
	//! Interrupt handler for tcnt2 compare interrupt
	TIMER_INTERRUPT_HANDLER(TIMER2_COMPA_vect){
    3a90:	1f 92       	push	r1
    3a92:	0f 92       	push	r0
    3a94:	0f b6       	in	r0, 0x3f	; 63
    3a96:	0f 92       	push	r0
    3a98:	11 24       	eor	r1, r1
    3a9a:	2f 93       	push	r18
    3a9c:	3f 93       	push	r19
    3a9e:	4f 93       	push	r20
    3aa0:	5f 93       	push	r21
    3aa2:	6f 93       	push	r22
    3aa4:	7f 93       	push	r23
    3aa6:	8f 93       	push	r24
    3aa8:	9f 93       	push	r25
    3aaa:	af 93       	push	r26
    3aac:	bf 93       	push	r27
    3aae:	ef 93       	push	r30
    3ab0:	ff 93       	push	r31
		__timer_compareService(TIMER2_COMPAREA);
    3ab2:	81 e0       	ldi	r24, 0x01	; 1
    3ab4:	91 e0       	ldi	r25, 0x01	; 1
    3ab6:	0e 94 9b 0b 	call	0x1736	; 0x1736 <__timer_compareService>
	}
    3aba:	ff 91       	pop	r31
    3abc:	ef 91       	pop	r30
    3abe:	bf 91       	pop	r27
    3ac0:	af 91       	pop	r26
    3ac2:	9f 91       	pop	r25
    3ac4:	8f 91       	pop	r24
    3ac6:	7f 91       	pop	r23
    3ac8:	6f 91       	pop	r22
    3aca:	5f 91       	pop	r21
    3acc:	4f 91       	pop	r20
    3ace:	3f 91       	pop	r19
    3ad0:	2f 91       	pop	r18
    3ad2:	0f 90       	pop	r0
    3ad4:	0f be       	out	0x3f, r0	; 63
    3ad6:	0f 90       	pop	r0
    3ad8:	1f 90       	pop	r1
    3ada:	18 95       	reti

00003adc <__vector_12>:
	}
	#endif // TIMER1_COMPA_vect

	#ifdef TIMER1_COMPB_vect
	//! Interrupt handler for tcnt0 compare interrupt
	TIMER_INTERRUPT_HANDLER(TIMER1_COMPB_vect){
    3adc:	1f 92       	push	r1
    3ade:	0f 92       	push	r0
    3ae0:	0f b6       	in	r0, 0x3f	; 63
    3ae2:	0f 92       	push	r0
    3ae4:	11 24       	eor	r1, r1
    3ae6:	2f 93       	push	r18
    3ae8:	3f 93       	push	r19
    3aea:	4f 93       	push	r20
    3aec:	5f 93       	push	r21
    3aee:	6f 93       	push	r22
    3af0:	7f 93       	push	r23
    3af2:	8f 93       	push	r24
    3af4:	9f 93       	push	r25
    3af6:	af 93       	push	r26
    3af8:	bf 93       	push	r27
    3afa:	ef 93       	push	r30
    3afc:	ff 93       	push	r31
		__timer_compareService(TIMER1_COMPAREB);
    3afe:	81 ef       	ldi	r24, 0xF1	; 241
    3b00:	90 e0       	ldi	r25, 0x00	; 0
    3b02:	0e 94 9b 0b 	call	0x1736	; 0x1736 <__timer_compareService>
	}
    3b06:	ff 91       	pop	r31
    3b08:	ef 91       	pop	r30
    3b0a:	bf 91       	pop	r27
    3b0c:	af 91       	pop	r26
    3b0e:	9f 91       	pop	r25
    3b10:	8f 91       	pop	r24
    3b12:	7f 91       	pop	r23
    3b14:	6f 91       	pop	r22
    3b16:	5f 91       	pop	r21
    3b18:	4f 91       	pop	r20
    3b1a:	3f 91       	pop	r19
    3b1c:	2f 91       	pop	r18
    3b1e:	0f 90       	pop	r0
    3b20:	0f be       	out	0x3f, r0	; 63
    3b22:	0f 90       	pop	r0
    3b24:	1f 90       	pop	r1
    3b26:	18 95       	reti

00003b28 <__vector_11>:
	}
	#endif

	#ifdef TIMER1_COMPA_vect
	//! Interrupt handler for tcnt0 compare interrupt
	TIMER_INTERRUPT_HANDLER(TIMER1_COMPA_vect){
    3b28:	1f 92       	push	r1
    3b2a:	0f 92       	push	r0
    3b2c:	0f b6       	in	r0, 0x3f	; 63
    3b2e:	0f 92       	push	r0
    3b30:	11 24       	eor	r1, r1
    3b32:	2f 93       	push	r18
    3b34:	3f 93       	push	r19
    3b36:	4f 93       	push	r20
    3b38:	5f 93       	push	r21
    3b3a:	6f 93       	push	r22
    3b3c:	7f 93       	push	r23
    3b3e:	8f 93       	push	r24
    3b40:	9f 93       	push	r25
    3b42:	af 93       	push	r26
    3b44:	bf 93       	push	r27
    3b46:	ef 93       	push	r30
    3b48:	ff 93       	push	r31
		__timer_compareService(TIMER1_COMPAREA);
    3b4a:	81 ee       	ldi	r24, 0xE1	; 225
    3b4c:	90 e0       	ldi	r25, 0x00	; 0
    3b4e:	0e 94 9b 0b 	call	0x1736	; 0x1736 <__timer_compareService>
	}
    3b52:	ff 91       	pop	r31
    3b54:	ef 91       	pop	r30
    3b56:	bf 91       	pop	r27
    3b58:	af 91       	pop	r26
    3b5a:	9f 91       	pop	r25
    3b5c:	8f 91       	pop	r24
    3b5e:	7f 91       	pop	r23
    3b60:	6f 91       	pop	r22
    3b62:	5f 91       	pop	r21
    3b64:	4f 91       	pop	r20
    3b66:	3f 91       	pop	r19
    3b68:	2f 91       	pop	r18
    3b6a:	0f 90       	pop	r0
    3b6c:	0f be       	out	0x3f, r0	; 63
    3b6e:	0f 90       	pop	r0
    3b70:	1f 90       	pop	r1
    3b72:	18 95       	reti

00003b74 <__vector_15>:
	}
	#endif

	#ifdef TIMER0_COMPB_vect
	// Interrupt handler for tcnt0 compare interrupt
	TIMER_INTERRUPT_HANDLER(TIMER0_COMPB_vect){
    3b74:	1f 92       	push	r1
    3b76:	0f 92       	push	r0
    3b78:	0f b6       	in	r0, 0x3f	; 63
    3b7a:	0f 92       	push	r0
    3b7c:	11 24       	eor	r1, r1
    3b7e:	2f 93       	push	r18
    3b80:	3f 93       	push	r19
    3b82:	4f 93       	push	r20
    3b84:	5f 93       	push	r21
    3b86:	6f 93       	push	r22
    3b88:	7f 93       	push	r23
    3b8a:	8f 93       	push	r24
    3b8c:	9f 93       	push	r25
    3b8e:	af 93       	push	r26
    3b90:	bf 93       	push	r27
    3b92:	ef 93       	push	r30
    3b94:	ff 93       	push	r31
		__timer_compareService(TIMER0_COMPAREB);
    3b96:	81 ed       	ldi	r24, 0xD1	; 209
    3b98:	90 e0       	ldi	r25, 0x00	; 0
    3b9a:	0e 94 9b 0b 	call	0x1736	; 0x1736 <__timer_compareService>
	}
    3b9e:	ff 91       	pop	r31
    3ba0:	ef 91       	pop	r30
    3ba2:	bf 91       	pop	r27
    3ba4:	af 91       	pop	r26
    3ba6:	9f 91       	pop	r25
    3ba8:	8f 91       	pop	r24
    3baa:	7f 91       	pop	r23
    3bac:	6f 91       	pop	r22
    3bae:	5f 91       	pop	r21
    3bb0:	4f 91       	pop	r20
    3bb2:	3f 91       	pop	r19
    3bb4:	2f 91       	pop	r18
    3bb6:	0f 90       	pop	r0
    3bb8:	0f be       	out	0x3f, r0	; 63
    3bba:	0f 90       	pop	r0
    3bbc:	1f 90       	pop	r1
    3bbe:	18 95       	reti

00003bc0 <__vector_14>:
	}
	#endif

	#ifdef TIMER0_COMPA_vect
	// Interrupt handler for tcnt0 compare interrupt
	TIMER_INTERRUPT_HANDLER(TIMER0_COMPA_vect){
    3bc0:	1f 92       	push	r1
    3bc2:	0f 92       	push	r0
    3bc4:	0f b6       	in	r0, 0x3f	; 63
    3bc6:	0f 92       	push	r0
    3bc8:	11 24       	eor	r1, r1
    3bca:	2f 93       	push	r18
    3bcc:	3f 93       	push	r19
    3bce:	4f 93       	push	r20
    3bd0:	5f 93       	push	r21
    3bd2:	6f 93       	push	r22
    3bd4:	7f 93       	push	r23
    3bd6:	8f 93       	push	r24
    3bd8:	9f 93       	push	r25
    3bda:	af 93       	push	r26
    3bdc:	bf 93       	push	r27
    3bde:	ef 93       	push	r30
    3be0:	ff 93       	push	r31
		__timer_compareService(TIMER0_COMPAREA);
    3be2:	81 ec       	ldi	r24, 0xC1	; 193
    3be4:	90 e0       	ldi	r25, 0x00	; 0
    3be6:	0e 94 9b 0b 	call	0x1736	; 0x1736 <__timer_compareService>
	}
    3bea:	ff 91       	pop	r31
    3bec:	ef 91       	pop	r30
    3bee:	bf 91       	pop	r27
    3bf0:	af 91       	pop	r26
    3bf2:	9f 91       	pop	r25
    3bf4:	8f 91       	pop	r24
    3bf6:	7f 91       	pop	r23
    3bf8:	6f 91       	pop	r22
    3bfa:	5f 91       	pop	r21
    3bfc:	4f 91       	pop	r20
    3bfe:	3f 91       	pop	r19
    3c00:	2f 91       	pop	r18
    3c02:	0f 90       	pop	r0
    3c04:	0f be       	out	0x3f, r0	; 63
    3c06:	0f 90       	pop	r0
    3c08:	1f 90       	pop	r1
    3c0a:	18 95       	reti

00003c0c <__vector_9>:

	// -------------- Timer2 vectors --------------------------------------------

	#ifdef TIMER2_OVF_vect
	//! Interrupt handler for tcnt2 overflow interrupt
	TIMER_INTERRUPT_HANDLER(TIMER2_OVF_vect){
    3c0c:	1f 92       	push	r1
    3c0e:	0f 92       	push	r0
    3c10:	0f b6       	in	r0, 0x3f	; 63
    3c12:	0f 92       	push	r0
    3c14:	11 24       	eor	r1, r1
    3c16:	2f 93       	push	r18
    3c18:	3f 93       	push	r19
    3c1a:	4f 93       	push	r20
    3c1c:	5f 93       	push	r21
    3c1e:	6f 93       	push	r22
    3c20:	7f 93       	push	r23
    3c22:	8f 93       	push	r24
    3c24:	9f 93       	push	r25
    3c26:	af 93       	push	r26
    3c28:	bf 93       	push	r27
    3c2a:	ef 93       	push	r30
    3c2c:	ff 93       	push	r31
		__timer_overflowService(TIMER2);
    3c2e:	8d e7       	ldi	r24, 0x7D	; 125
    3c30:	91 e0       	ldi	r25, 0x01	; 1
    3c32:	0e 94 7d 0b 	call	0x16fa	; 0x16fa <__timer_overflowService>
	}
    3c36:	ff 91       	pop	r31
    3c38:	ef 91       	pop	r30
    3c3a:	bf 91       	pop	r27
    3c3c:	af 91       	pop	r26
    3c3e:	9f 91       	pop	r25
    3c40:	8f 91       	pop	r24
    3c42:	7f 91       	pop	r23
    3c44:	6f 91       	pop	r22
    3c46:	5f 91       	pop	r21
    3c48:	4f 91       	pop	r20
    3c4a:	3f 91       	pop	r19
    3c4c:	2f 91       	pop	r18
    3c4e:	0f 90       	pop	r0
    3c50:	0f be       	out	0x3f, r0	; 63
    3c52:	0f 90       	pop	r0
    3c54:	1f 90       	pop	r1
    3c56:	18 95       	reti

00003c58 <__vector_13>:

	// -------------- Timer1 vectors --------------------------------------------

	#ifdef TIMER1_OVF_vect
	//! Interrupt handler for tcnt1 overflow interrupt
	TIMER_INTERRUPT_HANDLER(TIMER1_OVF_vect){
    3c58:	1f 92       	push	r1
    3c5a:	0f 92       	push	r0
    3c5c:	0f b6       	in	r0, 0x3f	; 63
    3c5e:	0f 92       	push	r0
    3c60:	11 24       	eor	r1, r1
    3c62:	2f 93       	push	r18
    3c64:	3f 93       	push	r19
    3c66:	4f 93       	push	r20
    3c68:	5f 93       	push	r21
    3c6a:	6f 93       	push	r22
    3c6c:	7f 93       	push	r23
    3c6e:	8f 93       	push	r24
    3c70:	9f 93       	push	r25
    3c72:	af 93       	push	r26
    3c74:	bf 93       	push	r27
    3c76:	ef 93       	push	r30
    3c78:	ff 93       	push	r31
		__timer_overflowService(TIMER1);
    3c7a:	8f e4       	ldi	r24, 0x4F	; 79
    3c7c:	91 e0       	ldi	r25, 0x01	; 1
    3c7e:	0e 94 7d 0b 	call	0x16fa	; 0x16fa <__timer_overflowService>
	}
    3c82:	ff 91       	pop	r31
    3c84:	ef 91       	pop	r30
    3c86:	bf 91       	pop	r27
    3c88:	af 91       	pop	r26
    3c8a:	9f 91       	pop	r25
    3c8c:	8f 91       	pop	r24
    3c8e:	7f 91       	pop	r23
    3c90:	6f 91       	pop	r22
    3c92:	5f 91       	pop	r21
    3c94:	4f 91       	pop	r20
    3c96:	3f 91       	pop	r19
    3c98:	2f 91       	pop	r18
    3c9a:	0f 90       	pop	r0
    3c9c:	0f be       	out	0x3f, r0	; 63
    3c9e:	0f 90       	pop	r0
    3ca0:	1f 90       	pop	r1
    3ca2:	18 95       	reti

00003ca4 <__vector_16>:
	#define TIMER_INTERRUPT_HANDLER		ISR
	#endif
	// -------------- Timer0 vectors --------------------------------------------
	#ifdef TIMER0_OVF_vect
	// Interrupt handler for tcnt0 overflow interrupt
	TIMER_INTERRUPT_HANDLER(TIMER0_OVF_vect){
    3ca4:	1f 92       	push	r1
    3ca6:	0f 92       	push	r0
    3ca8:	0f b6       	in	r0, 0x3f	; 63
    3caa:	0f 92       	push	r0
    3cac:	11 24       	eor	r1, r1
    3cae:	2f 93       	push	r18
    3cb0:	3f 93       	push	r19
    3cb2:	4f 93       	push	r20
    3cb4:	5f 93       	push	r21
    3cb6:	6f 93       	push	r22
    3cb8:	7f 93       	push	r23
    3cba:	8f 93       	push	r24
    3cbc:	9f 93       	push	r25
    3cbe:	af 93       	push	r26
    3cc0:	bf 93       	push	r27
    3cc2:	ef 93       	push	r30
    3cc4:	ff 93       	push	r31
		__timer_overflowService(TIMER0);
    3cc6:	81 e2       	ldi	r24, 0x21	; 33
    3cc8:	91 e0       	ldi	r25, 0x01	; 1
    3cca:	0e 94 7d 0b 	call	0x16fa	; 0x16fa <__timer_overflowService>
	}
    3cce:	ff 91       	pop	r31
    3cd0:	ef 91       	pop	r30
    3cd2:	bf 91       	pop	r27
    3cd4:	af 91       	pop	r26
    3cd6:	9f 91       	pop	r25
    3cd8:	8f 91       	pop	r24
    3cda:	7f 91       	pop	r23
    3cdc:	6f 91       	pop	r22
    3cde:	5f 91       	pop	r21
    3ce0:	4f 91       	pop	r20
    3ce2:	3f 91       	pop	r19
    3ce4:	2f 91       	pop	r18
    3ce6:	0f 90       	pop	r0
    3ce8:	0f be       	out	0x3f, r0	; 63
    3cea:	0f 90       	pop	r0
    3cec:	1f 90       	pop	r1
    3cee:	18 95       	reti

00003cf0 <__vector_10>:
	}
	#endif // TIMER1_COMP_vect

	#ifdef TIMER1_CAPT_vect
	// Interrupt handler for tcnt1 capture interrupt
	TIMER_INTERRUPT_HANDLER(TIMER1_CAPT_vect){
    3cf0:	1f 92       	push	r1
    3cf2:	0f 92       	push	r0
    3cf4:	0f b6       	in	r0, 0x3f	; 63
    3cf6:	0f 92       	push	r0
    3cf8:	11 24       	eor	r1, r1
    3cfa:	2f 93       	push	r18
    3cfc:	3f 93       	push	r19
    3cfe:	4f 93       	push	r20
    3d00:	5f 93       	push	r21
    3d02:	6f 93       	push	r22
    3d04:	7f 93       	push	r23
    3d06:	8f 93       	push	r24
    3d08:	9f 93       	push	r25
    3d0a:	af 93       	push	r26
    3d0c:	bf 93       	push	r27
    3d0e:	ef 93       	push	r30
    3d10:	ff 93       	push	r31
		__timer_captureService(TIMER1);
    3d12:	8f e4       	ldi	r24, 0x4F	; 79
    3d14:	91 e0       	ldi	r25, 0x01	; 1
    3d16:	0e 94 8c 0b 	call	0x1718	; 0x1718 <__timer_captureService>
	}
    3d1a:	ff 91       	pop	r31
    3d1c:	ef 91       	pop	r30
    3d1e:	bf 91       	pop	r27
    3d20:	af 91       	pop	r26
    3d22:	9f 91       	pop	r25
    3d24:	8f 91       	pop	r24
    3d26:	7f 91       	pop	r23
    3d28:	6f 91       	pop	r22
    3d2a:	5f 91       	pop	r21
    3d2c:	4f 91       	pop	r20
    3d2e:	3f 91       	pop	r19
    3d30:	2f 91       	pop	r18
    3d32:	0f 90       	pop	r0
    3d34:	0f be       	out	0x3f, r0	; 63
    3d36:	0f 90       	pop	r0
    3d38:	1f 90       	pop	r1
    3d3a:	18 95       	reti

00003d3c <__mulsi3>:
    3d3c:	62 9f       	mul	r22, r18
    3d3e:	d0 01       	movw	r26, r0
    3d40:	73 9f       	mul	r23, r19
    3d42:	f0 01       	movw	r30, r0
    3d44:	82 9f       	mul	r24, r18
    3d46:	e0 0d       	add	r30, r0
    3d48:	f1 1d       	adc	r31, r1
    3d4a:	64 9f       	mul	r22, r20
    3d4c:	e0 0d       	add	r30, r0
    3d4e:	f1 1d       	adc	r31, r1
    3d50:	92 9f       	mul	r25, r18
    3d52:	f0 0d       	add	r31, r0
    3d54:	83 9f       	mul	r24, r19
    3d56:	f0 0d       	add	r31, r0
    3d58:	74 9f       	mul	r23, r20
    3d5a:	f0 0d       	add	r31, r0
    3d5c:	65 9f       	mul	r22, r21
    3d5e:	f0 0d       	add	r31, r0
    3d60:	99 27       	eor	r25, r25
    3d62:	72 9f       	mul	r23, r18
    3d64:	b0 0d       	add	r27, r0
    3d66:	e1 1d       	adc	r30, r1
    3d68:	f9 1f       	adc	r31, r25
    3d6a:	63 9f       	mul	r22, r19
    3d6c:	b0 0d       	add	r27, r0
    3d6e:	e1 1d       	adc	r30, r1
    3d70:	f9 1f       	adc	r31, r25
    3d72:	bd 01       	movw	r22, r26
    3d74:	cf 01       	movw	r24, r30
    3d76:	11 24       	eor	r1, r1
    3d78:	08 95       	ret

00003d7a <__udivmodhi4>:
    3d7a:	aa 1b       	sub	r26, r26
    3d7c:	bb 1b       	sub	r27, r27
    3d7e:	51 e1       	ldi	r21, 0x11	; 17
    3d80:	07 c0       	rjmp	.+14     	; 0x3d90 <__udivmodhi4_ep>

00003d82 <__udivmodhi4_loop>:
    3d82:	aa 1f       	adc	r26, r26
    3d84:	bb 1f       	adc	r27, r27
    3d86:	a6 17       	cp	r26, r22
    3d88:	b7 07       	cpc	r27, r23
    3d8a:	10 f0       	brcs	.+4      	; 0x3d90 <__udivmodhi4_ep>
    3d8c:	a6 1b       	sub	r26, r22
    3d8e:	b7 0b       	sbc	r27, r23

00003d90 <__udivmodhi4_ep>:
    3d90:	88 1f       	adc	r24, r24
    3d92:	99 1f       	adc	r25, r25
    3d94:	5a 95       	dec	r21
    3d96:	a9 f7       	brne	.-22     	; 0x3d82 <__udivmodhi4_loop>
    3d98:	80 95       	com	r24
    3d9a:	90 95       	com	r25
    3d9c:	bc 01       	movw	r22, r24
    3d9e:	cd 01       	movw	r24, r26
    3da0:	08 95       	ret

00003da2 <__udivmodsi4>:
    3da2:	a1 e2       	ldi	r26, 0x21	; 33
    3da4:	1a 2e       	mov	r1, r26
    3da6:	aa 1b       	sub	r26, r26
    3da8:	bb 1b       	sub	r27, r27
    3daa:	fd 01       	movw	r30, r26
    3dac:	0d c0       	rjmp	.+26     	; 0x3dc8 <__udivmodsi4_ep>

00003dae <__udivmodsi4_loop>:
    3dae:	aa 1f       	adc	r26, r26
    3db0:	bb 1f       	adc	r27, r27
    3db2:	ee 1f       	adc	r30, r30
    3db4:	ff 1f       	adc	r31, r31
    3db6:	a2 17       	cp	r26, r18
    3db8:	b3 07       	cpc	r27, r19
    3dba:	e4 07       	cpc	r30, r20
    3dbc:	f5 07       	cpc	r31, r21
    3dbe:	20 f0       	brcs	.+8      	; 0x3dc8 <__udivmodsi4_ep>
    3dc0:	a2 1b       	sub	r26, r18
    3dc2:	b3 0b       	sbc	r27, r19
    3dc4:	e4 0b       	sbc	r30, r20
    3dc6:	f5 0b       	sbc	r31, r21

00003dc8 <__udivmodsi4_ep>:
    3dc8:	66 1f       	adc	r22, r22
    3dca:	77 1f       	adc	r23, r23
    3dcc:	88 1f       	adc	r24, r24
    3dce:	99 1f       	adc	r25, r25
    3dd0:	1a 94       	dec	r1
    3dd2:	69 f7       	brne	.-38     	; 0x3dae <__udivmodsi4_loop>
    3dd4:	60 95       	com	r22
    3dd6:	70 95       	com	r23
    3dd8:	80 95       	com	r24
    3dda:	90 95       	com	r25
    3ddc:	9b 01       	movw	r18, r22
    3dde:	ac 01       	movw	r20, r24
    3de0:	bd 01       	movw	r22, r26
    3de2:	cf 01       	movw	r24, r30
    3de4:	08 95       	ret

00003de6 <__divmodsi4>:
    3de6:	97 fb       	bst	r25, 7
    3de8:	09 2e       	mov	r0, r25
    3dea:	05 26       	eor	r0, r21
    3dec:	0e d0       	rcall	.+28     	; 0x3e0a <__divmodsi4_neg1>
    3dee:	57 fd       	sbrc	r21, 7
    3df0:	04 d0       	rcall	.+8      	; 0x3dfa <__divmodsi4_neg2>
    3df2:	d7 df       	rcall	.-82     	; 0x3da2 <__udivmodsi4>
    3df4:	0a d0       	rcall	.+20     	; 0x3e0a <__divmodsi4_neg1>
    3df6:	00 1c       	adc	r0, r0
    3df8:	38 f4       	brcc	.+14     	; 0x3e08 <__divmodsi4_exit>

00003dfa <__divmodsi4_neg2>:
    3dfa:	50 95       	com	r21
    3dfc:	40 95       	com	r20
    3dfe:	30 95       	com	r19
    3e00:	21 95       	neg	r18
    3e02:	3f 4f       	sbci	r19, 0xFF	; 255
    3e04:	4f 4f       	sbci	r20, 0xFF	; 255
    3e06:	5f 4f       	sbci	r21, 0xFF	; 255

00003e08 <__divmodsi4_exit>:
    3e08:	08 95       	ret

00003e0a <__divmodsi4_neg1>:
    3e0a:	f6 f7       	brtc	.-4      	; 0x3e08 <__divmodsi4_exit>
    3e0c:	90 95       	com	r25
    3e0e:	80 95       	com	r24
    3e10:	70 95       	com	r23
    3e12:	61 95       	neg	r22
    3e14:	7f 4f       	sbci	r23, 0xFF	; 255
    3e16:	8f 4f       	sbci	r24, 0xFF	; 255
    3e18:	9f 4f       	sbci	r25, 0xFF	; 255
    3e1a:	08 95       	ret

00003e1c <__tablejump2__>:
    3e1c:	ee 0f       	add	r30, r30
    3e1e:	ff 1f       	adc	r31, r31

00003e20 <__tablejump__>:
    3e20:	05 90       	lpm	r0, Z+
    3e22:	f4 91       	lpm	r31, Z+
    3e24:	e0 2d       	mov	r30, r0
    3e26:	09 94       	ijmp

00003e28 <_exit>:
    3e28:	f8 94       	cli

00003e2a <__stop_program>:
    3e2a:	ff cf       	rjmp	.-2      	; 0x3e2a <__stop_program>
