Archive member included because of file (symbol)

c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_udivmodhi4.o)
                              timer.o (__udivmodhi4)
c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
                              c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm644pa.o (exit)
c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_copy_data.o)
                              timer.o (__do_copy_data)
c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_clear_bss.o)
                              timer.o (__do_clear_bss)

Discarded input sections

 .data          0x00000000        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm644pa.o
 .bss           0x00000000        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm644pa.o
 .text          0x00000000        0x0 button.o
 .data          0x00000000        0x0 button.o
 .bss           0x00000000        0x0 button.o
 .text          0x00000000        0x0 lcm8b.o
 .data          0x00000000        0x0 lcm8b.o
 .bss           0x00000000        0x0 lcm8b.o
 .text.Lcm1_CheckBusy
                0x00000000        0x0 lcm8b.o
 .text.Lcm1_Write_Instruction
                0x00000000        0x0 lcm8b.o
 .text.Lcm1_Init
                0x00000000        0x0 lcm8b.o
 .text.Lcm1_WriteData
                0x00000000        0x0 lcm8b.o
 .text.Lcm1_ShowString
                0x00000000        0x0 lcm8b.o
 .text.Lcm1_SetCursor
                0x00000000        0x0 lcm8b.o
 .text.Lcm1_ShowString_xy
                0x00000000        0x0 lcm8b.o
 .text.Lcm1_Clearscreen
                0x00000000        0x0 lcm8b.o
 .text          0x00000000        0x0 led.o
 .data          0x00000000        0x0 led.o
 .bss           0x00000000        0x0 led.o
 .text          0x00000000        0x0 main.o
 .data          0x00000000        0x0 main.o
 .bss           0x00000000        0x0 main.o
 .text          0x00000000        0x0 timer.o
 .data          0x00000000        0x0 timer.o
 .bss           0x00000000        0x0 timer.o
 .bss.msCountedTimer1
                0x00000000        0x0 timer.o
 .text          0x00000000        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_udivmodhi4.o)
 .data          0x00000000        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_udivmodhi4.o)
 .bss           0x00000000        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_udivmodhi4.o)
 .text          0x00000000        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
 .data          0x00000000        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
 .bss           0x00000000        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
 .text.libgcc   0x00000000        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
 .text          0x00000000        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_copy_data.o)
 .data          0x00000000        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_copy_data.o)
 .bss           0x00000000        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_copy_data.o)
 .text.libgcc   0x00000000        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_copy_data.o)
 .text          0x00000000        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_clear_bss.o)
 .data          0x00000000        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_clear_bss.o)
 .bss           0x00000000        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_clear_bss.o)
 .text.libgcc   0x00000000        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_clear_bss.o)

Memory Configuration

Name             Origin             Length             Attributes
text             0x00000000         0x00020000         xr
data             0x00800060         0x0000ffa0         rw !x
eeprom           0x00810000         0x00010000         rw !x
fuse             0x00820000         0x00000400         rw !x
lock             0x00830000         0x00000400         rw !x
signature        0x00840000         0x00000400         rw !x
*default*        0x00000000         0xffffffff

Linker script and memory map

Address of section .data set to 0x800100
LOAD c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm644pa.o
LOAD button.o
LOAD lcm8b.o
LOAD led.o
LOAD main.o
LOAD timer.o
START GROUP
LOAD c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libm.a
END GROUP
LOAD c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a
LOAD c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a
LOAD c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x00000000      0x504
 *(.vectors)
 .vectors       0x00000000       0x7c c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm644pa.o
                0x00000000                __vectors
                0x00000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
 *(.progmem*)
                0x0000007c                . = ALIGN (0x2)
                0x0000007c                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x0000007c        0x0 linker stubs
 *(.trampolines*)
                0x0000007c                __trampolines_end = .
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x0000007c                __ctors_start = .
 *(.ctors)
                0x0000007c                __ctors_end = .
                0x0000007c                __dtors_start = .
 *(.dtors)
                0x0000007c                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x0000007c        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm644pa.o
                0x0000007c                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x0000007c        0xc c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm644pa.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x00000088       0x16 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_copy_data.o)
                0x00000088                __do_copy_data
 .init4         0x0000009e       0x10 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_clear_bss.o)
                0x0000009e                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x000000ae        0x8 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm644pa.o
 *(.init9)
 *(.text)
 .text          0x000000b6        0x4 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm644pa.o
                0x000000b6                __vector_22
                0x000000b6                __vector_28
                0x000000b6                __vector_1
                0x000000b6                __vector_24
                0x000000b6                __vector_12
                0x000000b6                __bad_interrupt
                0x000000b6                __vector_6
                0x000000b6                __vector_3
                0x000000b6                __vector_23
                0x000000b6                __vector_30
                0x000000b6                __vector_25
                0x000000b6                __vector_13
                0x000000b6                __vector_17
                0x000000b6                __vector_19
                0x000000b6                __vector_7
                0x000000b6                __vector_27
                0x000000b6                __vector_5
                0x000000b6                __vector_4
                0x000000b6                __vector_9
                0x000000b6                __vector_2
                0x000000b6                __vector_21
                0x000000b6                __vector_29
                0x000000b6                __vector_8
                0x000000b6                __vector_26
                0x000000b6                __vector_14
                0x000000b6                __vector_10
                0x000000b6                __vector_16
                0x000000b6                __vector_20
                0x000000ba                . = ALIGN (0x2)
 *(.text.*)
 .text.initButtons
                0x000000ba       0x16 button.o
                0x000000ba                initButtons
 .text.buttonIsPressed
                0x000000d0       0x4a button.o
                0x000000d0                buttonIsPressed
 .text.initLEDs
                0x0000011a       0x16 led.o
                0x0000011a                initLEDs
 .text.toggleLED
                0x00000130       0x26 led.o
                0x00000130                toggleLED
 .text.init     0x00000156       0x1e main.o
                0x00000156                init
 .text.main     0x00000174        0x8 main.o
                0x00000174                main
 .text.Timer0_Init
                0x0000017c       0x2a timer.o
                0x0000017c                Timer0_Init
 .text.Timer1_Init
                0x000001a6       0x32 timer.o
                0x000001a6                Timer1_Init
 .text.Timer2_Init
                0x000001d8       0x24 timer.o
                0x000001d8                Timer2_Init
 .text.__vector_15
                0x000001fc       0x4e timer.o
                0x000001fc                __vector_15
 .text.__vector_11
                0x0000024a       0xaa timer.o
                0x0000024a                __vector_11
 .text.__vector_18
                0x000002f4      0x1e4 timer.o
                0x000002f4                __vector_18
 .text.libgcc   0x000004d8       0x28 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_udivmodhi4.o)
                0x000004d8                __udivmodhi4
                0x00000500                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x00000500        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
                0x00000500                exit
                0x00000500                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x00000500        0x4 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
 *(.fini0)
                0x00000504                _etext = .

.data           0x00800100        0x4 load address 0x00000504
                0x00800100                PROVIDE (__data_start, .)
 *(.data)
 *(.data*)
 .data.state    0x00800100        0x2 timer.o
                0x00800100                state
 .data.toggleMsTime
                0x00800102        0x2 timer.o
                0x00800102                toggleMsTime
 *(.rodata)
 *(.rodata*)
 *(.gnu.linkonce.d*)
                0x00800104                . = ALIGN (0x2)
                0x00800104                _edata = .
                0x00800104                PROVIDE (__data_end, .)

.bss            0x00800104        0xa
                0x00800104                PROVIDE (__bss_start, .)
 *(.bss)
 *(.bss*)
 .bss.repeat_cnt0
                0x00800104        0x2 timer.o
                0x00800104                repeat_cnt0
 .bss.repeat_cnt1
                0x00800106        0x2 timer.o
                0x00800106                repeat_cnt1
 .bss.repeat_cnt2
                0x00800108        0x2 timer.o
                0x00800108                repeat_cnt2
 .bss.msCountedTimer0
                0x0080010a        0x2 timer.o
                0x0080010a                msCountedTimer0
 .bss.msCountedTimer2
                0x0080010c        0x2 timer.o
                0x0080010c                msCountedTimer2
 *(COMMON)
                0x0080010e                PROVIDE (__bss_end, .)
                0x00000504                __data_load_start = LOADADDR (.data)
                0x00000508                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x0080010e        0x0
                0x0080010e                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x0080010e                PROVIDE (__noinit_end, .)
                0x0080010e                _end = .
                0x0080010e                PROVIDE (__heap_start, .)

.eeprom         0x00810000        0x0
 *(.eeprom*)
                0x00810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.stab
 *(.stab)

.stabstr
 *(.stabstr)

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment
 *(.comment)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges  0x00000000      0x118
 *(.debug_aranges)
 .debug_aranges
                0x00000000       0x28 button.o
 .debug_aranges
                0x00000028       0x58 lcm8b.o
 .debug_aranges
                0x00000080       0x28 led.o
 .debug_aranges
                0x000000a8       0x28 main.o
 .debug_aranges
                0x000000d0       0x48 timer.o

.debug_pubnames
                0x00000000      0x234
 *(.debug_pubnames)
 .debug_pubnames
                0x00000000       0x36 button.o
 .debug_pubnames
                0x00000036       0xb4 lcm8b.o
 .debug_pubnames
                0x000000ea       0x2d led.o
 .debug_pubnames
                0x00000117       0x24 main.o
 .debug_pubnames
                0x0000013b       0xf9 timer.o

.debug_info     0x00000000      0x7e3
 *(.debug_info)
 .debug_info    0x00000000       0xa5 button.o
 .debug_info    0x000000a5      0x497 lcm8b.o
 .debug_info    0x0000053c       0xa1 led.o
 .debug_info    0x000005dd       0x93 main.o
 .debug_info    0x00000670      0x173 timer.o
 *(.gnu.linkonce.wi.*)

.debug_abbrev   0x00000000      0x2cb
 *(.debug_abbrev)
 .debug_abbrev  0x00000000       0x67 button.o
 .debug_abbrev  0x00000067      0x13f lcm8b.o
 .debug_abbrev  0x000001a6       0x65 led.o
 .debug_abbrev  0x0000020b       0x54 main.o
 .debug_abbrev  0x0000025f       0x6c timer.o

.debug_line     0x00000000      0x89f
 *(.debug_line)
 .debug_line    0x00000000       0xb3 button.o
 .debug_line    0x000000b3      0x3f1 lcm8b.o
 .debug_line    0x000004a4       0xa8 led.o
 .debug_line    0x0000054c       0xb9 main.o
 .debug_line    0x00000605      0x29a timer.o

.debug_frame    0x00000000      0x190
 *(.debug_frame)
 .debug_frame   0x00000000       0x30 button.o
 .debug_frame   0x00000030       0x90 lcm8b.o
 .debug_frame   0x000000c0       0x30 led.o
 .debug_frame   0x000000f0       0x30 main.o
 .debug_frame   0x00000120       0x70 timer.o

.debug_str      0x00000000      0x2bf
 *(.debug_str)
 .debug_str     0x00000000       0xb8 button.o
                                 0xf1 (size before relaxing)
 .debug_str     0x000000b8      0x110 lcm8b.o
                                0x1d0 (size before relaxing)
 .debug_str     0x000001c8       0x25 led.o
                                 0xe5 (size before relaxing)
 .debug_str     0x000001ed       0x16 main.o
                                 0xd6 (size before relaxing)
 .debug_str     0x00000203       0xbc timer.o
                                0x17c (size before relaxing)

.debug_loc      0x00000000      0x28e
 *(.debug_loc)
 .debug_loc     0x00000000       0x38 button.o
 .debug_loc     0x00000038      0x21e lcm8b.o
 .debug_loc     0x00000256       0x38 led.o

.debug_macinfo
 *(.debug_macinfo)
OUTPUT(644_testV1.elf elf32-avr)
LOAD linker stubs

.debug_ranges   0x00000000      0x138
 .debug_ranges  0x00000000       0x20 button.o
 .debug_ranges  0x00000020       0x98 lcm8b.o
 .debug_ranges  0x000000b8       0x20 led.o
 .debug_ranges  0x000000d8       0x20 main.o
 .debug_ranges  0x000000f8       0x40 timer.o
