{"filter":false,"title":"nativeShuffle.cpp","tooltip":"/data_struct_hw/class_programs/nativeShuffle.cpp","undoManager":{"mark":0,"position":0,"stack":[[{"start":{"row":0,"column":0},"end":{"row":101,"column":1},"action":"insert","lines":["#include <iostream>","#include <fstream>","#include <random>","using namespace std;","","mt19937 randomGen;","static const int n = 52;","","class Distribution;","","class Deck {","private:","\tint cards[n];","public:","\tDeck() {","    for (int i = 0; i < n; i++)","\t\t\tcards[i] = i+1;","\t}","#if 0","\tvoid swap(uint32_t& a, uint32_t& b) {","\t\ta = a + b;","\t\tb = a - b;","\t\ta = a - b;","\t}","\tvoid swap(uint32_t& a, uint32_t& b) {","\t\ta = a ^ b;","\t\tb = a ^ b;","\t\ta = a ^ b;","\t}","\tvoid swap(uint32_t& a, uint32_t& b) {","\t\tuint32_t temp = a;","\t\ta = b;","\t\tb = temp;","\t}","#endif","","\tvoid FischerYatesShuffle() {","\t\tfor (int i = n-1; i >= 0; i--) {","\t\t\tuniform_int_distribution<uint32_t> pickCard(0,i);","      uint32_t pick = pickCard(randomGen);","\t\t\tswap(cards[pick], cards[i]);","\t\t}","\t}","","\tvoid badShuffle() {","\t\tfor (int i = n-1; i >= 0; i--) {","\t\t\tuniform_int_distribution<uint32_t> pickCard(0,n-1);","      uint32_t pick = pickCard(randomGen);","\t\t\tswap(cards[pick], cards[i]);","\t\t}","\t}","","\tfriend ostream& operator <<(ostream& s, const Deck& d) {","\t\tfor (int i = 0; i < n; i++)","\t\t\ts << d.cards[i] << '\\t';","\t\treturn s << '\\n';","\t}","\tfriend Distribution;","};","","class Distribution {","private:","\tint counts[n][n];","public:","\tDistribution() {","\t\tfor (int i = 0; i < n; i++)","\t\t\tfor (int j = 0; j < n; j++)","\t\t\t\tcounts[i][j] = 0;","\t}",""," \tvoid stats(const Deck& d1) {","\t\tfor (int i = 0; i < n; i++)","\t\t\tcounts[i][d1.cards[i]]++;","\t}","\tvoid write() {","\t\tofstream file(\"stats.dat\");","\t\tfor (int i = 0; i < n; i++) {","\t\t\tfor (int j = 0; j < n; j++)","\t\t\t\tfile << counts[i][j] << '\\t';","\t\t\tfile << '\\n';","\t\t}","\t}","","};","","void testUnfairShuffle(int trials) { // O( n*trials   )","\tDistribution dist;","\tfor (int i = 0; i < trials; i++) {","\t\tDeck d1;                             // O(           )","\t\t//\t\td1.FischerYatesShuffle();            // O(           )","\t\td1.badShuffle();","\t\tdist.stats(d1);                      // O(           )","\t}","\tdist.write();","}","","int main() {","\tDeck d1;","\td1.FischerYatesShuffle();","\tcout << d1;","\ttestUnfairShuffle(100000);","}"],"id":1}]]},"ace":{"folds":[],"scrolltop":0,"scrollleft":0,"selection":{"start":{"row":13,"column":7},"end":{"row":13,"column":7},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":0},"timestamp":1474426144388,"hash":"92e1d704350b0b18f8aae11b9ca926814ea45a22"}